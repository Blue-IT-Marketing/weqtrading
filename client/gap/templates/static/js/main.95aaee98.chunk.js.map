{"version":3,"sources":["constants/routes.js","constants/program_constants.js","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","actions/userAccountActions/index.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","utilities/index.js","actions/walletActions/index.js","reducers/profileReducers/accountDetailsReducer.js","context/UserAccount/actions.js","context/UserAccount/userAccountContext.js","components/Auth/auth-constants.js","components/Auth/auth-api.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Forms/InlineError.jsx","components/Contact/contact-constants.js","components/Contact/ThisContactForm.jsx","components/Contact/ContactDetails.jsx","components/Contact/Contact.jsx","components/Input/Input.js","components/Forms/InlineMessage.jsx","components/Auth/Login/Login.jsx","components/Auth/Logout/Logout.jsx","components/Auth/Signup/Signup.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/market-constants.js","components/Market/api-requests.js","components/Market/Products/Products.jsx","components/Market/Service/Services.jsx","components/Market/Market.jsx","components/Market/MyMarket.jsx","components/Dashboard/dashboard-api.js","components/Market/CheckOut/checkout_constants.js","components/Dashboard/Dashboard.jsx","components/Blog/articles.js","components/Blog/Blog.jsx","components/Chat/chat-constants.js","components/Chat/Chat.jsx","components/SMS/sms-constants.js","components/SMS/sms-api.js","components/SMS/SMS.jsx","components/Account/Account.jsx","components/Market/CheckOut/CheckOut.jsx","components/Market/StoreManager/StoreManager.jsx","components/Market/StoreManager/ProductsManager.jsx","components/Market/StoreManager/ServiceManager.jsx","components/Market/Transactions/Transactions.jsx","serviceWorker.js","reducers/profileReducers/userContactDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","account_page","blog_page","chat_page","sms_page","sms_account","sms_settings","sms_contacts","sms_messages","email_account","email_settings","send_email","inbox_email","email_sent","email_drafts","market_page","market_products_page","market_services_page","check_out_page","admin_page","shopping_basket_page","my_market_products","manage_my_shop","store_manager_products","store_manager_services","transactions_page","dashboard_page","api_products_endpoint","api_services_endpoint","api_categories_endpoint","api_physical_endpoint","api_contact_endpoint","api_cart_endpoint","api_coupons_endpoint","api_dashboard_endpoint","api_user_endpoint","api_store_endpoint","api_transactions_endpoint","api_paypal_checkout_webhook","api_sms_endpoint","app_name","app_long_name","app_descrition","cell","email","fax","localStorageKey","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","auth","storage","contact_details_type","user_contact_id","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","names","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","account_details_type_error","displayName_error","photoURL_error","email_error","password_error","phoneNumber_error","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","result","user","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","USER_ACCOUNT_ACTIONS","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","_this","classCallCheck","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","state","mem_store","push","value","saveMemStore","onSaving","noError","setState","stringify","setItem","date","message","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","Utils","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isMoney","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","isMobile","window","innerWidth","innerHeight","document","documentURI","USER_BANKING_ACTIONS","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","user_account_errors","form_response","response_code","userAccountReducer","actions","type","payload","code","loginUser","user_account_state","dir","logOutUser","SendEmailVerification","UserAccountContext","createContext","UserAccountContextProvider","doLogin","doLogout","onChange","assign","componentWillMount","onAuthStateChanged","react_default","createElement","Provider","props","children","Component","user_init","user_errors_init","username_error","inline_init","message_type","extended_user","repeatpassword","is_admin","extended_user_error","names_error","surname_error","cell_error","repeatpassword_error","addUser","sent_user","results","axios","post","routes","data","updateUser","put","fetchUser","get","concat","user_details","SideBarMenuAuth","_useState","useState","_useState2","slicedToArray","setUser","useContext","closeStoreMenu","thisNode","className","removeEventListener","openMessagingMenu","id","preventDefault","getElementById","useEffect","apiRequests","fetchAPI","react_router_dom","to","title","onClick","openClientMenu","stopPropagation","openStoreMenu","target","openMarketMenu","SideBarMenuNonAuth","MenuItems","possibleConstructorReturn","getPrototypeOf","call","user_logged_in","Consumer","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","SidebarCollapse","Home","menu","displayMenu","setMenu","hideDropdownMenu","addEventListener","showDropdownMenu","name","About","InlineError","src","string","contact_form_details","contact_id","subject","message_read","date_read","date_sent","contact_form_errors","subject_error","message_error","ThisContactForm","change","contact_form","onSubmitContactForm","self","assertThisInitialized","form_messages","onCheckErrors","form_errors","do_check_errors","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","bind","_this2","placeholder","InlineError_InlineError","ContactDetails","href","height","width","allowfullscreen","frameBorder","Contact","display","setDisplay","_useState3","_useState4","Contact_ThisContactForm","ContactDetails_ContactDetails","forwadedInput","React","forwardRef","ref","InlineMessage","inline","setInline","main","button_type","check_mark","dialogType","setdialogType","Login","values","setValues","errors","setErrors","_useState5","_useState6","usernameRef","useRef","passwordRef","submitRef","_useState7","_useState8","handleChange","defineProperty","checkErrors","check_username","check_password","do_check","current","focus","onSubmit","Input_Input","Forms_InlineMessage","Logout","SignUp","_useContext","createUser","authUser","check_names","check_surname","check_cell","check_email","check_password_two","SideBar","alt","onSearch","method","MenuItems_MenuItems","Footer","Forget","setEmail","sendRecoveryEmail","category_init","category_id","category_name","description","notes","category_type","sub_category","category_art","category_errors_init","category_name_error","description_error","notes_error","category_type_error","sub_category_error","category_art_error","products_init","product_name","seo_link","product_art","price","currency","active","products_errors_init","category_id_error","product_name_error","product_art_error","price_error","currency_error","service_init","service_name","service_art","service_errors_init","service_name_error","service_art_error","physical_address_init","deliver_to","stand","street_name","city","country","postal_code","physical_address_errors_init","deliver_to_error","stand_error","street_name_error","city_error","province_error","country_error","postal_code_error","contact_details_init","tel","contact_details_errors_init","tel_error","fax_error","website_error","cart_init","cart_id","total_items","date_created","is_active","sub_total","tax","total","coupon_init","validated","store_init","store_name","company_name","physical_address","store_errors_init","store_name_error","company_name_error","physical_address_error","payment_init","amount","processed","transaction_type","deposit_slip_url","payment_errors_init","amount_error","transaction_type_error","fetchProductsAPI","products","toConsumableArray","fetchProductAPI","product_id","fetchUserProductsAPI","fetchUserServicesAPI","services","fetchServicesAPI","fetchServiceAPI","service_id","fetchCategories","categories","category","saveCategory","saveProduct","_callee9","product","_context9","onDeleteProduct","_ref10","_callee10","_context10","doAddService","_ref11","_callee11","service","_context11","updateService","_ref12","_callee12","_context12","_x10","updateProduct","_ref13","_callee13","_context13","_x11","fetchProductRequests","_ref14","_callee14","_context14","requests","_x12","_x13","onDeleteService","_ref16","_callee16","_context16","_x16","savePhysicalAddress","_ref17","_callee17","_context17","physical","_x17","fetchPhysicalAddress","_ref18","_callee18","_context18","_x18","_x19","saveContactDetails","_ref19","_callee19","contact_details","_context19","contact","_x20","fetchContactDetails","_ref20","_callee20","_context20","_x21","_x22","addToCart","_ref21","_callee21","cart_item","_context21","cart_items","_x23","retrieveCart","_ref22","_callee22","_context22","cart","Response","_x24","deleteCart","_ref23","_callee23","_context23","_x25","applyCouponCode","_ref24","_callee24","coupon","_context24","coupon_code","succeed","_x26","fetchStore","_ref25","_callee25","_context25","store","_x27","addStore","_ref26","_callee26","client_store","_context26","_x28","fetchTransactions","_ref27","_callee27","_context27","transactions","_x29","createTransaction","_ref28","_callee28","client_transaction","_context28","transaction","_x30","removeTransaction","_ref29","_callee29","_context29","_x31","_x32","fetchUserByID","_ref30","_callee30","_context30","_x33","processDeposit","_ref31","_callee31","deposited","_context31","_x34","fetchBankingDetails","_ref33","_callee33","_context33","banking","_x36","Product","addProductToBasket","quantity","setQuantity","addToBasket","Products","_useState9","_useState10","setProducts","_useState11","_useState12","setCategories","_useState13","_useState14","sub_categories","setSubCategories","_useState15","_useState16","show_products","setShowProducts","_useState17","_useState18","setShoppingBasket","_useState19","_useState20","_useState21","_useState22","setTitle","_useContext2","item","createSubCategories","subCategoryList","includes","subs","map","sub","key","cat","expanded_category","find","filtered_products","filter","onCategoryClick","Products_Product","Service","addServiceToBasket","Services","setServices","show_services","setShowServices","filtered_services","Services_Service","Market","Products_Products","Services_Services","AddProduct","setProduct","image","size","filename","progress","uploaded","setUploaded","doUpload","uploadTask","on","snapshot","round","bytesTransferred","totalBytes","child","getDownloadURL","FileArtChange","files","doSaveProduct","product_to_save","RequestsAPI","check_product_name","check_product_description","check_price","check_product_art","check_category_id","AddService","setService","fileArtChange","check_service_name","check_service_description","check_service_art","check_service_category","addService","my_service","AddCategories","_useState23","_useState24","setCategory","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useContext3","doAddCategory","my_category","check_category_name","check_category_type","check_sub_category","check_description","check_notes","check_category_art","CategoryArtFileChange","MyMarket","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","fetchPayments","approvePayment","processing","payment","rejectPayment","fetchUserContactForm","contacts","fetchUsersAPI","users","onUpdateUser","manageUser","sendResponse","response_message","route","saveBankAccount","account","deleteBankingDetails","banking_id","action","banking_details","_x14","_x15","banking_details_init","banking_details_errors_init","ShowPayment","thispayment","setPayment","approve","reject","mypayment","apiCall","PaymentItem","OpenPayment","ManagePayments","payments","setPayments","show_payment","setShowPayment","fetchPaymentsAPI","Dashboard_ShowPayment","Dashboard_PaymentItem","ManageUser","setManageUser","UserItem","onOpenUser","ManageUsers","setUsers","fetchUserlistAPI","Dashboard_ManageUser","Dashboard_UserItem","SendResponse","respond_by","setResponse","_user_account_state$u","ManageContact","manageContact","setManageContact","Dashboard_SendResponse","ContactItem","onOpenContact","timestamp","ManageContacts","setContacts","_ref15","fetchContactsAPI","Dashboard_ManageContact","Dashboard_ContactItem","NotAuthorized","BankAccountForm","onCancel","_useState39","_useState40","bankAccount","setAccount","_useState41","_useState42","_useState43","_useState44","onSaveBankAccount","check_bank_name","check_account_number","check_branch_code","check_account_holder","BankAccountItem","editAccount","deleteAccount","BankAccountsList","bankAccounts","Dashboard_BankAccountItem","ManageCompanyBankAccounts","_useState45","_useState46","setBankAccounts","_useState47","_useState48","setBankAccount","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","Dashboard_BankAccountForm","Dashboard_BankAccountsList","doDeleteAccount","Dashboard","_useState55","_useState56","_useState57","_useState58","present_user","setPresentUser","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","_callee15","_context15","fetchPresentUser","Dashboard_ManagePayments","Dashboard_ManageUsers","Dashboard_ManageContacts","Dashboard_ManageCompanyBankAccounts","Dashboard_NotAuthorized","articles_api","this_date","return_date","this_pagesize","entertainment_news","sports_news","business_news","tech_news","science_news","health_news","get_blog_articles","_get_blog_articles","apiRequest","Axios","articles","BlogPost","post_data","article","urlToImage","source","author","Blog","posts","setPosts","toUpperCase","slice","_fetchData","_blog_posts","blog_posts","fetchData","index","chat_message_init","chat_id","message_id","attachments","chat_room_init","created_by","messages","chat_user_init","feedback_init","DisplayMessage","setAuthor","retrieveAuthor","authAPI","onOpenAttachment","Chat","setMessages","chat_constants","setMessage","setFeedBack","writer","setWriter","server_url","URL","_useSocket","useSocket","transports","socket","connect","retrieveFeedbackUser","updateMessages","new_message","emit","populate_message","onPopulate","onClearMessages","Chat_DisplayMessage","onKeyPress","onTyping","onSendMessage","sms_message_init","to_cell","from_cell","scheduled_datetime","date_time_sent","delivered","sms_message_errors_init","to_error","from_error","sms_balance_init","total_sms","free_sms","sms_value","sms_bundle_init","purchase_price","payment_details_init","bundle_id","payment_method","payment_amount","payment_date","payment_time","approved","default_bundles","contact_lists_init","total_contacts","contact_lists_errors_init","name_error","contacts_init","list_id","list_name","relationship","contacts_errors_init","relationship_error","fetchBalancesAPI","fetchSMSBundles","bundles","sendSMS","sms_message","fetchContactLists","contact_lists","saveContactsList","json_contacts_list","prepared_route","contacts_lists","saveContact","json_contact","contact_list","updateContact","fetchContactsByListName","listname","SMSBalances","setBundles","purchaseBundle","setPurchaseBundle","balance","setBalance","smsApiRequests","fetchBundlesFromBackEnd","bundle","handleSelectBundle","DeliveryReports","SendBulkSMS","listNames","setListNames","messagesMenu","SendSMS","sms","setSMS","check_from_error","check_message_field","check_to_error","SMSMessages","SMS_SendSMS","SMS_SendBulkSMS","SMS_DeliveryReports","ContactListItem","DisplayContactList","contacts_list","SMS_ContactListItem","EditContact","contact_detail","setContact","check_tel","check_name","AddContact","addContact","ContactsManager","contact_list_details","setContactsList","contactsManagerMenu","readOnlyError","SMS_DisplayContactList","SMS_AddContact","SMS_EditContact","AddContactList","onAddContactsList","ContactsListItems","onOpenContactList","ContactsLists","SMS_ContactsListItems","SMSContacts","contactLists","setContactLists","listDetail","setListDetail","smsContactsMenu","fetchContactListsAPI","SMS_ContactsLists","SMS_AddContactList","SMS_ContactsManager","SMS","_useState65","_useState66","_useState67","_useState68","SMS_SMSContacts","SMS_SMSMessages","SMS_SMSBalances","Verifications","use_onetime_pin","account_verified","verifications","setVerifications","onAccountVerify","react_switch_default","checked","OnChangeHandler","AccountSettings","account_active","receive_job_offers","receive_sms","receive_email","accountSettings","setAccountSettings","onToggleSettings","PersonalDetails","onChangeHandler","onUpdatePersonalDetails","Account","onSwitchScreen","CheckoutEFTPayMentDetails","bankdetails","setBankingDetails","APIRequests","BasketItem","item_type","id_service_product","ShoppingBasket","basket","setBasket","coupons","setCoupons","coupon_code_error","setCart","SetPaidFor","paypalRef","apiFetch","purchase_units","purchase_item","currency_code","createPurchaseUnits","paypal","Buttons","createOrder","order","create","onApprove","_onApprove","capture","render","CheckOut_BasketItem","v","CheckOut_CheckoutEFTPayMentDetails","PhysicalAddress","setPhysical","check_deliver_to","check_stand","check_street_name","check_city","check_province","check_country","check_postal_code","addPhysicalAddress","settings","loadPhysicalAddress","_useContext4","check_fax","check_website","onAddContactDetails","fetchContacts","CheckOut","_useContext6","CheckOut_PhysicalAddress","CheckOut_ContactDetails","CheckOut_ShoppingBasket","Store","setStore","primary","reset","my_form","setForm","check_store_name","check_company_name","check_physical_address","success","StoreManager","StoreManager_Store","ManageProduct","form_product","onUpdate","RequestItem","request","client","setClient","client_uid","total_requested","date_requested","products_sent","ProductRequests","setRequests","fetchRequestsAPI","ProductsManager_RequestItem","ShowProduct","ProductsManager_ManageProduct","ProductsManager_ProductRequests","ProductItem","onOpenProduct","ProductsManager_ShowProduct","ProductsManager_ProductItem","ManageService","form_service","ServiceRequests","ServiceManager_RequestItem","ShowService","ServiceManager_ManageService","ServiceManager_ServiceRequests","ServiceItem","onOpenService","ServiceManager_ShowService","ServiceManager_ServiceItem","CreatePayment","check_amount","check_transaction_type","Deposit","transaction_id","proof_of_deposit","deposit","setDeposit","onChangeProof","ProcessPayment","Withdrawal","ShowTransaction","Transactions_Withdrawal","Transactions_Deposit","TransactionItem","OpenTransaction","RemoveTransaction","Transactions","setTransactions","setTransaction","found_transaction","fetchTransactionsAPI","Transactions_ShowTransaction","Transactions_TransactionItem","Payments","Transactions_Transactions","Transactions_CreatePayment","Boolean","location","hostname","match","ContactDetailsInitState","user_contacts","contact_details_errors","facebook_error","twitter_error","userContactDetailsReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","account_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","profile","wallet","inline_message","middleware","applyMiddleware","compose","thunk","createStore","ReactDOM","react_redux_es","userAccountContext_UserAccountContextProvider","Header_Header","react_router","exact","path","component","Market_Products","Market_Services","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95aaee98.chunk.js","sourcesContent":["export const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const account_page = '/account';\r\n\r\nexport const blog_page = '/blog';\r\n\r\nexport const chat_page = '/chat';\r\n\r\nexport const sms_page = '/sms';\r\nexport const sms_account = '/sms-account';\r\nexport const sms_settings = '/sms-settings';\r\nexport const sms_contacts = '/sms-contacts';\r\nexport const sms_messages = '/sms-messages';\r\n\r\nexport const email_account = '/email-account';\r\nexport const email_settings = '/email-settings';\r\nexport const send_email = '/email-send';\r\nexport const inbox_email = '/email-inbox';\r\nexport const email_sent = '/email-sent';\r\nexport const email_drafts = '/email-drafts';\r\n\r\n\r\nexport const market_page = '/market';\r\nexport const market_products_page = '/market-products';\r\nexport const market_services_page = '/market-services';\r\nexport const check_out_page = \"/market-check-out\";\r\n\r\n\r\nexport const admin_page = '/admin-user'; // + userid\r\nexport const shopping_basket_page = '/admin-user-shopping-basket';\r\nexport const my_market_products = '/admin-user-market';\r\nexport const manage_my_shop = '/admin-store-manager';\r\nexport const store_manager_products = '/admin-store-manager-products';\r\nexport const store_manager_services = '/admin-store-manager-services';\r\nexport const transactions_page = '/admin-store-transactions';\r\n\r\n\r\n\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n\r\n\r\n\r\n/**\r\n * api routes \r\n */\r\n\r\nexport const api_products_endpoint = '/api/products';\r\nexport const api_services_endpoint = '/api/services';\r\nexport const api_categories_endpoint = '/api/categories';\r\nexport const api_physical_endpoint = '/api/physical-address';\r\nexport const api_contact_endpoint = '/api/contact-details';\r\nexport const api_cart_endpoint = '/api/cart';\r\nexport const api_coupons_endpoint = '/api/coupons';\r\nexport const api_dashboard_endpoint = '/api/dashboard';\r\nexport const api_user_endpoint = '/api/user';\r\nexport const api_store_endpoint = '/api/store';\r\nexport const api_transactions_endpoint = '/api/transactions';\r\n\r\nexport const api_paypal_checkout_webhook = \"/api/checkout/paypal/webhook\";\r\n\r\nexport const api_sms_endpoint = '/api/sms';","export const app_name = 'WEQTrading';\r\nexport const app_long_name = 'WEQ Trading Online Store';\r\nexport const app_descrition = 'WEQ Trading Online Store';\r\nexport const cell = '27780111869';\r\nexport const email = 'info@weqtrading.com';\r\nexport const fax = '086****786';\r\nexport const localStorageKey = 'weqtrading-';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {auth,\r\n\tfirebase,\r\n\tstorage\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneVerified:false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tUSER_LOGIN_STATUS : 'USER:USER_LOGIN_STATUS',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\n\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginStatus = () => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGIN_STATUS,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","\r\nimport moment from 'moment';\r\nclass Utilities {\r\n  constructor(today, url) {\r\n    this.today = today;\r\n    this.url = url;\r\n  }\r\n\r\n  isUrl = url => {\r\n    let pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name and extension\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?\" + // port\r\n      \"(\\\\/[-a-z\\\\d%@_.~+&:]*)*\" + // path\r\n      \"(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return pattern.test(url);\r\n  };\r\n\r\n  isEmpty = a => {\r\n    return a !== undefined ? a === null || a === \"\" : true;\r\n  };\r\n\r\n  isProvince = province => {\r\n    let province_list = [\r\n      \"limpopo\",\r\n      \"mpumalanga\",\r\n      \"north west\",\r\n      \"gauteng\",\r\n      \"kwazulu natal\",\r\n      \"eastern cape\",\r\n      \"western cape\",\r\n      \"northern cape\",\r\n      \"orange free state\"\r\n    ];\r\n    for (let i = 0; i < province_list.length; i++) {\r\n      if (province === province_list[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateEmail = email => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  validatePassword = password => {\r\n    let re = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n    );\r\n    return re.test(password);\r\n  };\r\n\r\n  validateUsername = username => {\r\n    let re = /^\\w+$/;\r\n    return re.test(username);\r\n  };\r\n\r\n  isNumber = n => {\r\n    return n !== undefined ? typeof n !== \"boolean\" && !isNaN(n) : false;\r\n  };\r\n\r\n  isMoney = n => {\r\n    return this.isNumber(n) ? true : false;\r\n  };\r\n\r\n  isCell = n => {\r\n    return this.isNumber(n)\r\n      ? n.length === 10 || n.length === 11 || n.length === 12 || n.length === 13\r\n      : false;\r\n  };\r\n\r\n  isTel = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  isFax = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  getAge = dateString => {\r\n    let dates = dateString.split(\"-\");\r\n    let d = new Date();\r\n\r\n    let userday = dates[2];\r\n    let usermonth = dates[1];\r\n    let useryear = dates[0];\r\n\r\n    let curday = d.getDate();\r\n    let curmonth = d.getMonth() + 1;\r\n    let curyear = d.getFullYear();\r\n\r\n    let age = curyear - useryear;\r\n\r\n    if (curmonth < usermonth || (curmonth === usermonth && curday < userday)) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n  isIDNumber = n => {\r\n    return n !== undefined ? this.isNumber(n) && n.length === 13 : true;\r\n  };\r\n  numDaysBetweenDates = (firstDate, secondDate) => {\r\n    let f_dates = firstDate.split(\"-\");\r\n    let s_dates = secondDate.split(\"-\");\r\n\r\n    // let d = new Date();\r\n\r\n    let f_day = parseInt(f_dates[2]);\r\n    let f_month = parseInt(f_dates[1]);\r\n    let f_year = parseInt(f_dates[0]);\r\n\r\n    let s_day = parseInt(s_dates[2]);\r\n    let s_month = parseInt(s_dates[1]);\r\n    let s_year = parseInt(s_dates[0]);\r\n\r\n    // TODO- Please revise the number of days algorithm\r\n    // let years = f_year - s_year;\r\n    // let months = f_month - s_month;\r\n    // let days = f_day - s_day;\r\n\r\n    let a = moment([f_year, f_month, f_day]);\r\n    let b = moment([s_year, s_month, s_day]);\r\n\r\n    return a.diff(b, \"days\") + 1;\r\n\r\n    //\r\n    // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n    //     return days\r\n    // }else if ((years === 0) && (months > 0)){\r\n    //     return (days + (months * 30))\r\n    // }else{\r\n    //     return 365\r\n    // }\r\n  };\r\n\r\n  countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n    try {\r\n      return stamp_1 - stamp_2;\r\n    } catch (e) {\r\n      return parseInt(stamp_1) - parseInt(stamp_2);\r\n    }\r\n  };\r\n\r\n  throttle = (func, limit) => {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function() {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  };\r\n\r\n  debounce = (func, delay) => {\r\n    let inDebounce;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(inDebounce);\r\n      inDebounce = setTimeout(() => func.apply(context, args), delay);\r\n    };\r\n  };\r\n\r\n  isMobile = () => {\r\n    if (window.innerWidth <= 800 && window.innerHeight <= 600) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nexport let UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","\r\nimport {\r\n    USER_ACCOUNT_ACTIONS\r\n} from '../../actions';\r\nimport {\r\n    account_details_type,\r\n    account_details_type_error\r\n} from '../../types';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nlet UserAccountInitState = {\r\n    user_account: {...account_details_type},\r\n    user_account_errors: {...account_details_type_error},\r\n    form_response: '',\r\n    response_code: '',\r\n};\r\n    \r\nexport let loginUser = async (username, password) => {\r\n    let user_account_state = {...UserAccountInitState};\r\n    let user_account;\r\n    let form_response;\r\n    let response_code;\r\n\r\n    await auth.doSignInWithEmailAndPassword(username, password).then(result => {\r\n            \r\n\r\n            if (result.status === true){\r\n                user_account = {...result.response};\r\n                form_response = 'User Logged In Successfully';\r\n                response_code = 200;\r\n            }else {\r\n                user_account = {...result.response};\r\n                form_response = result.error.message;\r\n                response_code = result.error.code;\r\n            }\r\n\r\n    });\r\n    \r\n    user_account_state.user_account = {...user_account};    \r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE',user_account_state);\r\n    return {...user_account_state};\r\n}\r\n\r\nexport let logOutUser = async() => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n    await auth.doSignOut().then(result => {\r\n        if (result.status === true){\r\n                user_account = {\r\n                    ...account_details_type\r\n                };\r\n                form_response = 'User Logout Successfully';\r\n                response_code = 200;\r\n                }\r\n                else {\r\n                    user_account = {\r\n                        ...account_details_type\r\n                    };\r\n                    form_response = result.error.message;\r\n                    response_code = result.error.code;\r\n                }\r\n    });\r\n    user_account_state.user_account = {\r\n        ...user_account\r\n    };\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE', user_account_state);\r\n    return {\r\n        ...user_account_state\r\n    };\r\n\r\n}\r\n\r\n\r\nexport let SendEmailVerification = async(user) => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n        console.log('Sending email verifications');\r\n\r\n    await auth.doSendEmailVerification(user).then( result => {\r\n        if (result.status === true){\r\n            user_account={\r\n                ...user,\r\n                email_verification_sent : true\r\n            };\r\n            form_response= 'successfully sent email verifications';\r\n            response_code= 200\r\n        }else{\r\n            user_account = {\r\n                ...user,\r\n                email_verification_sent: false\r\n            };\r\n            form_response= result.error.message;\r\n            response_code= result.error.code\r\n        }\r\n    });\r\n    user_account_state.user_account = {...user_account};\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n\r\n    return user_account_state;\r\n}","import React,{Component,useReducer,createContext} from 'react';\r\nimport {firebase,auth} from '../../firebase';\r\nimport userAccountReducer, {\r\n  UserAccountInitState\r\n} from '../../reducers/profileReducers/accountDetailsReducer';\r\n\r\nimport {\r\n  loginUser, logOutUser, SendEmailVerification\r\n} from './actions';\r\n\r\nexport const UserAccountContext = createContext();\r\nexport default class UserAccountContextProvider extends Component {\r\n    state = {user_account_state: {...UserAccountInitState}};\r\n\r\n    doLogin = async (username,password) => {\r\n      let user_account_state = await loginUser(username,password);\r\n      this.setState({user_account_state})\r\n    }\r\n\r\n    doLogout = async() => {\r\n      let user_account_state = await logOutUser();\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n    doSendEmailVerification = async() => {\r\n      if (this.state.user_account_state.user_account.emailVerified){\r\n      console.log('Cannot send verification email account already verified');\r\n    }else{\r\n      let user_account_state = await SendEmailVerification(this.state.user_account_state.user_account);\r\n      this.setState({\r\n        user_account_state: user_account_state\r\n      });\r\n    }\r\n    }\r\n\r\n    onChange = (user) => {\r\n      let {\r\n        user_account\r\n      } = this.state.user_account_state;\r\n\r\n      let user_account_state = Object.assign({},this.state.user_account_state)\r\n      user_account_state.user_account = {\r\n        ...user\r\n      };\r\n\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n  componentWillMount = () => {\r\n    // const unsubscribe = firebase.auth().onAuthStateChanged(this.onChange);    \r\n    const dounsubscribe = firebase.firebase.auth().onAuthStateChanged(this.onChange)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      < UserAccountContext.Provider value = {\r\n        {\r\n          ...this.state, doLogin: this.doLogin, doLogout: this.doLogout, doSendEmailVerification: this.doSendEmailVerification\r\n        }\r\n      } >\r\n                {this.props.children}\r\n      </UserAccountContext.Provider>              \r\n    )\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const user_init = {\r\n    username : '',\r\n    password : ''\r\n};\r\n\r\nexport const user_errors_init = {\r\n    username_error : '',\r\n    password_error : ''\r\n};\r\n\r\n\r\nexport const inline_init = {\r\n    message: '', \r\n    message_type:'info'\r\n};\r\n\r\n\r\nexport const extended_user = {\r\n    uid : '',\r\n    names: '',\r\n    surname: '',\r\n    cell: '',\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n    is_admin : false\r\n};\r\n\r\nexport const extended_user_error = {\r\n    names_error: \"\",\r\n    surname_error: \"\",\r\n    cell_error: \"\",\r\n    email_error: \"\",\r\n    password_error: \"\",\r\n    repeatpassword_error: \"\"\r\n\r\n};","import axios from 'axios';\r\nimport * as routes from \"../../constants/routes\";\r\n\r\nexport const addUser =async (sent_user) => {\r\n    let results = {status : false,payload:{},error : {}}\r\n\r\n    await axios.post(routes.api_user_endpoint,sent_user).then(results => {\r\n        if (results.status === 200){\r\n            return results.data\r\n        }else{\r\n            throw new Error('there was an error saving user');\r\n        }\r\n    }).then(user => {\r\n        results.status = true;\r\n        results.payload = {...user};\r\n        results.error = {};\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error}\r\n\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const updateUser = async (sent_user) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.put(routes.api_user_endpoint, sent_user).then(results => {\r\n        if (results.status === 200) {\r\n          return results.data;\r\n        } else {\r\n          throw new Error(\"there was an error saving user\");\r\n        }\r\n      }).then(user => {\r\n        results.status = true;\r\n        results.payload = { ...user };\r\n        results.error = {};\r\n      }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = { ...error };\r\n      });\r\n\r\n    return results;    \r\n};\r\n\r\n\r\nexport const fetchUser = async (uid) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.get(routes.api_user_endpoint + `/${uid}`).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('error fetching user');\r\n        }\r\n    }).then(user_details => {\r\n        results.status = true;\r\n        results.payload = {...user_details};\r\n        results.error = {}\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error};\r\n    });\r\n\r\n    return results;\r\n}","import React, {Component, useState,useContext,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\nimport {firebase,auth} from '../../../firebase';\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\nimport { extended_user } from '../../Auth/auth-constants';\r\nimport * as apiRequests from '../../Auth/auth-api';\r\n\r\nconst SideBarMenuAuth = () => {\r\n\tconst[user,setUser] = useState(extended_user);\r\n\t\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst openClientMenu = (e,id) => {    \r\n\t\te.preventDefault();      \r\n\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t}else{\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t} \r\n\r\n\t};\r\n\r\n\tfunction closeStoreMenu(thisNode) {\r\n\t\tthisNode.className = 'treeview';\r\n\t\tdocument.removeEventListener('click',closeStoreMenu);\r\n\t}\r\n\r\n\tconst openStoreMenu = (e, id) => {\r\n\t\te.preventDefault();\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t} else {\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t} \r\n\t};\r\n\r\n\tconst openMarketMenu = (e, id) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t} else {\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t} \r\n\t};\r\n\r\n\tconst openMessagingMenu = (e,id) => {\r\n\t\te.preventDefault();\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t} else {\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\t\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tawait apiRequests.fetchUser(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetUser(results.payload);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error.message);\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetUser(extended_user);\r\n\t\t\ttry{\r\n\t\t\t\tdocument.removeEventListener('click', closeStoreMenu);\r\n\t\t\t}catch(error){\r\n\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n  \r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading </li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.home_page} title=\"weqtrading online store\">\r\n\t\t\t\t\t<i className=\"fa fa-home\" /> <strong>Home</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.about_page} title=\"About\">\r\n\t\t\t\t\t<i className=\"fa fa-info\" /> <strong>About</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.contact_page} title=\"Contact Us\">\r\n\t\t\t\t\t<i className=\"fa fa-envelope\" /> <strong>Contact</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li\r\n\t\t\t\tid=\"clientarea\"\r\n\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet id = 'clientarea';\r\n\t\t\t\t\treturn openClientMenu(e, id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-user-md\" /> <span>Client Area</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i className=\"fa fa-angle-left pull-right\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.admin_page} title=\"manage your Account\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-sign-in\"> </i> <strong> Account</strong>{' '}\r\n\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tid=\"store\"\r\n\t\t\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet id = 'store';\r\n\t\t\t\t\t\t\treturn openStoreMenu(e, id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-user-md\" /> <span>Store</span>\r\n\t\t\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.manage_my_shop} title=\"manage my shop\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Store Manager</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.my_market_products} title=\"Shopping Basket\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong> Add to Store </strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.store_manager_products} title=\"transactions\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Products</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.store_manager_services} title=\"transactions\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Services</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.transactions_page} title=\"transactions\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-credit-card\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Transactions</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t\t<li\r\n\t\t\t\tid=\"marketplace\"\r\n\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet id = 'marketplace';\r\n\t\t\t\t\topenMarketMenu(e, id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-shopping-bag\" /> <span>Market Place</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.check_out_page} title=\"Check Out\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i>{' '}\r\n\t\t\t\t\t\t\t<strong> CheckOut</strong>{' '}\r\n\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.market_products_page} title=\"Market\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\" /> Products\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.market_services_page} title=\"Market\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\" /> Services\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li\r\n\t\t\t\tid=\"messaging\"\r\n\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet id = 'messaging';\r\n\t\t\t\t\topenMessagingMenu(e, id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-send-o\" /> <span>Messaging</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\r\n\r\n\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tid=\"sms\"\r\n\t\t\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet id = 'sms';\r\n\t\t\t\t\t\t\topenMessagingMenu(e, id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-send\" /> <span>SMS</span>\r\n\t\t\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_account} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-user'> </i>{' '} Account\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_settings} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-cogs'> </i>{' '} Settings\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_contacts} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-user-md'> </i>{' '} Contacts\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_messages} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-send-o'> </i>{' '} Messages\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet id = 'email';\r\n\t\t\t\t\t\t\topenMessagingMenu(e, id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-envelope\" /> <span>Email</span>\r\n\t\t\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_account} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-cogs'> </i> Account\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_settings} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-cogs'> </i> Settings\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.send_email} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-inbox'> </i> Send Email\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.inbox_email} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-inbox'> </i> Inbox\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_sent} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-send-o'> </i> Sent Box\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_drafts} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-file'> </i> Drafts\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t</ul>\r\n\r\n\r\n\t\t\t</li>\r\n\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.chat_page} title=\"Online Realtime Chat\">\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t<i className=\"fa fa-comments\"> </i>{' '} Chat\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.blog_page} title=\"Weq Trading Blog\">\r\n\t\t\t\t\t<i className=\"fa fa-book\"> </i> <strong>Blog</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\r\n\r\n\t\t\t{user.is_admin ? (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={routes.dashboard_page} title=\"Dashboard\">\r\n\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.logout_page} title=\"Logout\">\r\n\t\t\t\t\t<i className=\"fa fa-sign-out\"> </i> <strong> Logout </strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t); \r\n};\r\n\r\n\r\n\r\nexport default class MenuItems extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser_logged_in : false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet isUserLoggedIN = () => {\t\t\t\t\t\r\n\t\t\treturn auth.currentUser ? true:false;\r\n\t\t};\r\n\t\tif (isUserLoggedIN()){\r\n\t\t\tthis.setState({user_logged_in : true});\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<UserAccountContext.Consumer>{(context) => {\r\n\t\t\t  const { doLogin, user_account_state } = context;\r\n\t\t\t  console.log('SIDEBAR',user_account_state.user_account);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{user_account_state.user_account.uid ? (\r\n\t\t\t\t\t\t\t<SideBarMenuAuth />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<SideBarMenuNonAuth />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t  }}\r\n\t\t\t</UserAccountContext.Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment,useState,useContext } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function Home (){\r\n\r\n  const {user_account_state} = useContext(UserAccountContext);\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-home\"> </i> Weq Trading{\" \"}\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n              <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li className=\"btn btn-block droplink\" name=\"entertainment\">\r\n                    <Link to={routes.market_services_page}>\r\n                      <i className=\"fa fa-shopping-bag\"> </i> Market Services{\" \"}\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"btn btn-block droplink\">\r\n                    <Link to={routes.market_products_page}>\r\n                      <strong>\r\n                        {\" \"}\r\n                        <i className=\"fa fa-shopping-bag\"> </i> Market Products{\" \"}\r\n                      </strong>{\" \"}\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"btn btn-block droplink\">\r\n                    {user_account_state.user_account.uid ? (\r\n                      <Link to={routes.logout_page}>\r\n                        <strong>\r\n                          {\" \"}\r\n                          <i className=\"fa fa-sign-in\"> </i> Log out{\" \"}\r\n                        </strong>{\" \"}\r\n                      </Link>\r\n                    ) : (\r\n                      <Link to={routes.login_page}>\r\n                        <strong>\r\n                          {\" \"}\r\n                          <i className=\"fa fa-sign-in\"> </i> Log in to Weq\r\n                          Trading{\" \"}\r\n                        </strong>{\" \"}\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-info\"> </i> About\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong> Introduction </strong>\r\n              </h3>\r\n            </div>\r\n            <blockquote>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Whittlesea Experience Quality Computer College &amp;\r\n                  Solutions is a registered company registered as a close\r\n                  corporation\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is a service provider company, which is concerned about\r\n                  its community, because the main aim is to fight\r\n                  unemployment.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is owned by two directors but aims to employing more\r\n                  than twenty employees.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  The books of this company are managed by the accountant\r\n                  Ntombizamfaku Nelisa Sigcau.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  This company has got visions and dreams of the rainbow\r\n                  nation.\r\n                </li>\r\n              </ul>\r\n            </blockquote>\r\n          </div>\r\n\r\n          <div className=\"box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Vision</strong>\r\n              </h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                To be a leading and effective organization that is based on\r\n                its community needs, fulfilment and also that is capable of\r\n                meaningful contribution towards the development of the\r\n                people.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see a well developed community.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see the previously disadvantaged community with the\r\n                skills to fight poverty and unemployment.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see an improved standard of living for every South\r\n                African.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Services</strong>\r\n              </h3>\r\n              <blockquote>\r\n                The company offers the following other services\r\n              </blockquote>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Internet Connections / WIFI access\r\n              </li>\r\n              <li className=\"list-group-item\">Construction</li>\r\n              <li className=\"list-group-item\">Fencing</li>\r\n              <li className=\"list-group-item\">Renovations</li>\r\n              <li className=\"list-group-item\">Rentals Apartments</li>\r\n              <li className=\"list-group-item\">Transportation</li>\r\n              <li className=\"list-group-item\" > Training</li>\r\n              <li className='list-group-item'> Supply of Chairs,Tables, and Tents</li>\r\n              <li className='list-group-item'>Installations of Surveilance Cameras and Alarms</li>\r\n              <li className='list-group-item'>Supply of cleaning Materials</li>\r\n              <li className='list-group-item'>Construction</li>\r\n              <li className='list-group-item'>Tilling</li>\r\n              <li className='list-group-item'>Plumbing</li>\r\n              <li className='list-group-item'>Wiring (Electrical)</li>\r\n              <li className='list-group-item'>Painting</li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport {Capitalize} from 'react-lodash'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{<Capitalize string={this.state.message} /> }</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","export const contact_form_details = {\r\n  contact_id: \"\",\r\n  names: \"\",\r\n  email: \"\",\r\n  cell: \"\",\r\n  subject: \"\",\r\n  message: \"\",\r\n\r\n  message_read: false,\r\n  date_read: \"\",\r\n  date_sent: \"\"\r\n};\r\n\r\nexport const contact_response_message_detail = {\r\n  contact_id: \"\",\r\n  response: \"\",\r\n  date_sent: \"\"\r\n};\r\n\r\nexport const contact_form_errors = {\r\n  names_error: \"\",\r\n  email_error: \"\",\r\n  cell_error: \"\",\r\n  subject_error: \"\",\r\n  message_error: \"\"\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\n\r\nimport {\r\n    contact_form_details,\r\n    contact_response_message_detail,\r\n    contact_form_errors\r\n} from './contact-constants';\r\n\r\n\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact\",data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg margin\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React,{Fragment} from 'react'\r\nimport './Contact.css';\r\nexport default function ContactDetails () {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-info\"> </i> Contact Details\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <div className=\"small-box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-building\"> </i> Business Details\r\n                </strong>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Name : </strong>\r\n                    <em>Weq Trading &amp; Projects</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Registration Number : </strong>\r\n                    <em>2010/158059/23</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Address : </strong>\r\n                    <em>80 Shepstone Street, Whittlesea,5360</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong> Business Fax : </strong>\r\n                    <em>\r\n                      <a href=\"mailto:0408421225\">040-842-1225</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                    <em>\r\n                      <a href=\"mailto:0865182222@faxfx.net\">086-518-2222</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Contact Person : </strong>\r\n                        <em>Nsubuga Charles Heinnrich</em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:O781111869\">O78-111-1869 </a>\r\n                        </em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:0838630886\">083-863-0886 </a>\r\n                        </em>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <iframe\r\n                  src=\"https://www.google.com/maps/embed?pb=!1m22!1m11!1m3!1d1031.541083124503!2d26.82210571473625!3d-32.17379083467601!2m2!1f0!2f0!3m2!1i1024!2i768!4f13.1!4m8!3e0!4m5!1s0x1e62350d78cff7e3%3A0x6d7e84c719fdcd2b!2sWeq+Trading+And+Projects!3m2!1d-32.1735701!2d26.8231617!4m0!5e1!3m2!1sen!2sza!4v1564836874505!5m2!1sen!2sza\"\r\n                  className=\"map-style\"\r\n                  height=\"460\"\r\n                  width=\"600\"\r\n                  allowfullscreen\r\n                  frameBorder=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>      \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\nimport ContactDetails from './ContactDetails';\r\n\r\nexport default function Contact() {\r\n\tconst [display, setDisplay] = useState(\"contact-form\");\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\t\r\n\r\n\r\n\tconst ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t};\r\n\r\n\tconst SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n  };\r\n  \r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"contactform\"\r\n                    onClick={e => setDisplay(\"contact-form\")}\r\n                  >\r\n                    <i className=\"fa fa-envelope\"> </i>\r\n                    Contact Form\r\n                  </li>\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"contactdetails\"\r\n                    onClick={e => setDisplay(\"contact-details\")}\r\n                  >\r\n                    <i className=\"fa fa-info\"> </i>\r\n                    Contact Details\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display === \"contact-form\" ? <ThisContactForm /> : \"\"}\r\n        {display === \"contact-details\" ? <ContactDetails /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nfunction Input({\r\n        type,\r\n        placeholder,\r\n        name,\r\n        className,\r\n        onChange\r\n    },ref){\r\n  return (\r\n      <input \r\n        ref={ref}\r\n        type={type} \r\n        className={className} \r\n        name={name} \r\n        placeholder={placeholder}\r\n        onChange = {onChange}        \r\n        />\r\n        )\r\n}\r\n\r\nconst forwadedInput = React.forwardRef(Input);\r\n\r\nexport default forwadedInput;\r\n\r\n","\r\nimport React, {Fragment,useState,useEffect } from 'react';\r\nimport {Capitalize} from 'react-lodash';\r\n\r\n\r\nconst InlineMessage = ({message,message_type}) => {\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst [dialogType,setdialogType] = useState({\r\n\t\tmain: 'box-info',\r\n\t\tbutton_type: 'box-title btn-outline-info btn-lg',\r\n\t\tcheck_mark : 'fa fa-check-circle'\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInline({message:message,message_type:message_type});\r\n\t\tif(message_type === 'error'){\r\n\t\t\tsetdialogType({\r\n\t\t\t\tmain : 'box-danger',\r\n\t\t\t\tbutton_type : 'box-title btn-outline-danger btn-lg',\r\n\t\t\t\tcheck_mark : 'fa fa-close'\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\t\t\t\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className={dialogType.main}>\r\n\t\t\t\t<div className={'box box-header'}>\t\t\t\t\t\r\n\t\t\t\t\t<div className={'box-tools'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={dialogType.button_type}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<em>\r\n\t\t\t\t\t\t\t\t\t<i className={dialogType.check_mark}> </i> <small> \r\n\t\t\t\t\t\t\t\t\t{<Capitalize string={inline.message} />}  \r\n\t\t\t\t\t\t\t\t</small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\n\r\nexport default InlineMessage;","import React, { Fragment, useEffect, useContext, useRef,useState } from \"react\";\r\nimport { Link,Redirect ,navigate} from \"react-router-dom\";\r\nimport { routes } from \"../../../constants\";\r\nimport {user_init,user_errors_init, inline_init} from '../auth-constants';\r\n\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport Input from '../../Input/Input';\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nexport default function Login() {\r\n\r\n  const [values,setValues] = useState(user_init);\r\n  const [errors,setErrors] = useState(user_errors_init);\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const submitRef = useRef(null);\r\n\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\t  \r\n\r\n  \tconst handleChange = e => {\r\n        setValues({...values,[e.target.name]:e.target.value})\r\n    };\r\n    \r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      const check_username = () => {\r\n        if(Utils.validateEmail(values.username) === false){\r\n            setErrors({...errors, username_error: 'invalid username'});\r\n            return true;\r\n        }\r\n          return false;      \r\n      };\r\n\r\n      const check_password = () => {\r\n        if(Utils.isEmpty(values.password)){\r\n          setErrors({...errors,password_error:'password field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_username() ? isError = true : isError = isError;\r\n        check_password() ? isError = true : isError = isError;\r\n\r\n        return isError\r\n      };\r\n      return await do_check()\r\n    };\r\n\r\n  useEffect(() => {\r\n\t  usernameRef.current.focus();  \r\n      \r\n  }, []);\r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      console.log(\"The big loggin context\",context);\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const {\r\n        username,password\r\n      } = values;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login User\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool dropdown-toggle\"\r\n                    onClick={e => showDropdownMenu(e)}\r\n                  >\r\n                    <i className='fa fa-bars'> </i>{\" \"}\r\n                  </button>\r\n                  {displayMenu.menu ? (\r\n                    <ul className=\"dropmenu\">\r\n                      <li\r\n                        className=\"btn btn-block droplink\"\r\n                      >\r\n                      <Link to={routes.forget_password_page}>\r\n                            <i className=\"fa fa-unlock\"> </i> Forget Password\r\n                      </Link>\r\n                      </li>\r\n                      <li\r\n                        className=\"btn btn-block droplink\"\r\n                      ><Link to={routes.signup_page}>\r\n                            <i className=\"fa fa-sign-in\"> </i> Subscribe\r\n                      </Link>\r\n                      </li>\r\n                    </ul>\r\n                  ):null\r\n                  }\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={e => doLogin(username, password)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    placeholder=\"Login Name\"\r\n                    ref={usernameRef}\r\n                    value={values.username}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.username_error ? (\r\n                    <InlineError message={errors.username_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    ref={passwordRef}\r\n                    value={values.password}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.password_error ? (\r\n                    <InlineError message={errors.password_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    ref={submitRef}\r\n                    onClick={e =>\r\n                      checkErrors(e).then(isError => {\r\n                        isError\r\n                          ? setInline({\r\n                              message: \"error processing login \",\r\n                              message_type: \"error\"\r\n                            })\r\n                          : doLogin(username, password);\r\n                      })\r\n                    }\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Login\r\n                    </strong>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning btn-lg\"\r\n                    onClick={e => {\r\n                      setValues(user_init);\r\n                      setErrors(user_errors_init);\r\n                      setInline(inline_init);\r\n                    }}\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-eraser\"> </i> Reset\r\n                    </strong>\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  {inline.message ? (\r\n                    <InlineMessage\r\n                      message={inline.message}\r\n                      message_type={inline.message_type}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Redirect,navigate } from \"react-router-dom\";\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function Logout() {\r\n    return (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n          const {\r\n              doLogout\r\n          } = context;\r\n          return (\r\n            <Fragment>\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-sign-out\"> </i> Logout\r\n                  </h3>\r\n\r\n                  <div className=\"box-tools\">\r\n                    <Link to={routes.home_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-home\"> </i>{' '} Home\r\n                      </button>\r\n                    </Link>\r\n                    <Link to={routes.login_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-sign-in\"> </i>{' '} Login\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      name=\"logout\"\r\n                      onClick={e => {\r\n                        doLogout();\r\n                        //navigate(\"/\", true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-sign-out\"> </i>{\" \"}\r\n                      <strong> Logout </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Fragment>\r\n          );\r\n      }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n}\r\n","\r\nimport React, {Fragment,useState,useContext,useEffect} from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { auth } from '../../../firebase';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { extended_user, extended_user_error, inline_init, user_init, user_errors_init } from '../auth-constants';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\nimport { Utils } from '../../../utilities';\r\nimport * as apiRequests from '../auth-api';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [user,setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState(inline_init);\r\n    const { doLogin, user_account_state} = useContext(UserAccountContext);\r\n\r\n    const createUser = async e => {\r\n            await auth.doCreateUserWithEmailAndPassword(user.email,user.password).then(authUser => {\r\n                console.log(authUser);\r\n                let sent_user = {...user};\r\n                sent_user.uid = user_account_state.user_account.uid;\r\n                sent_user = JSON.stringify(sent_user);\r\n\r\n                apiRequests.addUser(sent_user).then(result => {\r\n                    if (result.status){\r\n                        setInline({message:'user successfully created',message_type:'info'});\r\n                        setUser(result.payload);\r\n                    }else{\r\n                        setInline({message:'user not created successfully try adding user details later',message_type:'error'});\r\n                    }\r\n                }).catch(error => {\r\n                    setInline({message:error.message,message_type:'error'});\r\n                });\r\n\r\n            }).catch(error => {\r\n                setInline({message:error.message,message_type:'error'});\r\n            });\r\n\r\n            return true;\r\n    };\r\n\r\n    // names: \"\",\r\n    // surname: \"\",\r\n    // cell: \"\",\r\n    // email: \"\",\r\n    // password: \"\",\r\n    // repeatpassword: \"\"\r\n\r\n\r\n    const checkErrors = async e => {\r\n        let isError = false;\r\n\r\n        const check_names = () => {\r\n            if(Utils.isEmpty(user.names)){\r\n                setErrors({...errors,names_error : 'names field cannot be empty'});\r\n                return true;\r\n            };\r\n            return false;\r\n        }\r\n        const check_surname = () => {\r\n            if(Utils.isEmpty(user.surname)){\r\n                setErrors({...errors,surname_error: 'surname field cannot be empty'})\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_cell = () => {\r\n            if(Utils.isCell(user.cell) === false){\r\n                setErrors({...errors,cell_error:'cell field is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_email = () => {\r\n            if(Utils.validateEmail(user.email) === false){\r\n                setErrors({...errors,email_error:'email address is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password = () => {\r\n            if(Utils.isEmpty(user.password)){\r\n                setErrors({...errors, password_error : 'password field cannot be empty'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password_two = () => {\r\n            if (user.password !== user.repeatpassword){\r\n                setErrors({...errors, repeatpassword_error:'passwords do not match'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_names() ? isError = true : isError = isError;\r\n            check_surname() ? isError = true : isError = isError;\r\n            check_cell() ? isError = true : isError = isError;\r\n            check_email() ? isError = true : isError = isError;\r\n            check_password() ? isError = true : isError = isError;\r\n            check_password_two() ? isError = true : isError = isError;\r\n\r\n            return isError\r\n        };\r\n\r\n        return await do_check();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-sign-out\"> </i> Sign Up\r\n              </strong>\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <Link to={routes.login_page}>\r\n                <button type=\"button\" className=\"btn btn-box-tool btn-lg\">\r\n                  <strong>\r\n                    <i className=\"fa fa-sign-in\"> </i> Login{\" \"}\r\n                  </strong>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        \r\n        \r\n            <form className='form-horizontal col-md-6'>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='names'\r\n                        placeholder='Names...'\r\n                        value={user.names}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='surname'\r\n                        placeholder='Surname...'\r\n                        value={user.surname}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='cell'\r\n                        placeholder='Cell...'\r\n                        value={user.cell}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='email'\r\n                        placeholder='Email...'\r\n                        value={user.email}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='password'\r\n                        placeholder='Password...'\r\n                        value={user.password}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.password_error ? <InlineError message={errors.password_error} /> : ''}\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='repeatpassword'\r\n                        placeholder='Repeat Password...'\r\n                        value={user.repeatpassword}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.repeatpassword_error ? <InlineError message={errors.repeatpassword_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-success btn-lg'\r\n                        name='signup'\r\n                        onClick={e => checkErrors(e).then(isError => {\r\n                            isError ?\r\n                                setInline({message: 'error processing form',message_type:'error'})\r\n                            :   createUser(e).then(result => {\r\n\r\n                            });\r\n                        })}\r\n                    >\r\n                        <i className='fa fa-sign-in'> </i>{' '}\r\n                        Sign Up\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-warning btn-lg'\r\n                        name='reset'\r\n                        onClick={e => {\r\n                            setUser(extended_user);\r\n                            setErrors(extended_user_error);\r\n                            setInline(inline_init);\r\n                        }}\r\n                    >\r\n                        <i className='fa fa-eraser'> </i>{' '}\r\n                        Reset\r\n                    </button>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default SignUp","import React, { Fragment,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function SideBar (){\r\n\t\r\n\tlet onSearch = e => {    \r\n\t\te.preventDefault();\r\n\t\tconsole.log('Searching site...');\r\n\t\t// Remember to clear search field      \r\n\t};\r\n\t\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const userSignedInText = user_account_state.user_account\r\n        .uid\r\n        ? `<p id=\"strSideUserNameID\"><Link to={routes.logout_page}> Logout</Link></p>`\r\n        : `<p id=\"strSideUserNameID\"><Link to={routes.login_page}> Login</Link></p>`;\r\n\r\n    \r\n      return (\r\n        <Fragment>\r\n          <aside className=\"main-sidebar\">\r\n            <section className=\"sidebar\">\r\n              <div className=\"user-panel\">\r\n                <div className=\"pull-left image\">\r\n                  <img\r\n                    src=\"/static/dist/img/sms.jpeg\"\r\n                    id=\"strSideUserImageID\"\r\n                    className=\"img-circle\"\r\n                    alt=\"Weq-Trading\"\r\n                  />\r\n                </div>\r\n                <div className=\"pull-left info\">\r\n                  {user_account_state.user_account.uid ? (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.logout_page}> Logout</Link>\r\n                    </p>\r\n                  ) : (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.login_page}> Login</Link>\r\n                    </p>\r\n                  )\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <form\r\n                onSubmit={e => onSearch(e)}\r\n                method=\"get\"\r\n                className=\"sidebar-form\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"input-group-btn\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      name=\"search\"\r\n                      id=\"search-btn\"\r\n                      className=\"btn btn-flat\"\r\n                    >\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                <MenuItems />\r\n              </ul>\r\n            </section>\r\n          </aside>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { inline_init } from '../auth-constants';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nexport default function Forget(){\r\n  const [email,setEmail] = useState({email:''});\r\n  const [errors,setErrors] = useState({email_error : ''});\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n\r\n\tfunction sendRecoveryEmail  (e) {\r\n\t\te.preventDefault();\r\n    console.log('Sending Recovery Email');      \r\n    setInline({message:'sending recovery email',message_type:'info'});\r\n    // TODO create a backend firebase function to send recovery email and trigger through https\r\n    // actually call a firebase function that sends a recovery email from firebase\r\n\t}\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            {\" \"}\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-key\"> </i> Forget Password\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <Link to={routes.login_page}>\r\n              <button type=\"button\" className=\"btn btn-box-tool\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login\r\n                </strong>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <form\r\n            className=\"form-horizontal\"\r\n            onSubmit={e => sendRecoveryEmail(e)}\r\n          >\r\n            <div className=\"form-group\">\r\n              <span>\r\n                Enter your username so what we can send you a password recovery\r\n                message\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n\t\t\t  <input \r\n\t\t\t\t  type=\"email\" \r\n\t\t\t\t  className=\"form-control\" \r\n\t\t\t\t  name=\"email\" \r\n\t\t\t\t  value={email.email}\r\n\t\t\t\t  onChange={e => setEmail({[e.target.name]:e.target.value})}\t\t\t\t  \r\n\t\t\t\t  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-lg\"\r\n                onClick={e => sendRecoveryEmail(e)}\r\n              >\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-unlock-alt\"> </i> Recover\r\n                </strong>\r\n              </button>\r\n\t\t\t\t<button \r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\tonClick={e =>{\r\n            setErrors({email_error : ''});\r\n            setEmail({ email: \"\" });\r\n            setInline(inline_init);\r\n          }  }\r\n\t\t\t\t>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-eraser\"> </i> Reset{\" \"}\r\n                  </strong>\r\n                </button>              \r\n            </div>\r\n            <div className='form-group'>\r\n              {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","\r\nexport const category_init = {    \r\n\tcategory_id : '',\r\n\tcategory_name : '',\r\n\tdescription : '',\r\n\tnotes : '',\r\n\tcategory_type : '',\r\n\tsub_category : '',\r\n\tcategory_art : '',\r\n};\r\n\r\nexport const category_errors_init = {\r\n\tcategory_name_error : '',\r\n\tdescription_error : '',\r\n\tnotes_error : '',\r\n\tcategory_type_error : '',\r\n\tsub_category_error : '',\r\n\tcategory_art_error : ''\r\n};\r\n\r\nexport const products_init = {\r\n\tuid : '',\r\n\tid: '',\r\n\tcategory_id : '',\r\n\tproduct_name: '',\r\n\tseo_link : '',\r\n\tdescription: '',\r\n\tproduct_art: '',\r\n\tprice: '',\r\n\tcurrency: 'zar',\r\n\tactive : true\r\n};\r\n\r\nexport const products_errors_init = {\r\n\tcategory_id_error : '',\r\n\tproduct_name_error : '',\r\n\tdescription_error : '',\r\n\tproduct_art_error : '',\r\n\tprice_error : '',\r\n\tcurrency_error : ''\r\n};\r\n\r\nexport const service_init = {\r\n\tuid: '',\r\n\tid: '',\r\n\tcategory_id: '',\r\n\tservice_name: '',\r\n\tseo_link : '',\r\n\tdescription: '',\r\n\tservice_art : '',\r\n\tprice: '',\r\n\tcurrency: 'zar',\r\n    active  : true\r\n};\r\n\r\nexport const service_errors_init = {\r\n\tcategory_id_error : '',\r\n\tservice_name_error: '',\r\n\tdescription_error: '',\r\n\tservice_art_error: '',\r\n\tprice_error: '',\r\n\tcurrency_error: 'zar'\r\n};\r\n\r\n\r\nexport const physical_address_init = {\r\n\tuid: '',\r\n\tdeliver_to : '',\r\n\tstand: '',\r\n\tstreet_name: '',\r\n\tcity: '',\r\n\tprovince: '',\r\n\tcountry : '',\r\n\tpostal_code: '',\r\n};\r\n\r\nexport const physical_address_errors_init = {\r\n\tdeliver_to_error : '',\r\n\tstand_error : '',\r\n\tstreet_name_error : '',\r\n\tcity_error : '',\r\n\tprovince_error : '',\r\n\tcountry_error : '',\r\n\tpostal_code_error : ''\r\n};\r\n\r\n\r\nexport const contact_details_init = {\r\n\tuid: '',\r\n\ttel: '',\r\n\tcell: '',\r\n\temail: '',\r\n\tfax: '',\r\n\twebsite: ''\r\n};\r\n\r\n\r\nexport const contact_details_errors_init = {\r\n\ttel_error : '',\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\tfax_error : '',\r\n\twebsite_error : ''\r\n};\r\n\r\n\r\nexport const cart_init = {\r\n\tcart_id :'',  // # unique id for this cart instance\r\n\tuid :'',\r\n\ttotal_items : '0',\r\n\tdate_created : '',\r\n\tis_active : true,\r\n\tsub_total :'0',\r\n\ttax : '0',\r\n\ttotal : '0'\r\n};\r\n\r\nexport const coupon_init = {\r\n\tuid: '',    \r\n\tcode: '',\r\n\tvalidated : false    \r\n};\r\n\r\n\r\nexport const store_init = {\r\n\tuid: '',\r\n\tstore_name: '',\r\n\tcompany_name: '',\r\n\tdescription: '',\r\n\tphysical_address: '',\r\n\ttel: '',\r\n\tcell: '',\r\n\temail: '',\r\n\twebsite: ''\r\n};\r\n\r\nexport const store_errors_init = {\r\n\tstore_name_error : '',\r\n\tcompany_name_error : '',\r\n\tdescription_error : '',\r\n\tphysical_address_error : '',\r\n\ttel_error : '',\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : ''\r\n};\r\n\r\n\r\nexport const payment_init = {\r\n\tuid: '',\r\n\tid: '',\r\n\tdate: '',\r\n\tamount: '',\r\n\tprocessed: false,\r\n\ttransaction_type: 'deposit',\r\n\tdeposit_slip_url : ''\r\n};\r\n\r\nexport const payment_errors_init = {\r\n\tamount_error  : '',\r\n\ttransaction_type_error : ''\r\n};","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\nexport const fetchProductsAPI = async () => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_products_endpoint)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching products');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(products => {\r\n\t\t\tconsole.log('Fetch Products API', products);\r\n\t\t\tresults = [...products];\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error.message);\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchProductAPI = async product_id => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_products_endpoint + `/${product_id}`)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching products');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(products => {\r\n\t\t\tconsole.log('Fetch Products API', products);\r\n\t\t\tresults = {...products};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error.message);\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUserProductsAPI = async uid => {\r\n\tlet results = [];\r\n\tawait axios.get(routes.api_products_endpoint + `/user/${uid}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching user products');\r\n\t\t}\r\n\t}).then(products => {\r\n\t\tresults = [...products];\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUserServicesAPI = async uid => {\r\n\tlet results = [];\r\n\tawait axios.get(routes.api_services_endpoint + `/user/${uid}`).then(result => {\r\n\t\tif(result.status){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching user services');\r\n\t\t}\r\n\t}).then(services => {\r\n\t\tresults = [...services];\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchServicesAPI = async () => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_services_endpoint)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching services');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(services => {\r\n\t\t\tresults = [...services];\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const fetchServiceAPI = async service_id => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_services_endpoint + `/${service_id}`)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching products');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(products => {\r\n\t\t\tconsole.log('Fetch Products API', products);\r\n\t\t\tresults = { ...products };\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error.message);\r\n\t\t});\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\n\r\nexport const fetchCategories = async (category_type) => {\r\n\tlet results = [];\r\n\r\n\tawait axios.get(routes.api_categories_endpoint).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching product categories');\r\n\t\t}\r\n\t}).then(categories => {\r\n\t\tcategories.forEach(category => {\r\n\t\t\tif(category.category_type === category_type){\r\n\t\t\t\tresults.push(category);\r\n\t\t\t}\r\n\t\t});\r\n\t}).catch(error => {\r\n\t\tconsole.log('Categories Error : ',error.message);\r\n\t});\r\n    \r\n\treturn results;\r\n};\r\n\r\nexport const saveCategory = async (category) => {\r\n\tlet results = [];\r\n\r\n\tawait axios.post(routes.api_categories_endpoint,category).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new category');\r\n\t\t}\r\n\t}).then(category => {\r\n\t\tresults = category;\r\n\t}).catch(error => {\r\n\t\tconsole.log('Save Caregoty',error.message);\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveProduct = async(product) => {\r\n\tlet results = {status : true,payload:{},error:{}};\r\n   \r\n\r\n\tawait axios.post(routes.api_products_endpoint,product).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new product');\r\n\t\t}\r\n\t}).then(product => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = product;\r\n\r\n\t}).catch(error => {\r\n\t\tconsole.log('Save product error',error.message);\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const onDeleteProduct = async(product) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.delete(routes.api_products_endpoint + `/${product.uid}/${product.id}`).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}\r\n\t}).then(product => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...product};\r\n    \r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};      \r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const doAddService = async(service) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_services_endpoint,service).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new service');\r\n\t\t}\r\n\t}).then(service => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = service;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const updateService = async(service) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_services_endpoint,service).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error updating service');\r\n\t\t}\r\n\t}).then(service => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...service};\r\n\t\tresults.error = {};\r\n\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const updateProduct = async(product) => {\r\n\tlet results = {status : true, payload: {}, error : {}};\r\n\r\n\tawait axios.put(routes.api_products_endpoint,product).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error updating product');\r\n\t\t}\r\n\t}).then(product => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload ={...product};\r\n\t\tresults.error = {};\r\n\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchProductRequests = async(uid,id) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_products_endpoint + `/requests/${uid}/${id}`).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error fetching product requests');\r\n\t\t}\r\n\t}).then(requests => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...requests];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const fetchServiceRequests = async(uid,id) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_services_endpoint + `/requests/${uid}/${id}`).then(result =>{\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error fetching service requests');\r\n\t\t}\r\n\t}).then(requests => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...requests];\r\n\t\tresults.error = {};  \r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const onDeleteService = async(service) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.delete(routes.api_services_endpoint,service).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error deleting service');\r\n\t\t}\r\n\t}).then(service => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...service};\r\n\t\tresults.error ={};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const savePhysicalAddress = async(physical_address) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_physical_endpoint,physical_address).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new physical address');\r\n\t\t}\r\n\t}).then(physical => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = physical;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const fetchPhysicalAddress =async (seed,stateKey) => {\r\n\tlet response = {};\r\n\tlet request_data = {\r\n\t\tuid: seed\r\n\t};\r\n\r\n\tawait axios.get(routes.api_physical_endpoint + `/${seed}`).then(results => {\r\n\t\tif (results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error loading physical address');\r\n\t\t}\r\n\t}).then(physical => {\r\n\t\tresponse = {...physical};\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\r\n\treturn response;\r\n};\r\n\r\n\r\nexport const saveContactDetails = async(contact_details) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_contact_endpoint, contact_details).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving contact details');\r\n\t\t}\r\n\t}).then(contact => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = contact;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchContactDetails = async (seed,stateKey) => {\r\n\tlet response = {};\r\n\tawait axios.get(routes.api_contact_endpoint + `/${seed}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error loading contact details');\r\n\t\t}\r\n\t}).then(contact => {\r\n\t\tresponse = {...contact};\r\n\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\r\n\treturn response;\r\n};\r\n\r\n\r\n\r\nexport const addToCart = async cart_item => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_cart_endpoint, cart_item)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error adding cart item');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(cart_items => {\r\n\t\t\tresults.status = true;\r\n\t\t\tresults.payload = [...cart_items];\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.error = { ...error };\r\n\t\t});\r\n\tconsole.log('Add to cart results : ', results);\r\n\treturn results;\r\n};\r\n\r\n\r\n\r\nexport const retrieveCart = async uid => {\r\n\tlet results = {status : true, cart_items : [], cart : {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_cart_endpoint + `/${uid}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching cart');\r\n\t\t}\r\n\t}).then(Response => {\r\n\t\tresults.status = true;\r\n\t\tresults.cart = Response.cart;\r\n\t\tresults.cart_items = Response.cart_items;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const deleteCart = async uid => {\r\n\tlet results = { status: true, cart_items: [], cart: {}, error: {} };\r\n\tawait axios.delete(routes.api_cart_endpoint + `/${uid}`).then(response => {\r\n\t\tif (response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error removing cart');\r\n\t\t}\r\n\t}).then(cart => {\r\n\t\tresults.status = true;\r\n\t\tresults.cart_items = [];\r\n\t\tresults.cart = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const applyCouponCode = async coupon => {\r\n\tlet results = { status: true, coupon_code: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_coupons_endpoint,coupon).then(response => {\r\n\t\tif (response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error on server or coupon code not found',response.data);\r\n\t\t}\r\n\t}).then(response => {\r\n\t\tif (response.succeed){\r\n\t\t\tresults.status = response.succeed;\r\n\t\t\tresults.coupon_code = { ...response.coupon };    \r\n\t\t}else{\r\n\t\t\tresults.status = response.succeed;\r\n\t\t\tresults.error.message = response.message;    \r\n\t\t}\r\n\t}).catch(error => {\r\n\t\tconsole.log('coupon code error ',error.message);\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\n\r\nexport const fetchStore = async uid => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_store_endpoint + `/${uid}`).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error fetching store');\r\n\t\t}\r\n\t}).then(store => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...store};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const addStore = async (client_store) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\tawait axios.post(routes.api_store_endpoint,client_store).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error adding store');\r\n\t\t}\r\n\t}).then(store => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...store};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\n\r\nexport const fetchTransactions = async(uid) => {\r\n\tlet results = { status: true, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_transactions_endpoint+`/${uid}`).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching transactions');\r\n\t\t}\r\n\t}).then(transactions => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...transactions];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const createTransaction = async client_transaction => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\tawait axios.post(routes.api_transactions_endpoint,client_transaction).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error creating transaction');\r\n\t\t}\r\n\t}).then(transaction => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...transaction};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const removeTransaction = async (id,uid) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.delete(routes.api_transactions_endpoint+`/${uid}/${id}`).then(result => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error removing transanction');\r\n\t\t}\r\n\t}).then(transactions => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...transactions];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUserByID = async (uid) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n  \r\n\tawait axios.get(routes.api_user_endpoint + `/${uid}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t}\r\n\t}).then(user => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...user};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const processDeposit = async (deposited) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_transactions_endpoint,deposited).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error processing deposit');\r\n\t\t}\r\n\t}).then(deposited => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...deposited};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload= {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const onSearch = async search_text => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_products_endpoint + `/search/${search_text}`).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error performing search');\r\n\t\t}\r\n\t}).then(products => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...products];\r\n\t\tresults.error = {}  ;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = { ...error };\r\n\t});\r\n\r\n\r\n\tawait axios.get(routes.api_services_endpoint + `/search/${search_text}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error performing seach');\r\n\t\t}\r\n\t}).then(services => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...results.payload,...services];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\n\r\nexport const fetchBankingDetails = async uid => {\r\n\tconst results = { status: true, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_dashboard_endpoint + `/banking/${uid}`).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching banking details');\r\n\t\t}\r\n\t}).then(banking => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...banking];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = {...error};\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t});\r\n\r\n\treturn results;\r\n};","import React ,{useState,useEffect,Fragment,useContext}from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {products_init,category_init} from '../market-constants';\r\nimport { routes,settings } from '../../../constants';\r\nimport * as apiRequests from '../api-requests';\r\nimport * as productStore from '../CheckOut/store-basket';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\n\r\nconst Product = ({product,addProductToBasket}) => {\r\n\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst { user_account_state} = useContext(UserAccountContext);\r\n\tconst [quantity,setQuantity] = useState(1);\r\n\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n\tconst [display,setDisplay] = useState('product-listing');\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst addToBasket = async product => {    \r\n    \r\n\t\tconsole.log('Adding this product to basket',product);\r\n\t\tif (user_account_state.user_account.uid){\r\n\t\t\ttry {\r\n\t\t\t\tawait addProductToBasket(product,quantity)\r\n\t\t\t\t\t.then(Response => {\r\n\t\t\t\t\t\tif (Response.status) {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: ` successfully add ${product.product_name} to basket`\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: Response.error.message,\r\n\t\t\t\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tsetInline({message:'you are presently not logged in please login in order to start buying and selling products in this portal',message_type:'error'});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"box box-info\">\r\n\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t<h3 className=\"box-title\" title={product.description}>\r\n\t\t\t\t\t\t\t<Link to={routes.market_products_page + `/${product.seo_link}`}>\r\n\t\t\t\t\t\t\t\t{product.product_name}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t{/*\r\n                            more details button, and also like button,\r\n                            the share button can be used in more detail window\r\n                        */}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='btn btn-box-tool'\r\n\t\t\t\t\t\t\t\tname='productmenu'\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu align-left\">\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink align-left\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"product-details\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('product-details')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-file\"> </i> Product details{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink align-left\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"product-listing\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('product-listing')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-file\"> </i> Product listing{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t):null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"pola-image\"\r\n\t\t\t\t\t\tsrc={product.product_art}\r\n\t\t\t\t\t\talt={product.product_name}\r\n\t\t\t\t\t\ttitle={`\r\n                          Title : ${product.product_name}  \r\n                          Description : ${product.description}\r\n              \r\n                          ----------------------------------\r\n              \r\n                          Price : R ${product.price}.00\r\n            `}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"polatext\">\r\n\t\t\t\t\t\t<span>{product.description}</span>\r\n\t\t\t\t\t\t<div className=\"box box-tools\">\r\n\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t<div className='input-group'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tclassName='form-control col-sm-1'\r\n\t\t\t\t\t\t\t\t\t\tname='quantity'\r\n\t\t\t\t\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setQuantity(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-outline-light\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => addToBasket(product).then(result => {\r\n                                            // eslint-disable-next-line no-console\r\n\t\t\t\t\t\t\t\t\t\t    console.log(result);\r\n\t\t\t\t\t\t\t\t\t\t    setInline({message:`${quantity} products added to shopping basket`,message_type:'inf'});\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\ttitle={`Add ${product.product_name} to Basket `}\r\n\t\t\t\t\t\t\t\t\t>\r\n                                    R {product.price}.00 Add to Basket\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default function Products() {\r\n\tconst [products,setProducts] = useState([]);\r\n\tconst [categories,setCategories] = useState([]);\r\n\tconst [sub_categories,setSubCategories] = useState([]);\r\n\tconst [show_products, setShowProducts] = useState([]);\r\n\r\n\tconst [shoppingBasket,setShoppingBasket] = useState([]);\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\tconst [title,setTitle] = useState('All Categories');\r\n\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\r\n\tconst addProductToBasket = async (product,quantity) => {\r\n\t\tlet results = { status: true, payload: {}, error: {} };     \r\n\t\tlet cart_item = {\r\n\t\t\tuid : user_account_state.user_account.uid,\r\n\t\t\titem : product,\r\n            quantity : quantity\r\n\t\t};\r\n\r\n\t\tawait apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {          \r\n\t\t\tresults = { ...Response };\r\n\t\t\tif(Response.status){                        \r\n\t\t\t\tsetShoppingBasket(Response.payload);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(Response.error.message);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn results;\r\n\t};\r\n\r\n\r\n\tconst createSubCategories = async (response) => {\r\n\t\tlet subCategoryList = [];\r\n\r\n\t\tawait response.forEach(category => {\r\n\t\t\tif (!subCategoryList.includes(category.sub_category)) {\r\n\t\t\t\tsubCategoryList.push(category.sub_category);\r\n\t\t\t}\r\n\t\t});\r\n\t\tconsole.log('Sub Category List : ',subCategoryList);\r\n\t\treturn subCategoryList;\r\n\t};\r\n\r\n\r\n\tconst onCategoryClick = cat => {\r\n\t\tconsole.log('Cliked category', cat);\r\n      \r\n\t\tlet expanded_category = categories.find(expanded_category => expanded_category.sub_category === cat);\r\n\r\n\t\tlet filtered_products = products.filter(product => product.category_id === expanded_category.category_id);\r\n\r\n\t\tconsole.log('Filtered Products ', filtered_products);\r\n\t\tsetShowProducts(filtered_products);\r\n\t\tsetTitle(cat);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n      \r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tlet category_type = 'products';\r\n        \r\n\t\t\tlet response = [];\r\n\r\n\t\t\tawait apiRequests.fetchCategories(category_type).then(categories => {\r\n\t\t\t\tresponse = categories;\r\n\t\t\t\tconsole.log('This Categirues',categories);\r\n\t\t\t\tsetCategories(categories);\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\r\n\t\t\tlet subs = await createSubCategories(response);\r\n\r\n\t\t\tsetSubCategories(subs);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);        \r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetCategories([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tapiRequests.fetchProductsAPI().then(result => {\r\n\t\t\tsetProducts(result);\r\n\t\t\tsetShowProducts(result);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsetProducts([]);\r\n\t\t\tsetShowProducts([]);\r\n\t\t};\r\n\t}, [categories]);\r\n\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-product-hunt\"> </i> Products\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tsub_categories.map(sub => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Sub Categories', sub);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"btn btn-block droplink\" name={sub} key={sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet cat = sub;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCategoryClick(cat);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-folder-open\"> </i> {sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t<h3 className='box-title'>{title}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{show_products.map(product => {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tproduct.product_name &&\r\n                product.product_art &&\r\n                product.description &&\r\n                product.price &&\r\n                product.active\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Product\r\n\t\t\t\t\t\t\t\t\tproduct={product}\r\n\t\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\t\taddProductToBasket={addProductToBasket}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { useState, Fragment,useContext,useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { service_init, category_init } from '../market-constants';\r\nimport { routes, settings } from '../../../constants';\r\nimport * as apiRequests from '../api-requests';\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\n\r\nconst Service = ({ service, addServiceToBasket }) => {\r\n\r\n\tconst [inline, setInline] = useState({ message: '', message_type: 'info' });\r\n\tconst { user_account_state } = useContext(UserAccountContext);\r\n\r\n\tconst addToBasket = async service => {\r\n\t\tconsole.log('Adding this service to basket', service);\r\n\t\tif (user_account_state.user_account.uid) {\r\n\t\t\ttry {\r\n\t\t\t\tawait addServiceToBasket(service)\r\n\t\t\t\t\t.then(Response => {\r\n\t\t\t\t\t\tif (Response.status) {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: ` successfully add ${service.service_name} to basket`\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: Response.error.message,\r\n\t\t\t\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetInline({\r\n\t\t\t\tmessage:\r\n          'you are presently not logged in please login in order to start buying and selling services in this portal',\r\n\t\t\t\tmessage_type: 'error'\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"box box-info\">\r\n\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t<h3 className=\"box-title\" title={service.description}>\r\n\t\t\t\t\t\t\t<Link to={routes.market_services_page + `/${service.seo_link}`}>\r\n\t\t\t\t\t\t\t\t{service.service_name}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"pola-image\"\r\n\t\t\t\t\t\tsrc={service.service_art}\r\n\t\t\t\t\t\talt={service.service_name}\r\n\t\t\t\t\t\ttitle={`\r\n              Title : ${service.service_name}  \r\n              Description : \r\n              ${service.description}\r\n              \r\n              ----------------------------------\r\n              \r\n              Price : R ${service.price}.00\r\n            `}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"polatext\">\r\n\t\t\t\t\t\t<span>{service.description}</span>\r\n\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary \"\r\n\t\t\t\t\t\t\t\t\tonClick={e => addToBasket(service).then(result => {\r\n\t\t\t\t\t\t\t\t\t    setInline({message:`${service.service_name} added to basket`, message_type:'inf'});\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\ttitle={`Add ${service.service_name} to Basket `}\r\n\t\t\t\t\t\t\t\t>\r\n                  R {service.price}.00 Add to Basket\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t{inline.message ? (\r\n\t\t\t\t\t\t\t\t\t<InlineMessage\r\n\t\t\t\t\t\t\t\t\t\tmessage={inline.message}\r\n\t\t\t\t\t\t\t\t\t\tmessage_type={inline.message_type}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default function Services() {\r\n\r\n\tconst[services,setServices] = useState([]);\r\n\tconst [categories, setCategories] = useState([]);\r\n\tconst [sub_categories, setSubCategories] = useState([]);\r\n\tconst [show_services, setShowServices] = useState([]);\r\n\r\n\tconst [shoppingBasket, setShoppingBasket] = useState([]);\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst addServiceToBasket = async service => {\r\n\r\n\t\tlet results = { status: true, payload: {}, error: {} };\r\n\t\tlet cart_item = {\r\n\t\t\tuid: user_account_state.user_account.uid,\r\n\t\t\titem: service,\r\n\t\t\tquantity: '1'\r\n\t\t};\r\n\r\n\t\tawait apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {\r\n\t\t\tresults = { ...Response };\r\n\t\t\tif (Response.status) {\r\n\t\t\t\tsetShoppingBasket(Response.payload);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(Response.error.message);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn results;\r\n\t};\r\n\r\n\tconst createSubCategories = response => {\r\n\t\tlet subCategoryList = [];\r\n\r\n\t\tresponse.forEach(category => {\r\n\t\t\tif (!subCategoryList.includes(category.sub_category)) {\r\n\t\t\t\tsubCategoryList.push(category.sub_category);\r\n\t\t\t}\r\n\t\t});\r\n\t\tconsole.log('Sub Category List : ', subCategoryList);\r\n\t\treturn subCategoryList;\r\n\t};\r\n\r\n\tconst onCategoryClick = category => {\r\n\t\tlet expanded_category = categories.find(\r\n\t\t\texpanded_category => expanded_category.sub_category === category\r\n\t\t);\r\n\r\n\t\tlet filtered_services = services.filter(service => {\r\n\t\t\treturn service.category_id === expanded_category.category_id;\r\n\t\t});\r\n\t\tconsole.log('Filtered Service ', filtered_services);\r\n\t\tsetShowServices(filtered_services);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tlet category_type = 'services';\r\n\r\n\t\t\tlet response = [];\r\n\r\n\t\t\tawait apiRequests\r\n\t\t\t\t.fetchCategories(category_type)\r\n\t\t\t\t.then(categories => {\r\n\t\t\t\t\tresponse = categories;\r\n\t\t\t\t\tsetCategories(categories);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\r\n\t\t\tlet subs = await createSubCategories(response);\r\n\r\n\t\t\tsetSubCategories(subs);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetCategories([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tapiRequests.fetchServicesAPI().then(result => {\r\n\t\t\tsetServices(result);\r\n\t\t\tsetShowServices(result);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsetServices([]);\r\n\t\t\tsetShowServices([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n  \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-server\"> </i> Services\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tsub_categories.map(sub => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Sub Categories', sub);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"btn btn-block droplink\" name={sub} key={sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet cat = sub;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCategoryClick(cat);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-folder-open\"> </i> {sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{show_services.map(service => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tservice.service_name &&\r\n            service.service_art &&            \r\n            service.price\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Service\r\n\t\t\t\t\t\t\t\tservice={service}\r\n\t\t\t\t\t\t\t\tkey={service.id}\r\n\t\t\t\t\t\t\t\taddServiceToBasket={addServiceToBasket}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from 'react';\r\n\r\nimport Products from './Products/Products';\r\nimport Services from './Service/Services';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { routes } from '../../constants';\r\nimport * as apiRequests from './api-requests';\r\nimport {firebase} from '../../firebase';\r\n\r\nimport {UserAccountContext} from '../../context/UserAccount/userAccountContext';\r\n\r\n\r\nexport default function Market() {\r\n\r\n\tconst [products, setProducts] = useState([]);\r\n\tconst [services, setServices] = useState([]);\r\n\tconst [display,setDisplay] = useState('products');\r\n\tconst [search,setSearch] = useState('');\r\n\tconst [search_results,setSearchResults] = useState([]);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst {user_account_state,doLogin } = useContext(UserAccountContext);\r\n\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n  \r\n\r\n\tconst onSearch = async e => {\r\n\t\te.preventDefault();\r\n    \r\n\t\tlet search_text = search;\r\n\r\n\t\tawait apiRequests.onSearch(search_text).then(results => {\r\n\t\t\tif (results.status){\r\n\t\t\t\tsetSearchResults(results.payload);\r\n\t\t\t}else{\r\n\t\t\t\tsetSearchResults([]);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:'error performing search',message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tapiRequests.fetchProductsAPI().then(result => {\r\n\t\t\tsetProducts(result);\r\n\t\t});\r\n\r\n\t\tapiRequests.fetchServicesAPI().then(result => {\r\n\t\t\tsetServices(result);\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\t\t\tsetProducts([]);\r\n\t\t\tsetServices([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> Market Place{' '}\r\n\t\t\t\t\t\t</strong>{' '}\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-bars\"> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"products\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('products')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-product-hunt\"> </i> Products\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"services\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('services')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-server\"> </i> Services\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t{user_account_state.user_account.uid ? (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"                    \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={routes.check_out_page}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"                    \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={routes.login_page}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-sign-in\"> </i> Login                      \r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t):null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n          \r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\r\n\t\t\t\t\t{display === 'products' ? <Products products={products} /> : ''}\r\n\r\n\t\t\t\t\t{display === 'services' ? <Services services={services} /> : ''}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from \"react\";\r\nimport {\r\n  products_init,\r\n  products_errors_init,\r\n  service_init,\r\n  service_errors_init,\r\n  category_init,\r\n  category_errors_init\r\n} from \"./market-constants\";\r\nimport { firebase } from \"../../firebase\";\r\nimport * as RequestsAPI from \"./api-requests\";\r\nimport axios from \"axios\";\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\n\r\nimport {Utils} from '../../utilities';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nfunction AddProduct() {\r\n  const [product, setProduct] = useState(products_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message : '', message_type:'info'});\r\n  const [errors,setErrors] = useState(products_errors_init)\r\n  const [categories, setCategories] = useState([]);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === product.category_id\r\n      );\r\n\r\n      const uploadTask = firebase.storage\r\n        .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setProduct({\r\n                ...product,\r\n                product_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n\r\n  };\r\n\r\n  const FileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doSaveProduct = async e => {\r\n    e.preventDefault();\r\n    let product_to_save = Object.assign({}, product);\r\n    product_to_save.uid = user_account_state.user_account.uid;\r\n    console.log(\"Product to Save\", product_to_save);\r\n    product_to_save = JSON.stringify(product_to_save);\r\n    RequestsAPI.saveProduct(product_to_save)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"successfully saved product\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_product_name = () => {\r\n      if(Utils.isEmpty(product.product_name)){\r\n        setErrors({\r\n          ...errors,\r\n          product_name_error : 'product name field cannot be empty'\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_description = () => {\r\n      if(Utils.isEmpty(product.description)){\r\n        setErrors({...errors,description_error : 'product description cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = () => {\r\n      if(Utils.isMoney(product.price)){\r\n        setErrors({...errors,price_error: 'product price is invalid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_art = () => {\r\n      if(Utils.isEmpty(product.product_art)){\r\n        setErrors({...errors,product_art_error : 'product art is not valid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_category_id = () => {\r\n      if(Utils.isEmpty(product.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select main category type'});\r\n      }\r\n    }\r\n\r\n    const do_check_errors = () => {\r\n        check_product_name() ? isError = true : isError = isError;\r\n        check_product_description() ? (isError = true) : (isError = isError);\r\n        check_price() ? (isError = true) : (isError = isError);\r\n        check_product_art() ? (isError = true) : (isError = isError);\r\n        check_category_id() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n    }\r\n\r\n\r\n    return await do_check_errors();     \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let category_type = 'products';\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log('Category results',results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Product</strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"product_name\"\r\n              value={product.product_name}\r\n              placeholder=\"Product Name...\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.product_name_error ? (\r\n              <InlineError message={errors.product_name_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Product Description...\"\r\n              value={product.description}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? (\r\n              <InlineError message={errors.description_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Product Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Product Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={product.price}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? (\r\n              <InlineError message={errors.price_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Product Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"product_art\"\r\n              onChange={e => FileArtChange(e)}\r\n            />\r\n            {errors.product_art_error ? (\r\n              <InlineError message={errors.product_art_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-product-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Product Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={product.product_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-product\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  if (isError) {\r\n                    doSaveProduct(e).then(result => {\r\n                      console.log(\"Product saved\");\r\n                    });\r\n                  } else {\r\n                    setInline({\r\n                      message: \"there was an error processing form\",\r\n                      message_type: \"error\"\r\n                    });\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Product\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setErrors(products_errors_init);\r\n                setInline({ message: \"\", message_type: \"info\" });\r\n                setProduct(products_init);\r\n              }}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddService() {\r\n  const [service, setService] = useState(service_init);\r\n  const [errors,setErrors] = useState(service_errors_init);\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [categories,setCategories] = useState([]);\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === service.category_id\r\n      );\r\n      const uploadTask = firebase.storage\r\n        .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setService({\r\n                ...service,\r\n                service_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'please fill in the form correctly before you upload service art',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const fileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_service_name = () => {\r\n      if(Utils.isEmpty(service.service_name)){\r\n        setErrors({...errors,service_name_error : 'service name field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_description = e => {\r\n      if(Utils.isEmpty(service.description)){\r\n        setErrors({...errors,description_error : 'service description field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_art = e => {\r\n      if(Utils.isEmpty(service.service_art)){\r\n        setErrors({...errors,service_art_error : 'service art cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = e => {\r\n      \r\n        if(Utils.isMoney(service.price) === false){\r\n          setErrors({...errors,price_error:'invalid service price'});\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const check_service_category = e => {\r\n      if(Utils.isEmpty(service.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select service category'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const do_check =  e => {\r\n      check_service_name() ? isError = true : isError = false;\r\n      check_service_description() ? isError = true : isError = false;\r\n      check_service_art() ? isError = true : isError = false;\r\n      check_price() ? isError = true : isError = false;\r\n      check_service_category() ? isError = true : isError = false;\r\n\r\n      return isError;\r\n      \r\n    } \r\n\r\n\r\n    return await do_check();\r\n    \r\n  }\r\n\r\n\r\n  const addService = async e => {\r\n      let my_service = {...service}; \r\n      my_service.uid = user_account_state.user_account.uid;\r\n      await RequestsAPI.doAddService(JSON.stringify(my_service)).then(results => {\r\n          if(results.status){\r\n            setService(results.payload);\r\n            setInline({message:'successfully saved service',message_type:'info'});\r\n          }else{\r\n            setInline({message:results.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log(\"Category results\", results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Service</strong>\r\n          </h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"service_name\"\r\n              value={service.service_name}\r\n              placeholder=\"Service Name...\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.service_name_error ? <InlineError message={errors.service_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Service Description...\"\r\n              value={service.description}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Service Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={service.price}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? <InlineError message={errors.price_error} />  : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"service_art\"\r\n              onChange={e => fileArtChange(e)}\r\n            />\r\n            {errors.service_art_error ? <InlineError message={errors.service_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              onClick={e => doUpload(e).then(results => {console.log(results)})}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Service Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={\r\n                  service.service_art ||\r\n                  \"https://via.placeholder.com/300/09f/fff.png\"\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button \r\n            type='button'\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={e => checkErrors(e).then(isError => {\r\n              isError ?\r\n                setInline({message:'there was an error processing form'})\r\n              : addService(e).then(results => {\r\n                    console.log(results);\r\n                    setInline({message:''})\r\n                }).catch(error => {\r\n                  setInline({message:error.message,message_type:'error'});\r\n                });\r\n            })}\r\n            \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Service\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setService(service_init);\r\n                setErrors(service_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}>\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddCategories() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(category_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [errors, setErrors] = useState(category_errors_init);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const CategoryArtFileChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n\r\n    const uploadTask = firebase.storage.ref(`categories/${user_account_state.user_account.uid}/${image.name}`).put(image);\r\n        await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n            //progress\r\n            const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setUploaded({\r\n            ...uploaded,\r\n            progress\r\n            });\r\n        },\r\n        error => {\r\n            //error function\r\n            console.log(error.message);\r\n        },\r\n        () => {\r\n            // complete function\r\n            firebase.storage\r\n            .ref(\"categories\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                console.log(url);\r\n                setCategory({\r\n                ...category,\r\n                category_art: url\r\n                });\r\n            });\r\n      }\r\n    );\r\n  };\r\n\r\n  const doAddCategory = async e => {\r\n        // e.preventDefault();\r\n        let my_category = Object.assign({},category);\r\n        my_category.uid = user_account_state.user_account.uid;\r\n        my_category = JSON.stringify(my_category);\r\n        console.log(\"CATEGORY\", my_category);\r\n        RequestsAPI.saveCategory(my_category).then(results => {\r\n            setCategory(results);\r\n            setCategories({ categories: categories.push(results) });\r\n            setInline({ message: \"successfully created new category\" });\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n  };\r\n\r\n  const checkErrors = async e => {\r\n        // e.preventDefault();\r\n        let isError = false;\r\n        const check_category_name = () => {\r\n            if(Utils.isEmpty(category.category_name)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_name_error: 'category name cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_type = () => {    \r\n            if(Utils.isEmpty(category.category_type)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_type_error : 'Please select category type'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_sub_category = () => {\r\n            if(Utils.isEmpty(category.sub_category)){\r\n                setErrors({\r\n                    ...errors,\r\n                    sub_category_error: 'sub category cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_description = () => {\r\n            if(Utils.isEmpty(category.description)){\r\n                setErrors({\r\n                    ...errors,\r\n                    description_error : 'description cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_notes = () => {\r\n            if(Utils.isEmpty(category.notes)){\r\n                setErrors({\r\n                    ...errors,\r\n                    notes_error : 'Notes cannot be empty'\r\n                });\r\n                return true\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_art = () => {\r\n            if(Utils.isEmpty(category.category_art)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_art_error : 'Category Art cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_category_name() ? isError = true : isError = isError;\r\n            check_category_type() ? isError = true : isError = isError;\r\n            check_sub_category() ? isError = true : isError = isError;\r\n            check_description() ? isError = true : isError = isError;\r\n            check_notes() ? isError = true : isError = isError;\r\n            check_category_art() ? isError = true : isError = isError;\r\n\r\n            return isError;\r\n        }\r\n\r\n        return await do_check();\r\n  };\r\n\r\n\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-bookmark-o\"></i> Add Categories\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Category Type </label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_type\"\r\n              value={category.category_type}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }>\r\n                <option value={null}>Select Product or Service Category Type</option>\r\n                <option value=\"products\">Products</option>\r\n                <option value=\"services\">Services</option>\r\n            </select>\r\n            {errors.category_type_error ? <InlineError message={errors.category_type_error} /> : ''}\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <input \r\n                type='text' \r\n                className='form-control'\r\n                name='sub_category'\r\n                placeholder='Sub Category...'\r\n                value={category.sub_category}\r\n                onChange={e =>setCategory({ ...category, [e.target.name]: e.target.value })}\r\n            />\r\n            {errors.sub_category_error ? <InlineError message={errors.sub_category_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_name\"\r\n              placeholder=\"Category Name...\"\r\n              value={category.category_name}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.category_name_error ? <InlineError message={errors.category_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Description...\"\r\n              value={category.description}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"notes\"\r\n              placeholder=\"Notes...\"\r\n              value={category.notes}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.notes_error ? <InlineError message={errors.notes_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Category Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={e => CategoryArtFileChange(e)}\r\n            />\r\n            {errors.category_art_error ? <InlineError message={errors.category_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-category-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Category Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img                \r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={category.category_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-category\"\r\n              onClick={e => checkErrors(e).then(isError => {\r\n                  isError ? setInline({message: 'there was an error processing form ', message_type:'error'}) \r\n                    : doAddCategory(e)\r\n              }) }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Save Category\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              name=\"reset-category\"\r\n              onClick = {e => {\r\n                setCategory(category_init);\r\n                setErrors(category_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}              \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className='form-group'>\r\n              { inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default function MyMarket() {\r\n  const [display, setDisplay] = useState(\"add-categories\");\r\n  const [product, setProduct] = useState(products_init);\r\n  const [service, setService] = useState(service_init);\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n              Services\r\n            </strong>\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className='fa fa-bars'> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-categories\"\r\n                    onClick={e => setDisplay(\"add-categories\")}\r\n                  >\r\n                    <i className=\"fa fa-bookmark\"> </i> Categories\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-products\"\r\n                    onClick={e => setDisplay(\"add-products\")}\r\n                  >\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Products\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-services\"\r\n                    onClick={e => setDisplay(\"add-services\")}\r\n                  >\r\n                    <i className=\"fa fa-shopping-cart\"> </i> Services\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"add-products\" ? <AddProduct /> : \"\"}\r\n        {display === \"add-services\" ? <AddService /> : \"\"}\r\n        {display === \"add-categories\" ? <AddCategories /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\nimport {fetchBankingDetails } from '../Market/api-requests';\r\n\r\nexport { fetchBankingDetails };\r\n\r\nexport const fetchPayments = async uid => {\r\n\r\n\tlet results = {status:true,payload:{},error:{}};\r\n\r\n\tawait axios.get(routes.api_dashboard_endpoint+`/payments/${uid}`).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching transactions');\r\n\t\t}\r\n\t}).then(transactions => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...transactions];\r\n\t\tresults.error ={};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const approvePayment = async (processing,uid) => {\r\n\tlet results = {status : true,payload:{},error:{}};\r\n\r\n\tawait axios.put(routes.api_dashboard_endpoint + `/payments/approve/${uid}`,processing).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error approving payment');\r\n\t\t}\r\n\t}).then(payment => {\r\n\t\tresults.payload = {...payment};\r\n\t\tresults.error = {};\r\n\t\tresults.status = true;\r\n\t}).catch(error => {\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t\tresults.status  = false;\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const rejectPayment = async (processing,uid) => {\r\n\tlet results = {status : true,payload:{},error:{}};\r\n\r\n\tawait axios.put(routes.api_dashboard_endpoint + `/payments/reject/${uid}`,processing).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error rejecting payment');\r\n\t\t}      \r\n\t}).then(payment => {\r\n\t\tresults.payload = {...payment};\r\n\t\tresults.error = {};\r\n\t\tresults.status = true;\r\n\t}).catch(error => {\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t\tresults.status = false;\r\n\t});\r\n\treturn true;\r\n};\r\n\r\n\r\nexport const fetchUserContactForm = async(uid) => {\r\n\tconst results = {status:true,payload:{},error:{}};\r\n\r\n\tawait axios.get(routes.api_dashboard_endpoint + `/contacts/${uid}`).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching contacts');\r\n\t\t}\r\n\t}).then(contacts => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contacts];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUsersAPI = async uid => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios\r\n\t\t.get(routes.api_dashboard_endpoint + `/users/${uid}`)\r\n\t\t.then(results => {\r\n\t\t\tif (results.status === 200) {\r\n\t\t\t\treturn results.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching users');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(users => {\r\n\t\t\tresults.status = true;\r\n\t\t\tresults.payload = [...users];\r\n\t\t\tresults.error = {};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.payload = [];\r\n\t\t\tresults.error = { ...error };\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const onUpdateUser = async (manageUser,uid) => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_dashboard_endpoint + `/user/${uid}`,manageUser).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error updating user');\r\n\t\t}\r\n\t}).then(user => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...user};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const sendResponse = async(uid, response_message) => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\t// fetch admin user details\r\n\r\n\t// compile a response message and send to firebase.com function to send\r\n\t// sms messages\r\n\tlet route = routes.api_dashboard_endpoint + `/contact/respond/${uid}`;\r\n\tawait axios.post(route, response_message).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error sending response');\r\n\t\t}\r\n\t}).then(response => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...response};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status  = true;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveBankAccount = async(uid,account) => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_dashboard_endpoint + `/banking/${uid}`,account).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving banking details');\r\n\t\t}\r\n\t}).then(banking => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload ={...banking};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\n\r\nexport const deleteBankingDetails = async(uid,banking_id) => {\r\n\tconst results = { status: true, payload: [], error: {} };\r\n\r\n\tconst action = routes.api_dashboard_endpoint + `/banking/delete/${uid}/${banking_id}`;\r\n\r\n\tawait axios.delete(action).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error deleting bank account please advice your adminstrator');\r\n\t\t}\r\n\t}).then(banking_details => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...banking_details];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload =[];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};","\r\nexport const client_id = 'AULnK8eNTwd5pVu8N4sWE_j4fLA4yrhNyJs82ikVjbRXiySyOzuNBWUn59NHL0-V0kBvkpxZrSIB8Tux';\r\n\r\nexport const banking_details_init = {\r\n\tbanking_id : '',\r\n    account_holder : '',\r\n    bank_name : '',\r\n\taccount_number : '',\r\n\tbranch_code : '',\r\n};\r\n\r\nexport const banking_details_errors_init = {\r\n    account_holder_error : '',\r\n    bank_name_error : '',\r\n\taccount_number_error : '',\r\n\tbranch_code_error : '',\r\n\r\n};","\r\n// eslint-disable-next-line no-unused-vars\r\nimport React, { Fragment,useContext,useState,useEffect } from 'react';\r\nimport { UserAccountContext } from '../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../constants';\r\nimport {payment_init, payment_errors_init} from '../Market/market-constants';\r\nimport * as apiRequests from './dashboard-api';\r\n\r\nimport {extended_user, extended_user_error} from '../Auth/auth-constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\nimport { Utils } from '../../utilities';\r\n\r\nimport {contact_form_details} from '../Contact/contact-constants';\r\n\r\nimport {Capitalize} from 'react-lodash';\r\nimport {banking_details_errors_init, banking_details_init} from '../Market/CheckOut/checkout_constants';\r\n\r\nconst ShowPayment = payment => {\r\n\tconst [thispayment, setPayment] = useState(payment_init);\r\n\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst approve = async e => {\r\n\t\tlet processing = {...thispayment};\r\n\t\tprocessing = JSON.stringify(processing);\r\n\t\tlet uid = user_account_state.user_account.uid;\r\n\t\tawait apiRequests.approvePayment(processing,uid).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetPayment(results.payload);\r\n\t\t\t\tsetInline({message:'successfully approved payment',message_type:'inf'});\r\n\t\t\t}else{\r\n\t\t\t\tsetPayment(payment_init);\r\n\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {        \r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst reject = async e => {\r\n    \r\n\t\tlet processing = {...thispayment};\r\n    \r\n\t\tprocessing = JSON.stringify(processing);\r\n    \r\n\t\tlet uid = user_account_state.user_account.uid;\r\n\r\n\t\tawait apiRequests.rejectPayment(processing,uid).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetPayment(results.payload);\r\n\t\t\t\tsetInline({message:'successfully rejected payment'});\r\n\t\t\t}else{        \r\n\t\t\t\tsetInline({ message: results.error.message, message_type: 'error' });\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t});\r\n\r\n\t\treturn true;\r\n    \r\n    \r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst apiCall = async () =>{\r\n\t\t\tlet mypayment = payment.payment;\r\n\t\t\tawait setPayment(mypayment);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tapiCall().then(result => console.log(result));\r\n\r\n\t\treturn () => {setInline({message:'',message_type:'inf'});};\r\n\r\n\t}, [payment]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">Payment</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Date : </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\t\t\tvalue={thispayment.date}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\tvalue={thispayment.amount}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Processed</label>\r\n\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"processed\"\r\n\t\t\t\t\t\t\tvalue={thispayment.processed}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value={true}>Yes</option>\r\n\t\t\t\t\t\t\t<option value={false}>No</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Transaction Type</label>\r\n\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"transaction_type\"\r\n\t\t\t\t\t\t\tvalue={thispayment.transaction_type}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{thispayment.deposit_slip_url ? \r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t\t\t\t<img src={thispayment.deposit_slip_url} className=\"pola-image\" />\r\n\t\t\t\t\t\t\t\t<div className=\"polatext\">\r\n\t\t\t\t\t\t\t\t\t<label>Proof of Transaction</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>:null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg margin'\r\n\t\t\t\t\t\t\tname='approve'\r\n\t\t\t\t\t\t\tonClick={e => approve(e).then(result => {\r\n\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-rocket'> </i>{' '}\r\n              Approve\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reject'\r\n\t\t\t\t\t\t\tonClick={e => reject(e).then(result => {\r\n\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n              Reject\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst PaymentItem = ({payment,OpenPayment}) => {\r\n\tconst[thispayment,setPayment] = useState(payment_init);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPayment(payment);\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\t}, [payment]);\r\n\r\n\treturn (\r\n\t\t<tr className=\"btn-outline-dark\">\r\n\t\t\t<td\r\n\t\t\t\tclassName='btn'        \r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet { id } = thispayment;\r\n\t\t\t\t\tOpenPayment(id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{<Capitalize string={thispayment.date} />}\r\n\t\t\t</td>\r\n\t\t\t<td>R {thispayment.amount}.00</td>\r\n\t\t\t<td>{thispayment.processed ? 'Yes' : 'No'}</td>\r\n\t\t\t<td>{<Capitalize string={thispayment.transaction_type} />}</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nconst ManagePayments = () => {\r\n\tconst[payments,setPayments] = useState([]);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst[show_payment,setShowPayment] = useState(payment_init);\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n  \r\n\tconst OpenPayment = id =>{\r\n\t\tlet item = payments.find(payment => payment.id === id);\r\n\t\tconsole.log('fetched item',item);\r\n\r\n\t\tsetShowPayment({...item});\r\n\t};\r\n  \r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchPaymentsAPI =async () => {\r\n\t\t\tlet uid = user_account_state.user_account.uid;\r\n\t\t\tawait apiRequests.fetchPayments(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetPayments(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetPayments([]);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetPayments([]);          \r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchPaymentsAPI().then(result => {\r\n\t\t\tconsole.log('fetch payment api : ', result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetPayments([]);\r\n\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-credit-card\"> </i>\r\n            Payments Manager{' '}\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool btn-success\"\r\n\t\t\t\t\t\t\t\tname=\"transactions\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-bars\"> </i>\r\n                Transactions\r\n\t\t\t\t\t\t\t</button>\r\n              \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{show_payment.id ? (\r\n\t\t\t\t\t<ShowPayment payment={show_payment} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table table-responsive\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Date</td>\r\n\t\t\t\t\t\t\t\t<td>Amount</td>\r\n\t\t\t\t\t\t\t\t<td>Processed</td>\r\n\t\t\t\t\t\t\t\t<td>Transaction Type</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{payments.map(payment => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<PaymentItem\r\n\t\t\t\t\t\t\t\t\t\tOpenPayment={OpenPayment}\r\n\t\t\t\t\t\t\t\t\t\tpayment={payment}\r\n\t\t\t\t\t\t\t\t\t\tkey={payment.id}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageUser = ({user}) => {\r\n\tconst[manageUser,setManageUser] = useState(extended_user);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst[errors,setErrors] = useState(extended_user_error);\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\tconst {uid} = user_account_state.user_account;\r\n\r\n\tconst checkErrors = async () => {\r\n\t\tlet isError = false;\r\n\t\tconst check_names = () => {\r\n\t\t\tif(Utils.isEmpty(manageUser.names)){\r\n\t\t\t\tsetErrors({...errors,names_error:'names field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        \r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_surname = () => {\r\n\t\t\tif(Utils.isEmpty(manageUser.surname)){\r\n\t\t\t\tsetErrors({...errors,surname_error: 'surname field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\tif(!Utils.isCell(manageUser.cell)){\r\n\t\t\t\tsetErrors({...errors,cell_error : 'cell field is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif(!Utils.validateEmail(manageUser.email)){\r\n\t\t\t\tsetErrors({...errors,email_error:'email field is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_names() ? isError = true : isError = isError;\r\n\t\tcheck_surname() ? isError = true : isError = isError;\r\n\t\tcheck_cell() ? isError = true : isError = isError;\r\n\t\tcheck_email() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n  \r\n\tconst onUpdateUser = async(e) => {\r\n\t\tapiRequests.onUpdateUser(manageUser,uid).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetInline({message:'successfully updated user details',message_type:'inf'});          \r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\t\treturn true;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetManageUser(user);  \r\n\t\treturn () => {\r\n\t\t\tsetManageUser(extended_user);\r\n\t\t};\r\n\t}, [user]);\r\n  \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Names</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"names\"\r\n\t\t\t\t\t\tvalue={manageUser.names}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.names_error ? <InlineError message={errors.names_error} /> : null }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Surname</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"surname\"\r\n\t\t\t\t\t\tvalue={manageUser.surname}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.surname_error ? <InlineError message={errors.surname_error} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"cell\"\r\n\t\t\t\t\t\tvalue={manageUser.cell}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={manageUser.email}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label>is Admin</label>\r\n\t\t\t\t\t<select \r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tname='is_admin'\r\n\t\t\t\t\t\tvalue={manageUser.is_admin}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}              \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value={true} > True </option>\r\n\t\t\t\t\t\t<option value={false}> False </option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-success btn-lg\"\r\n\t\t\t\t\t\tname=\"updateuser\"\r\n\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\tisError ? \r\n\t\t\t\t\t\t\t\tsetInline({message:'there was an error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t: onUpdateUser(e).then( result => setInline({message:'user successfully updated'})\r\n\t\t\t\t\t\t\t\t);\r\n              \r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-save\"> </i> Save\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\tclassName=\"btn btn-warning btn-lg\" \r\n\t\t\t\t\t\tname=\"reset\"\r\n\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t\t\t\t\t\tsetErrors(extended_user_error);\r\n\t\t\t\t\t\t\tsetManageUser(user);                 \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Reset\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst UserItem = ({ user, onOpenUser }) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td\r\n\t\t\t\tclassName='btn'\r\n\t\t\t\tonClick={() => onOpenUser(user.uid)}\r\n\t\t\t>{user.names}</td>\r\n\t\t\t<td>{user.surname}</td>\r\n\t\t\t<td>{user.email}</td>\r\n\t\t\t<td>{user.cell}</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageUsers = () => {\r\n\tconst [users,setUsers] = useState([]);\r\n\tconst [manageUser,setManageUser] = useState(extended_user);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n  \r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\tconst {uid} = user_account_state.user_account;\r\n\r\n\tfunction onOpenUser (uid) {    \r\n\t\tsetManageUser(users.find(user => user.uid === uid));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUserlistAPI = async () => {\r\n\t\t\tapiRequests.fetchUsersAPI(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetUsers(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchUserlistAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n      \r\n\t\t};\r\n\t}, []);\r\n\r\n  \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-users\"> </i> Manage Users\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{manageUser.uid ? (\r\n\t\t\t\t\t<ManageUser user={manageUser} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table table-responsive\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Names</td>\r\n\t\t\t\t\t\t\t\t<td>Surname</td>\r\n\t\t\t\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t\t\t\t<td>Cell</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{users.map(user => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\tonOpenUser={onOpenUser}\r\n\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\tkey={user.uid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst SendResponse = ({contact}) => {\r\n\tconst[response,setResponse] = useState({\r\n\t\tcontact_id : '',\r\n\t\tnames : '',\r\n\t\tsubject : '',\r\n\t\tresponse :'',\r\n\t\temail : '',\r\n\t\tcell : '',\r\n\t\trespond_by : 'email',\r\n\r\n\t});\r\n\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n  \r\n\r\n\tconst sendResponse = async e => {\r\n\t\tconst {uid,email} = user_account_state.user_account;\r\n\t\tlet response_message = JSON.stringify(response);\r\n\t\tapiRequests.sendResponse(uid, response_message).then(result => {\r\n\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\r\n    \r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetResponse({\r\n\t\t\tcontact_id : contact.contact_id,\r\n\t\t\tnames : contact.names,\r\n\t\t\tsubject : 'response > ' + contact.subject,\r\n\t\t\temail : contact.email,\r\n\t\t\tcell : contact.cell,\r\n\t\t\trespond_by : 'email'\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n      \r\n\t\t};\r\n\t}, [contact]);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Response </label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tname=\"response\"\r\n\t\t\t\t\tvalue={response.response}\r\n\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\tsetResponse({ ...response, [e.target.name]: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Respond By </label>\r\n\t\t\t\t<select \r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\tname='respond_by'\r\n\t\t\t\t\tvalue={response.respond_by} \r\n\t\t\t\t\tonChange={e => setResponse({...response, [e.target.name]:e.target.value})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"email\">Email </option>\r\n\t\t\t\t\t<option value=\"cell\">SMS </option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tclassName='btn btn-primary margin'\r\n\t\t\t\t\tname='send'\r\n\t\t\t\t\tonClick={e => sendResponse(e).then(result => console.log(result))}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className='fa fa-send-o'> </i> {' '}\r\n            Send\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageContact = ({contact}) => {\r\n\tconst [manageContact, setManageContact] = useState(contact_form_details);\r\n\tconst [display,setDisplay] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tsetManageContact(contact);      \r\n\t\treturn () => {\r\n        \r\n\t\t};\r\n\t}, [contact]);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Names</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"names\"\r\n\t\t\t\t\t\tvalue={manageContact.names}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={manageContact.email}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"cell\"\r\n\t\t\t\t\t\tvalue={manageContact.cell}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Subject</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"subject\"\r\n\t\t\t\t\t\tvalue={manageContact.subject}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Message</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\tvalue={manageContact.message}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t</textarea>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{display === 'response' ? <SendResponse contact={manageContact} /> : null}\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-success margin btn-lg\"\r\n\t\t\t\t\t\tname=\"send-response\"\r\n\t\t\t\t\t\tonClick={e => setDisplay('response')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-send\"> </i> Send Response\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-warning margin btn-lg\"\r\n\t\t\t\t\t\tname=\"mark-read\"\r\n\t\t\t\t\t\tonClick={e => setDisplay('read')}              \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<i className=\"fa fa-reddit-square\"> </i>\r\n              Mark as Read\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-danger margin btn-lg\"\r\n\t\t\t\t\t\tname=\"delete-message\"\r\n\t\t\t\t\t\tonClick={e => setDisplay('delete-message')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<i className=\"fa fa-cut\"> </i>\r\n              Delete Message\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ContactItem = ({contact,onOpenContact}) => {\r\n\tconsole.log(contact);\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td className=\"btn\" onClick={() =>{\r\n\t\t\t\tconst contact_id = contact.contact_id;\r\n\t\t\t\tonOpenContact(contact_id);\r\n\t\t\t} }>\r\n\t\t\t\t{contact.names}\r\n\t\t\t</td>\r\n\t\t\t<td>{contact.email}</td>\r\n\t\t\t<td>{contact.subject}</td>\r\n\t\t\t<td>{contact.timestamp}</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageContacts = () => {\r\n\tconst[contacts,setContacts] = useState([]);\r\n\tconst [manageContact, setManageContact] = useState(contact_form_details);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n\tconst{uid} = user_account_state.user_account;\r\n\r\n\r\n\tconst onOpenContact = contact_id => {\r\n\t\tconsole.log(contact_id);\r\n\t\tsetManageContact(\r\n\t\t\tcontacts.find(contact => contact.contact_id === contact_id)\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n    \r\n\t\tconst fetchContactsAPI = async () => {\r\n\t\t\tapiRequests.fetchUserContactForm(uid).then(response => {\r\n\t\t\t\tif(response.status){\r\n\t\t\t\t\tconsole.log(response.payload);\r\n\t\t\t\t\tsetContacts(response.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:'error fetching user contact form details',message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchContactsAPI().then(result => {\r\n\t\t\tconsole.log('Contacts Fetched',result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t\tsetContacts([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-envelope\"> </i> Manage Contact\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n  \r\n\t\t\t\t<div className=\"box-footer\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmanageContact.contact_id ?\r\n\t\t\t\t\t\t\t<ManageContact contact={manageContact}  /> :\r\n\r\n\t\t\t\t\t\t\t<table className='table table-responsive'>\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Names</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Subject</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Time</td>                  \r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>            \r\n\t\t\t\t\t\t\t\t\t{contacts.map(contact => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tonOpenContact={onOpenContact}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={contact.contact_id}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst NotAuthorized = () => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-danger\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i>{' '} Dashboard{' '}\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className=\"box box-warning\">\r\n\t\t\t\t\t\t<span className=\"error-content\">\r\n\t\t\t\t\t\t\t<em>you are not authorized to access our dashboard</em>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst BankAccountForm = ({onCancel,account}) => {\r\n\tconst[bankAccount,setAccount] = useState(banking_details_init);\r\n\tconst[errors,setErrors] = useState(banking_details_errors_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst onSaveBankAccount = async e => {\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst account = JSON.stringify(bankAccount);\r\n\r\n\t\tconst saveBankAccount = async () => {\r\n\t\t\tawait apiRequests.saveBankAccount(uid,account).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetAccount(results.payload);\r\n\t\t\t\t\tsetInline({message:'successfully saved bank account',message_type:'error'});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tawait saveBankAccount().then(result => console.log(result));\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_account_holder = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.account_holder)){\r\n\t\t\t\tsetErrors({...errors,account_holder_error : 'account holder field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_bank_name = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.bank_name)){\r\n\t\t\t\tsetErrors({...errors,bank_name_error : 'bank name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_account_number = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.account_number)){\r\n\t\t\t\tsetErrors({...errors,account_number_error:'account number field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn  false;\r\n\t\t};\r\n\r\n\t\tconst check_branch_code = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.branch_code)){\r\n\t\t\t\tsetErrors({...errors,branch_code_error:'branch code field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_account_holder() ? isError = true : isError = isError;\r\n\t\tcheck_bank_name() ? isError = true : isError = isError;\r\n\t\tcheck_account_number() ? isError = true : isError = isError;\r\n\t\tcheck_branch_code() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\r\n\tuseEffect( () => {\r\n\t\tif (account){setAccount(account);}\r\n\t\tsetErrors(banking_details_errors_init);\r\n\t\tsetInline({message:'',message_type:'inf'});\r\n\r\n\t\treturn( () => {\r\n\t\t\tsetAccount(banking_details_init);\r\n\t\t\tsetErrors(banking_details_errors_init);\r\n\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t});\r\n\r\n\t},[account]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'> Bank Account</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Account Holder </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='account_holder'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.account_holder}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.account_holder_error ? <InlineError message={errors.account_holder_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Bank Name</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='bank_name'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.bank_name}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.bank_name_error ? <InlineError message={errors.bank_name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Account Number</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='account_number'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.account_number}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.account_number_error ? <InlineError message={errors.account_number_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Branch Code</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='branch_code'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.branch_code}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.branch_code_error ? <InlineError message={errors.branch_code_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='add-account'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError =>{\r\n\t\t\t\t\t\t\t\tisError ? setInline({message:'error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t\t: onSaveBankAccount(e).then(result => console.log(result));\r\n\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i> {' '} Save\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning  btn-lg'\r\n\t\t\t\t\t\t\tname='add-account'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetAccount(banking_details_init);\r\n\t\t\t\t\t\t\t\tsetErrors(banking_details_errors_init);\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<strong> <i className='fa fa-eraser'> </i> Reset </strong>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-danger  btn-lg'\r\n\t\t\t\t\t\t\tname='cancel'\r\n\t\t\t\t\t\t\tonClick={e => onCancel(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-close'> </i>{' '}\r\n                            Cancel\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null }\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Function to return bank account list items\r\n * @param editAccount\r\n * @param account\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst BankAccountItem = ({editAccount,deleteAccount,account}) => {\r\n\tconst banking_id = account.banking_id;\r\n\treturn(\r\n\t\t<tr>\r\n\t\t\t<td\r\n\t\t\t\tclassName='btn'\r\n\t\t\t\tonClick={() => editAccount(banking_id)}\r\n            ><em>{account.account_holder}</em></td>\r\n            <td><em>{account.bank_name}</em></td>\r\n            <td><em>{account.account_number}</em></td>\r\n            <td><em>{account.branch_code}</em></td>\r\n\t\t\t<td\r\n\t\t\t\tclassName={'btn btn-danger btn-sm'}\r\n\t\t\t\tonClick={() => deleteAccount(banking_id)}\r\n\t\t\t>\r\n\t\t\t\t<i className={'fa fa-close'}> </i> {' '}\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);};\r\n\r\n\r\n/**\r\n * Function to return a list of bank accounts\r\n * @param editAccount\r\n * @param bankAccounts\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst BankAccountsList = ({editAccount,deleteAccount,bankAccounts}) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<table className='table table-responsive table-bordered'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Account Holder</td>\r\n\t\t\t\t\t\t<td>Bank Name</td>\r\n\t\t\t\t\t\t<td>Account Number</td>\r\n\t\t\t\t\t\t<td>Branch Code</td>\r\n\t\t\t\t\t\t<td>{' '}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{bankAccounts.map(account => <BankAccountItem editAccount={editAccount} deleteAccount={deleteAccount} account={account} key={account.banking_id} />)}\r\n\t\t\t\t</tbody>\r\n\t\t\t\t<tfoot>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Account Holder</td>\r\n\t\t\t\t\t\t<td>Bank Name</td>\r\n\t\t\t\t\t\t<td>Account Number</td>\r\n\t\t\t\t\t\t<td>Branch Code</td>\r\n\t\t\t\t\t\t<td>{' '}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tfoot>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/**\r\n * Manage Company Bank Accounts\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageCompanyBankAccounts = () => {\r\n\tconst[bankAccounts, setBankAccounts] = useState([]);\r\n\tconst[bankAccount,setBankAccount] = useState(banking_details_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst [display,setDisplay] = useState('bank-accounts');\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\tconst { user_account_state } = useContext(UserAccountContext);\r\n\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst onCancel = e => {\r\n\t  setBankAccount(banking_details_init);\r\n\t};\r\n\r\n\tconst editAccount = banking_id  => {\r\n\t    console.log('we will be editing this account',banking_id);\r\n\t\tsetBankAccount(bankAccounts.find(account => account.banking_id === banking_id));\r\n\t};\r\n\r\n\r\n\tconst deleteAccount = banking_id => {\r\n\t    console.log('we will be deleting this account',banking_id);\r\n\r\n\t    const uid = user_account_state.user_account.uid;\r\n\t    const doDeleteAccount = async () => {\r\n\t\t\tawait apiRequests.deleteBankingDetails(uid,banking_id).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBankAccounts(results.payload);\r\n\t\t\t\t\tsetInline({message:'successfully deleted account',message_type:'inf'});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:'failed to delete account please contact the administrator',message_type:'inf'});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t    doDeleteAccount().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t};\r\n\r\n\tuseEffect( () =>{\r\n\r\n\t    const fetchBankingDetails = async () => {\r\n\t        let uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tapiRequests.fetchBankingDetails(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBankAccounts(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t    fetchBankingDetails().then(result => console.log(result));\r\n\t    return () => {\r\n\t\t\tsetBankAccounts([]);\r\n\t\t};\r\n\t},[]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-bank'> </i> {' '}\r\n                        Company Bank Accounts\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\t\t\t\t\t\t<div className='dropdown'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='btn btn-box-tool droplink'\r\n\t\t\t\t\t\t\t\tname='dropdown-menu'\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"bank-accounts\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('bank-accounts')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bank\"> </i> Bank Accounts{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"bank-accounts\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('add-account')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bank\"> </i> Add Bank Account{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t): null\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tbankAccount.banking_id ?\r\n\t\t\t\t\t// editing bank account details\r\n\t\t\t\t\t\t<BankAccountForm onCancel={onCancel} account={bankAccount} /> :\r\n\t\t\t\t\t// listing bank account details and also enabling\r\n\t\t\t\t\t\t<div className='box-footer'>\r\n\t\t\t\t\t\t\t{display === 'bank-accounts' ? <BankAccountsList editAccount={editAccount} deleteAccount={deleteAccount} bankAccounts={bankAccounts} /> : null}\r\n\t\t\t\t\t\t\t{display === 'add-account' ? <BankAccountForm onCancel={onCancel} account={null} /> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{inline.message ?\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className='box box-footer'>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t\t\tonClick={() => setInline({message:'',message_type:'inf'})}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-close'> </i> {' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<InlineMessage message={inline.message} message_type={inline.message_type} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t: null }\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst Dashboard = () => {\r\n  \r\n\tconst[admins,setAdmins] = useState([]);\r\n\tconst[present_user,setPresentUser] = useState({\r\n\t\tuid : '',\r\n\t\tis_admin: false\r\n\t});\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst [display,setDisplay] = useState('manage-users');\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\tconst { user_account_state } = useContext(UserAccountContext);\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\r\n    \r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchPresentUser = async () => {\r\n\t\t\tlet uid = user_account_state.user_account.uid;\r\n\t\t\tawait axios.get(routes.api_user_endpoint + `/${uid}`).then(response => {\r\n\t\t\t\tif (response.status === 200){\r\n\t\t\t\t\treturn response.data;\r\n\t\t\t\t}\r\n\t\t\t}).then(present_user => {\r\n\t\t\t\tsetPresentUser(present_user);          \r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:'you are not authorized to access our dashboard'});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfetchPresentUser().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetPresentUser({uid:'',is_admin:false });\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{present_user.is_admin ? (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i>{' '} Dashboard{' '}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bars\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-payments\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-payments')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-credit-card\"> </i> Manage Payments{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-users\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-users')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-users\"> </i> Manage Users{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-contacts\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-contacts')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-envelope\"> </i> Manage Contact{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-bank-accounts\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-bank-accounts')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bank\"> </i> Bank Accounts{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{display === 'manage-payments' ? <ManagePayments /> : null}\r\n\r\n\t\t\t\t\t\t{display === 'manage-users' ? <ManageUsers /> : null}\r\n\r\n\t\t\t\t\t\t{display === 'manage-contacts' ? <ManageContacts /> : null}\r\n\r\n\t\t\t\t\t\t{display === 'manage-bank-accounts' ? <ManageCompanyBankAccounts/> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<NotAuthorized />\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","import Axios from 'axios';\r\n\r\nfunction return_date(){\r\n\tconst now = new Date();\r\n\tconst this_year = now.getFullYear();\r\n\tconst this_month = now.getMonth();\r\n\tconst this_day = now.getDate();\r\n\treturn this_year + '-' + this_month + '-' + this_day;\r\n}\r\n\r\nfunction return_page_size(){\r\n\t// consider checking the backend for page size\r\n\treturn 20;\r\n}\r\n\r\nlet articles_api = {\r\n\tapiKey : '41e896a0a1c94b61903408fae1a49471',\r\n\tthis_date : return_date(),\r\n\tthis_pagesize :return_page_size(),\r\n\tentertainment_news: 'https://newsapi.org/v2/top-headlines?country=za&category=entertainment&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n\tsports_news: 'https://newsapi.org/v2/top-headlines?country=za&category=sports&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    business_news: 'https://newsapi.org/v2/top-headlines?country=za&category=business&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    tech_news: 'https://newsapi.org/v2/top-headlines?country=za&category=technology&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    science_news: 'https://newsapi.org/v2/top-headlines?country=za&category=science&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    health_news: 'https://newsapi.org/v2/top-headlines?country=za&category=health&apiKey=41e896a0a1c94b61903408fae1a49471'\r\n};\r\nexport async function get_blog_articles(category) {\t\r\n\tlet results = '';\r\n\tlet apiRequest = '';\r\n    console.log('CATEGORY',category);\t\r\n\t\tswitch(category){\r\n            case 'entertainment': apiRequest = articles_api.entertainment_news;break;\r\n            case 'sports' : apiRequest = articles_api.sports_news;break;\r\n            case 'business' : apiRequest = articles_api.business_news;break;\r\n            case 'tech' : apiRequest = articles_api.tech_news;break;\r\n            case 'science': apiRequest = articles_api.science_news;break;\r\n            case 'health' : apiRequest = articles_api.health_news;break;\r\n            default: apiRequest = articles_api.entertainment_news;break;        \r\n        }\r\n        \r\n\tawait Axios.get(apiRequest).then(result => {\r\n\t\tif (result.status === 200) {\r\n\t\t\treturn result.data;\r\n\t\t} else {\r\n\t\t\tthrow new Error('There was an error fetching articles');\r\n\t\t}\r\n\t}).then(articles => {\r\n\t\tresults = articles;\r\n\t}).catch(error => {\r\n\t\tconsole.log(error);\r\n\t});\r\n\tconsole.log('RESULTS : ', results);\r\n\treturn results.articles;\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport './Blog.css';\r\nimport {useForceUpdate} from '../hooks/forceUpdate';\r\nimport {get_blog_articles} from './articles';\r\n\r\nlet blog_posts = '';\r\n\r\n\r\nfunction BlogPost({ post_data }) {\r\n\tconst [post, setPost] = useState({});\r\n\r\n\tlet article = post_data;\r\n\tconsole.log('Articles',article);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body with-border\">\r\n\t\t\t\t<div className=\"box box-header with-border\">\r\n\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t<h2 className=\"box-title\">{article.title}</h2>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t<img src={article.urlToImage} className=\"pola-image\" />\r\n\t\t\t\t\t<div className=\"polatext\">{article.description}</div>\r\n\t\t\t\t\t<div className=\"box box-footer with-border\">\r\n\t\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{article.source.name} - {article.author}{' '}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-primary'\r\n              onClick={e => {}}\r\n              // when clicked display the entire article\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-file-pdf-o'> </i>{' '}\r\n              Read more...\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst Blog = () => {\r\n\tconst[category,setCategory] = useState('entertainment');\r\n  const [posts, setPosts] = useState([]);\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\t\r\n\r\n  \r\n\r\nconst showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({menu:true});\r\n    document.addEventListener('click', hideDropdownMenu);    \r\n  }\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({menu:false});\r\n    document.removeEventListener('click', hideDropdownMenu);    \r\n  }\r\n\r\n  const title = `${category[0].toUpperCase()}${category.slice(1)} News`;\r\n\r\n\tuseEffect(() => {\r\n    async function fetchData() {\r\n      try{\r\n        let blog_posts = await get_blog_articles(category);\r\n        console.dir(blog_posts);\r\n        setPosts(blog_posts);\r\n        return true;\r\n      }catch(error){\r\n        console.log(error);\r\n        return false;\r\n      }            \r\n    }\r\n    fetchData().then(result => {\r\n      console.log(result);\r\n    })\r\n  }, [category]);\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-file-text\"> </i> Blog{\" \"}\r\n            </strong>\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className='fa fa-bars'> </i>{\" \"}\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"entertainment\"\r\n                    onClick={() => setCategory(\"entertainment\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Entertainment{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"sports\"\r\n                    onClick={() => setCategory(\"sports\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Sports{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"business\"\r\n                    onClick={() => setCategory(\"business\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Business{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"tech\"\r\n                    onClick={() => setCategory(\"tech\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Tech{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"science\"\r\n                    onClick={() => setCategory(\"science\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Science{\" \"}\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"health\"\r\n                    onClick={() => setCategory(\"health\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Health\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-files-o\"> </i> {title}{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          {posts &&\r\n            posts.map((post, index) => {\r\n              return <BlogPost post_data={post} key={index} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Blog;","\r\nexport const chat_server = \"http://localhost:5000\";\r\nexport const chat_server_online = \"https://gentle-coast-76722.herokuapp.com/\";\r\n\r\nexport const chat_message_init = {\r\n    chat_id : '',\r\n    message_id : '',\r\n    author:'',\r\n    message:'',\r\n    timestamp:'',\r\n    attachments : ''\r\n};\r\n\r\nexport const chat_room_init = {\r\n    chat_id : 'weqtrading',\r\n    created_by : 'heinrich',\r\n    messages : [],\r\n    users : []\r\n};\r\n\r\nexport const chat_user_init = {\r\n    chat_id : '',\r\n    author : ''\r\n};\r\n\r\nexport const feedback_init = { author: \"\", message: \"\" };\r\n","\r\nimport React, { Fragment,useState,useContext,useEffect } from 'react';\r\nimport useSocket from \"use-socket.io-client\";\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport * as chat_constants from './chat-constants';\r\nimport {extended_user} from '../Auth/auth-constants';\r\nimport * as authAPI from '../Auth/auth-api';\r\n\r\n\r\n\r\nconst DisplayMessage = ({message}) => {\r\n  const[author,setAuthor] = useState(extended_user);\r\n  \r\n  const retrieveAuthor = async uid => {\r\n      await authAPI.fetchUser(uid).then(results => {\r\n        if(results.status){\r\n          setAuthor(results.payload);\r\n        }else{\r\n\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n      return true;\r\n  };\r\n\r\n  const onOpenAttachment = async e => {\r\n\r\n  };\r\n\r\n  const returnDate = timestamp => {\r\n    return Date(parseInt(timestamp) * 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    let uid = message.author;\r\n    \r\n    retrieveAuthor(uid).then(result => {});\r\n    \r\n    return () => {      \r\n    };\r\n  }, []);\r\n\r\n  return(\r\n                  \r\n        <div className=\"box-comments\">\r\n              {/* <img src={} alt=\"user image\" className=\"online\" /> */}\r\n\r\n        <p className=\"box-comment\">\r\n        \r\n        <a href=\"#\">\r\n          <small  className=\"text-muted pull-right\" title={ returnDate(message.timestamp)}> <i className=\"fa fa-clock-o\"></i>  </small>\r\n            {author.names}{' '}\r\n        </a>\r\n          {message.message}\r\n        </p>\r\n\r\n          {\r\n            message.attachments ? \r\n              <div className=\"attachment\">\r\n                <h4>Attachments:</h4>\r\n\r\n                <p className=\"filename\">\r\n                    {message.attachments}\r\n                </p>\r\n\r\n                <div className=\"pull-right\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-primary btn-sm btn-flat\"\r\n                  onClick={e => onOpenAttachment(e)}\r\n                  >Open</button>\r\n                </div>\r\n              </div>\r\n            : null\r\n          }        \r\n        </div>\r\n  )\r\n};\r\n\r\nconst Chat = () => {  \r\n\r\n  const [messages,setMessages] = useState([]);  \r\n  const [message,setMessage] = useState(chat_constants.chat_message_init);  \r\n  const [feedback, setFeedBack] = useState(chat_constants.feedback_init);\r\n\r\n  const [writer,setWriter] = useState(extended_user);\r\n\r\n  let server_url = '';\r\n\r\n  // necessary so i can upload the code without modifying chat servers\r\n  if (document.URL.includes('localhost') || document.URL.includes('127.0.0.1')){    \r\n    server_url = chat_constants.chat_server;    \r\n  }else{\r\n    server_url = chat_constants.chat_server_online;\r\n  }\r\n  \r\n  // initializing socket to use websockets\r\n  const [socket] = useSocket(server_url, {transports: [\"websocket\"]});\r\n  socket.connect();\r\n\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);  \r\n  const uid = user_account_state.user_account.uid;\r\n\r\n  // if there is a feedback being sent user details for that feedback will be retrieved here\r\n  const retrieveFeedbackUser = async uid => {\r\n      await authAPI.fetchUser(uid).then(results => {\r\n        if(results.status){\r\n          setWriter(results.payload);\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  };\r\n\r\n  // updating user interface with new messages  \r\n  const updateMessages = async new_message => {      \r\n      console.log('Returned Message',new_message);\r\n      \r\n      await setMessages(new_message);\r\n      console.log(\"Messages \", new_message);\r\n      return true;\r\n  };\r\n\r\n  useEffect(() => {  \r\n\r\n    // reacting to on chat messages\r\n    socket.on(\"chat\", data => {      \r\n      \r\n      const new_message = [...data];\r\n      \r\n      updateMessages(new_message).then(result => {\r\n        setFeedBack({ author: \"\", message: \"\" });\r\n        setWriter(extended_user);\r\n        setMessage({ ...message, message: \"\" });\r\n      });\r\n\r\n    });\r\n\r\n    // reacting to on typing messages\r\n    socket.on(\"typing\", data => {\r\n      const uid = data.author;\r\n      retrieveFeedbackUser(uid).then(result => {\r\n        setFeedBack({\r\n          author: data.author,\r\n          message: data.message\r\n        });\r\n      });\r\n    });\r\n\r\n    // reacting to on populate messages\r\n    socket.on(\"populate\", data => {\r\n      // this allows my app to populate itself with the most recent messages on entry\r\n      // the data field carries an array which includes messages            \r\n      setMessages(data);\r\n    });\r\n\r\n    // initializing message so that when a message \r\n    // is sent it is sent with the user id of the correct user\r\n    setMessage({\r\n      ...message,\r\n      author: uid\r\n    });\r\n\r\n\r\n    return () => {\r\n      setMessage({\r\n        ...message,\r\n        author: \"\"\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  // function used to send a message\r\n  const onSendMessage = e => {\r\n    let data = message;\r\n    data.author = user_account_state.user_account.uid;\r\n    data.chat_id = chat_constants.chat_room_init.chat_id;\r\n    socket.emit('chat',data);\r\n  };\r\n\r\n  // function used to indicate that this user is typing\r\n  const onTyping = e => {\r\n    setFeedBack(chat_constants.feedback_init);\r\n    let data = message;\r\n    data.author = user_account_state.user_account.uid;\r\n    socket.emit('typing',data);\r\n  };\r\n\r\n  //  try calling this method to let the user join the chat room then call onPopulate\r\n  const userJoinChat = () => {\r\n\r\n  };\r\n\r\n  // this function is called on entry to populate with all the messages\r\n  const onPopulate = () => {    \r\n    const uid = user_account_state.user_account.uid;\r\n    const populate_message = chat_constants.chat_user_init;\r\n    populate_message.author = uid;\r\n    populate_message.chat_id = chat_constants.chat_room_init.chat_id;\r\n\r\n    return populate_message;\r\n  };\r\n\r\n\r\n  // called in order to clear messages\r\n  const onClearMessages = (e) => {      \r\n    let data = chat_constants.chat_room_init;\r\n    socket.emit('clear', data);      \r\n  };\r\n\r\n  // creating the onPupulate entry message\r\n  useEffect(() => {    \r\n    socket.emit(\"populate\", onPopulate());\r\n    return () => {      \r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-success\">\r\n        <div className=\"box box-header\">\r\n          <i className=\"fa fa-comments-o\"></i>\r\n\r\n          <h3 className=\"box-title\">Chat</h3>\r\n\r\n            <div\r\n              className=\"box-tools pull-right\"\r\n              data-toggle=\"tooltip\"\r\n              title=\"Status\">\r\n\r\n            <div className=\"btn-group\" data-toggle=\"btn-toggle\">\r\n              <button type=\"button\" className=\"btn btn-default btn-sm active\">\r\n                <i className=\"fa fa-square text-green\"></i>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => onClearMessages(e)}>\r\n                <i className=\"fa fa-square text-red\"> {' '} </i>\r\n              </button>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-body chat\" id=\"chat-box\">\r\n          {messages.map((message) => {\r\n            console.log('message',message);\r\n            return <DisplayMessage message={message} key={message.message_id} />;\r\n          })}\r\n        </div>\r\n\r\n        {/* <!-- /.chat --> */}\r\n        <div className=\"box-footer\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Type message...\"\r\n              name=\"message\"\r\n              value={message.message}\r\n              onKeyPress={e => onTyping(e)}\r\n              onChange={e =>\r\n                setMessage({ ...message, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n\r\n            <div className=\"input-group-btn\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={e => onSendMessage(e)}\r\n              >\r\n                <i className=\"fa fa-plus\"></i> send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"box-tools\">\r\n            {writer.uid ? (\r\n              <a href='#'><small><strong><em> {writer.names} - - is typing a message... </em></strong></small></a>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- /.box (chat box) --> */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Chat;","\r\n\r\n\r\nexport const sms_message_init = {\r\n\tid : '',\r\n\tuid : '',\r\n\tmessage : '',\r\n\tto_cell : '',\r\n\tfrom_cell : '',\r\n\tdate_created : '',\r\n\tscheduled_datetime : '',\r\n\tdate_time_sent : '',\r\n\tdelivered : false\r\n\r\n};\r\n\r\nexport const sms_message_errors_init = {\r\n\tmessage_error : '',\r\n\tto_error : '',\r\n\tfrom_error : '',\r\n};\r\n\r\nexport const sms_balance_init = {\r\n\tuid : '',\r\n\ttotal_sms : '0',\r\n\tfree_sms : '0',\r\n\tsms_value : '0',\r\n};\r\n\r\nexport const sms_bundle_init = {\r\n\tid : '',\r\n\tname : '',\r\n\tdescription : '',\r\n\ttotal_sms : '0',\r\n\tpurchase_price : '0'\r\n};\r\n\r\n\r\nexport const payment_details_init ={\r\n\tuid : '',\r\n\tid : '',\r\n\tbundle_id : '',\r\n\tpayment_method :'',\r\n\tpayment_amount : '',\r\n\tpayment_date : '',\r\n\tpayment_time : '',\r\n\tapproved : false,\r\n};\r\n\r\nexport const default_bundles = [\r\n\t{\r\n\t\tid: '11111111',\r\n\t\tname : 'starter bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '250',\r\n\t\tpurchase_price : '90'\r\n\t},\r\n\t{\r\n\t\tid: '11111112',\r\n\t\tname : 'basic bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '500',\r\n\t\tpurchase_price : '200'\r\n\t},\r\n\t{\r\n\t\tid: '11111113',\r\n\t\tname : 'advanced bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '1000',\r\n\t\tpurchase_price : '400'\r\n\t},\r\n\t{\r\n\t\tid: '11111113',\r\n\t\tname : 'super bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '2500',\r\n\t\tpurchase_price : '800'\r\n\t}\r\n];\r\n\r\n\r\nexport const contact_lists_init = {\r\n\tuid : '',\r\n\tid : '',\r\n\tname : '',\r\n\tdescription : '',\r\n\ttotal_contacts : '',\t\r\n};\r\n\r\nexport const contact_lists_errors_init = {\r\n\tname_error : '',\r\n\tdescription_error : '',\r\n\ttotal_contacts : '0',\t\r\n};\r\n\r\n\r\nexport const contacts_init = {\r\n    id  : '',\r\n\tuid  : '',\r\n\tlist_id : '',\r\n\tlist_name : '',\r\n    name  : '', \r\n    surname  : '',\r\n    relationship  : '',\r\n    tel  : '',\r\n    cell  : '',\r\n    email  : '',\t\r\n};\r\n\r\n\r\nexport const contacts_errors_init = {\r\n\tname_error: \"\",\r\n\tsurname_error: \"\",\r\n\trelationship_error: \"\",\r\n\ttel_error: \"\",\r\n\tcell_error: \"\",\r\n\temail_error: \"\"\r\n};\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\n/**\r\n * this function should fetch balances from sms-crud api\r\n * i could control sms-crud api from justice ndou app\r\n * @param uid\r\n * @returns {Promise<void>}\r\n */\r\nexport const fetchBalancesAPI = async uid => {\r\n\t// TODO- finish this up by writing axios.get api's to access the balances for the user\r\n\t// who is logged in\r\n};\r\n\r\n\r\n/**\r\n * this function will fetch sms bundles from sms-crud api\r\n * i could control sms-crud api from justice ndou app\r\n * @param uid\r\n * @returns {Promise<void>}\r\n */\r\nexport const fetchSMSBundles = async (uid) => {\r\n\t\r\n\t// TODO- fetch available SMS Bundles list from my server UID is used for logging purposes\r\n\t// The internal application server will make the request through python\r\n\t// this method will insure local app record and also that\r\n\tconst  results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/bundles/${uid}`).then(response => {\r\n\t\tif (response.status === 200) {\r\n      \t\treturn response.data;\r\n\t\t} else {\r\n\t\tthrow new Error(\"there was an error fetching SMS Bundles\");\r\n\t\t}\r\n\t}).then(bundles => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...bundles];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\n//TODO payment information must be sent direct to sasms crud app\r\n\r\nexport const sendSMS = async (uid,sms_message) => {\r\n\t// TODO send the message to sasms crud use the uid\r\n\t// to check if the user has some credits\r\n\tconst results = { status: false, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_sms_endpoint + `/send/${uid}`,sms_message).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error sending sms message');\r\n\t\t}\r\n\t}).then(sms_message => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...sms_message};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchContactLists = async uid => {\r\n\t\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/contact-lists/${uid}`).then(response => {\r\n\t\tif (response.status === 200){\r\n\t\t\treturn response.data\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching contact lists');\r\n\t\t}\r\n\t}).then(contact_lists => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contact_lists];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveContactsList = async (uid,json_contacts_list) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tconst prepared_route = routes.api_sms_endpoint + `/contact-lists/${uid}`;\r\n\r\n\tawait axios.post(prepared_route, json_contacts_list).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error creating contact lists');\r\n\t\t}\r\n\t}).then(contacts_lists => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contacts_lists];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveContact= async (uid,json_contact) => {\r\n\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\tconst prepared_route = routes.api_sms_endpoint + `/smscontact/${uid}`;\r\n\r\n\tawait axios.post(prepared_route,json_contact).then(response => \r\n\t\t{\r\n\t\t\tif(response.status === 200){\r\n\t\t\t\treturn response.data;\r\n\t\t\t}else{\r\n\t\t\t\tthrow new Error('there was an error adding contact to contact list');\r\n\t\t}\r\n\t\t}).then(contact_list => {\r\n\t\t\tresults.status = true;\r\n\t\t\tresults.payload = [...contact_list];\r\n\t\t\tresults.error = {};\r\n\t\t}).catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.payload = [];\r\n\t\t\tresults.error ={...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const updateContact = async(uid, contact_details) => {\r\n\t\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\t\treturn results;\r\n};\r\n\r\nexport const fetchContactsByListName = async (uid,listname) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/contacts/bylistname/${listname}/${uid}`).then(response => {\r\n\t\tif (response.status === 200) {\r\n      \t\treturn response.data;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"there was an error fetching by listname\");\r\n\t\t}\r\n\t}).then(contact_list => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contact_list];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const fetchContactListByContactID = async (uid,list_id) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/contacts/bycontactid/${list_id}/${uid}`).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching contact list by contact id')\r\n\t\t}\r\n\t}).then(contact_list => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contact_list];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchContactListByUserID = async (uid) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios\r\n    .get(routes.api_sms_endpoint + `/contacts/byuid/${uid}`)\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching contact lists by user id\");\r\n      }\r\n    })\r\n    .then(contact_list => {\r\n      results.status = true;\r\n      results.payload = [...contact_list];\r\n      results.error = {};\r\n    })\r\n    .catch(error => {\r\n      results.status = false;\r\n      results.payload = [];\r\n      results.error = { ...error };\r\n    });\r\n  return results;\r\n};","\r\n// eslint-disable-next-line no-unused-vars\r\nimport React, {Fragment, createContext, useReducer, useContext, useState, useEffect} from 'react';\r\nimport {Utils} from '../../utilities';\r\nimport {\r\n  default_bundles,\r\n  payment_details_init,\r\n  sms_balance_init,\r\n  sms_bundle_init,\r\n  sms_message_errors_init,\r\n  sms_message_init,\r\n  contacts_init,\r\n  contacts_errors_init,\r\n  contact_lists_init,\r\n  contact_lists_errors_init\r\n} from \"./sms-constants\";\r\nimport * as smsApiRequests from './sms-api';\r\nimport { UserAccountContext } from '../../context/UserAccount/userAccountContext';\r\nimport InlineError from '../Forms/InlineError';\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport { Add } from 'react-lodash';\r\n\r\n/**\r\n * function module to list balances and allowing balance top-up via\r\n * eft, direct deposit, and or paypal\r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const SMSBalances = () => {\r\n\tconst [bundles,setBundles] = useState([]);\r\n\tconst [purchaseBundle,setPurchaseBundle] = useState(sms_bundle_init);\r\n\r\n\r\n\tconst [balance,setBalance] = useState(sms_balance_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst [payment,setPayment] = useState(payment_details_init);\r\n\r\n\r\n\tconst handleSelectBundle = e => {\r\n\t\tsetPurchaseBundle( bundles.find(bundle => bundle.id === e.target.value));\r\n\t};\r\n\r\n\tconst processPayment = e => {\r\n\t\tconsole.log('processing paymet with the following condistions', purchaseBundle, payment);\r\n\t};\r\n\r\n\tuseEffect( () => {\r\n\r\n\t\tconst fetchBalancesAPI = async() => {\r\n\t\t    const results = {status : true, error:{}};\r\n\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tsmsApiRequests.fetchBalancesAPI(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBalance(results.payload);\r\n\t\t\t\t\tsetInline({message:'successfully loaded sms balances',message_type:'info'});\r\n\t\t\t\t\tresults.status = true;\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\tresults.status = false;\r\n\t\t\t\tresults.error = {...error};\r\n\t\t\t});\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tfetchBalancesAPI().then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tconsole.log('successfully obtained balances',balance);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log('error loading balances',results.error);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.log('error loading balances',error.message);\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn(() => {\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\tsetBalance(sms_balance_init);\r\n\t\t});\r\n\r\n\t},[]);\r\n\r\n\t/***\r\n     * this effect check to see if bundle listing's are available from our sms server\r\n     * if not then it loads the default bundle listings\r\n     */\r\n\tuseEffect( () => {\r\n\t\tconst fetchBundlesFromBackEnd = async () => {\r\n\t\t\tconst results = {status : true,error : {}};\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tawait smsApiRequests.fetchSMSBundles(uid).then(response => {\r\n\t\t\t\tif(response.status){\r\n\t\t\t\t\tsetBundles(response.payload);\r\n\t\t\t\t\tresults.status = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t    console.log(response.error.message);\r\n\t\t\t\t    results.status = false;\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t    console.log(error.message);\r\n\t\t\t    results.status = false;\r\n\t\t\t    results.error = {...error};\r\n\t\t\t});\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tfetchBundlesFromBackEnd().then(response => {\r\n\t\t    if(!response.status){\r\n\t\t        setBundles(default_bundles);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn(() => {\r\n\t\t\tsetBundles([]);\r\n\t\t});\r\n\t},[]);\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-credit-card-alt'> </i>{' '} Balances\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='my-flex-container'>\r\n\t\t\t\t\t<div className='box-footer'>\r\n\t\t\t\t\t\t<ul className='box box-footer'>\r\n\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t<strong>Total SMS : <em><a href={'#'}> {balance.total_sms} </a></em></strong>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t<strong>Free SMS : <em><a href={'#'}> {balance.free_sms} </a></em></strong>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t<strong>SMS Value: <em><a href={'#'}>R {balance.sms_value}.00 </a></em></strong>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='box-footer'>\r\n\t\t\t\t\t\t<div className='box-header'>\r\n\t\t\t\t\t\t\t<h3 className='box-title'><i className={'fa fa-money'}> </i>{' '} Buy Bundles</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label className='label col-sm-3 pull-left'>Select Top Up Bundle</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tvalue={purchaseBundle.id}\r\n\t\t\t\t\t\t\t\t\tonChange={e => handleSelectBundle(e)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{bundles.map(bundle => <option value={bundle.id}>{bundle.name} - {bundle.total_sms} sms's - R {bundle.purchase_price}.00</option> )}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label className='label col-sm-3 pull-left'>Select Payment Method</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tname={'payment_method'}\r\n\t\t\t\t\t\t\t\t\tvalue={payment.payment_method}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setPayment({...payment,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value={'eft'}>EFT</option>\r\n\t\t\t\t\t\t\t\t\t<option value={'direct-deposit'}>Direct Deposit</option>\r\n\t\t\t\t\t\t\t\t\t<option value={'paypal'}> PayPal </option>\r\n\t\t\t\t\t\t\t\t\t<option value={'credit-card'}>Credit Card</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-primary btn-lg'\r\n\t\t\t\t\t\t\t\t\tname={'make-payment'}\r\n\t\t\t\t\t\t\t\t\tonClick={e => processPayment(e)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i className='fa fa-money'> </i>{' '}\r\n                                    Process Payment\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Used to create reports on sms deliveries made by such a user\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst DeliveryReports = () => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-file-excel-o'> </i>{' '}\r\n                        Delivery Reports\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Used to send bulk sms messages to your users contacts and customers\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst SendBulkSMS = () => {\r\n\r\n    const [listNames,setListNames] = useState([]);\r\n\tconst [contacts,setContacts] = useState([]);\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\tconst [display, setDisplay] = useState(\"send-sms\");\r\n  \tconst [messagesMenu, setMenu] = useState({ menu: false });\r\n\r\n\t\r\n\tconst showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n\tconst loadContactsFromListName = async listname => {\r\n\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\t\r\n\t\tawait smsApiRequests.fetchContactsByListName(uid,listname).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetContacts(results.payload);\r\n\t\t\t}else{\r\n\t\t\t\tsetContacts([]);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetContacts([]);\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchContactLists = async () => {\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\t\t\tawait smsApiRequests.fetchContactLists(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetListNames(listNames);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetListNames([]);\r\n\t\t\t\t\tconsole.log(\"error fetching contact lists\", results.error.message);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetListNames([]);\r\n\t\t\t\tconsole.log('error fetching contact lists',error.message);\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchContactLists().then(result => console.log(result));\r\n\r\n\t\treturn () => {\r\n\t\t\t\r\n\t\t};\r\n\t}, [])\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-send-o'> </i>{' '}\r\n                        Send Bulk SMS</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown\"\r\n\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{messagesMenu.menu ? (\r\n\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\tname=\"send-sms\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('send-sms')}\r\n\t\t\t\t\t\t\t\t> <i className='fa fa-send'> </i>{' '}\r\n\t\t\t\t\t\t\t\t\tSend SMS\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t) : null }\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\t\t\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Used to send single SMS Messages to your contacts and customers and users\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst SendSMS = () => {\r\n\tconst[sms,setSMS] = useState(sms_message_init);\r\n\tconst[errors,setErrors] = useState(sms_message_errors_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_to_error = () => {\r\n\t\t\tif (!Utils.isCell(sms.to_cell)){\r\n\t\t\t\tsetErrors({...errors,to_error: 'to field is not a valid cell phone number'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_from_error = () => {\r\n\t\t\tif (!Utils.isCell(sms.from_cell)){\r\n\t\t\t\tsetErrors({...errors,from_error: 'from field is not a valid cell phone number'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_message_field = () => {\r\n\t\t\tif (Utils.isEmpty(sms.message)){\r\n\t\t\t\tsetErrors({...errors,message_error: 'message field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn  false;\r\n\t\t};\r\n\r\n\t\tcheck_to_error() ? isError = true : isError = isError;\r\n\t\tcheck_from_error() ? isError = true : isError = isError;\r\n\t\tcheck_message_field() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\r\n\tconst sendSMS = async e => {\r\n\r\n\t\tconst results = {status:true,error:{}};\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst sms_message = JSON.stringify(sms);\r\n\r\n\t\tawait smsApiRequests.sendSMS(uid,sms_message).then(response => {\r\n\t\t\tif(response.status){\r\n\t\t\t\tresults.status =true;\r\n\t\t\t\tsetSMS(response.payload);\r\n\t\t\t\tsetInline({message:'sms message sent successfully',message_type:'inf'});\r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:response.error.message,message_type:'error'});\r\n\t\t\t\tresults.status = false;\r\n\t\t\t\tresults.error = {...response.error};\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.error = {...error.error};\r\n\t\t});\r\n\r\n\t\treturn results;\r\n\t};\r\n\r\n\tuseEffect(() =>{\r\n        const prepareSMS = async () => {\r\n            const uid = user_account_state.user_account.uid;\r\n            const today = Date();\r\n            today = today.now();\r\n\r\n        };\r\n\r\n    },[]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-send'> </i>{' '}\r\n                        Send SMS</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label col-sm-3'> From  </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='from_cell'\r\n\t\t\t\t\t\t\tvalue={sms.from_cell}\r\n\t\t\t\t\t\t\tonChange={e => setSMS({...sms,[e.target.name]:e.target.value}) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.from_error  ? <InlineError message={errors.from_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label col-sm-3'> To  </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname={'to_cell'}\r\n\t\t\t\t\t\t\tvalue={sms.to_cell}\r\n\t\t\t\t\t\t\tonChange={e => setSMS({...sms,[e.target.name]:e.target.value}) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.to_error ? <InlineError message={errors.to_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label col-sm-3'> SMS </label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={sms.message}\r\n\t\t\t\t\t\t\tonChange={e => setSMS({...sms,[e.target.name]:e.target.value}) }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</textarea>\r\n\t\t\t\t\t\t{errors.message_error ? <InlineError message={errors.message_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid={'send'}\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg margin-r-5'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ? setInline({message:'errors processing form',message_type : 'error'})\r\n\t\t\t\t\t\t\t\t\t: sendSMS(e).then(result => console.log('is sms sent', result));\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-send-o'> </i>{' '}\r\n                            Send\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetErrors(sms_message_errors_init);\r\n\t\t\t\t\t\t\t\tsetSMS(sms_message_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n                            Reset\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : '' }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/**\r\n * Messages Module will allow user to view sms's they have sent,\r\n * sms's being delivered, sms delivery reports,\r\n * allow user to send sms, to an uploaded contact book or also to customers within\r\n * weq trading\r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const SMSMessages = () => {\r\n\tconst [display,setDisplay] = useState('send-sms');\r\n\tconst [messagesMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-envelope'> </i>{' '}\r\n                        Messages\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className='box-tools mdl-textfield--align-left'>\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{messagesMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"send-sms\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('send-sms')}\r\n\t\t\t\t\t\t\t\t\t> <i className='fa fa-send'> </i>{' '}\r\n                                        Send SMS\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"send-bulk-sms\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('send-bulk-sms')}\r\n\t\t\t\t\t\t\t\t\t> <i className='fa fa-send-o'> </i>{' '}\r\n                                        Send Bulk SMS\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"delivery-reports\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('delivery-reports')}\r\n\t\t\t\t\t\t\t\t\t><i className='fa fa-file-excel-o'> </i>{' '}\r\n                                        Delivery Reports\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t):null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay === 'send-sms' ?\r\n\t\t\t\t\t\t<SendSMS/> : null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay === 'send-bulk-sms'?\r\n\t\t\t\t\t\t<SendBulkSMS /> : null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay === 'delivery-reports' ?\r\n\t\t\t\t\t\t<DeliveryReports/> : null\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n/**\r\n * \r\n * \r\n * \r\n * \r\n * \r\n * @param {*} param0 \r\n */\r\nconst ContactListItem = ({ onOpenContact,contact }) => {\r\n  return (\r\n    <Fragment>\r\n      <tr\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={e => {\r\n          const id = contact.id;\r\n          onOpenContact(id);\r\n        }}\r\n      >\r\n        <td>{contact.name}</td>\r\n        <td>{contact.surname}</td>\r\n        <td>{contact.cell}</td>\r\n        <td>{contact.tel}</td>\r\n        <td>{contact.email}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst DisplayContactList = ({ onOpenContact,contacts_list }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-list\"> </i> Contacts List\r\n          </h3>\r\n        </div>\r\n\r\n        <table className=\"table table-responsive table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Surname</td>\r\n              <td>Cell</td>\r\n              <td>Tel</td>\r\n              <td>Email</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts_list.map(contact => (\r\n              <ContactListItem\r\n                onOpenContact={onOpenContact}\r\n                contact={contact}\r\n              />\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Surname</td>\r\n              <td>Cell</td>\r\n              <td>Tel</td>\r\n              <td>Email</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n */\r\nconst EditContact = ({contact_detail}) => {\r\n\tconst [contact, setContact] = useState(contacts_init);\r\n\tconst [errors,setErrors] = useState(contacts_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'error'});\r\n\t\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst updateContact = async () => {\r\n\t\tconst results = {status:false,payload:{},errors:{}};\r\n\t\t\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\tconst contact_details = JSON.stringify(contact)\r\n\t\tawait smsApiRequests.updateContact(uid,contact_details).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\treturn results.data;\r\n\t\t\t}else{\r\n\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\t\tconst check_name = () => {\r\n\t\t\tif(Utils.isEmpty(contact.name)){\r\n\t\t\t\tsetErrors({...errors,name_error : 'name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_surname = () => {\r\n\t\t\tif(Utils.isEmpty(contact.surname)){\r\n\t\t\t\tsetErrors({...errors,surname_error : 'surname field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\r\n\t\t\tif(!Utils.isCell(contact.cell)){\r\n\t\t\t\tsetErrors({...errors,cell_error : 'cell number is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\r\n\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif (contact.email){\r\n\t\t\tif(!Utils.validateEmail(contact.email)){\r\n\t\t\t\tsetErrors({...errors,email_error : 'email is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\t};\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_tel = () => {\r\n\t\t\tif(contact.tel){\r\n\t\t\t\tif(!Utils.isTel(contact.tel)){\r\n\t\t\t\t\tsetErrors({...errors,tel_error:'telephone number is'});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_name() ? isError = true : isError = isError;\r\n\t\tcheck_surname() ? isError = true : isError = isError;\r\n\t\tcheck_cell() ? isError = true : isError = isError;\r\n\t\tcheck_email() ? isError = true : isError = isError;\r\n\t\tcheck_tel() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetContact(contact_detail);\r\n\t  return () => {\r\n\t\tsetContact(contacts_init);\r\n\t  };\r\n\t}, [contact_detail]);\r\n\r\n\r\n\treturn(\r\n\t\t\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>Edit Contact</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name_error ? <InlineError message={errors.name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Surname</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='surname'\r\n\t\t\t\t\t\t\tvalue={contact.surname}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.surname_error ? <InlineError message={errors.surname_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='cell'\r\n\t\t\t\t\t\t\tvalue={contact.cell}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Tel</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='tel'\r\n\t\t\t\t\t\t\tvalue={contact.tel}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.tel_error ? <InlineError message={errors.tel_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Relationship</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='relationship'\r\n\t\t\t\t\t\t\tvalue={contact.relationship}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='business'>Business</option>\r\n\t\t\t\t\t\t\t<option value='customer'>Customer</option>\r\n\t\t\t\t\t\t\t<option value='marketing-clients'>Marketing Clients</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='addContact'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ? setInline({message:'there was an error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t: updateContact().then(result => {\r\n\t\t\t\t\t\t\t\t\tif (result.status){\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'successfully updated contacts',message_type:'info'});\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'error adding new contact record please try again later',message_type:'error'});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n\t\t\t\t\t\t\tAdd Contact\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetContact(contacts_init);\r\n\t\t\t\t\t\t\t\tsetErrors(contacts_errors_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t\t\r\n\t)\r\n}\r\n\r\n/**\r\n * add contact to backend\r\n * then add contact to contact list via call-back function\r\n * \r\n * @param {*} addContact\r\n */\r\nconst AddContact = ({addContact}) => {\r\n\tconst [contact,setContact] = useState(contacts_init);\r\n\tconst [errors,setErrors] = useState(contacts_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'error'});\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\t\tconst check_name = () => {\r\n\t\t\tif(Utils.isEmpty(contact.name)){\r\n\t\t\t\tsetErrors({...errors,name_error : 'name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_surname = () => {\r\n\t\t\tif(Utils.isEmpty(contact.surname)){\r\n\t\t\t\tsetErrors({...errors,surname_error : 'surname field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\r\n\t\t\tif(!Utils.isCell(contact.cell)){\r\n\t\t\t\tsetErrors({...errors,cell_error : 'cell number is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\r\n\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif (contact.email){\r\n\t\t\tif(!Utils.validateEmail(contact.email)){\r\n\t\t\t\tsetErrors({...errors,email_error : 'email is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\t};\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_tel = () => {\r\n\t\t\tif(contact.tel){\r\n\t\t\t\tif(!Utils.isTel(contact.tel)){\r\n\t\t\t\t\tsetErrors({...errors,tel_error:'telephone number is'});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_name() ? isError = true : isError = isError;\r\n\t\tcheck_surname() ? isError = true : isError = isError;\r\n\t\tcheck_cell() ? isError = true : isError = isError;\r\n\t\tcheck_email() ? isError = true : isError = isError;\r\n\t\tcheck_tel() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>Add Contact</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name_error ? <InlineError message={errors.name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Surname</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='surname'\r\n\t\t\t\t\t\t\tvalue={contact.surname}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.surname_error ? <InlineError message={errors.surname_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='cell'\r\n\t\t\t\t\t\t\tvalue={contact.cell}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Tel</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='tel'\r\n\t\t\t\t\t\t\tvalue={contact.tel}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.tel_error ? <InlineError message={errors.tel_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Relationship</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='relationship'\r\n\t\t\t\t\t\t\tvalue={contact.relationship}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='business'>Business</option>\r\n\t\t\t\t\t\t\t<option value='customer'>Customer</option>\r\n\t\t\t\t\t\t\t<option value='marketing-clients'>Marketing Clients</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='addContact'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\r\n\t\t\t\t\t\t\t\tisError ? \r\n\t\t\t\t\t\t\t\tsetInline(\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmessage:'there was an error processing form',\r\n\t\t\t\t\t\t\t\t\t\tmessage_type:'error'\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t: addContact(contact).then(response => {\r\n\t\t\t\t\t\t\t\t\tif (response.status){\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'successfully updated contacts',message_type:'info'});\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'error adding new contact record please try again later',message_type:'error'});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n\t\t\t\t\t\t\tAdd Contact\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetContact(contacts_init);\r\n\t\t\t\t\t\t\t\tsetErrors(contacts_errors_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst ContactsManager = ({contacts,contact_list_details}) => {\r\n\tconst [contacts_list,setContactsList] = useState([]);\r\n\tconst [display, setDisplay] = useState(\"contact-lists\");\r\n\tconst [contactsManagerMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst [contact,setContact] = useState(contacts_init);\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst onOpenContact = async id => {\r\n\t\tsetContact(contacts_list.find(contact => contact.id === id));\r\n\t\tsetDisplay('edit-contact');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * contact details will be added to the backend and in turn the results will update contacts_list \r\n\t * @param {*} contact_details containst the details of the contact to be added\r\n\t */\r\n\tconst addContact = async (contact_details) =>{\r\n\t\t\r\n\t\tconst results = {status : false,payload:{},error:{}};\r\n\t\t\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\t\r\n\t\tcontact_details.list_id = contact_list_details.id;\r\n\t\tcontact_details.list_name = contact_list_details.name;\r\n\t\tconst json_contact = JSON.stringify(contact_details)\r\n\t\t// add contact to contact list\r\n\t\tawait smsApiRequests.saveContact(uid,json_contact).then(response => {\r\n\t\t\t\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContactsList(response.payload);\r\n\t\t\t\tresults = {...response};\r\n\t\t\t}\r\n\r\n\t\t}).catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.payload = [];\r\n\t\t\tresults.error = {...error};\r\n\t\t});\r\n\r\n\t\treturn results;\r\n\t};\r\n\r\n\t// setting contacts to contacts_list\r\n\tuseEffect(() => {\r\n\t\tsetContactsList(contacts);\r\n\t  return () => {\r\n\t\tsetContactsList([]);\r\n\t  };\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-user\"></i> Contacts Manager\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {contactsManagerMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"contact-lists\"\r\n                    onClick={() => setDisplay(\"contact-lists\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-users\"> </i> Contact Lists\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-contact\"\r\n                    onClick={() => setDisplay(\"add-contact\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-envelope\"> </i> Add Contact\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"contact-lists\" ? \r\n          <DisplayContactList\r\n            onOpenContact={onOpenContact}\r\n            contacts_list={contacts_list}\r\n          />\r\n        : null}\r\n        {display === \"add-contact\" ? <AddContact addContact={addContact} />:null}\r\n\t\t\r\n\t\t{display === 'edit-contact' ? <EditContact contact_detail={contact} /> : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst AddContactList = () => {\r\n\tconst [contacts_list, setContactsList] = useState(contact_lists_init);\r\n\tconst [errors,setErrors] = useState(contact_lists_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'errir'});\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\r\n\t// function to check contacts list errors before we can add them\r\n\r\n\tconst checkErrors = async e => {\r\n\t\te.preventDefault();\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_name = () => {\r\n\t\t\tif(Utils.isEmpty(contacts_list.name)){\r\n\t\t\t\tsetErrors({...errors,name_error:'name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_description = () => {\t\t\r\n\t\t\r\n\t\t\tif(Utils.isEmpty(contacts_list.description)){\r\n\t\t\t\tsetErrors({...errors,description_error:'description field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\r\n\t\t};\r\n\r\n\t\tcheck_name() ? isError = true : isError =isError;\r\n\t\tcheck_description() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\t\t\r\n\t};\r\n\r\n\t// function to add contact lists to the backend database\r\n\tconst onAddContactsList = async e => {\r\n\t\t\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst json_contacts_list = JSON.stringify(contacts_list)\r\n\t\tawait smsApiRequests.saveContactsList(uid, json_contacts_list).then(response =>{\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContactsList(response.payload);\r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:response.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t// initialize contacts list\r\n\tuseEffect(() => {\t\t\r\n\t\t  setContactsList({...contacts_list,uid : user_account_state.user_account.uid});\t\t\t  \r\n\t\treturn () => {\r\n\t\t\tsetContactsList(contact_lists_init);\r\n\t\t};\r\n\t}, [])\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\tCreate Contact List\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label'> List Name</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={contacts_list.name} \r\n\t\t\t\t\t\t\tonChange={e => setContactsList({...contacts_list,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name_error ? <InlineError message={errors.name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label'> Description</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\tvalue={contacts_list.description} \r\n\t\t\t\t\t\t\tonChange={e => setContactsList({...contacts_list,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.description_error ? <InlineError message={errors.description_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='save'\r\n\t\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcheckErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\t\t\tisError ? setInline({message:'error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t\t\t: onAddContactsList(e).then(results => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n\t\t\t\t\t\t\t\tAdd Contacts List\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetErrors(contact_lists_errors_init);\r\n\t\t\t\t\t\t\t\tsetContactsList(contact_lists_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'></i>{' '}\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst ContactsListItems = ({ onOpenContactList,contact_list }) => {\r\n  return (\r\n    <tr>\r\n      <td\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={e => {\r\n          const id = contact_list.id;\r\n          onOpenContactList(id);\r\n        }}\r\n      >\r\n        {contact_list.name}\r\n      </td>\r\n      <td>{contact_list.description}</td>\r\n      <td>{contact_list.total_contacts}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ContactsLists = ({ onOpenContactList,contact_lists }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Contact Lists</h3>\r\n        </div>\r\n\r\n        <table className=\"table table-responsive table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Description</td>\r\n              <td>Total Contacts</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contact_lists.map(contact_list => (\r\n              <ContactsListItems\r\n                onOpenContactList={onOpenContactList}\r\n                contact_list={contact_list}\r\n              />\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Description</td>\r\n              <td>Total Contacts</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * ability to add and remove contacts, ability to\r\n * organize contacts by named contact lists\r\n * \r\n// \texport const contact_lists_init = {\r\n// \t\tuid : '',\r\n// \t\tid : '',\r\n// \t\tname : '',\r\n// \t\tdescription : '',\r\n// \t\ttotal_contacts : '',\t\r\n// \t};\r\n * \r\n * \r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const SMSContacts = () => {\r\n\r\n\tconst [contactLists,setContactLists] = useState([]);\r\n\tconst [contacts,setContacts] = useState([]);\r\n\tconst [listDetail,setListDetail] = useState(contact_lists_init);\r\n\r\n\tconst [display, setDisplay] = useState(\"contact-lists\");\r\n\tconst [smsContactsMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} id list id used to fetch contact list belonging to the list opened\r\n\t */\r\n\tconst onOpenContactList = id => {\r\n\t\tconst contact_list_details = contactLists.find(contact_list => contact_list.id === id);\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst listname = contact_list_details.list_name;\r\n\t\tsetListDetail(contact_list_details);\r\n\t\tsmsApiRequests.fetchContactsByListName(uid,listname).then(response => {\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContacts(response.payload);\r\n\t\t\t\tsetDisplay('contacts_manager');\r\n\t\t\t}else{\r\n\t\t\t\tsetContacts([]);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetContacts([]);\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t  \r\n\t\tconst fetchContactListsAPI = async () => {\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tawait smsApiRequests.fetchContactLists(uid).then(results => {\r\n\t\t\t\tif(results.status){ \r\n\t\t\t\t\tsetContactLists(results.payload)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetContactLists([])\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetContactLists([])\r\n\t\t\t});\r\n\r\n\t\t\treturn true\r\n\t  };\t\t\r\n\r\n\t  fetchContactListsAPI().then(results => console.log('contacts lists fetched',results));\r\n\r\n\t  return () => {\r\n\t\tsetContactLists([]);\t\r\n\t  };\r\n\t}, []);\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-envelope-square\"> </i> Contacts\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {smsContactsMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"contact-lists\"\r\n                    onClick={() => setDisplay(\"contact-lists\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-envelope\"> </i> Contact Lists\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-contacts\"\r\n                    onClick={() => setDisplay(\"add-contacts\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-envelope\"> </i> Create Contact List\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"contact-lists\" ? (\r\n          <ContactsLists\r\n            onOpenContactList={onOpenContactList}\r\n            contact_lists={contactLists}\r\n          />\r\n        ) : null}\r\n        {display === \"add-contacts\" ? <AddContactList /> : null}\r\n        {display === \"contacts_manager\" ? (\r\n          <ContactsManager\r\n            contact_list_details={listDetail}\r\n            contacts={contacts}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SMS = () => {\r\n\tconst [display,setDisplay] = useState('contact-details');\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-send-o'> </i> {' '}\r\n                        Bulk SMS\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"contact-details\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('contact-details')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-envelope-square'> </i> {' '}\r\n                                        Contacts\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"messages\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('messages')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-envelope'> </i> {' '}\r\n                                        Messages\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"account\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('account')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-credit-card'> </i> {' '}\r\n                                        Balances\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t{display === 'contact-details' ? <SMSContacts/> : ''}\r\n\t\t\t\t{display === 'messages' ? <SMSMessages/> : ''}\r\n\t\t\t\t{display === 'account' ? <SMSBalances /> : ''}\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default SMS;","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport Switch from 'react-switch';\r\nimport {Utils} from '../../utilities';\r\nimport {extended_user, extended_user_error} from '../Auth/auth-constants';\r\nimport * as apiRequests from '../Auth/auth-api';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport InlineError from '../Forms/InlineError';\r\nimport InlineMessage from '../Forms/InlineMessage';\r\n\r\nfunction Verifications({ user_account, doSendEmailVerification }) {\r\n  const [verifications, setVerifications] = useState({\r\n    use_onetime_pin: false,\r\n    cell: user_account.phoneNumber,\r\n    account_verified: user_account.emailVerified\r\n  });\r\n\r\n  let toggleVerifications = e => {\r\n    setVerifications({\r\n      use_onetime_pin: !verifications.use_onetime_pin,\r\n      cell: verifications.cell,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n\r\n  let OnChangeHandler = e => {\r\n    setVerifications({\r\n      use_onetime_pin: verifications.use_onetime_pin,\r\n      cell: e.target.value,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n  let UpdateVerifications = e => {\r\n    console.log(\"Updating verifications\");\r\n    //TODO- this means that i have to actually send a verification\r\n    //sms to the old number and then to the new number\r\n  };\r\n\r\n  let onAccountVerify = e => {\r\n    console.log(\"on Account verifications\");\r\n    //Send verification email from firebase\r\n    doSendEmailVerification();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <small>\r\n                <i className=\"fa fa-lock\"> </i>\r\n                Verifications &amp; Security Settings\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">Account Verification Status</h3>\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        <Switch\r\n                          name=\"account-verified\"\r\n                          checked={verifications.account_verified}\r\n                          onChange={e => onAccountVerify(e)}\r\n                        />\r\n                        <span className=\"box-title\">\r\n                          {verifications.account_verified\r\n                            ? \"Account is Verified\"\r\n                            : \"Account not verified\"}\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"verification-email\"\r\n                        value={user_account.email}\r\n                      />\r\n                    </div>\r\n                    {verifications.account_verified ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-google\"\r\n                          name=\"sendverificationEmail\"\r\n                          onClick={e => onAccountVerify(e)}\r\n                        >\r\n                          <strong>\r\n                            <i className=\"fa fa-send\"> </i> Send Verification\r\n                            Email\r\n                          </strong>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">One Time Pin</h3>\r\n                </div>\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      <Switch\r\n                        name=\"verifications_active\"\r\n                        onChange={e => toggleVerifications(e)}\r\n                        checked={verifications.use_onetime_pin}\r\n                      />\r\n\r\n                      <span> OTP SMS (ONE TIME PIN) </span>\r\n                      {\"  \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group-addon\">\r\n                      <div className=\"input-group\" />\r\n                      <i className=\"fa fa-mobile-phone\"> </i> Cell\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cell\"\r\n                      onChange={e => OnChangeHandler(e)}\r\n                      value={verifications.cell}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-google btn-lg\"\r\n                      name=\"update-verifications\"\r\n                      onClick={e => UpdateVerifications(e)}\r\n                    >\r\n                      <strong>\r\n                        <i className=\"fa fa-mobile-phone\"> </i> Update\r\n                        Verifications\r\n                      </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AccountSettings(){\r\n\r\n    const[accountSettings,setAccountSettings] = useState({\r\n        account_active: true,\r\n        receive_job_offers:true,\r\n        receive_sms:true,        \r\n        receive_email:true\r\n    });\r\n\r\n    let onToggleSettings = target => {\r\n      console.log(target);\r\n      switch(target){\r\n        case  'account_active':{ \r\n          console.log('Setting account active');\r\n          setAccountSettings(\r\n                {\r\n                  ...accountSettings,\r\n                  account_active: !accountSettings.account_active\r\n                }\r\n              );break;\r\n        }\r\n        \r\n        case 'receive_job_offers':{ \r\n          console.log(\"Setting receive job offers\");\r\n          setAccountSettings({\r\n          ...accountSettings,\r\n          receive_job_offers: !accountSettings.receive_job_offers,\r\n        });break;\r\n        }\r\n        \r\n        case 'receive_sms':{\r\n          console.log('setting receive sms');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_sms: !accountSettings.receive_sms\r\n          });break;\r\n        }\r\n        \r\n        case 'receive_email':{ console.log('setting receive email');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_email: !accountSettings.receive_email\r\n          });break;\r\n        }\r\n    }\r\n    }\r\n\r\n    let UpdateAccountSettings = e => {\r\n      console.log('Updating account settings');\r\n      // store settings in locaStorage\r\n      // save settings in the backend\r\n    }\r\n\r\n    let onLoadAccountSettings = e => {\r\n      console.log('Loading account settings');\r\n      // load settings from backend  -> then\r\n        // save in store\r\n      // if backend load failed the load from store\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <small>\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings{\" \"}\r\n                </small>{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          <div className=\"box-footer\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name='account_active'\r\n                    onChange={e => onToggleSettings(\"account_active\")}\r\n                    checked={accountSettings.account_active}\r\n                  />\r\n\r\n                  <span title={\"Close Account\"}>\r\n                    {\"  \"}\r\n                    <em> Account Status</em>{\" \"}\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_job_offers\"\r\n                    onChange={e => onToggleSettings(\"receive_job_offers\")}\r\n                    checked={accountSettings.receive_job_offers}\r\n                  />\r\n                  <span>Receive Job Offers </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_sms\"\r\n                    onChange={e => onToggleSettings(\"receive_sms\")}\r\n                    checked={accountSettings.receive_sms}\r\n                  />\r\n                  <span>Receive SMS Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_email\"\r\n                    onChange={e => onToggleSettings(\"receive_email\")}\r\n                    checked={accountSettings.receive_email}\r\n                  />\r\n                  <span>Receive Email Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-lg\"\r\n                  name=\"update-account-settings\"\r\n                  onClick={e => UpdateAccountSettings(e)}\r\n                >\r\n                  <strong>\r\n                    <i className=\"fa fa-save\"> </i> Update Account Settings\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nfunction PersonalDetails({user_account}){\r\n    const [user, setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    const onChangeHandler = e => setUser({...user,[e.target.name]:e.target.value});    \r\n\r\n    const onUpdatePersonalDetails = async e => {\r\n        let sent_user = {...user};\r\n        sent_user.uid = user_account_state.user_account.uid;\r\n        sent_user = JSON.stringify(sent_user)\r\n        console.log('Updating User with ', sent_user);\r\n\r\n        await apiRequests.updateUser(sent_user).then(results => {\r\n          if (results.status){\r\n            setUser(results.payload);\r\n            setInline({message:'successfully update personal details'});\r\n          }else{\r\n            setInline({message:'there was an error updating personal details',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n        return true;\r\n    };\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n\r\n      const check_names = () => {\r\n        if (Utils.isEmpty(user.names)) {\r\n          setErrors({ ...errors, names_error: \"names field cannot be empty\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_surname = () => {\r\n        if (Utils.isEmpty(user.surname)) {\r\n          setErrors({\r\n            ...errors,\r\n            surname_error: \"surname field cannot be empty\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_cell = () => {\r\n        if (Utils.isCell(user.cell) === false) {\r\n          setErrors({ ...errors, cell_error: \"cell field is invalid\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_email = () => {\r\n        if (Utils.validateEmail(user.email) === false) {\r\n          setErrors({ ...errors, email_error: \"email address is invalid\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_password = () => {\r\n        if (Utils.isEmpty(user.password)) {\r\n          setErrors({\r\n            ...errors,\r\n            password_error: \"password field cannot be empty\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_password_two = () => {\r\n        if (user.password !== user.repeatpassword) {\r\n          setErrors({\r\n            ...errors,\r\n            repeatpassword_error: \"passwords do not match\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_names() ? (isError = true) : (isError = isError);\r\n        check_surname() ? (isError = true) : (isError = isError);\r\n        check_cell() ? (isError = true) : (isError = isError);\r\n        check_email() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n      };\r\n\r\n      return await do_check();\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          let uid = user_account_state.user_account.uid;\r\n          await apiRequests.fetchUser(uid).then(results => {\r\n            if(results.status){\r\n              setUser(results.payload);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error.message);\r\n          });\r\n\r\n          return true;\r\n        };\r\n\r\n        fetchAPI().then(results => {\r\n          console.log('Fetch API exected')\r\n        });\r\n\r\n\r\n      return () => {\r\n        setUser(extended_user);\r\n        setInline({message:'',message_type:'info'});\r\n        setErrors(extended_user_error);\r\n      };\r\n    }, [user_account_state])\r\n    return (\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <small>\r\n                {\" \"}\r\n                <i className=\"fa fa-user\"> </i> Personal Details{\" \"}\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer col-lg-8\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"names\"\r\n                placeholder=\"Names...\"\r\n                value={user.names}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"surname\"\r\n                placeholder=\"Surname...\"\r\n                value={user.surname}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"cell\"\r\n                placeholder=\"Cell...\"\r\n                value={user.cell}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Email...\"\r\n                value={user.email}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"update\"\r\n                onClick={e => checkErrors(e).then(isError => {\r\n                  isError\r\n                    ? setInline({\r\n                        message: \"there was an error processing form\",\r\n                        message_type: \"error\"\r\n                      })\r\n                    : onUpdatePersonalDetails(e).then(result => {\r\n                      console.log(result);\r\n                    })\r\n                }) }\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cloud-upload\"> </i> Update\r\n                </strong>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"cancel\"\r\n                onClick={e => {\r\n                  setUser(extended_user);\r\n                  setErrors(extended_user_error);\r\n                  setInline({message:'',message_type:'info'});\r\n                }}\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-eraser\"> </i> Reset\r\n                </strong>\r\n              </button>\r\n            </div>\r\n            <div className='form-group'>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default function Account (){\r\n    const [display, setDisplay] = useState(\"personaldetails\");\r\n    const [displayMenu, setMenu] = useState({ menu: false });\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n    \r\n    let onSwitchScreen = (e) => {\r\n        setDisplay(e);\r\n        console.log(display);        \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      console.log(display);\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const { doSendEmailVerification, user_account_state } = context;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Account\r\n                </strong>\r\n              </h3>\r\n              <div className=\"box-tools\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool dropdown-toggle\"\r\n                    onClick={e => showDropdownMenu(e)}\r\n                  >\r\n                    <i className=\"fa fa-bars\"> </i>\r\n                  </button>\r\n                  {displayMenu.menu ? (\r\n                    <ul className=\"dropmenu\">\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"personaldetails\"\r\n                        onClick={e => onSwitchScreen(\"personaldetails\")}\r\n                      >\r\n                        <i className=\"fa fa-user\"> </i> Personal Details\r\n                      </li>\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"verifications\"\r\n                        onClick={e => onSwitchScreen(\"verifications\")}\r\n                      >\r\n                        <i className=\"fa fa-lock\"> </i> Verifications\r\n                      </li>\r\n\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"accountsettings\"\r\n                        onClick={e => onSwitchScreen(\"accountsettings\")}\r\n                      >\r\n                        <i className=\"fa fa-cogs\"> </i> Account Settings\r\n                      </li>\r\n                    </ul>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {display === \"personaldetails\" ? (\r\n              <PersonalDetails user_account={user_account_state.user_account} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {display === \"accountsettings\" ? <AccountSettings /> : \"\"}\r\n            {display === \"verifications\" ? (\r\n              <Verifications\r\n                user_account={user_account_state.user_account}\r\n                doSendEmailVerification={doSendEmailVerification}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React,{Fragment,useState,useEffect,useContext,useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\n\r\nimport {\r\n\tphysical_address_init,\r\n\tphysical_address_errors_init,\r\n\tcontact_details_init,\r\n\tcontact_details_errors_init,\r\n\tproducts_init,\r\n\tservice_init,\r\n\tcart_init,\r\n\tcoupon_init\r\n} from '../market-constants';\r\n\r\n\r\nimport * as APIRequests from '../api-requests';\r\nimport {firebase} from '../../../firebase';\r\nimport { Utils } from '../../../utilities';\r\n\r\nimport * as settings from '../../../constants';\r\n\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\nimport {Capitalize} from 'react-lodash';\r\nimport { client_id, banking_details_init } from './checkout_constants';\r\n\r\n\r\n\r\nconst CheckoutEFTPayMentDetails = () => {\r\n\r\n\tconst[bankdetails,setBankingDetails] = useState([]);\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst fetchBankingDetails  = async () => {\r\n\t\t\tconst {uid} = user_account_state.user_account;\r\n\t\t\tawait APIRequests.fetchBankingDetails(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBankingDetails(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(results.error.message);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error.message);\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchBankingDetails().then(result => console.log(result));\r\n\r\n\t},[]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='bo box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n                      Checkout (EFT)\r\n\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='box-footer'>\r\n\r\n\t\t\t\t\t<span className='content'>\r\n\t\t\t\t\t\t<blockquote>\r\n                        in order to purchase your services or products\r\n                        make payment and then upload your proof of payment here.\r\n\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t\t<blockquote>\r\n                        make sure to make use of the payment reference as indicated\r\n                        together with the payment details.\r\n\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t\t<blockquote>\r\n                        Note in order to guarantee that you receive your services or products\r\n                        as you requested, your funds will be held safely in an escrow account\r\n                        and only portions of the funds released as services are being rendered\r\n                        and or as the products gets received by you.\r\n\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t    <blockquote>\r\n                        or you can alternatively email your proof of payment to\r\n                        payments@weqtrading.com.\r\n\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbankdetails.map(account => {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t<div className='box box-footer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='box-title'>Account Details : </h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<ul className='list-group'>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Account Holder : <em><a href={'#'}> {account.account_holder} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Bank Name : <em><a href={'#'}> {account.bank_name} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Account Number : <em><a href={'#'}> {account.account_number} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Branch Code : <em><a href={'#'}> {account.branch_code} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst BasketItem = ({item}) => {\r\n  \r\n\tconst[product,setProduct] = useState(products_init);\r\n\tconst[service,setService] = useState(service_init);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {   \r\n\t\t\tif (item.item_type === 'products'){\r\n\t\t\t\tawait APIRequests.fetchProductAPI(item.id_service_product).then(results => {\r\n\t\t\t\t\tsetProduct(results);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tawait APIRequests.fetchServiceAPI(item.id_service_product).then(results => {\r\n\t\t\t\t\tsetService(results);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsetProduct(products_init);\r\n\t\t\tsetService(service_init);\r\n\t\t};\r\n\t}, []);\r\n\tlet description = '';\r\n\tproduct.description\r\n\t\t? (description = product.description)\r\n\t\t: (description = service.description);\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td title={description}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(item.item_type === 'products') ?\r\n\t\t\t\t\t\t<Capitalize string={product.product_name} /> \r\n\t\t\t\t\t\t: <Capitalize string={service.service_name} />\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td><Capitalize string={item.item_type} /></td>\r\n\t\t\t<td>{item.quantity}</td>\r\n\t\t\t<td>R {item.price}.00</td>\r\n\t\t\t<td>R {item.sub_total}.00</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nconst ShoppingBasket = () => {\r\n\tconst[basket,setBasket] = useState([]);\r\n\tconst[coupons,setCoupons] = useState(coupon_init);\r\n\tconst[errors,setErrors] = useState({\r\n\t\tcoupon_code_error : ''\r\n\t});\r\n\tconst [cart, setCart] = useState(cart_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'info'});\r\n    \r\n\tconst[display,setDisplay] = useState('shopping-basket');\r\n\tconst [paidFor,SetPaidFor] = useState(false);\r\n\tconst [loaded,setLoaded] = useState(false);\r\n    \r\n\tlet paypalRef = useRef();\r\n\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n    \r\n    \r\n\tconst applyCouponCode = e => {\r\n\t\t/**\r\n         * compile code information from state\r\n         * send coupon to back end\r\n         * backend server must find out if the code there matches \r\n         * the ones in the database, if it does then apply discounts \r\n         * appropriately\r\n         */\r\n\t\tif (coupons.code){\r\n\t\t\tlet coupon = {...coupons};\r\n\t\t\ttry{\r\n\t\t\t\tcoupon.uid = user_account_state.user_account.uid;\r\n\t\t\t\tcoupon = JSON.stringify(coupon);\r\n\t\t\t\tAPIRequests.applyCouponCode(coupon).then(results => {\r\n\t\t\t\t\tconsole.log('coupon code results : ', results);\r\n\t\t\t\t\tif (results.status){\r\n\t\t\t\t\t\t// activate the discount only on the total amount\r\n\t\t\t\t\t\t// the app will then send the total amount into\r\n\t\t\t\t\t\t// the payment record and then save it back to server\r\n                    \r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t\t\tconsole.log(results.error.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}catch(error){\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t}              \r\n            \r\n\t\t}else{\r\n\t\t\tsetErrors({...errors, coupon_code_error : 'coupon code cannot be empty'});\r\n\t\t\tsetInline({message:'error applying coupon code'});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst apiFetch = async () => {\r\n\t\t\tlet uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tAPIRequests.retrieveCart(uid).then(Response => {\r\n\t\t\t\tconsole.log('Cart Items :', Response.cart_items);\r\n\t\t\t\tsetBasket(Response.cart_items);\r\n\t\t\t\tsetCart(Response.cart);\r\n\t\t\t}); \r\n\r\n\t\t};\r\n\r\n\t\tapiFetch().then(results => {\r\n\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetBasket([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst createPurchaseUnits = async () => {\r\n\t\t\tlet purchase_units = [];\r\n\t\t\tawait basket.forEach(purchase_item => {\r\n\t\t\t\tconsole.log('Purchase Item',purchase_item);\r\n\t\t\t\tpurchase_units.push({\r\n\t\t\t\t\tid_service_product: purchase_item.id_service_product,\r\n\t\t\t\t\tamount: {\r\n\t\t\t\t\t\tcurrency_code: 'USD',\r\n\t\t\t\t\t\tvalue: purchase_item.price\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn purchase_units;\r\n\t\t};\r\n\r\n\t\tcreatePurchaseUnits().then(purchase_units => {\r\n\t\t\ttry {\r\n\t\t\t\t// i have this try catch here because paypal button is misbehaving\r\n\t\t\t\twindow.paypal.Buttons({\r\n\t\t\t\t\tcreateOrder: (data, actions) => {\r\n\t\t\t\t\t\treturn actions.order.create({purchase_units: purchase_units});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonApprove: async (data, actions) => {\r\n\t\t\t\t\t\tconst order = await actions.order.capture();\r\n\t\t\t\t\t\tSetPaidFor(true);\r\n\t\t\t\t\t\tconsole.log(order);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).render(paypalRef);\r\n\t\t\t}catch(error){\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\r\n\t\t}); // end create purchase units\r\n      \r\n\t\treturn () => {\r\n        \r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{\r\n\t\t\t\tdisplay === 'shopping-basket' ?\r\n\t\t\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"box box-warning\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"box box-footer col-md-8\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i> Shopping Items\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"clear_items\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAPIRequests.deleteCart(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfirebase.auth.currentUser.uid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t).then(results => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (results.status === true) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCart(cart_init);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBasket([]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'cart items cleared',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Clear Items\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<table className=\"table table-responsive\">\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><strong><em>Item Name</em></strong></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><strong><em>Item Type</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Quantity</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Price</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Sub Total</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{basket.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\tbasket.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <BasketItem item={item} key={index}/>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"box box-warning\">\r\n                            There are not items in your shopping list\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t{inline.message ? (\r\n\t\t\t\t\t\t\t\t\t\t<InlineMessage\r\n\t\t\t\t\t\t\t\t\t\t\tmessage={inline.message}\r\n\t\t\t\t\t\t\t\t\t\t\tmessage_type={inline.message_type}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"box box-footer col-md-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-bag\"> </i> Check Out{' '}\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n                                            Sub Totals : R {cart.sub_total}0\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\"> Tax : R {cart.tax}.00</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\"> Total : R {cart.total}0</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"code\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Coupon Code...\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={coupons.code}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoupons({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...coupons,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{errors.coupon_code_error ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InlineError message={errors.coupon_code_error}/>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger margin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"applycode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => applyCouponCode(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-money\"> </i> Apply Code\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"reset\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoupons(coupon_init);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetErrors({coupon_code_error: ''});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetInline({message: '', message_type: 'info'});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Reset Code\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div ref={v => (paypalRef = v)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success margin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"checkout\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Send Invoice and Pay Via EFT or Make a Deposit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('checkout-eft')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-bag\"> </i> Checkout (EFT)\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tdisplay === 'checkout-eft' ?\r\n\t\t\t\t\t<CheckoutEFTPayMentDetails /> : null\r\n\t\t\t}\r\n\t\t</Fragment>\r\n\r\n\t);\r\n};\r\n\r\nconst PhysicalAddress = () => {\r\n\tconst [physical,setPhysical] = useState(physical_address_init);\r\n\tconst [errors,setErrors] = useState(physical_address_errors_init);\r\n\tconst [inline,setInline] = useState({message: '',message_type:'info'});\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_deliver_to = () => {\r\n\t\t\tif(Utils.isEmpty(physical.deliver_to)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tdeliver_to_error : 'Deliver to field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_stand = () => {\r\n\t\t\tif(Utils.isEmpty(physical.stand)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tstand_error : 'stand number field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_street_name = () => {\r\n\t\t\tif(Utils.isEmpty(physical.street_name)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tstreet_name_error : 'street name field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_city = () => {\r\n\t\t\tif(Utils.isEmpty(physical.city)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tcity_error : 'city name field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_province = () => {\r\n\t\t\tif(Utils.isEmpty(physical.province)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tprovince_error : 'province name field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_country = () => {\r\n\t\t\tif(Utils.isEmpty(physical.country)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tcountry_error : 'country field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_postal_code = () => {\r\n\t\t\tif(Utils.isEmpty(physical.postal_code)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tpostal_code_error:'postal code error field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst do_check = () => {\r\n\t\t\tcheck_deliver_to() ? isError = true : isError = isError;\r\n\t\t\tcheck_stand() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_street_name() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_city() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_province() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_country() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_postal_code() ? (isError = true) : (isError = isError);\r\n\r\n\t\t\treturn isError;\r\n\t\t};\r\n\r\n\t\treturn await do_check();\r\n\r\n\t};\r\n\r\n\tconst addPhysicalAddress = async e => {\r\n      \r\n\t\tlet physical_address = Object.assign({},physical);\r\n\t\tphysical_address.uid = user_account_state.user_account.uid;\r\n\t\tphysical_address = JSON.stringify(physical_address);\r\n\r\n\t\tawait APIRequests.savePhysicalAddress(physical_address).then(response => {\r\n\t\t\tif (response.status) {\r\n\t\t\t\tsetPhysical(response.payload);\r\n\t\t\t\tsetInline({message: 'successfully saved physical address',message_type: 'info'\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetInline({\r\n\t\t\t\t\tmessage: response.error.message,\r\n\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\t// load physical address for this user\r\n\t\tconst loadPhysicalAddress = async () => {\r\n\r\n\t\t\tlet seed = user_account_state.user_account.uid;        \r\n\t\t\tlet stateKey = settings.settings.localStorageKey + 'physical-address-' + seed + '-';\r\n\r\n\t\t\tawait APIRequests.fetchPhysicalAddress(seed,stateKey).then(physical => {\r\n\t\t\t\tsetPhysical(physical);\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tloadPhysicalAddress().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetPhysical(physical_address_init);\r\n\t\t\tsetErrors(physical_address_errors_init);\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3\r\n\t\t\t\t\t\tclassName=\"box-title\"\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t'an address where your service should be rendered or where you are located if a service is virtual'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-map-marker\"> </i> Delivery Address\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"deliver_to\"\r\n\t\t\t\t\t\t\tplaceholder=\"Deliver to, or a place where the service will be rendered...\"\r\n\t\t\t\t\t\t\tvalue={physical.deliver_to}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.deliver_to_error ? <InlineError message={errors.deliver_to_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"stand\"\r\n\t\t\t\t\t\t\tplaceholder=\"Stand Number ...\"\r\n\t\t\t\t\t\t\tvalue={physical.stand}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.stand_error ? <InlineError message={errors.stand_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"street_name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Street Name....\"\r\n\t\t\t\t\t\t\tvalue={physical.street_name}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.street_name_error ? <InlineError message={errors.street_name_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tplaceholder=\"City...\"\r\n\t\t\t\t\t\t\tvalue={physical.city}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.city_error ? <InlineError message={errors.city_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\t\t\tplaceholder=\"Province...\"\r\n\t\t\t\t\t\t\tvalue={physical.province}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.province_error ? <InlineError message={errors.province_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\tplaceholder=\"Country...\"\r\n\t\t\t\t\t\t\tvalue={physical.country}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.country_error ? <InlineError message={errors.country_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"postal_code\"\r\n\t\t\t\t\t\t\tplaceholder=\"Postal Code...\"\r\n\t\t\t\t\t\t\tvalue={physical.postal_code}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.postal_code_error ? <InlineError message={errors.postal_code_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-lg\"\r\n\t\t\t\t\t\t\tname=\"save_physical\"\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ?\r\n\t\t\t\t\t\t\t\t\tsetInline({message:'there was an error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t\t: addPhysicalAddress(e).then(response => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-save\"> </i> Add Physical Address\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\t\t\tname=\"reset\"\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetErrors(physical_address_errors_init);\r\n\t\t\t\t\t\t\t\tsetPhysical(physical_address_init);\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Reset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst ContactDetails = () => {\r\n\tconst [contact,setContact] = useState(contact_details_init);\r\n\tconst [errors,setErrors] = useState(contact_details_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\tconst checkErrors = async e  => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_tel = () => {\r\n\t\t\tif(Utils.isEmpty(contact.tel) === false){\r\n\t\t\t\tif(Utils.isTel(contact.tel) === false){\r\n\t\t\t\t\tsetErrors({\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\ttel_error : 'tel field is invalid'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\tif (Utils.isCell(contact.cell === false)) {\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tcell_error: 'cell field is invalid'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_fax = () => {\r\n\t\t\tif (Utils.isEmpty(contact.fax) === false){\r\n\t\t\t\tif (Utils.isFax(contact.fax === false)) {\r\n\t\t\t\t\tsetErrors({\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\tfax_error: 'fax field is invalid'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif (Utils.validateEmail(contact.email) === false) {\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\temail_error: 'email field is invalid'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_website = () => {\r\n\t\t\tif(Utils.isEmpty(contact.website) === false){\r\n\t\t\t\tif(Utils.isUrl(contact.website) === false){\r\n\t\t\t\t\tsetErrors({\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\twebsite_error : 'website address is invalid'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst do_check = () => {\r\n\t\t\tcheck_tel() ? isError = true : isError = isError;\r\n\t\t\tcheck_cell() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_fax() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_email() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_website() ? (isError = true) : (isError = isError);\r\n\t\t\treturn isError;\r\n\t\t};\r\n\r\n\t\treturn await do_check();\r\n\t};\r\n\r\n\tconst onAddContactDetails = async e => {\r\n\t\tlet contact_details = Object.assign({},contact);\r\n\t\tcontact_details.uid = user_account_state.user_account.uid;\r\n\t\tcontact_details = JSON.stringify(contact_details);\r\n\r\n\t\tAPIRequests.saveContactDetails(contact_details).then(response => {\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContact(response.payload);\r\n\t\t\t\tsetInline({message:'successfully saved contact details',message_type:'info'});\r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:response.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message: error.message,message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst fetchContacts = async () => {\r\n\t\t\tlet seed = user_account_state.user_account.uid;\r\n\t\t\tlet stateKey = settings.settings.localStorageKey + 'contact-details-' + seed + '-';\r\n\r\n\t\t\tawait APIRequests.fetchContactDetails(seed, stateKey).then(response => {\r\n\t\t\t\tsetContact(response);\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchContacts().then(result => console.log(result));\r\n\r\n\t\treturn () => {\r\n\t\t\tsetContact(contact_details_init);\r\n\t\t\tsetErrors(contact_details_errors_init);\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-mobile-phone'> </i>{' '}\r\n                        Contact Details\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-group'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='tel'\r\n\t\t\t\t\t\t\tplaceholder='Tel...'\r\n\t\t\t\t\t\t\tvalue={contact.tel}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='cell'\r\n\t\t\t\t\t\t\tplaceholder='Cell...'\r\n\t\t\t\t\t\t\tvalue={contact.cell}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='fax'\r\n\t\t\t\t\t\t\tplaceholder='Fax...'\r\n\t\t\t\t\t\t\tvalue={contact.fax}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.fax_error ? <InlineError message={errors.fax_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tplaceholder='Email...'\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='url'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='website'\r\n\t\t\t\t\t\t\tplaceholder='Website Address...'\r\n\t\t\t\t\t\t\tvalue={contact.website}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='save-contacts'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ?\r\n\t\t\t\t\t\t\t\t\tsetInline({message: 'error processing contact form'})\r\n\t\t\t\t\t\t\t\t\t: onAddContactDetails(e).then(result => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n                            Save Contacts\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetContact(contact_details_init);\r\n\t\t\t\t\t\t\t\tsetErrors(contact_details_errors_init);\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n                            Reset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst PaymentDetails = () => {\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst CheckOut = () => {\r\n\tconst [display,setDisplay] = useState('physical_address');\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n                                <i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"physical_address\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('physical_address')}\r\n\t\t\t\t\t\t\t\t\t>\r\n                      Physical Address\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"contact_details\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('contact_details')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"shopping_basket\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('shopping_basket')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{display === 'physical_address' ? <PhysicalAddress /> : ''}\r\n\t\t\t\t{display === 'contact_details' ? <ContactDetails /> : ''}\r\n\t\t\t\t{display === 'shopping_basket' ? <ShoppingBasket /> : ''}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default CheckOut;\r\n","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,\r\n  service_init\r\n} from \"../market-constants\";\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport * as apiRequests from '../api-requests';\r\nimport { Utils } from '../../../utilities';\r\nimport { api_products_endpoint } from '../../../constants/routes';\r\n\r\n\r\n\r\nconst Store = () => {\r\n    const [store, setStore] = useState(store_init);\r\n    const [errors, setErrors] = useState(store_errors_init);\r\n    const [inline, setInline] = useState({ message: \"\", message_type: \"info\" });\r\n    const [my_form,setForm] = useState({primary : 'Add Store',reset:'Reset'});\r\n    const { user_account_state } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      \r\n      const check_store_name = () => {\r\n        if(Utils.isEmpty(store.store_name)){\r\n          setErrors({...errors,store_name_error : 'store name field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_description = () => {\r\n        if(Utils.isEmpty(store.description)){\r\n          setErrors({...errors,description_error : 'desciprition field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_company_name = () => {\r\n        if(Utils.isEmpty(store.company_name)){\r\n          setErrors({...errors,company_name_error: 'company name field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_physical_address = () => {\r\n        if(Utils.isEmpty(store.physical_address)){\r\n          setErrors({...errors,physical_address_error : 'physical address field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_tel = () => {\r\n        if(Utils.isTel(store.tel) === false){\r\n          setErrors({...errors,tel_error : 'telephone field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_cell = () => {\r\n        if(Utils.isCell(store.cell) === false){\r\n          setErrors({...errors,cell_error : 'cell number field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_email = () => {\r\n        if(Utils.validateEmail(store.email) === false){\r\n          setErrors({...errors,email_error : 'email field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n       const check_website = () => {\r\n         if(!Utils.isEmpty(store.website)){\r\n         if(Utils.isUrl(store.website) === false){\r\n           setErrors({...errors,website_error:\"website field is invalid\"});\r\n           return true;\r\n         }\r\n         return false;\r\n        }\r\n        return false;         \r\n       }\r\n\r\n       const do_check = () => {\r\n         check_store_name() ? isError = true : isError = isError;\r\n         check_description() ? isError = true : isError = isError;\r\n         check_company_name() ? isError = true : isError = isError;\r\n         check_physical_address() ? isError = true : isError = isError;\r\n         check_tel() ? isError = true : isError = isError;\r\n         check_cell() ? isError = true : isError = isError;\r\n         check_email() ? isError = true : isError = isError;\r\n         check_website() ? isError = true : isError = isError;\r\n\r\n         return isError;\r\n       }\r\n\r\n       return do_check();\r\n    };\r\n\r\n    const addStore = async e => {\r\n        let uid = user_account_state.user_account.uid;\r\n        let client_store = {...store};\r\n        client_store.uid = uid;\r\n        client_store = JSON.stringify(client_store);\r\n        apiRequests.addStore(client_store).then(response => {\r\n          if(response.status){\r\n            setStore(response.payload);\r\n            setInline({message:'successfully updated store',message_type:'info'});\r\n          }else{\r\n            setInline({message:'error adding new store',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n\r\n        return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n      const fetchStore = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n        await apiRequests.fetchStore(uid).then(response => {\r\n          if (response.status) {\r\n            setStore(response.payload);\r\n            setForm({...my_form,primary:'Update Store'});\r\n          } else {\r\n            console.log(response.error.message);\r\n          }\r\n        });\r\n        return true;\r\n      };\r\n\r\n      fetchStore().then(success => {console.log('Store fetched')});\r\n\r\n      return () => {\r\n        setStore(store_init);\r\n        setErrors(store_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, []);\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <i className='fa fa-shopping-basket'> </i>  Store Manager</h3>\r\n\r\n            <div className='box-tools'>\r\n            </div>\r\n          </div>\r\n          <div className='box box-footer'>\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>Store Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"store_name\"\r\n                  value={store.store_name}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.store_name_error ? <InlineError message={errors.store_name_error} /> : '' }\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"description\"\r\n                  value={store.description}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Company Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"company_name\"\r\n                  value={store.company_name}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.company_name_error ? <InlineError message={errors.company_name_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Physical Address</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"physical_address\"\r\n                  value={store.physical_address}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.physical_address_error ? <InlineError message={errors.physical_address_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Tel</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"tel\"\r\n                  value={store.tel}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Cell</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"cell\"\r\n                  value={store.cell}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={store.email}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"website\"\r\n                  value={store.website}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n              </div>\r\n              <div className='form-group'>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-success btn-lg'\r\n                    name='save-company'\r\n                    onClick={e => checkErrors(e).then(isError => {\r\n                      isError ? \r\n                        setInline({message:'error processing form', message_type:'error'})\r\n                      : addStore(e).then(response => {\r\n                        console.log(response);\r\n                      })\r\n                    })}\r\n                  >\r\n                    <i className='fa fa-save'> </i> {' '}\r\n                    {my_form.primary}\r\n                    \r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-warning btn-lg'\r\n                    name='reset'\r\n                    onClick={e => {\r\n                      setInline({message:'',message_type:'info'});\r\n                      setErrors(store_errors_init);\r\n                      setStore(store_init);\r\n                    }}\r\n                  >\r\n                    <i className='fa fa-eraser'> </i> {' '}\r\n                    Reset\r\n                  </button>\r\n              </div>\r\n              <div className='form-group'>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StoreManager = () => {\r\n    const[display,setDisplay] = useState('store');\r\n    const{user_account_state} = useContext(UserAccountContext);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-dashboard\"> </i> Store Manager\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool\"\r\n                name=\"store\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-product-hunt\"> </i> Store Manager\r\n              </button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {display === \"store\" ? <Store /> : \"\"}\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default StoreManager;\r\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,  \r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport { api_products_endpoint } from \"../../../constants/routes\";\r\nimport { extended_user } from \"../../Auth/auth-constants\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ManageProduct = ({ product }) => {\r\n  const [form_product, setProduct] = useState(products_init);\r\n  const [categories, setCategories] = useState([]);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const onUpdate = async e => {\r\n    let product = { ...form_product };\r\n    product = JSON.stringify(product);\r\n    await apiRequests\r\n      .updateProduct(product)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"product successfully updated\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  const onDeleteProduct = async e => {\r\n    let product = { ...form_product };\r\n\r\n    await apiRequests\r\n      .onDeleteProduct(product)\r\n      .then(result => {\r\n        if (result.status) {\r\n          setProduct(result.payload);\r\n          setInline({\r\n            message: \"product successfully deleted\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: result.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let category_type = \"products\";\r\n    apiRequests\r\n      .fetchCategories(category_type)\r\n      .then(results => {\r\n        setCategories(results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setProduct(product);\r\n    return () => {\r\n      setProduct(products_init);\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Product Manager</h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-danger\"\r\n              name=\"delete-product\"\r\n              onClick={e => onDeleteProduct(e)}\r\n            >\r\n              <i className=\"fa fa-eraser\"> </i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <label>Product Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"product_name\"\r\n                value={form_product.product_name}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={form_product.description}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={form_product.price}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"category_id\"\r\n                value={form_product.category_id}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              >\r\n                {categories.map(category => {\r\n                  return (\r\n                    <option value={category.category_id}>\r\n                      {category.sub_category}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg margin\"\r\n                name=\"update-product\"\r\n                onClick={e => onUpdate(e)}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Update Product\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg margin\"\r\n                name=\"update-product\"\r\n                onClick={e => {\r\n                  setProduct(product);\r\n                  setInline({ message: \"\", message_type: \"info\" });\r\n                }}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Undo Changes\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {inline.message ? (\r\n                <InlineMessage\r\n                  message={inline.message}\r\n                  message_type={inline.message_type}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// id = ndb.StringProperty() # id of this request\r\n// product_id = ndb.StringProperty() # the same as the product id in the product table\r\n// client_uid = ndb.StringProperty() # user id of the client who requested the product\r\n// total_requested = ndb.StringProperty(default='1')\r\n// date_requested = ndb.StringProperty()\r\n// products_sent = ndb.BooleanProperty(default=False)\r\n// date_sent = ndb.StringProperty()\r\n\r\n\r\n{/* <td>Client</td>\r\n<td>Requests</td>\r\n<td>Date Requested</td>\r\n<td>Sent</td>\r\n<td>Sent Date</td> */}\r\n\r\nconst RequestItem = ({request}) => {\r\n    const [client,setClient] = useState(extended_user);\r\n    const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n    const fetchUserByID = async uid => {\r\n        await apiRequests.fetchUserByID(uid).then(results => {\r\n            if(results.status){\r\n                setClient(results.payload);\r\n            }else{\r\n                setInline({message:'there was an error fetching client details',message_type:'error'});\r\n                setClient(extended_user);\r\n            }\r\n        }).catch(error => {\r\n            setInline({message:error.message,message_type:'error'});\r\n            setClient(extended_user);\r\n        });\r\n        return true;\r\n    };\r\n\r\n    return(\r\n        <tr>\r\n            <td>{\r\n                fetchUserByID(request.client_uid).then(result => {\r\n                    if (result){\r\n                        return <span title={client.cell}> {client.name} - {client.surname} </span>;\r\n                    }\r\n                })\r\n            }</td>\r\n            <td>{request.total_requested}</td>\r\n            <td>{request.date_requested}</td>\r\n            <td>{request.products_sent ? 'Yes': 'No'}</td>\r\n            <td>{request.date_sent}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProductRequests = ({product}) => {\r\n    const [requests,setRequests] = useState([])\r\n    const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchRequestsAPI = async () => {\r\n            let uid = user_account_state.user_account.uid;\r\n            let id = product.id;\r\n            apiRequests.fetchProductRequests(uid,id).then(results => {\r\n                if(results.status){\r\n                    setRequests(results.payload);                    \r\n                }else{\r\n                    setRequests([]);\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n            return true;\r\n        };\r\n        \r\n        fetchRequestsAPI().then(result => {\r\n          console.log(result);\r\n        });\r\n\r\n        return () => {\r\n            setInline({message:'',message_type:'inf'});\r\n            setRequests([]);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> Product Requests</h3>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className='row'>\r\n                \r\n                    <ul className='list-group'>\r\n                        <li className='list-group-item'> Product Name : {product.product_name}</li>\r\n                        <li className='list-group-item'> Product Price : R {product.price}.00</li>\r\n                        <li className='list-group-item'> Description : {product.description}</li>                \r\n                    </ul> \r\n                    <hr></hr> \r\n            </div>\r\n            <div className='row'>\r\n                  <table className='table table-responsive'>\r\n                      <thead>\r\n                          <tr>\r\n                              <td>Client</td>\r\n                              <td>Requests</td>\r\n                              <td>Date Requested</td>\r\n                              <td>Sent</td>\r\n                              <td>Sent Date</td>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {requests.map(request => {\r\n                              return <RequestItem request={request} key={request.id} />;\r\n                          })}\r\n                      </tbody>\r\n                  </table>\r\n            </div>\r\n          </div>\r\n        </div>            \r\n      </Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst ShowProduct = ({ product }) => {\r\n  const [display, setDisplay] = useState(\"details\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-primary\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">{product.product_name}</h3>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Product Name : <a href=\"#\"> {product.product_name} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Product Price : <a href=\"#\"> {product.price} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Active : <a href=\"#\">{product.active ? \"True\" : \"False\"}</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"details\"\r\n                  onClick={e => setDisplay(\"details\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"show-sales\"\r\n                  onClick={e => setDisplay(\"show-sales\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Show Sales\r\n                </button>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"product-requests\"\r\n                  onClick={e => setDisplay(\"product-requests\")}\r\n                >\r\n                  <i className=\"fa fa-inbox\"> </i> Product Requests\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"manage-products\"\r\n                  onClick={e => setDisplay(\"manage-products\")}\r\n                >\r\n                  <i className=\"fa fa-dashboard\"> </i> Manage Product\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            {display === \"details\" ? (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    value={product.description}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"polaroid\">\r\n                  <img src={product.product_art} className=\"pola-image\" />\r\n                </div>\r\n              </Fragment>\r\n            ) : null}\r\n            {display === \"manage-products\" ? (\r\n              <ManageProduct product={product} />\r\n            ) : null}\r\n            {display === 'product-requests' ? <ProductRequests product={product} />  : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ProductItem = ({ product, onOpenProduct }) => {\r\n  return (\r\n    <Fragment>\r\n      <tr>\r\n        <td\r\n          className=\"btn btn-block btn-outline-primary margin\"\r\n          onClick={e => {\r\n            let id = product.id;\r\n            onOpenProduct(id);\r\n          }}\r\n        >\r\n          {product.product_name}\r\n        </td>\r\n        <td>{product.description}</td>\r\n        <td>{product.price}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [product, setProduct] = useState(products_init);\r\n\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const onOpenProduct = id => {\r\n    setProduct(products.find(product => product.id === id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchProductsAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests.fetchUserProductsAPI(uid).then(results => {\r\n          console.log(results);\r\n          setProducts(results);\r\n        }).catch(error => {\r\n          setProducts([]);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchProductsAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setProducts([]);\r\n      setProduct(products_init);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Products</h3>\r\n        </div>\r\n        {product.id ? (\r\n          <ShowProduct product={product} />\r\n        ) : (\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <td>Product Name</td>\r\n                <td>Description</td>\r\n                <td>Price</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => {\r\n                return (\r\n                  <ProductItem\r\n                    onOpenProduct={onOpenProduct}\r\n                    product={product}\r\n                    key={product.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Products;","\r\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,\r\n  service_init\r\n  \r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport { api_products_endpoint } from \"../../../constants/routes\";\r\n\r\nimport { extended_user } from \"../../Auth/auth-constants\";\r\n\r\n\r\nconst ManageService = ({ service }) => {\r\n  const [form_service, setService] = useState(service_init);\r\n  const [categories, setCategories] = useState([]);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const onUpdate = async e => {\r\n    let service = { ...form_service };\r\n    service = JSON.stringify(service);\r\n    await apiRequests\r\n      .updateService(service)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setService(results.payload);\r\n          setInline({\r\n            message: \"service successfully updated\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  const onDeleteService = async e => {\r\n    let service = { ...form_service };\r\n\r\n    await apiRequests\r\n      .onDeleteService(service)\r\n      .then(result => {\r\n        if (result.status) {\r\n          setService(result.payload);\r\n          setInline({\r\n            message: \"service successfully deleted\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: result.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    apiRequests\r\n      .fetchCategories(category_type)\r\n      .then(results => {\r\n        setCategories(results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setService(service);\r\n    return () => {\r\n      setService(service_init);\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Service Manager</h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-danger\"\r\n              name=\"delete-product\"\r\n              onClick={e => onDeleteService(e)}\r\n            >\r\n              <i className=\"fa fa-eraser\"> </i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <label>Service Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"service_name\"\r\n                value={form_service.service_name}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={form_service.description}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={form_service.price}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"category_id\"\r\n                value={form_service.category_id}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              >\r\n                {categories.map(category => {\r\n                  return (\r\n                    <option value={category.category_id}>\r\n                      {category.sub_category}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg margin\"\r\n                name=\"update-service\"\r\n                onClick={e => onUpdate(e)}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Update Service\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg margin\"\r\n                name=\"reset_service\"\r\n                onClick={e => {\r\n                  setService(service);\r\n                  setInline({ message: \"\", message_type: \"info\" });\r\n                }}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Undo Changes\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {inline.message ? (\r\n                <InlineMessage\r\n                  message={inline.message}\r\n                  message_type={inline.message_type}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst RequestItem = ({ request }) => {\r\n  const [client, setClient] = useState(extended_user);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const fetchUserByID = async uid => {\r\n    console.log('Fetching User',uid);\r\n    await apiRequests\r\n      .fetchUserByID(uid)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setClient(results.payload);\r\n        } else {\r\n          setInline({\r\n            message: \"there was an error fetching client details\",\r\n            message_type: \"error\"\r\n          });\r\n          setClient(extended_user);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n        setClient(extended_user);\r\n      });\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {fetchUserByID(request.client_uid).then(result => {\r\n          if (result) {\r\n            return (\r\n              <span title={client.cell}>\r\n                {\" \"}\r\n                {client.name} - {client.surname}{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </td>\r\n      <td>{request.total_requested}</td>\r\n      <td>{request.date_requested}</td>\r\n      <td>{request.products_sent ? \"Yes\" : \"No\"}</td>\r\n      <td>{request.date_sent}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ServiceRequests =({service}) => {\r\n     const [requests, setRequests] = useState([]);\r\n     const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n     const { user_account_state } = useContext(UserAccountContext);\r\n\r\n     useEffect(() => {\r\n       const fetchRequestsAPI = async () => {\r\n         let uid = user_account_state.user_account.uid;\r\n         let id = service.id;\r\n\r\n         apiRequests\r\n           .fetchProductRequests(uid, id)\r\n           .then(results => {\r\n             if (results.status) {\r\n               setRequests(results.payload);\r\n             } else {\r\n               setRequests([]);\r\n             }\r\n           })\r\n           .catch(error => {\r\n             console.log(error.message);\r\n           });\r\n\r\n         return true;\r\n       };\r\n\r\n       fetchRequestsAPI().then(result => {\r\n         console.log(result);\r\n       });\r\n\r\n       return () => {\r\n         setInline({ message: \"\", message_type: \"inf\" });\r\n         setRequests([]);\r\n       };\r\n     }, []);\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> Service Requests</h3>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className=\"row\">\r\n              \r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Service Name : {service.service_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">{\" \"} Service Price : R {service.price}.00</li>\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Description : {service.description}\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <table className=\"table table-responsive\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Client</td>\r\n                      <td>Requests</td>\r\n                      <td>Date Requested</td>\r\n                      <td>Sent</td>\r\n                      <td>Sent Date</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {requests.map(request => {\r\n                      return <RequestItem request={request} key={request.id} />;\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        \r\n      </Fragment>\r\n    );\r\n};\r\n\r\nconst ShowService = ({ service }) => {\r\n  const [display, setDisplay] = useState(\"details\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-primary\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">{service.service_name}</h3>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Service Name : <a href=\"#\"> {service.service_name} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Service Price : <a href=\"#\"> {service.price} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Active : <a href=\"#\">{service.active ? \"True\" : \"False\"}</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"details\"\r\n                  onClick={e => setDisplay(\"details\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"show-sales\"\r\n                  onClick={e => setDisplay(\"show-sales\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Show Sales\r\n                </button>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"service-requests\"\r\n                  onClick={e => setDisplay(\"service-requests\")}\r\n                >\r\n                  <i className=\"fa fa-inbox\"> </i> Service Requests\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"manage-services\"\r\n                  onClick={e => setDisplay(\"manage-services\")}\r\n                >\r\n                  <i className=\"fa fa-dashboard\"> </i> Manage service\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            {display === \"details\" ? (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    value={service.description}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"polaroid\">\r\n                  <img src={service.service_art} className=\"pola-image\" />\r\n                </div>\r\n              </Fragment>\r\n            ) : null}\r\n            {display === \"manage-services\" ? (\r\n              <ManageService service={service} />\r\n            ) : null}\r\n            {display === 'service-requests' ? \r\n              <ServiceRequests service={service}/> : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ServiceItem = ({ service, onOpenService }) => {\r\n  return (\r\n    <tr>\r\n      <td\r\n        className=\"btn btn-block btn-outline-primary margin\"\r\n        onClick={e => {\r\n          let id = service.id;\r\n          onOpenService(id);\r\n        }}\r\n      >\r\n        {service.service_name}\r\n      </td>\r\n      <td>{service.description}</td>\r\n      <td>{service.price}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Services = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [service, setService] = useState(service_init);\r\n\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const onOpenService = id => {\r\n    setService(services.find(service => service.id === id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchServicesAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests\r\n        .fetchUserServicesAPI(uid)\r\n        .then(results => {\r\n          console.log(results);\r\n          setServices(results);\r\n        })\r\n        .catch(error => {\r\n          setServices([]);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchServicesAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setServices([]);\r\n      setService(service_init);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Services</h3>\r\n        </div>\r\n        {service.id ? (\r\n          <ShowService service={service} />\r\n        ) : (\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <td>Service Name</td>\r\n                <td>Description</td>\r\n                <td>Price</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {services.map(service => {\r\n                return (\r\n                  <ServiceItem\r\n                    onOpenService={onOpenService}\r\n                    service={service}\r\n                    key={service.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default Services;","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init\r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport {firebase} from '../../../firebase';\r\nimport {Capitalize} from 'react-lodash';\r\n\r\nconst CreatePayment = () => {\r\n  const [payment, setPayment] = useState(payment_init);\r\n  const [errors, setErrors] = useState(payment_errors_init);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n    const check_amount = () => {\r\n      if (Utils.isMoney(payment.amount) === false) {\r\n        setErrors({ ...errors, amount_error: \"amount field is invalid\" });\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const check_transaction_type = e => {\r\n      if (Utils.isEmpty(payment.transaction_type)) {\r\n        setErrors({\r\n          ...errors,\r\n          transaction_type_error: \"please select transaction type\"\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const do_check = e => {\r\n      check_amount() ? (isError = true) : (isError = isError);\r\n      check_transaction_type() ? (isError = true) : (isError = isError);\r\n\r\n      return isError;\r\n    };\r\n\r\n    return await do_check(e);\r\n  };\r\n\r\n  const createTransaction = async e => {\r\n    let client_transaction = { ...payment };\r\n    client_transaction.uid = user_account_state.user_account.uid;\r\n    client_transaction = JSON.stringify(client_transaction);\r\n    await apiRequests\r\n      .createTransaction(client_transaction)\r\n      .then(Response => {\r\n        if (Response.status) {\r\n          setPayment(Response.payload);\r\n          setInline({\r\n            message: \"successfully created a new transaction\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: Response.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-mastercard\"> </i> Create Transaction\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={payment.amount}\r\n              onChange={e =>\r\n                setPayment({ ...payment, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.amount_error ? (\r\n              <InlineError message={errors.amount_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"transaction_type\"\r\n              value={payment.transaction_type}\r\n              onChange={e =>\r\n                setPayment({ ...payment, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={\"deposit\"}>Deposit</option>\r\n              <option value={\"withdrawal\"}>Withdrawal</option>\r\n            </select>\r\n            {errors.transaction_type_error ? (\r\n              <InlineError message={errors.transaction_type_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"create_transaction\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  isError\r\n                    ? setInline({\r\n                        message: \"there was an error processing form\"\r\n                      })\r\n                    : createTransaction(e).then(result => {\r\n                        console.log(result);\r\n                      });\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-dollar\"> </i> Create Transaction\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst Deposit = ({ transaction }) => {\r\n  const [deposit, setDeposit] = useState({\r\n    uid: '',\r\n    transaction_id : '',\r\n    proof_of_deposit : '',\r\n  });\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      const uploadTask = firebase.storage.ref(`deposits/${user_account_state.user_account.uid}/${transaction.id}/${image.name}`).put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`deposits/${user_account_state.user_account.uid}/${transaction.id}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setDeposit({\r\n                ...deposit,\r\n                proof_of_deposit: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'upload proof of deposit',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeProof = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const ProcessPayment = e => {\r\n      let uid = user_account_state.user_account.uid;\r\n      // rewrite this\r\n      let deposited = {...deposit};\r\n      deposited.uid = uid;\r\n      deposited.transaction_id = transaction.id;\r\n\r\n      apiRequests.processDeposit(deposited).then(result => {\r\n        if(result.status){\r\n          setDeposit(result.payload);\r\n          setInline({message:'successfully sent deposit for processing'});\r\n        }else{\r\n          setInline({message:result.error.message,message_type:'error'});\r\n        }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  };\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-amex\"> </i> Deposit\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button type=\"button\" className=\"btn btn-box-tool\" name=\"eft\">\r\n              <i className=\"fa fa-bank\"> </i> EFT\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-box-tool\" name=\"paypal\">\r\n              <i className=\"fa fa-paypal\"> </i> PayPal / Credit Card\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={transaction.date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Amount </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={transaction.amount}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.processed}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.transaction_type}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Proof of Payment</label>\r\n            <input type=\"file\" className=\"form-control\" name=\"proof\" onChange={e => onChangeProof(e)}  />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-sm\"\r\n              name=\"upload-proof-payment\"\r\n              onClick={e => doUpload(e).then(result => {\r\n                console.log(result)\r\n              })}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-cloud-upload\"> </i> Upload Proof of Payment\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <label>Proof of Payment</label>\r\n              <img\r\n                src={deposit.proof_of_deposit || placeholder}\r\n                className=\"pola-image\"\r\n                width=\"300\"\r\n                height=\"300\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <button\r\n                type='button'\r\n                className='btn btn-success btn-lg'\r\n                name='process-payment'\r\n                onClick={e => ProcessPayment(e)}\r\n              >\r\n                <i className='fa fa-credit-card'> </i>{\" \"}\r\n                Process Payment\r\n\r\n              </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Withdrawal = ({ transaction }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-amex\"> </i> Withdrawal\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={transaction.date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Amount </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={transaction.amount}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.processed}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.transaction_type}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ShowTransaction = ({ transaction }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-info\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Transaction Details</h3>\r\n        </div>\r\n        {transaction.transaction_type === \"withdrawal\" ? (\r\n          <Withdrawal transaction={transaction} />\r\n        ) : (\r\n          <Deposit transaction={transaction} />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst TransactionItem = ({\r\n  transaction,\r\n  OpenTransaction,\r\n  RemoveTransaction\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{transaction.date}</td>\r\n      <td>R {transaction.amount}.00</td>\r\n      <td>{<Capitalize string={transaction.transaction_type} /> }</td>\r\n      <td>{transaction.processed ? \"Yes\" : \"No\"}</td>      \r\n        {\" \"}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm margin\"\r\n          name={transaction.id}\r\n          onClick={e => {\r\n            let id = transaction.id;\r\n            RemoveTransaction(id);\r\n          }}\r\n          title=\"Delete\"\r\n        >\r\n          <i className=\"fa fa-cut\"> </i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          name={transaction.id}\r\n          onClick={e => {\r\n            let id = transaction.id;\r\n            OpenTransaction(id);\r\n          }}\r\n          title=\"Open\"\r\n        >\r\n          <i className=\"fa fa-folder-open\"> </i>\r\n        </button>\r\n      \r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Transactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [transaction, setTransaction] = useState(payment_init);\r\n  const [display, setDisplay] = useState(\"transaction-list\");\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const OpenTransaction = id => {\r\n    let found_transaction = transactions.find(\r\n      transaction => transaction.id === id\r\n    );\r\n    setTransaction(found_transaction);\r\n    //fire a condition to open a transaction\r\n    setDisplay(\"show-transaction\");\r\n  };\r\n\r\n  const RemoveTransaction = id => {\r\n    let uid = user_account_state.user_account.uid;\r\n    apiRequests.removeTransaction(id, uid).then(Response => {\r\n        if (Response.status) {\r\n          setTransactions(Response.payload);\r\n        } else {\r\n          setInline({ message: Response.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTransactionsAPI = async () => {\r\n      const uid = user_account_state.user_account.uid;\r\n      apiRequests\r\n        .fetchTransactions(uid)\r\n        .then(Response => {\r\n          if (Response.status) {\r\n            setTransactions(Response.payload);\r\n            console.log(\"Transactions Fetched\", Response.payload);\r\n          } else {\r\n            console.log(\"Transactions\", Response.error);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Transactions\", error.message);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchTransactionsAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setTransaction(payment_init);\r\n      setTransactions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"box box-body\">\r\n      <div className=\"box box-header\">\r\n        <h3 className=\"box-title\">\r\n          <i className=\"fa fa-cc-diners-club\"> </i> Transactions\r\n        </h3>\r\n\r\n      </div>\r\n\r\n      {display === \"show-transaction\" ? (\r\n        <ShowTransaction transaction={transaction} />\r\n      ) : (\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <td>Date</td>\r\n              <td>Amount</td>\r\n              <td>Transaction Type</td>\r\n              <td>Processed</td>\r\n              <td>Control</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map(transaction => {\r\n              return (\r\n                <TransactionItem\r\n                  RemoveTransaction={RemoveTransaction}\r\n                  OpenTransaction={OpenTransaction}\r\n                  transaction={transaction}\r\n                  key={transaction.id}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Date</td>\r\n              <td>Amount</td>\r\n              <td>Transaction Type</td>\r\n              <td>Processed</td>\r\n              <td>Control</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Payments = () => {\r\n  const [display, setDisplay] = useState(\"transactions\");\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-paypal\"> </i> Payments\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"transactions\"\r\n                    onClick={e => setDisplay(\"transactions\")}\r\n                  >\r\n                    <i className=\"fa fa-cc-amex\"> </i> Transactions\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"create-payment\"\r\n                    onClick={e => setDisplay(\"create-payment\")}\r\n                  >\r\n                    <i className=\"fa fa-cc-amex\"> </i> Create Transaction\r\n                  </li>\r\n                </ul>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display === \"transactions\" ? <Transactions /> : \"\"}\r\n        {display === \"create-payment\" ? <CreatePayment /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default Payments","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\t\r\n\t,    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment,createContext,useReducer,useContext } from 'react';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport {routes} from '../../constants';\r\nimport Header from '../Layout/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport About from '../About/About';\r\nimport Contact from '../Contact/Contact';\r\n\r\nimport Login from '../Auth/Login/Login';\r\nimport Logout from '../Auth/Logout/Logout';\r\nimport SignUp from '../Auth/Signup/Signup';\r\nimport SideBar from '../Layout/SideBar/SideBar';\r\nimport Footer from '../Layout/Footer/Footer';\r\nimport Forget from '../Auth/Forget/Forget';\r\nimport Market from '../Market/Market';\r\nimport Market_Products from '../Market/Products/Products';\r\nimport Market_Services from '../Market/Service/Services';\r\n\r\n\r\nimport MyMarket from '../Market/MyMarket';\r\n\r\n\r\n\r\nimport UserAccountContextProvider from '../../context/UserAccount/userAccountContext';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport Blog from '../Blog/Blog';\r\nimport Chat from '../Chat/Chat';\r\n\r\nimport SMS,{SMSBalances,SMSContacts,SMSMessages} from '../SMS/SMS';\r\n\r\nimport Account from '../Account/Account';\r\n\r\nimport CheckOut from '../Market/CheckOut/CheckOut';\r\nimport StoreManager from '../Market/StoreManager/StoreManager';\r\nimport Products from '../Market/StoreManager/ProductsManager';\r\nimport Services from '../Market/StoreManager/ServiceManager';\r\n\r\nimport Payments from '../Market/Transactions/Transactions';\r\n\r\n\r\nexport default function App () {\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<UserAccountContextProvider>\r\n      \r\n\t\t\t<Fragment>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t{/* Header  Component*/}\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t{/* Sidebar Component */}\r\n\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t{/* Body and Main Page Routes */}\r\n\t\t\t\t\t<div className=\"content-wrapper\">\r\n\t\t\t\t\t\t<section className=\"content-header\">\r\n\t\t\t\t\t\t\t<section className=\"content\">\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.home_page} component={Home} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.about_page} component={About} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.contact_page} component={Contact} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.login_page} component={Login} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.logout_page} component={Logout} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.signup_page} component={SignUp} />\r\n\t\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\t\tpath={routes.forget_password_page}\r\n\t\t\t\t\t\t\t\t\tcomponent={Forget}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={routes.market_page} component={Market} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.market_products_page} component={Market_Products} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.market_services_page} component={Market_Services} />\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Route path={routes.blog_page} component={Blog} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.chat_page} component={Chat} />\r\n\r\n\t\t\t\t\t\t\t\t<Route path={routes.sms_page} component={SMS} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.sms_account} component={SMSBalances} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.sms_contacts} component={SMSContacts} />\r\n\t\t\t\t\t\t\t\t<Route path={routes.sms_messages} component={SMSMessages} />\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Route path={routes.dashboard_page} component={Dashboard} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.admin_page} component={Account} />\r\n\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.check_out_page} component={CheckOut} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.manage_my_shop} component={StoreManager} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.store_manager_products} component={Products} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.store_manager_services} component={Services} />\r\n\t\t\t\t\t\t\t\t<Route exact path={routes.transactions_page} component={Payments} />\r\n\t\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\t\tpath={routes.my_market_products}\r\n\t\t\t\t\t\t\t\t\tcomponent={MyMarket}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* Footer Component  */}\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</Router>\r\n\t\t\t</Fragment>\r\n\t\t</UserAccountContextProvider>\r\n\t);\r\n}\r\n"],"sourceRoot":""}