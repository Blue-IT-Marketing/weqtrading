{"version":3,"sources":["constants/routes.js","constants/program_constants.js","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","actions/userAccountActions/index.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","utilities/index.js","actions/walletActions/index.js","reducers/profileReducers/accountDetailsReducer.js","context/UserAccount/actions.js","context/UserAccount/userAccountContext.js","components/Auth/auth-constants.js","components/Auth/auth-api.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Forms/InlineError.jsx","components/Contact/ThisContactForm.jsx","components/Contact/ContactDetails.jsx","components/Contact/Contact.jsx","components/Input/Input.js","components/Forms/InlineMessage.jsx","components/Auth/Login/Login.jsx","components/Auth/Logout/Logout.jsx","components/Auth/Signup/Signup.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/market-constants.js","components/Market/api-requests.js","components/Market/Products/Products.jsx","components/Market/Service/Services.jsx","components/Market/Market.jsx","components/Market/MyMarket.jsx","components/Dashboard/dashboard-api.js","components/Dashboard/Dashboard.jsx","components/Blog/articles.js","components/Blog/Blog.jsx","components/Account/Account.jsx","components/Market/CheckOut/checkout_constants.js","components/Market/CheckOut/CheckOut.jsx","components/Market/StoreManager/StoreManager.jsx","components/Market/StoreManager/ProductsManager.jsx","components/Market/StoreManager/ServiceManager.jsx","components/Market/Transactions/Transactions.jsx","serviceWorker.js","reducers/profileReducers/userContactDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","account_page","blog_page","market_page","market_products_page","market_services_page","check_out_page","admin_page","shopping_basket_page","my_market_products","manage_my_shop","store_manager_products","store_manager_services","transactions_page","dashboard_page","api_products_endpoint","api_services_endpoint","api_categories_endpoint","api_physical_endpoint","api_contact_endpoint","api_cart_endpoint","api_coupons_endpoint","api_dashboard_endpoint","api_user_endpoint","api_store_endpoint","api_transactions_endpoint","api_paypal_checkout_webhook","app_name","app_long_name","app_descrition","cell","email","fax","localStorageKey","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","auth","storage","contact_details_type","user_contact_id","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","names","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","account_details_type_error","displayName_error","photoURL_error","email_error","password_error","phoneNumber_error","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","result","user","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","USER_ACCOUNT_ACTIONS","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","_this","classCallCheck","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","state","mem_store","push","value","saveMemStore","onSaving","noError","setState","stringify","setItem","date","message","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","Utils","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isMoney","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","isMobile","window","innerWidth","innerHeight","document","documentURI","USER_BANKING_ACTIONS","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","user_account_errors","form_response","response_code","userAccountReducer","actions","type","payload","code","loginUser","user_account_state","dir","logOutUser","SendEmailVerification","UserAccountContext","createContext","UserAccountContextProvider","doLogin","doLogout","onChange","assign","componentWillMount","onAuthStateChanged","react_default","createElement","Provider","props","children","Component","user_init","user_errors_init","username_error","inline_init","message_type","extended_user","repeatpassword","is_admin","extended_user_error","names_error","surname_error","cell_error","repeatpassword_error","addUser","sent_user","results","axios","post","routes","data","updateUser","put","fetchUser","get","concat","user_details","SideBarMenuAuth","_useState","useState","_useState2","slicedToArray","setUser","useContext","closeStoreMenu","thisNode","className","removeEventListener","useEffect","apiRequests","fetchAPI","react_router_dom","to","title","id","onClick","preventDefault","getElementById","openClientMenu","stopPropagation","openStoreMenu","target","openMarketMenu","SideBarMenuNonAuth","MenuItems","possibleConstructorReturn","getPrototypeOf","call","user_logged_in","Consumer","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","SidebarCollapse","Home","menu","displayMenu","setMenu","hideDropdownMenu","addEventListener","showDropdownMenu","name","About","InlineError","src","string","contact_form_details","messageid","subject","message_read","date_read","date_sent","contact_form_errors","subject_error","message_error","ThisContactForm","change","contact_form","onSubmitContactForm","self","assertThisInitialized","form_messages","onCheckErrors","form_errors","do_check_errors","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","bind","_this2","placeholder","InlineError_InlineError","ContactDetails","href","height","width","allowfullscreen","frameBorder","Contact","display","setDisplay","_useState3","_useState4","Contact_ThisContactForm","ContactDetails_ContactDetails","forwadedInput","React","forwardRef","ref","InlineMessage","Login","values","setValues","errors","setErrors","_useState5","_useState6","inline","setInline","usernameRef","useRef","passwordRef","submitRef","_useState7","_useState8","handleChange","defineProperty","checkErrors","check_username","check_password","do_check","current","focus","onSubmit","Input_Input","Forms_InlineMessage","Logout","SignUp","_useContext","createUser","authUser","check_names","check_surname","check_cell","check_email","check_password_two","SideBar","alt","onSearch","method","MenuItems_MenuItems","Footer","Forget","setEmail","sendRecoveryEmail","category_init","category_id","category_name","description","notes","category_type","sub_category","category_art","category_errors_init","category_name_error","description_error","notes_error","category_type_error","sub_category_error","category_art_error","products_init","product_name","product_art","price","currency","active","products_errors_init","category_id_error","product_name_error","product_art_error","price_error","currency_error","service_init","service_name","service_art","service_errors_init","service_name_error","service_art_error","physical_address_init","deliver_to","stand","street_name","city","country","postal_code","physical_address_errors_init","deliver_to_error","stand_error","street_name_error","city_error","province_error","country_error","postal_code_error","contact_details_init","tel","contact_details_errors_init","tel_error","fax_error","website_error","cart_init","cart_id","total_items","date_created","is_active","sub_total","tax","total","coupon_init","validated","store_init","store_name","company_name","physical_address","store_errors_init","store_name_error","company_name_error","physical_address_error","payment_init","amount","processed","transaction_type","deposit_slip_url","payment_errors_init","amount_error","transaction_type_error","fetchProductsAPI","products","toConsumableArray","fetchProductAPI","product_id","fetchUserProductsAPI","fetchUserServicesAPI","services","fetchServicesAPI","fetchServiceAPI","service_id","fetchCategories","categories","category","saveCategory","saveProduct","_callee9","product","_context9","onDeleteProduct","_ref10","_callee10","_context10","doAddService","_ref11","_callee11","service","_context11","updateService","_ref12","_callee12","_context12","_x10","updateProduct","_ref13","_callee13","_context13","_x11","fetchProductRequests","_ref14","_callee14","_context14","requests","_x12","_x13","onDeleteService","_ref16","_callee16","_context16","_x16","savePhysicalAddress","_ref17","_callee17","_context17","physical","_x17","fetchPhysicalAddress","_ref18","_callee18","_context18","_x18","_x19","saveContactDetails","_ref19","_callee19","contact_details","_context19","contact","_x20","fetchContactDetails","_ref20","_callee20","_context20","_x21","_x22","addToCart","_ref21","_callee21","cart_item","_context21","cart_items","_x23","retrieveCart","_ref22","_callee22","_context22","cart","Response","_x24","deleteCart","_ref23","_callee23","_context23","_x25","applyCouponCode","_ref24","_callee24","coupon","_context24","coupon_code","succeed","_x26","fetchStore","_ref25","_callee25","_context25","store","_x27","addStore","_ref26","_callee26","client_store","_context26","_x28","fetchTransactions","_ref27","_callee27","_context27","transactions","_x29","createTransaction","_ref28","_callee28","client_transaction","_context28","transaction","_x30","removeTransaction","_ref29","_callee29","_context29","_x31","_x32","fetchUserByID","_ref30","_callee30","_context30","_x33","processDeposit","_ref31","_callee31","deposited","_context31","_x34","Product","addProductToBasket","addToBasket","Products","setProducts","setCategories","sub_categories","setSubCategories","_useState9","_useState10","show_products","setShowProducts","_useState11","_useState12","setShoppingBasket","_useState13","_useState14","_useState15","_useState16","setTitle","_useContext2","item","createSubCategories","subCategoryList","includes","subs","map","sub","key","cat","expanded_category","find","filtered_products","filter","onCategoryClick","Products_Product","Service","addServiceToBasket","Services","setServices","show_services","setShowServices","filtered_services","Services_Service","Market","Products_Products","Services_Services","AddProduct","setProduct","image","size","filename","progress","uploaded","setUploaded","doUpload","uploadTask","on","snapshot","round","bytesTransferred","totalBytes","child","getDownloadURL","FileArtChange","files","doSaveProduct","product_to_save","RequestsAPI","check_product_name","check_product_description","check_price","check_product_art","check_category_id","AddService","setService","_useState17","_useState18","_useState19","_useState20","fileArtChange","check_service_name","check_service_description","check_service_art","check_service_category","addService","my_service","AddCategories","_useState21","_useState22","_useState23","_useState24","setCategory","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useContext3","doAddCategory","my_category","check_category_name","check_category_type","check_sub_category","check_description","check_notes","check_category_art","CategoryArtFileChange","MyMarket","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","fetchPayments","approvePayment","processing","payment","rejectPayment","ShowPayment","thispayment","setPayment","Approve","Reject","mypayment","apiCall","selected","PaymentItem","OpenPayment","ManagePayments","payments","setPayments","show_payment","setShowPayment","fetchPaymentsAPI","Dashboard_ShowPayment","Dashboard_PaymentItem","Dashboard","present_user","setPresentUser","fetchPresentUser","Dashboard_ManagePayments","articles_api","this_date","return_date","this_pagesize","entertainment_news","sports_news","business_news","tech_news","science_news","health_news","get_blog_articles","_get_blog_articles","apiRequest","Axios","articles","BlogPost","post_data","article","urlToImage","source","author","Blog","posts","setPosts","toUpperCase","slice","_fetchData","_blog_posts","blog_posts","fetchData","index","Verifications","use_onetime_pin","account_verified","verifications","setVerifications","onAccountVerify","react_switch_default","checked","OnChangeHandler","AccountSettings","account_active","receive_job_offers","receive_sms","receive_email","accountSettings","setAccountSettings","onToggleSettings","PersonalDetails","onChangeHandler","onUpdatePersonalDetails","Account","onSwitchScreen","BasketItem","item_type","APIRequests","id_service_product","quantity","ShoppingBasket","basket","setBasket","coupons","setCoupons","coupon_code_error","setCart","SetPaidFor","loaded","paypalRef","apiFetch","purchase_units","purchase_item","currency_code","createPurchaseUnits","paypal","Buttons","createOrder","order","create","onApprove","_onApprove","capture","render","CheckOut_BasketItem","v","PhysicalAddress","setPhysical","check_deliver_to","check_stand","check_street_name","check_city","check_province","check_country","check_postal_code","addPhysicalAddress","settings","loadPhysicalAddress","setContact","check_tel","check_fax","check_website","onAddContactDetails","fetchContacts","CheckOut","_useContext5","CheckOut_PhysicalAddress","CheckOut_ContactDetails","CheckOut_ShoppingBasket","Store","setStore","primary","reset","my_form","setForm","check_store_name","check_company_name","check_physical_address","success","StoreManager","StoreManager_Store","ManageProduct","form_product","onUpdate","RequestItem","request","client","setClient","client_uid","total_requested","date_requested","products_sent","ProductRequests","setRequests","fetchRequestsAPI","ProductsManager_RequestItem","ShowProduct","ProductsManager_ManageProduct","ProductsManager_ProductRequests","ProductItem","onOpenProduct","ProductsManager_ShowProduct","ProductsManager_ProductItem","ManageService","form_service","ServiceRequests","ServiceManager_RequestItem","ShowService","ServiceManager_ManageService","ServiceManager_ServiceRequests","ServiceItem","onOpenService","ServiceManager_ShowService","ServiceManager_ServiceItem","CreatePayment","check_amount","check_transaction_type","Deposit","transaction_id","proof_of_deposit","deposit","setDeposit","onChangeProof","ProcessPayment","Withdrawal","ShowTransaction","Transactions_Withdrawal","Transactions_Deposit","TransactionItem","OpenTransaction","RemoveTransaction","Transactions","setTransactions","setTransaction","found_transaction","fetchTransactionsAPI","Transactions_ShowTransaction","Transactions_TransactionItem","Payments","Transactions_Transactions","Transactions_CreatePayment","Boolean","location","hostname","match","ContactDetailsInitState","user_contacts","contact_details_errors","facebook_error","twitter_error","userContactDetailsReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","account_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","profile","wallet","inline_message","middleware","applyMiddleware","compose","thunk","createStore","ReactDOM","react_redux_es","userAccountContext_UserAccountContextProvider","Header_Header","react_router","exact","path","component","Market_Products","Market_Services","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gqFAAaA,EAAY,IACZC,EAAe,WACfC,EAAa,SACbC,EAAa,SACbC,EAAc,UACdC,EAAc,UACdC,EAAsB,UACtBC,EAAgB,YAChBC,EAAe,WAEfC,EAAY,QAEZC,EAAc,UACdC,EAAuB,mBACvBC,EAAuB,mBACvBC,EAAiB,oBAGjBC,EAAa,cACbC,EAAuB,8BACvBC,EAAqB,qBACrBC,EAAiB,uBACjBC,EAAyB,gCACzBC,EAAyB,gCACzBC,EAAoB,4BAIpBC,EAAiB,aAQjBC,EAAwB,gBACxBC,EAAwB,gBACxBC,EAA0B,kBAC1BC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAoB,YACpBC,EAAuB,eACvBC,EAAyB,iBACzBC,EAAoB,YACpBC,EAAqB,aACrBC,EAA4B,oBAE5BC,EAA8B,+BChD9BC,EAAW,aACXC,EAAgB,2BAChBC,EAAiB,2BACjBC,EAAO,cACPC,EAAQ,sBACRC,EAAM,aACNC,EAAkB,0ICO/B,IACEC,KAASC,KAAKC,OAA0CF,KAASG,MAA1CH,KAASI,cAXnB,CACdC,OAAQ,0CACPC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,wCAKR,MAAOC,IACPC,QAAQC,IAAI,mCAGb,IAAMC,GAAOf,KAASe,OAChBC,GAAUhB,KAASgB,UC2BdC,GAAuB,CACjCC,gBAAkB,IAClBtB,KAAO,GACPC,MAAQ,GACRsB,QAAU,GACVC,SAAW,GACXC,QAAU,GAEVC,wBAAuB,EACvBC,uBAAsB,EACtBC,yBAAwB,EACxBC,yBAAwB,EACxBC,uBAAwB,EACxBC,sBAAuB,GACvBC,eAAc,EACdC,yBAAyB,EACzBC,wBAAyB,GACzBC,gBAAe,GA2CLC,GAAwB,CAClCC,iBAAmB,GACnBC,MAAQ,GACRC,QAAU,GACVC,SAAW,GACXC,QAAU,IAgBAC,GAAuB,CACjCC,IAAM,GACNC,YAAc,GACdC,SAAW,GACX5C,MAAQ,GACR6C,SAAW,GACXC,eAAgB,EAChBC,eAAc,EACdC,YAAc,GACdC,aAAc,EACdC,WAAa,WAEbC,YAAa,EACbC,gBAAiB,EACjBC,cAAe,EACfC,kBAAmB,EACnBtB,yBAA0B,EAC1BuB,kBAAkB,GAKRC,GAA6B,CACvCC,kBAAoB,GACpBC,eAAiB,GACjBC,YAAc,GACdC,eAAiB,GACjBC,kBAAoB,IC3IVC,GAAuB,CACjCC,QAAU,GACVC,eAAgB,GAChBC,UAAU,GACVC,YAAY,GACZC,eAAe,GACfC,aAAa,IAGHC,GAA8B,CACxCC,qBAAuB,GACvBC,gBAAkB,GAClBC,kBAAoB,GACpBC,qBAAuB,GACvBC,mBAAmB,IAGTC,GAAyB,CACnCC,UAAY,GACZC,aAAe,IAOLC,GAA0B,CACpCC,WAAa,GACbC,eAAiB,GACjBC,eAAiB,IC5CLC,GAAiB,SAAAC,GAE7BnE,QAAQC,IAAI,kCAAkCkE,ICMlCC,GAAgC,eAAAC,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAQC,EAAU/C,GAAlB,IAAAgD,EAAAC,EAAAC,EAAA,OAAAP,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE/C,IACKL,EAAO5E,GAAKkF,+BAA+BR,EAAU/C,GACrDkD,EAFFT,OAAAe,GAAA,EAAAf,CAAA,GAEqB7C,KACvBsD,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GAAOQ,IACN1C,gBAAiB,EAC9ByC,EAAS,CAACS,QAAQ,EAAMC,SAASjB,OAAAe,GAAA,EAAAf,CAAA,GAAKS,IACtC,MAAOhF,IACP8E,EAAS,CAACS,QAAO,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAIvE,KATa,OAAAkF,EAAAQ,OAAA,SAYxCZ,GAZwC,wBAAAI,EAAAS,SAAAf,MAAH,gBAAAgB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,GAkBhCC,GAA4B,eAAAC,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAOtB,EAAU/C,GAAjB,IAAAgD,EAAAsB,EAAArB,EAAAC,EAAA,OAAAP,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAGvBjF,GAAKmG,2BAA2BzB,EAAU/C,GAHnB,OAAAsE,EAAAC,EAAAE,KAGrCxB,EAHqCqB,EAGrCrB,KACDC,EAJsCT,OAAAe,GAAA,EAAAf,CAAA,GAInB7C,KACvBsD,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GAAOQ,IACN1C,gBAAiB,EAC9ByC,EAAS,CAACS,QAAQ,EAAMC,SAASjB,OAAAe,GAAA,EAAAf,CAAA,GAAKS,IAPIqB,EAAAjB,KAAA,iBAAAiB,EAAAlB,KAAA,GAAAkB,EAAAG,GAAAH,EAAA,SAS1CvB,EAAS,CAACS,QAAO,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAA8B,EAAAG,KATa,eAAAH,EAAAX,OAAA,SAYpCZ,GAZoC,yBAAAuB,EAAAV,SAAAQ,EAAA,kBAAH,gBAAAM,EAAAC,GAAA,OAAAR,EAAAJ,MAAAC,KAAAC,YAAA,GAiB5BW,GAAS,eAAAC,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,IAAA,IAAA/B,EAAA,OAAAL,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACpBN,EAAS,GADWgC,EAAA1B,KAAA,EAElBhG,KAASe,OAAO4G,UAAUC,KAAM,WACrClC,EAAS,CAACS,QAAO,EAAKE,MAAM,MAC1BwB,MAAO,SAACC,GACVpC,EAAS,CAACS,QAAO,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAI2C,MALV,cAAAJ,EAAApB,OAAA,SAOjBZ,GAPiB,wBAAAgC,EAAAnB,SAAAkB,MAAH,yBAAAD,EAAAd,MAAAC,KAAAC,YAAA,GAWTmB,GAAe,eAAAC,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,EAAOC,GAAP,IAAAxC,EAAA,OAAAL,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAE1BN,EAAS,GAFiByC,EAAAnC,KAAA,EAIxBhG,KAASe,OAAOqH,uBAAuBF,GAC3CN,KAAK,WAAQlC,EAAS,CAACS,QAAO,EAAKE,MAAM,MACvCwB,MAAM,SAACC,GAASpC,EAAS,CAACS,QAAO,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAI2C,MANvB,cAAAK,EAAA7B,OAAA,SASvBZ,GATuB,wBAAAyC,EAAA5B,SAAA0B,MAAH,gBAAAI,GAAA,OAAAL,EAAAtB,MAAAC,KAAAC,YAAA,GAYf0B,GAAgB,eAAAC,EAAApD,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,EAAO9F,GAAP,IAAAgD,EAAA,OAAAL,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAE3BN,EAAS,GAFkB+C,EAAAzC,KAAA,EAIzBhG,KAASe,OAAO2H,YAAYC,eAAejG,GAC/CkF,KAAM,WAAOlC,EAAS,CAACS,QAAS,EAAKE,MAAO,MAE5CwB,MAAO,SAACC,GAASpC,EAAS,CAACS,QAAQ,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAI2C,MAPtB,cAAAW,EAAAnC,OAAA,SASxBZ,GATwB,wBAAA+C,EAAAlC,SAAAiC,MAAH,gBAAAI,GAAA,OAAAL,EAAA7B,MAAAC,KAAAC,YAAA,GAchBiC,GAAY,eAAAC,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwD,EAAOpD,GAAP,IAAAD,EAAA,OAAAL,GAAAC,EAAAO,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cACvBN,EAAS,GADcsD,EAAAhD,KAAA,EAGrBL,EAAKsD,SAASrB,KAAM,WACzBlC,EAAS,CAACS,QAAS,EAAKE,MAAM,MAC5BwB,MAAO,SAACC,GACVpC,EAAS,CAACS,QAAQ,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAI2C,MANR,cAAAkB,EAAA1C,OAAA,SAQpBZ,GARoB,wBAAAsD,EAAAzC,SAAAwC,MAAH,gBAAAG,GAAA,OAAAJ,EAAApC,MAAAC,KAAAC,YAAA,GAWZuC,GAAuB,eAAAC,EAAAjE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA8D,EAAO1D,GAAP,IAAAD,EAAA,OAAAL,GAAAC,EAAAO,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAClCN,EAAS,GACb7E,QAAQC,IAAI6E,GAF0B2D,EAAAtD,KAAA,EAGhChG,KAASe,OAAO2H,YAAYa,wBAAwB3B,KAAK,WAC9DlC,EAAS,CAACS,QAAO,EAAKE,MAAM,MAC1BwB,MAAM,SAACC,GAETpC,EAAS,CAACS,QAAO,EAAME,MAAMlB,OAAAe,GAAA,EAAAf,CAAA,GAAI2C,MAPI,cAAAwB,EAAAhD,OAAA,SAS/BZ,GAT+B,wBAAA4D,EAAA/C,SAAA8C,MAAH,gBAAAG,GAAA,OAAAJ,EAAA1C,MAAAC,KAAAC,YAAA,GAYvB6C,GAAgB,eAAAC,EAAAvE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAoE,EAAO3E,GAAP,IAAAU,EAAA,OAAAL,GAAAC,EAAAO,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAC3BN,EAAS,CAACS,QAAO,EAAKE,MAAM,IADDuD,EAAA5D,KAAA,EAEzBjB,GAAeC,GAFU,cAAA4E,EAAAtD,OAAA,SAGxBZ,GAHwB,wBAAAkE,EAAArD,SAAAoD,MAAH,gBAAAE,GAAA,OAAAH,EAAAhD,MAAAC,KAAAC,YAAA,GCpGhBkD,GAIE,mBAJFA,GAKC,kBALDA,GAME,mBANFA,GAOE,mBAPFA,GAQM,uBARNA,GASc,+BATdA,GAUO,sDCNhBC,GANkB,WAClB,IAAIC,EAAM,IAAIC,KAEd,OADAD,EAAMA,EAAIE,UACHC,KAAKC,MAAM,WAAaD,KAAKE,UAAUC,SAAS,IAAMH,KAAKI,IAAIJ,KAAKC,MAAM,WAAaD,KAAKE,UAAYL,GAAKM,SAAS,IAG/GE,GACdC,GAAS,IAAIC,KAAaX,IAEnBY,GAAU,SAAUC,EAAMC,GAEjCJ,GAAOK,UAAUD,GACjB,IACI,OAAOJ,GAAOE,QAAQC,GACxB,MAAOhK,IACL,OAAOgK,IAIJG,GAAU,SAAUH,EAAMC,GAEjCJ,GAAOK,UAAUD,GACjB,IACI,OAAOJ,GAAOM,QAAQH,GACxB,MAAOhK,IACL,OAAOgK,ICbFI,ICyIQ,IAlJjB,SAAAC,IAAc,IAAAC,EAAAvE,KAAAxB,OAAAgG,GAAA,EAAAhG,CAAAwB,KAAAsE,GAAAtE,KAgBdyE,eAhBcjG,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAgBG,SAAAkC,IAAA,IAAA4D,EAAAC,EAAAC,EAAA,OAAAlG,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACLqF,GAAU,EACVC,EAFK,eAAAxE,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAEa,SAAAC,IAAA,OAAAH,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUwF,KAAKC,MAAMC,aAAaC,QAAQT,EAAKU,mBAF/C,OAEdV,EAAKW,WAFS/F,EAAAqB,KAAArB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAsB,GAAAtB,EAAA,SAKduF,GAAU,EALI,cAAAvF,EAAAQ,OAAA,UAQV+E,GARU,yBAAAvF,EAAAS,SAAAf,EAAA,iBAFb,yBAAAsB,EAAAJ,MAAAC,KAAAC,YAAA,GAaL2E,EAbK,eAAAvE,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAaO,SAAAwB,IAAA,IAAAsE,EAAA,OAAAhG,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACRqF,GAAU,EACdH,EAAKW,WAAWC,QAAQ,SAAAC,GACpB,IACIb,EAAKc,gBAAgBC,MAAQT,KAAKC,MAAMC,aAAaC,QAAQI,IAC7Db,EAAKc,gBAAgBD,UAAYA,EACjCb,EAAKgB,UAAUC,KAAKjB,EAAKc,iBAC5B,MAAOpL,IACJC,QAAQC,IAAI,wBACZuK,GAAU,KATNpE,EAAAX,OAAA,UAYJ+E,GAZI,wBAAApE,EAAAV,SAAAQ,MAbP,yBAAAC,EAAAN,MAAAC,KAAAC,YAAA,GAAAc,EAAApB,OAAA,SA4BFgF,IAAkB1D,KAAK,SAAUwE,GACpCb,IAAY3D,KAAM,SAACwE,GAEf,OADAvL,QAAQC,IAAI,wCAAwCsL,GAC7CA,OA/BN,wBAAA1E,EAAAnB,SAAAkB,MAhBHd,KAoDd0F,aApDclH,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAoDC,SAAAiD,IAAA,IAAA8D,EAAA,OAAAjH,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAEPsG,EAFO,eAAAtE,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAEI,SAAA0C,IAAA,IAAAsE,EAAA,OAAAlH,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cACXkF,EAAKW,WAAa,GACdU,GAAU,EACdrB,EAAKgB,UAAUJ,QAAQ,SAAAE,GACnB,IACId,EAAKW,WAAWM,KAAKH,EAAgBD,WACrCb,EAAKsB,SAASR,EAAgBD,UAAUP,KAAKiB,UAAUT,EAAgBC,QAAQrE,KAC3E,SAAUqE,GACNpL,QAAQC,IAAI,kCAAkCmL,GAC9CP,aAAagB,QAAQV,EAAgBD,UAAY,aAAcpF,KAAKgG,KAAKzC,aAC9ErC,MAAO,SAACC,GACPjH,QAAQC,IAAI,kCAAkCgH,EAAI8E,WAGzD,MAAOhM,IACJC,QAAQC,IAAI,iEACZyL,GAAU,KAhBPpE,EAAA7B,OAAA,SAoBJiG,GApBI,wBAAApE,EAAA5B,SAAA0B,MAFJ,yBAAAD,EAAAtB,MAAAC,KAAAC,YAAA,GAAA6B,EAAAnC,OAAA,SAyBJgG,IAAW1E,KAAK,SAAUwE,GAE7B,OADAvL,QAAQC,IAAI,iDAAiDsL,GACtDA,KA3BA,wBAAA3D,EAAAlC,SAAAiC,MApDD7B,KAmFdkG,SAnFc,eAAAtE,EAAApD,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAmFH,SAAAwD,EAAO+D,EAAKC,GAAZ,IAAAC,EAAA,OAAA3H,GAAAC,EAAAO,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,eAOOiH,IAATH,GAAiC,OAATA,GAA4B,KAATA,EAPzC,CAAA9D,EAAAhD,KAAA,eAAAgD,EAAAhD,KAAA,EAQ2B+E,GAAQW,aAAaC,QAAQoB,GAAWD,GARnE,cAQGE,EARHhE,EAAA7B,KAAA6B,EAAA1C,OAAA,SASwB,OAApB0G,OAA2BC,EAAYzB,KAAKC,MAAMuB,IATtD,cAAAhE,EAAA1C,OAAA,cAWI2G,GAXJ,wBAAAjE,EAAAzC,SAAAwC,MAnFG,gBAAAvC,EAAAC,GAAA,OAAA8B,EAAA7B,MAAAC,KAAAC,YAAA,GAAAD,KAkGd6F,SAlGc,eAAA1D,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAkGH,SAAA8D,EAAOyD,EAAKC,EAASd,GAArB,IAAAe,EAAA,OAAA3H,GAAAC,EAAAO,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,UAAAsD,EAAAvD,KAAA,OAIWkH,IAATH,GAAiC,OAATA,GAA4B,KAATA,EAJ7C,CAAAxD,EAAAtD,KAAA,gBAAAsD,EAAAtD,KAAA,EAK+B2E,GAAQa,KAAKiB,UAAUR,GAAQa,GAL9D,cAKOE,EALP1D,EAAAnC,KAAAmC,EAAAtD,KAAA,EAMO0F,aAAagB,QAAQK,EAAUC,GANtC,cAAA1D,EAAAtD,KAAA,EAOO0F,aAAagB,QAAQK,EAAW,aAAcpC,GAAQO,EAAKyB,KAAKzC,UAAW4C,IAPlF,cAAAxD,EAAAhD,OAAA,SAQQ0G,GARR,cAUO,IAAIE,MAAM,sBAVjB,QAAA5D,EAAAtD,KAAA,wBAAAsD,EAAAvD,KAAA,GAAAuD,EAAAlC,GAAAkC,EAAA,SAAAA,EAAAhD,OAAA,cAsBI2G,GAtBJ,yBAAA3D,EAAA/C,SAAA8C,EAAA,kBAlGG,gBAAAhC,EAAAC,EAAAe,GAAA,OAAAS,EAAApC,MAAAC,KAAAC,YAAA,GACVD,KAAKgG,KAAO,IAAI1C,KAChBtD,KAAKiF,iBAAmB,WACxBjF,KAAKkF,WAAa,GAClBlF,KAAKwG,eAAgB,EACrBxG,KAAKyG,aAAe,KACpBzG,KAAKqF,gBAAkB,CACnBD,UAAY,GACZE,MAAQ,IAGZtF,KAAKkE,YAAY,GACjBlE,KAAKuF,UAAY,IDFD,qCADXlB,GAEW,oCAFXA,GAGa,sCAHbA,GAIa,sCAJbA,GAKY,qCALZA,GAMA,2BANAA,GAOc,uCAPdA,GAQG,4BEZHqC,GACY,8CADZA,GAEY,8CAFZA,GAGc,gDAHdA,GAIa,gDCbbC,GACa,yBADbA,GAEW,gECgMbC,GAAQ,IAhMjB,SAAAC,EAAYC,EAAOC,GAAK,IAAAxC,EAAAvE,KAAAxB,OAAAgG,GAAA,EAAAhG,CAAAwB,KAAA6G,GAAA7G,KAKxBgH,MAAQ,SAAAD,GAWN,OAVc,IAAIE,OAChB,+KAOA,KAEaC,KAAKH,IAhBE/G,KAmBxBmH,QAAU,SAAAxI,GACR,YAAa2H,IAAN3H,GAAwB,OAANA,GAAoB,KAANA,GApBjBqB,KAuBxBoH,WAAa,SAAAC,GAYX,IAXA,IAAIC,EAAgB,CAClB,UACA,aACA,aACA,UACA,gBACA,eACA,eACA,gBACA,qBAEOC,EAAI,EAAGA,EAAID,EAAc/N,OAAQgO,IACxC,GAAIF,IAAaC,EAAcC,GAC7B,OAAO,EAGX,OAAO,GAxCevH,KA2CxBwH,cAAgB,SAAAtO,GAEd,MADS,yJACCgO,KAAKhO,IA7CO8G,KAgDxByH,iBAAmB,SAAA1L,GAIjB,OAHS,IAAIkL,OACX,+DAEQC,KAAKnL,IApDOiE,KAuDxB0H,iBAAmB,SAAA5I,GAEjB,MADS,QACCoI,KAAKpI,IAzDOkB,KA4DxB2H,SAAW,SAAAC,GACT,YAAatB,IAANsB,GAA+B,mBAANA,IAAoBC,MAAMD,IA7DpC5H,KAgExB8H,QAAU,SAAAF,GACR,QAAOrD,EAAKoD,SAASC,IAjEC5H,KAoExB+H,OAAS,SAAAH,GACP,QAAOrD,EAAKoD,SAASC,KACJ,KAAbA,EAAErO,QAA8B,KAAbqO,EAAErO,QAA8B,KAAbqO,EAAErO,QAA8B,KAAbqO,EAAErO,SAtEzCyG,KA0ExBgI,MAAQ,SAAAJ,GACN,YAAatB,IAANsB,GAAkBrD,EAAKwD,OAAOH,IA3Ef5H,KA8ExBiI,MAAQ,SAAAL,GACN,YAAatB,IAANsB,GAAkBrD,EAAKwD,OAAOH,IA/Ef5H,KAkFxBkI,OAAS,SAAAC,GACP,IAAIC,EAAQD,EAAWE,MAAM,KACzBC,EAAI,IAAIhF,KAERiF,EAAUH,EAAM,GAChBI,EAAYJ,EAAM,GAClBK,EAAWL,EAAM,GAEjBM,EAASJ,EAAEK,UACXC,EAAWN,EAAEO,WAAa,EAG1BC,EAFUR,EAAES,cAEIN,EAKpB,OAHIG,EAAWJ,GAAcI,IAAaJ,GAAaE,EAASH,IAC9DO,IAEKA,GAnGe9I,KAqGxBgJ,WAAa,SAAApB,GACX,YAAatB,IAANsB,GAAkBrD,EAAKoD,SAASC,IAAmB,KAAbA,EAAErO,QAtGzByG,KAwGxBiJ,oBAAsB,SAACC,EAAWC,GAChC,IAAIC,EAAUF,EAAUb,MAAM,KAC1BgB,EAAUF,EAAWd,MAAM,KAI3BiB,EAAQC,SAASH,EAAQ,IACzBI,EAAUD,SAASH,EAAQ,IAC3BK,EAASF,SAASH,EAAQ,IAE1BM,EAAQH,SAASF,EAAQ,IACzBM,EAAUJ,SAASF,EAAQ,IAC3BO,EAASL,SAASF,EAAQ,IAO1B1K,EAAIkL,KAAO,CAACJ,EAAQD,EAASF,IAC7BQ,EAAID,KAAO,CAACD,EAAQD,EAASD,IAEjC,OAAO/K,EAAEoL,KAAKD,EAAG,QAAU,GA9HL9J,KA0IxBgK,8BAAgC,SAACC,EAASC,GACxC,IACE,OAAOD,EAAUC,EACjB,MAAOjQ,IACP,OAAOsP,SAASU,GAAWV,SAASW,KA9IhBlK,KAkJxBmK,SAAW,SAACC,EAAMC,GAChB,IAAIC,EACAC,EACJ,OAAO,WACL,IAAMC,EAAUxK,KACVyK,EAAOxK,UACRsK,GAIHG,aAAaJ,GACbA,EAAWK,WAAW,WAChBrH,KAAKD,MAAQkH,GAAWF,IAC1BD,EAAKrK,MAAMyK,EAASC,GACpBF,EAAUjH,KAAKD,QAEhBgH,GAAS/G,KAAKD,MAAQkH,MATzBH,EAAKrK,MAAMyK,EAASC,GACpBF,EAAUjH,KAAKD,SA1JGrD,KAuKxB4K,SAAW,SAACR,EAAMS,GAChB,IAAIC,EACJ,OAAO,WACL,IAAMN,EAAUxK,KACVyK,EAAOxK,UACbyK,aAAaI,GACbA,EAAaH,WAAW,kBAAMP,EAAKrK,MAAMyK,EAASC,IAAOI,KA7KrC7K,KAiLxB+K,SAAW,WACT,OAAIC,OAAOC,YAAc,KAAOD,OAAOE,aAAe,KAjLtDlL,KAAK8G,MAAQA,EACb9G,KAAK+G,IAAMA,EA8LI,CAHP,IAAIzD,KACN6H,SAASC,aClKNC,GAEQ,oBAFRA,GAGQ,oBAHRA,GAIU,sBAJVA,GAKU,sBALVA,GAMU,sBANVA,GAQO,oBARPA,GASM,kBAGNC,GACU,sBADVA,GAEU,sBAFVA,GAGY,wBAHZA,GAIY,wBAJZA,GAKY,wBAGZC,GACW,uBADXA,GAEW,uBAFXA,GAGa,yBAHbA,GAIa,yBAJbA,GAKa,yBCrDfC,GAAuB,CACjCvM,aAAYT,OAAAe,GAAA,EAAAf,CAAA,GAAO7C,IACnB8P,oBAAmBjN,OAAAe,GAAA,EAAAf,CAAA,GAAO9B,IAC1BgP,cAAe,GACfC,cAAe,IAqEDC,GAhEY,WAA4C,IAA3CtG,EAA2CrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAAjCgN,IAAsBK,EAAW5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EAGtE,OADApM,QAAQC,IAAI,+BAA+B0R,GACnCA,EAAQC,MAEhB,KAAK3I,GAQL,KAAKA,GAQL,KAAKA,GAOL,KAAKA,GAQL,KAAKA,GAQL,KAAKA,GACJ,OAAA3E,OAAAe,GAAA,EAAAf,CAAA,GAAU8G,EAAV,CACCrG,aAAaT,OAAAe,GAAA,EAAAf,CAAA,GAAKqN,EAAQE,QAAQ9M,cAClCyM,cAAeG,EAAQE,QAAQ9F,QAC/B0F,cAAeE,EAAQE,QAAQC,OAGjC,KAAK7I,GACJ,OAAA3E,OAAAe,GAAA,EAAAf,CAAA,GAAU8G,EAAV,CACC7I,iBAAiBoP,EAAQE,QAAQtP,iBACjCiP,cAAeG,EAAQE,QAAQ9F,QAC/B0F,cAAcE,EAAQE,QAAQC,OAIhC,QAAQ,OAAO1G,IC5DZkG,GAAuB,CACvBvM,aAAaT,OAAAe,GAAA,EAAAf,CAAA,GAAK7C,IAClB8P,oBAAoBjN,OAAAe,GAAA,EAAAf,CAAA,GAAK9B,IACzBgP,cAAe,GACfC,cAAe,IAGRM,GAAS,eAAA1N,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAU/C,GAAjB,IAAAmQ,EAAAjN,EAAAyM,EAAAC,EAAA,OAAAjN,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACf6M,EADe1N,OAAAe,GAAA,EAAAf,CAAA,GACUgN,IADVrM,EAAAE,KAAA,EAMbjF,EAAK8F,6BAA6BpB,EAAU/C,GAAUkF,KAAK,SAAAlC,IAGnC,IAAlBA,EAAOS,QACPP,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GAAOO,EAAOU,UAC1BiM,EAAgB,8BAChBC,EAAgB,MAEhB1M,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GAAOO,EAAOU,UAC1BiM,EAAgB3M,EAAOW,MAAMuG,QAC7B0F,EAAgB5M,EAAOW,MAAMsM,QAhBtB,cAqBnBE,EAAmBjN,aAAnBT,OAAAe,GAAA,EAAAf,CAAA,GAAsCS,GACtCiN,EAAmBR,cAAgBA,EACnCQ,EAAmBP,cAAgBA,EACnCzR,QAAQiS,IAAI,qBAAqBD,GAxBd/M,EAAAQ,OAAA,SAAAnB,OAAAe,GAAA,EAAAf,CAAA,GAyBR0N,IAzBQ,wBAAA/M,EAAAS,SAAAf,MAAH,gBAAAgB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,GA4BTmM,GAAU,eAAAjM,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,IAAA,IAAA8L,EAAAjN,EAAAyM,EAAAC,EAAA,OAAAjN,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACZ6M,EADY1N,OAAAe,GAAA,EAAAf,CAAA,GAETgN,IAFSlL,EAAAjB,KAAA,EAQdjF,EAAKwG,YAAYK,KAAK,SAAAlC,IACF,IAAlBA,EAAOS,QACHP,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GACL7C,IAEP+P,EAAgB,2BAChBC,EAAgB,MAGZ1M,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GACL7C,IAEP+P,EAAgB3M,EAAOW,MAAMuG,QAC7B0F,EAAgB5M,EAAOW,MAAMsM,QArBzB,cAwBpBE,EAAmBjN,aAAnBT,OAAAe,GAAA,EAAAf,CAAA,GACOS,GAEPiN,EAAmBR,cAAgBA,EACnCQ,EAAmBP,cAAgBA,EACnCzR,QAAQiS,IAAI,qBAAsBD,GA7Bd5L,EAAAX,OAAA,SAAAnB,OAAAe,GAAA,EAAAf,CAAA,GA+Bb0N,IA/Ba,wBAAA5L,EAAAV,SAAAQ,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAqCVoM,GAAqB,eAAAhM,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAM9B,GAAN,IAAAkN,EAAAjN,EAAAyM,EAAAC,EAAA,OAAAjN,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACvB6M,EADuB1N,OAAAe,GAAA,EAAAf,CAAA,GAEpBgN,IAMPtR,QAAQC,IAAI,+BARe4G,EAAA1B,KAAA,EAUzBjF,EAAKoI,wBAAwBxD,GAAMiC,KAAM,SAAAlC,IACrB,IAAlBA,EAAOS,QACPP,EAAaT,OAAAe,GAAA,EAAAf,CAAA,GACNQ,EADK,CAER9D,yBAA0B,IAE9BwQ,EAAe,wCACfC,EAAe,MAEf1M,EAAYT,OAAAe,GAAA,EAAAf,CAAA,GACLQ,EADK,CAER9D,yBAAyB,IAE7BwQ,EAAe3M,EAAOW,MAAMuG,QAC5B0F,EAAe5M,EAAOW,MAAMsM,QAxBL,cA2B/BE,EAAmBjN,aAAnBT,OAAAe,GAAA,EAAAf,CAAA,GAAsCS,GACtCiN,EAAmBR,cAAgBA,EACnCQ,EAAmBP,cAAgBA,EA7BJ5K,EAAApB,OAAA,SA+BxBuM,GA/BwB,wBAAAnL,EAAAnB,SAAAkB,MAAH,gBAAAJ,GAAA,OAAAL,EAAAN,MAAAC,KAAAC,YAAA,GCzEnBqM,GAAqBC,0BACbC,iNACjBlH,MAAQ,CAAC4G,mBAAmB1N,OAAAe,GAAA,EAAAf,CAAA,GAAKgN,OAEjCiB,gDAAU,SAAA5N,EAAOC,EAAS/C,GAAhB,IAAAmQ,EAAA,OAAAxN,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuB4M,GAAUnN,EAAS/C,GAD1C,OACJmQ,EADI/M,EAAAqB,KAER+D,EAAKsB,SAAS,CAACqG,uBAFP,wBAAA/M,EAAAS,SAAAf,gEAKV6N,gCAAW,SAAAtM,IAAA,IAAA8L,EAAA,OAAAxN,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACsB+M,KADtB,OACLF,EADK5L,EAAAE,KAET+D,EAAKsB,SAAS,CACZqG,uBAHO,wBAAA5L,EAAAV,SAAAQ,QAOXoC,+CAA0B,SAAA1B,IAAA,IAAAoL,EAAA,OAAAxN,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,WACpBkF,EAAKe,MAAM4G,mBAAmBjN,aAAajD,cADvB,CAAA+E,EAAA1B,KAAA,QAExBnF,QAAQC,IAAI,2DAFY4G,EAAA1B,KAAA,sBAAA0B,EAAA1B,KAAA,EAIOgN,GAAsB9H,EAAKe,MAAM4G,mBAAmBjN,cAJ3D,OAIpBiN,EAJoBnL,EAAAP,KAKxB+D,EAAKsB,SAAS,CACZqG,mBAAoBA,IANE,wBAAAnL,EAAAnB,SAAAkB,QAW1B6L,SAAW,SAAC3N,GAGNuF,EAAKe,MAAM4G,mBADbjN,aAFiB,IAKfiN,EAAqB1N,OAAOoO,OAAO,GAAGrI,EAAKe,MAAM4G,oBACrDA,EAAmBjN,aAAnBT,OAAAe,GAAA,EAAAf,CAAA,GACKQ,GAGLuF,EAAKsB,SAAS,CACZqG,0BAINW,mBAAqB,WAEGxT,EAASA,SAASe,OAAO0S,mBAAmBvI,EAAKoI,qFAIvE,OACEI,EAAApO,EAAAqO,cAAEV,GAAmBW,SAArB,CAA8BxH,MAAKjH,OAAAe,GAAA,EAAAf,CAAA,GAE5BwB,KAAKsF,MAFuB,CAEhBmH,QAASzM,KAAKyM,QAASC,SAAU1M,KAAK0M,SAAUlK,wBAAyBxC,KAAKwC,2BAGtFxC,KAAKkN,MAAMC,iBArD4BC,aCR3CC,GAAY,CACrBvO,SAAW,GACX/C,SAAW,IAGFuR,GAAmB,CAC5BC,eAAiB,GACjBzQ,eAAiB,IAIR0Q,GAAc,CACvBvH,QAAS,GACTwH,aAAa,QAIJC,GAAgB,CACzB9R,IAAM,GACNL,MAAO,GACPC,QAAS,GACTvC,KAAM,GACNC,MAAO,GACP6C,SAAU,GACV4R,eAAgB,GAChBC,UAAW,GAGFC,GAAsB,CAC/BC,YAAa,GACbC,cAAe,GACfC,WAAY,GACZnR,YAAa,GACbC,eAAgB,GAChBmR,qBAAsB,IClCbC,GAAO,eAAA3P,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAE,SAAAC,EAAOsP,GAAP,IAAAC,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACd+O,EAAU,CAAC5O,QAAS,EAAMuM,QAAQ,GAAGrM,MAAQ,IAD/BP,EAAAE,KAAA,EAGZgP,KAAMC,KAAKC,EAAyBJ,GAAWlN,KAAK,SAAAmN,GACtD,GAAuB,MAAnBA,EAAQ5O,OACR,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,oCAErBtF,KAAK,SAAAjC,GACJoP,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBQ,GACtBoP,EAAQ1O,MAAQ,KACjBwB,MAAM,SAAAxB,GACL0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAhBN,cAAAP,EAAAQ,OAAA,SAoBXyO,GApBW,wBAAAjP,EAAAS,SAAAf,MAAF,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GAwBPwO,GAAU,eAAAtO,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAO+N,GAAP,IAAAC,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAClB+O,EAAU,CAAE5O,QAAQ,EAAOuM,QAAS,GAAIrM,MAAO,IAD7BY,EAAAjB,KAAA,EAGhBgP,KAAMK,IAAIH,EAA0BJ,GAAWlN,KAAK,SAAAmN,GACtD,GAAuB,MAAnBA,EAAQ5O,OACV,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,oCAEjBtF,KAAK,SAAAjC,GACNoP,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAuBQ,GACvBoP,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAqBkB,KAhBH,cAAAY,EAAAX,OAAA,SAmBfyO,GAnBe,wBAAA9N,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GAuBV0O,GAAS,eAAAtO,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAOlF,GAAP,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACjB+O,EAAU,CAAE5O,QAAQ,EAAOuM,QAAS,GAAIrM,MAAO,IAD9BqB,EAAA1B,KAAA,EAGfgP,KAAMO,IAAIL,EAAA,IAAAM,OAA+BjT,IAAOqF,KAAK,SAAAmN,GACvD,GAAsB,MAAnBA,EAAQ5O,OACP,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,yBAErBtF,KAAK,SAAA6N,GACJV,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBsQ,GACtBV,EAAQ1O,MAAQ,KACjBwB,MAAM,SAAAxB,GACL0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAhBH,cAAAqB,EAAApB,OAAA,SAmBdyO,GAnBc,wBAAArN,EAAAnB,SAAAkB,MAAH,gBAAAJ,GAAA,OAAAL,EAAAN,MAAAC,KAAAC,YAAA,GCzChB8O,GAAkB,WAAM,IAAAC,EACNC,mBAASvB,IADHwB,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACtBhQ,EADsBkQ,EAAA,GACjBE,EADiBF,EAAA,GAErBhD,EAAsBmD,qBAAW/C,IAAjCJ,mBAcP,SAASoD,EAAeC,GACtBA,EAASC,UAAY,WACrBrE,SAASsE,oBAAoB,QAAQH,GAsDxC,OA3BCI,oBAAU,WAiBR,OAhBc,eAAAnR,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAjD,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXzD,EAAMsQ,EAAmBjN,aAAarD,IAD3BuD,EAAAE,KAAA,EAETsQ,GAAsB/T,GAAKqF,KAAK,SAAAmN,GACjCA,EAAQ5O,QACT4P,EAAQhB,EAAQrC,WAEjB7K,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,EAAMuG,WAPL,cAAA9G,EAAAQ,OAAA,UASR,GATQ,wBAAAR,EAAAS,SAAAf,MAAH,yBAAAN,EAAAwB,MAAAC,KAAAC,YAAA,EAYd2P,GAAW3O,KAAK,SAAAlC,GACd7E,QAAQC,IAAI4E,KAGP,WACLqQ,EAAQ1B,IACR,IACAvC,SAASsE,oBAAoB,QAASH,GACrC,MAAM5P,OAIR,IAGDqN,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,gBACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,UAAd,aACAzC,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO3X,UAAWmZ,MAAM,2BAChChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eADf,IAC+BzC,EAAApO,EAAAqO,cAAA,wBAGjCD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOzX,WAAYiZ,MAAM,SACjChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eADf,IAC+BzC,EAAApO,EAAAqO,cAAA,yBAGjCD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO1X,aAAckZ,MAAM,cACnChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBADf,IACmCzC,EAAApO,EAAAqO,cAAA,2BAGrCD,EAAApO,EAAAqO,cAAA,MACEgD,GAAG,aACHR,UAAU,WACVS,QAAS,SAAAhW,GAEP,OA3Fe,SAACA,EAAE+V,GACxB/V,EAAEiW,iBAEF,IAAIX,EAAWpE,SAASgF,eAAeH,GACX,aAAvBT,EAASC,UACZD,EAASC,UAAY,kBAErBD,EAASC,UAAY,WAoFVY,CAAenW,EADb,gBAIX8S,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAG,KACP/C,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBADf,IACkCzC,EAAApO,EAAAqO,cAAA,2BAChCD,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,wBACdzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kCAGjBzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,gBAAgBS,QAAS,SAAAhW,GAAC,OAAIA,EAAEoW,oBAC5CtD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO7W,WAAYqY,MAAM,uBACjChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,IACqCzC,EAAApO,EAAAqO,cAAA,0BAA0B,KACvD,KAEVD,EAAApO,EAAAqO,cAAA,MACEgD,GAAG,QACHR,UAAU,WACVS,QAAS,SAAAhW,GAEP,OA9FU,SAACA,EAAG+V,GACxB/V,EAAEiW,iBACF,IAAIX,EAAWpE,SAASgF,eAAeH,GACT,aAAvBT,EAASC,UACZD,EAASC,UAAY,kBAErBD,EAASC,UAAY,WAwFRc,CAAcrW,EADZ,WAIX8S,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAG,KACP/C,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBADf,IACkCzC,EAAApO,EAAAqO,cAAA,qBAChCD,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,wBACdzC,EAAApO,EAAAqO,cAAA,KACEwC,UAAU,8BACVS,QAAS,SAAAhW,GACoB,gCAAvBA,EAAEsW,OAAOf,UACXvV,EAAEsW,OAAOf,UAAY,+BAErBvV,EAAEsW,OAAOf,UAAY,mCAM/BzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,gBAAgBS,QAAS,SAAAhW,GAAC,OAAIA,EAAEoW,oBAC5CtD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO1W,eAAgBkY,MAAM,kBACrChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KAAqC,IACrCzC,EAAApO,EAAAqO,cAAA,+BAA+B,KACzB,KAEVD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO3W,mBAAoBmY,MAAM,mBACzChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KAA2C,IAC3CzC,EAAApO,EAAAqO,cAAA,gCAAgC,KAC1B,KAEVD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOzW,uBAAwBiY,MAAM,gBAC7ChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KAAyC,IACzCzC,EAAApO,EAAAqO,cAAA,0BAA0B,KACpB,KAEVD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOxW,uBAAwBgY,MAAM,gBAC7ChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KAA2C,IAC3CzC,EAAApO,EAAAqO,cAAA,0BAA0B,KACpB,KAEVD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOvW,kBAAmB+X,MAAM,gBACxChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KAAuC,IACvCzC,EAAApO,EAAAqO,cAAA,8BAA8B,KACxB,SAMlBD,EAAApO,EAAAqO,cAAA,MACEgD,GAAG,cACHR,UAAU,WACVS,QAAS,SAAAhW,IA5IQ,SAACA,EAAG+V,GACzB/V,EAAEiW,iBAEF,IAAIX,EAAWpE,SAASgF,eAAeH,GACX,aAAvBT,EAASC,UACZD,EAASC,UAAY,kBAErBD,EAASC,UAAY,WAuIjBgB,CAAevW,EADN,iBAIX8S,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAG,KACP/C,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBADf,IACkCzC,EAAApO,EAAAqO,cAAA,4BAChCD,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,wBACdzC,EAAApO,EAAAqO,cAAA,KACEwC,UAAU,8BACVS,QAAS,SAAAhW,GACoB,gCAAvBA,EAAEsW,OAAOf,UACXvV,EAAEsW,OAAOf,UAAY,+BAErBvV,EAAEsW,OAAOf,UAAY,mCAM/BzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,gBAAgBS,QAAS,SAAAhW,GAAC,OAAIA,EAAEoW,oBAC5CtD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO9W,eAAgBsY,MAAM,aACrChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KAAyC,IACzCzC,EAAApO,EAAAqO,cAAA,2BAA2B,KACrB,KAEVD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOhX,qBAAsBwY,MAAM,UAC3ChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,0BADf,cAIFzC,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO/W,qBAAsBuY,MAAM,UAC3ChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,0BADf,gBAONzC,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOlX,UAAW0Y,MAAM,oBAChChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,IACkCzC,EAAApO,EAAAqO,cAAA,wBAGnChO,EAAK4O,SACJb,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOtW,eAAgB8X,MAAM,aACrChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KADF,IACuCzC,EAAApO,EAAAqO,cAAA,6BAIzC,GAEFD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOvX,YAAa+Y,MAAM,UAClChD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KADF,IACsCzC,EAAApO,EAAAqO,cAAA,8BAOxCyD,GAAqB,WAC1B,OACC1D,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,UAAd,aACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,iBACbzC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO3X,UAAWmZ,MAAM,2BAA0BhD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eAAzE,UACJzC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOzX,WAAYiZ,MAAM,cAAahD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eAA7D,WACJzC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO1X,aAAckZ,MAAM,cAAahD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAA/D,aACJzC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOjX,YAAayY,MAAM,UAAShD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,0BAA1D,kBACJzC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOlX,UAAW0Y,MAAM,QAAOhD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAzC,IAAyEzC,EAAApO,EAAAqO,cAAA,wBAC7ED,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOxX,WAAYgZ,MAAM,SAAQhD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KAA3C,gBASYkB,eACpB,SAAAA,EAAYxD,GAAM,IAAA3I,EAAA,OAAA/F,OAAAgG,GAAA,EAAAhG,CAAAwB,KAAA0Q,IACjBnM,EAAA/F,OAAAmS,GAAA,EAAAnS,CAAAwB,KAAAxB,OAAAoS,GAAA,EAAApS,CAAAkS,GAAAG,KAAA7Q,KAAMkN,KACD5H,MAAQ,CACZwL,gBAAiB,GAHDvM,qFASTnK,EAAK2H,aAGZ/B,KAAK6F,SAAS,CAACiL,gBAAiB,qCAMjC,OACI/D,EAAApO,EAAAqO,cAACV,GAAmByE,SAApB,KAA8B,SAACvG,GACQA,EAAhCiC,QADoC,IAC3BP,EAAuB1B,EAAvB0B,mBAEnB,OADEhS,QAAQC,IAAI,UAAU+R,EAAmBjN,cAEtC8N,EAAApO,EAAAqO,cAAA,WACGd,EAAmBjN,aAAarD,IAC/BmR,EAAApO,EAAAqO,cAACgE,GAAD,MAEAjE,EAAApO,EAAAqO,cAACiE,GAAD,gBA5B2B7D,aCjOxB8D,OAhCf,SAAgBhE,GAMf,OAECH,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACCpE,EAAApO,EAAAqO,cAAA,UAAQwC,UAAU,eACjBzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO3X,UAAW4Y,UAAU,QACrCzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,aAAYzC,EAAApO,EAAAqO,cAAA,cAA5B,MACAD,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,WAAUzC,EAAApO,EAAAqO,cAAA,gBAA1B,aAEDD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,4BACdzC,EAAApO,EAAAqO,cAAA,KAAG8C,GAAG,IAAIN,UAAU,iBAAiB4B,cAAY,YAAYC,cAAY,eAAeC,KAAK,SAASrB,aAASsB,GAC9GxE,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,WAAhB,aACAzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,aAChBzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,aAChBzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,kBCpBP,SAASgC,KAAO,IAEtBtF,EAAsBmD,qBAAW/C,IAAjCJ,mBAFsB8C,EAGEC,mBAAS,CAAEwC,MAAM,IAHnBvC,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAGtB0C,EAHsBxC,EAAA,GAGTyC,EAHSzC,EAAA,GAUvB0C,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAGzC,OACG7E,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAFF,eAE8C,KACpC,KAGZzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OA1BC,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAuBTE,CAAiB7X,KAEjC8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,MAECkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,yBAAyBuC,KAAK,iBAC1ChF,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO/W,sBACfuV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,mBAC0D,MAG5DzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,0BACZzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOhX,sBACfwV,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KAFF,mBAE0D,KAChD,MAIdzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,0BACXtD,EAAmBjN,aAAarD,IAC/BmR,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOvX,aACf+V,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KAFF,WAE6C,KACnC,KAGZzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOxX,YACfgW,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KAFF,yBAGU,KACA,OAKhB,iBCxEH,SAASwC,KAEpB,OACEjF,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,YAMJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,kCAGJD,EAAApO,EAAAqO,cAAA,kBACED,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,wHAKAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,4HAKAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,kFAIAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,wFAIAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,qEAQNzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,0BAGJD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,0LAMAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,sCAGAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,oGAIAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,oEAOJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,2BAEFD,EAAApO,EAAAqO,cAAA,sEAIFD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,sCAGAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,gBACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,WACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,eACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,sBACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,kBACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,aACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,uCACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,mDACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,gCACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,gBACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,WACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,YACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,uBACAzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,sCCnGOyC,eACpB,SAAAA,EAAY/E,GAAM,IAAA3I,EAAA,OAAA/F,OAAAgG,GAAA,EAAAhG,CAAAwB,KAAAiS,IACjB1N,EAAA/F,OAAAmS,GAAA,EAAAnS,CAAAwB,KAAAxB,OAAAoS,GAAA,EAAApS,CAAAyT,GAAApB,KAAA7Q,KAAMkN,KACD5H,MAAO,CAACW,QAAU1B,EAAK2I,MAAMjH,SAFjB1B,0EAKjB,OACCwI,EAAApO,EAAAqO,cAAA,OAAKwC,UAAW,kBACfzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAW,6BACfzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAW,aAAazC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAA,aAAQD,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQnS,KAAKsF,MAAMW,sBATnCmH,aCA9BgF,GAAwB,CACvBC,UAAU,GACV9W,MAAQ,GACRrC,MAAQ,GACRD,KAAM,GACNqZ,QAAS,GACTrM,QAAS,GAETsM,cAAe,EACfC,UAAY,GACZC,UAAY,IASpBC,GAAsB,CACd5E,YAAc,GACdjR,YAAc,GACdmR,WAAa,GACb2E,cAAgB,GAChBC,cAAgB,IAuObC,eAlOX,SAAAA,IAAc,IAAAtO,EAAA,OAAA/F,OAAAgG,GAAA,EAAAhG,CAAAwB,KAAA6S,IACVtO,EAAA/F,OAAAmS,GAAA,EAAAnS,CAAAwB,KAAAxB,OAAAoS,GAAA,EAAApS,CAAAqU,GAAAhC,KAAA7Q,QAaJ8S,OAAQ,SAAC7Y,GAEL,IAAI8Y,EAAevU,OAAOoO,OAAO,GAAGrI,EAAKe,MAAMyN,cAC/CA,EAAa9Y,EAAEsW,OAAOwB,MAAQ9X,EAAEsW,OAAO9K,MAEvClB,EAAKsB,SAAS,CACVkN,aAAaA,KApBPxO,EAwBdyO,oBAAqB,SAAC/Y,GAClBA,EAAEiW,iBACFhW,QAAQC,IAAIoK,EAAKe,MAAMyN,cACvB,IAAIvE,EAAO3J,KAAKiB,UAAUvB,EAAKe,MAAMyN,cACrC7Y,QAAQC,IAAIqU,GACZ,IAAIyE,EAAIzU,OAAA0U,GAAA,EAAA1U,CAAA+F,GAER8J,KAAMC,KAAK,eAAeE,GAAMvN,KAAM,SAASxB,GAC3C,GAAwB,MAApBA,EAASD,OACT,OAAOC,EAAS+O,OAErBvN,KAAK,SAASuN,GACb,IAAIvI,EAAUuI,EAAKvI,QACnBgN,EAAKpN,SAAS,CACVsN,cAAelN,MAGpB/E,MAAM,SAASC,GACd,IAAI8E,EAAU9E,EAAI8E,QAClBgN,EAAKpN,SAAS,CACV6F,cAAgBzF,OA5Cd1B,EAiDd6O,cAAgB,WACZ7O,EAAKG,SAAU,EACfH,EAAK8O,YAAe7U,OAAOoO,OAAO,GAAGrI,EAAKe,MAAM+N,aAChD,IAAIJ,EAAIzU,OAAA0U,GAAA,EAAA1U,CAAA+F,GAERA,EAAK+O,gBAAL9U,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAuB,SAAAC,IAAA,IAAA0U,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjV,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfkU,EAAqB,WAKrB,OAJqD,IAAjD3M,GAAMO,QAAQ5C,EAAKe,MAAMyN,aAAaxX,SACtC0X,EAAKI,YAAYvF,YAAc,8BAC/BmF,EAAKvO,SAAU,GAEZlG,OAAA0U,GAAA,EAAA1U,CAAA+F,IAGPiP,EAAqB,WAKvB,OAJ2D,IAAvD5M,GAAMY,cAAcjD,EAAKe,MAAMyN,aAAa7Z,SAC5C+Z,EAAKI,YAAYxW,YAAc,yBAC/BoW,EAAKvO,SAAU,GAEZlG,OAAA0U,GAAA,EAAA1U,CAAA+F,IAGLkP,EAAoB,WAKpB,OAJmD,IAA/C7M,GAAMmB,OAAOxD,EAAKe,MAAMyN,aAAa9Z,QACrCga,EAAKI,YAAYrF,WAAa,wBAC9BiF,EAAKvO,SAAU,GAEZlG,OAAA0U,GAAA,EAAA1U,CAAA+F,IAGPmP,EAAuB,WAKvB,OAJuD,IAAnD9M,GAAMO,QAAQ5C,EAAKe,MAAMyN,aAAaT,WACtCW,EAAKI,YAAYV,cAAgB,2BACjCM,EAAKvO,SAAU,GAEZlG,OAAA0U,GAAA,EAAA1U,CAAA+F,IAGPoP,EAAuB,WAKvB,OAJuD,IAAnD/M,GAAMO,QAAQ5C,EAAKe,MAAMyN,aAAa9M,WACtCgN,EAAKI,YAAYT,cAAgB,2BACjCK,EAAKvO,SAAU,GAEZlG,OAAA0U,GAAA,EAAA1U,CAAA+F,IAtCQpF,EAAAE,KAAA,EAyCbkU,IAzCa,cAAApU,EAAAE,KAAA,EA0CbmU,IA1Ca,cAAArU,EAAAE,KAAA,GA2CboU,IA3Ca,eAAAtU,EAAAE,KAAA,GA4CbqU,IA5Ca,eAAAvU,EAAAE,KAAA,GA6CbsU,IA7Ca,eAAAxU,EAAAQ,OAAA,SAiDZsT,EAAKvO,SAjDO,yBAAAvF,EAAAS,SAAAf,MAoDvB,IAAIuP,EAAU7J,EAAK+O,kBAKnB,OAHA/O,EAAKsB,SAAS,CACVwN,YAAc9O,EAAK8O,cAEhBjF,GA5GP7J,EAAKe,MAAQ,CACTyN,aAAYvU,OAAAe,GAAA,EAAAf,CAAA,GAAO4T,IACnBiB,YAAY7U,OAAAe,GAAA,EAAAf,CAAA,GAAKkU,IACjBS,cAAgB,IAEpB5O,EAAKuO,OAASvO,EAAKuO,OAAOc,KAAZpV,OAAA0U,GAAA,EAAA1U,CAAA+F,IACdA,EAAKyO,oBAAsBzO,EAAKyO,oBAAoBY,KAAzBpV,OAAA0U,GAAA,EAAA1U,CAAA+F,IAC3BA,EAAK6O,cAAgB7O,EAAK6O,cAAcQ,KAAnBpV,OAAA0U,GAAA,EAAA1U,CAAA+F,IAVXA,0EAkHL,IAAAsP,EAAA7T,KAEL,OACA+M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACfzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACXzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,IAA2BzC,EAAApO,EAAAqO,cAAA,kBAASD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KAAT,mBAE/BzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIwC,UAAU,eACVuC,KAAK,QACL+B,YAAY,QACZrO,MAAOzF,KAAKsF,MAAMyN,aAAaxX,MAC/BoR,SAAU,SAAA1S,GAAC,OAAI4Z,EAAKf,OAAO7Y,MAE7B+F,KAAKsF,MAAM+N,YAAYvF,YAAef,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASjG,KAAKsF,MAAM+N,YAAYvF,cAAiB,IAE1Gf,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIwC,UAAU,eACVuC,KAAK,QACL+B,YAAY,QACZrO,MAAOzF,KAAKsF,MAAMyN,aAAa7Z,MAAOyT,SAAU,SAAA1S,GAAC,OAAI4Z,EAAKf,OAAO7Y,MAEnE+F,KAAKsF,MAAM+N,YAAYxW,YAAekQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASjG,KAAKsF,MAAM+N,YAAYxW,cAAiB,IAE1GkQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIwC,UAAU,eACVuC,KAAK,OACL+B,YAAY,OACZrO,MAAOzF,KAAKsF,MAAMyN,aAAa9Z,KAC/B0T,SAAU,SAAA1S,GAAC,OAAI4Z,EAAKf,OAAO7Y,MAE7B+F,KAAKsF,MAAM+N,YAAYrF,WAAcjB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASjG,KAAKsF,MAAM+N,YAAYrF,aAAgB,IAExGjB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIwC,UAAU,eACVuC,KAAK,UACL+B,YAAY,UACZrO,MAAOzF,KAAKsF,MAAMyN,aAAaT,QAC/B3F,SAAU,SAAA1S,GAAC,OAAI4Z,EAAKf,OAAO7Y,MAE7B+F,KAAKsF,MAAM+N,YAAYV,cAAiB5F,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASjG,KAAKsF,MAAM+N,YAAYV,gBAAmB,IAE9G5F,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,YACIwC,UAAU,eACVuC,KAAK,UACL+B,YAAY,UACZrO,MAAOzF,KAAKsF,MAAMyN,aAAa9M,QAC/B0G,SAAU,SAAA1S,GAAC,OAAI4Z,EAAKf,OAAO7Y,MAE7B+F,KAAKsF,MAAM+N,YAAYT,cAAiB7F,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASjG,KAAKsF,MAAM+N,YAAYT,gBAAkB,IAE7G7F,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cAEXzC,EAAApO,EAAAqO,cAAA,UACIlB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GACL,IAAIgZ,EAAOY,EACXA,EAAKT,gBAAgBnS,KAAK,SAASmN,GAC1BA,GAID6E,EAAKpN,SAAS,CACV6F,cAAe,8BAGnBxR,QAAQC,IAAI,sCAPZ8Y,EAAKD,oBAAoB/Y,KAS9BiH,MAAM,SAASC,GACd8R,EAAKpN,SAAS,CACV6F,cAAevK,EAAI8E,UAEvB/L,QAAQC,IAAI,8CAIpB4S,EAAApO,EAAAqO,cAAA,kBAASD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAT,oBAEJzC,EAAApO,EAAAqO,cAAA,UACIlB,KAAM,SACN0D,UAAW,yBACXuC,KAAM,QACN9B,QAAS,SAAAhW,GACL4Z,EAAKhO,SAAS,CACVkN,aAAYvU,OAAAe,GAAA,EAAAf,CAAA,GAAO4T,IACnBiB,YAAY7U,OAAAe,GAAA,EAAAf,CAAA,GAAKkU,IACjBS,cAAgB,OAIxBpG,EAAApO,EAAAqO,cAAA,cAAQD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAW,gBAAd,KAAR,aAKRzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACHzC,EAAApO,EAAAqO,cAAA,SAAIhN,KAAKsF,MAAM6N,yBA1NT/F,qBC9Bf,SAAS4G,KACtB,OACEjH,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,sBAMJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,oBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KADF,uBAMJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,kCACAD,EAAApO,EAAAqO,cAAA,qCAEFD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,wCACAD,EAAApO,EAAAqO,cAAA,6BAEFD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,qCACAD,EAAApO,EAAAqO,cAAA,mDAEFD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,kCACAD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,qBAAR,iBACI,IAJR,IAMElH,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,+BAAR,iBACI,IARR,KAWAlH,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,mCACAD,EAAApO,EAAAqO,cAAA,wCAEFD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,yBACAD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,kBAAR,mBAGJlH,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,yBACAD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,kBAAR,uBAOZlH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACEkF,IAAI,2TACJ1C,UAAU,YACV0E,OAAO,MACPC,MAAM,MACNC,iBAAe,EACfC,YAAY,YC3Ef,SAASC,KAAU,IAAAtF,EACHC,mBAAS,gBADNC,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAC1BuF,EAD0BrF,EAAA,GACjBsF,EADiBtF,EAAA,GAAAuF,EAEDxF,mBAAS,CAAEwC,MAAM,IAFhBiD,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEzB/C,EAFyBgD,EAAA,GAEZ/C,EAFY+C,EAAA,GAU1B9C,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAiBzC,OACG7E,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,oBAGAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OArCC,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAkCTE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAgC,KAEjCkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,cACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,kBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KANF,gBASAzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,qBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KANF,oBAUA,QAIG,iBAAZ+E,EAA6BxH,EAAApO,EAAAqO,cAAC2H,GAAD,MAAsB,GACvC,oBAAZJ,EAAgCxH,EAAApO,EAAAqO,cAAC4H,GAAD,MAAqB,iBCtD9D,IAEeC,GAFOC,IAAMC,WAnB5B,SAAAxW,EAMMyW,GAAI,IALFlJ,EAKEvN,EALFuN,KACAgI,EAIEvV,EAJFuV,YACA/B,EAGExT,EAHFwT,KACAvC,EAEEjR,EAFFiR,UACA7C,EACEpO,EADFoO,SAEN,OACII,EAAApO,EAAAqO,cAAA,SACEgI,IAAKA,EACLlJ,KAAMA,EACN0D,UAAWA,EACXuC,KAAMA,EACN+B,YAAaA,EACbnH,SAAYA,MCoBLsI,eA/Bd,SAAAA,EAAY/H,GAAM,IAAA3I,EAAA,OAAA/F,OAAAgG,GAAA,EAAAhG,CAAAwB,KAAAiV,IACjB1Q,EAAA/F,OAAAmS,GAAA,EAAAnS,CAAAwB,KAAAxB,OAAAoS,GAAA,EAAApS,CAAAyW,GAAApE,KAAA7Q,KAAMkN,KACD5H,MAAQ,CAACW,QAAU1B,EAAK2I,MAAMjH,QAClCwH,aAAelJ,EAAK2I,MAAMO,cAHVlJ,0EAMjB,OACCwI,EAAApO,EAAAqO,cAAA,OAAKwC,UAAW,YACfzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAW,kBAEfzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAW,aACfzC,EAAApO,EAAAqO,cAAA,UACClB,KAAM,SACN0D,UAAW,qCAEVzC,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KAAJ,IAA4CzC,EAAApO,EAAAqO,cAAA,iBAASD,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQnS,KAAKsF,MAAMW,UAAxC,kBAhBxBmH,aCQb,SAAS8H,KAAQ,IAAAlG,EAEHC,mBAAS5B,IAFN6B,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAEvBmG,EAFuBjG,EAAA,GAEhBkG,EAFgBlG,EAAA,GAAAuF,EAGHxF,mBAAS3B,IAHNoH,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAGvBY,EAHuBX,EAAA,GAGhBY,EAHgBZ,EAAA,GAAAa,EAIHtG,mBAASzB,IAJNgI,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAIvBE,EAJuBD,EAAA,GAIhBE,EAJgBF,EAAA,GAMxBG,EAAcC,iBAAO,MACrBC,EAAcD,iBAAO,MACrBE,EAAYF,iBAAO,MARKG,EAUC9G,mBAAS,CAAEwC,MAAM,IAVlBuE,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAUvBrE,EAVuBsE,EAAA,GAUVrE,EAVUqE,EAAA,GAkBxBpE,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAKjCqE,EAAe,SAAAhc,GAChBmb,EAAU5W,OAAAe,GAAA,EAAAf,CAAA,GAAI2W,EAAL3W,OAAA0X,GAAA,EAAA1X,CAAA,GAAavE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,UAG5C0Q,EAAW,eAAA5X,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAAyK,EAAA0R,EAAAC,EAAAC,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdqF,GAAU,EACR0R,EAAiB,WACrB,OAA4C,IAAzCxP,GAAMY,cAAc2N,EAAOrW,YAC1BwW,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAa9H,eAAgB,uBAC/B,IAKP8I,EAAiB,WACrB,QAAGzP,GAAMO,QAAQgO,EAAOpZ,YACtBuZ,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYvY,eAAe,qCAC7B,IAKLwZ,EAAW,WAIf,OAHmB5R,IAAnB0R,KAA8C1R,EAC3BA,IAAnB2R,KAA8C3R,GApB9BvF,EAAAE,KAAA,EAwBLiX,IAxBK,cAAAnX,EAAAQ,OAAA,SAAAR,EAAAqB,MAAA,wBAAArB,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GAgCnB,OALAyP,oBAAU,WACTiG,EAAYY,QAAQC,SAElB,IAGDzJ,EAAApO,EAAAqO,cAACV,GAAmByE,SAApB,KAA8B,SAACvG,GAC7BtQ,QAAQC,IAAI,yBAAyBqQ,GADI,IAGvCiC,EAEEjC,EAFFiC,QAIA3N,GAFE0L,EADF0B,mBAIEiJ,EADFrW,UAAS/C,EACPoZ,EADOpZ,SAEX,OACEgR,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,gBAKFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OA1EH,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAuELE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAgC,KAEjCkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,0BAEZzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOrX,sBACX6V,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADN,qBAIAzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,0BACXzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOtX,aACZ8V,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADL,gBAKH,QAORzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,QACEwC,UAAU,kBACViH,SAAU,SAAAxc,GAAC,OAAIwS,EAAQ3N,EAAU/C,KAEjCgR,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAC0J,GAAD,CACE5K,KAAK,OACL0D,UAAU,eACVuC,KAAK,WACL+B,YAAY,aACZkB,IAAKW,EACLlQ,MAAO0P,EAAOrW,SACd6N,SAAU,SAAA1S,GAAC,OAAIgc,EAAahc,MAE7Bob,EAAO9H,eACNR,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO9H,iBAE7B,IAGJR,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAC0J,GAAD,CACE5K,KAAK,WACL0D,UAAU,eACVuC,KAAK,WACL+B,YAAY,WACZkB,IAAKa,EACLpQ,MAAO0P,EAAOpZ,SACd4Q,SAAU,SAAA1S,GAAC,OAAIgc,EAAahc,MAE7Bob,EAAOvY,eACNiQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOvY,iBAE7B,IAGJiQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVwF,IAAKc,EACL7F,QAAS,SAAAhW,GAAC,OACRkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAClBA,EACIgR,EAAU,CACRzP,QAAS,0BACTwH,aAAc,UAEhBhB,EAAQ3N,EAAU/C,OAI1BgR,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,WAIFzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GACPmb,EAAU/H,IACViI,EAAUhI,IACVoI,EAAUlI,MAGZT,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,YAKJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,UCtML,SAASmJ,KACpB,OACE7J,EAAApO,EAAAqO,cAACV,GAAmByE,SAApB,KAA8B,SAACvG,GAAY,IAEnCkC,EACAlC,EADAkC,SAEJ,OACEK,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KADF,WAIAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO3X,WACfmW,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,qCAEVzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAgC,IAJlC,UAOFzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOxX,YACfgW,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,qCAEVzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KAAmC,IAJrC,aAUNzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,iBACVuC,KAAK,SACL9B,QAAS,SAAAhW,GACPyS,MAIFK,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KAAoC,IACpCzC,EAAApO,EAAAqO,cAAA,iCCtCtB,IA6Oe6J,GA7OA,WAAM,IAAA7H,EACMC,mBAASvB,IADfwB,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACVhQ,EADUkQ,EAAA,GACLE,EADKF,EAAA,GAAAuF,EAEUxF,mBAASpB,IAFnB6G,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEVY,EAFUX,EAAA,GAEHY,EAFGZ,EAAA,GAAAa,EAGUtG,mBAASzB,IAHnBgI,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAGVE,EAHUD,EAAA,GAGHE,EAHGF,EAAA,GAAAsB,EAIsBzH,qBAAW/C,IAAjCJ,GAJA4K,EAITrK,QAJSqK,EAIA5K,oBAEX6K,EAAU,eAAAxY,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,OAAAyE,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLjF,EAAKkE,iCAAiCU,EAAK9F,MAAM8F,EAAKjD,UAAUkF,KAAK,SAAA+V,GACvE9c,QAAQC,IAAI6c,GACZ,IAAI7I,EAAS3P,OAAAe,GAAA,EAAAf,CAAA,GAAOQ,GACpBmP,EAAUvS,IAAMsQ,EAAmBjN,aAAarD,IAChDuS,EAAYtJ,KAAKiB,UAAUqI,GAE3BwB,GAAoBxB,GAAWlN,KAAK,SAAAlC,GAC5BA,EAAOS,QACPkW,EAAU,CAACzP,QAAQ,4BAA4BwH,aAAa,SAC5D2B,EAAQrQ,EAAOgN,UAEf2J,EAAU,CAACzP,QAAQ,8DAA8DwH,aAAa,YAEnGvM,MAAM,SAAAxB,GACLgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,cAGnDvM,MAAM,SAAAxB,GACLgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,YAnBvC,cAAAtO,EAAAQ,OAAA,UAsBJ,GAtBI,wBAAAR,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GAiCVkW,EAAW,eAAAhW,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAAyK,EAAAuS,EAAAC,EAAAC,EAAAC,EAAAf,EAAAgB,EAAAf,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACZqF,GAAU,EAERuS,EAAc,WAChB,QAAGrQ,GAAMO,QAAQnI,EAAKzD,SAClB+Z,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYvH,YAAc,kCAC5B,IAIToJ,EAAgB,WAClB,QAAGtQ,GAAMO,QAAQnI,EAAKxD,WAClB8Z,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYtH,cAAe,oCAC7B,IAIToJ,EAAa,WACf,OAA+B,IAA5BvQ,GAAMmB,OAAO/I,EAAK/F,QACjBqc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYrH,WAAW,4BACzB,IAIToJ,EAAc,WAChB,OAAuC,IAApCxQ,GAAMY,cAAcxI,EAAK9F,SACxBoc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYxY,YAAY,+BAC1B,IAITwZ,EAAiB,WACnB,QAAGzP,GAAMO,QAAQnI,EAAKjD,YAClBuZ,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAavY,eAAiB,qCAChC,IAITua,EAAqB,WACvB,OAAIrY,EAAKjD,WAAaiD,EAAK2O,iBACvB2H,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAapH,qBAAqB,6BACpC,IAKTqI,EAAW,WAQb,OAPgB5R,IAAhBuS,KAA2CvS,EACzBA,IAAlBwS,KAA6CxS,EAC9BA,IAAfyS,KAA0CzS,EAC1BA,IAAhB0S,KAA2C1S,EACxBA,IAAnB2R,KAA8C3R,EACvBA,IAAvB2S,KAAkD3S,GApDtCpE,EAAAjB,KAAA,GAyDHiX,IAzDG,eAAAhW,EAAAX,OAAA,SAAAW,EAAAE,MAAA,yBAAAF,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GA4DjB,OACE8M,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KAFF,aAMFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,GACRxB,EAAApO,EAAAqO,cAAA,UAAQlB,KAAK,SAAS0D,UAAU,2BAC9BzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,SAC2C,SAQjDzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,4BACZzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,WACZrO,MAAOzG,EAAKzD,MACZoR,SAAU,SAAA1S,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAG5D4P,EAAOvH,YAAcf,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOvH,cAAkB,IAEzEf,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,OACL0D,UAAU,eACVuC,KAAK,UACL+B,YAAY,aACZrO,MAAOzG,EAAKxD,QACZmR,SAAU,SAAA1S,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAG5D4P,EAAOtH,cAAgBhB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOtH,gBAAoB,IAE7EhB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACL+B,YAAY,UACZrO,MAAOzG,EAAK/F,KACZ0T,SAAU,SAAA1S,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAG5D4P,EAAOrH,WAAajB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOrH,aAAiB,IAEvEjB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,WACZrO,MAAOzG,EAAK9F,MACZyT,SAAU,SAAA1S,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAG5D4P,EAAOxY,YAAckQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOxY,cAAkB,IAEzEkQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,OACL0D,UAAU,eACVuC,KAAK,WACL+B,YAAY,cACZrO,MAAOzG,EAAKjD,SACZ4Q,SAAU,SAAA1S,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAE5D4P,EAAOvY,eAAiBiQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOvY,iBAAqB,IAG/EiQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,OACL0D,UAAU,eACVuC,KAAK,iBACL+B,YAAY,qBACZrO,MAAOzG,EAAK2O,eACZhB,SAAU,SAAA1S,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAE5D4P,EAAOpH,qBAAuBlB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOpH,uBAA2B,IAE3FlB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,UACIlB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,SACL9B,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAC9BA,EACIgR,EAAU,CAACzP,QAAS,wBAAwBwH,aAAa,UACzDsJ,EAAW9c,GAAGgH,KAAK,SAAAlC,UAK3BgO,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KAAmC,IAZvC,WAeAzC,EAAApO,EAAAqO,cAAA,UACIlB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,QACL9B,QAAS,SAAAhW,GACLmV,EAAQ1B,IACR4H,EAAUzH,IACV6H,EAAUlI,MAGdT,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAAkC,IAVtC,UAeJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACViG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,QCxOvG,SAAS6J,KAQvB,OACGvK,EAAApO,EAAAqO,cAACV,GAAmByE,SAApB,KAA8B,SAACvG,GAIzBA,EAFFiC,QAFuC,IAGvCP,EACE1B,EADF0B,mBAEuBA,EAAmBjN,aACzCrD,IAKH,OACEmR,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,gBACfzC,EAAApO,EAAAqO,cAAA,WAASwC,UAAU,WACjBzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,OACEkF,IAAI,4BACJlC,GAAG,qBACHR,UAAU,aACV+H,IAAI,iBAGRxK,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACZtD,EAAmBjN,aAAarD,IAC/BmR,EAAApO,EAAAqO,cAAA,KAAGgD,GAAG,qBACJjD,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOvX,aAAjB,YAGF+V,EAAApO,EAAAqO,cAAA,KAAGgD,GAAG,qBACJjD,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOxX,YAAjB,aAORgW,EAAApO,EAAAqO,cAAA,QACEyJ,SAAU,SAAAxc,GAAC,OA9CX,SAAAA,GACdA,EAAEiW,iBACFhW,QAAQC,IAAI,qBA4CiBqd,CAASvd,IACxBwd,OAAO,MACPjI,UAAU,gBAEVzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,eACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACLiG,KAAK,IACLvC,UAAU,eACVsE,YAAY,cAEd/G,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACLiG,KAAK,SACL/B,GAAG,aACHR,UAAU,gBAEVzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAMrBzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,gBACZzC,EAAApO,EAAAqO,cAAC0K,GAAD,YC9ED,SAASC,KACpB,OACI5K,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,8BACXzC,EAAApO,EAAAqO,cAAA,UAAQwC,UAAU,eACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,wBACXzC,EAAApO,EAAAqO,cAAA,iBADJ,IACgBD,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAR,aAEhBlH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,uBACfzC,EAAApO,EAAAqO,cAAA,qCAA8BD,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAR,cAA9B,MALJ,yBCCG,SAAS2D,KAAQ,IAAA5I,EACLC,mBAAS,CAAC/V,MAAM,KADXgW,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACvB9V,EADuBgW,EAAA,GACjB2I,EADiB3I,EAAA,GAAAuF,EAEHxF,mBAAS,CAACpS,YAAc,KAFrB6X,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEhBa,GAFgBZ,EAAA,GAAAA,EAAA,IAAAa,EAGHtG,mBAASzB,IAHNgI,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAGvBE,EAHuBD,EAAA,GAGhBE,EAHgBF,EAAA,GAM/B,SAASsC,EAAoB7d,GAC5BA,EAAEiW,iBACAhW,QAAQC,IAAI,0BACZub,EAAU,CAACzP,QAAQ,yBAAyBwH,aAAa,SAK5D,OACGV,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACX,IACDzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,aAAb,KAFF,oBAGU,KAGZzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,GACRxB,EAAApO,EAAAqO,cAAA,UAAQlB,KAAK,SAAS0D,UAAU,oBAC9BzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,cAQRzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,QACEwC,UAAU,kBACViH,SAAU,SAAAxc,GAAC,OAAI6d,EAAkB7d,KAEjC8S,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,wFAKFD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACtBzC,EAAApO,EAAAqO,cAAA,SACClB,KAAK,QACL0D,UAAU,eACVuC,KAAK,QACLtM,MAAOvM,EAAMA,MACbyT,SAAU,SAAA1S,GAAC,OAAI4d,EAASrZ,OAAA0X,GAAA,EAAA1X,CAAA,GAAEvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAG5CsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GAAC,OAAI6d,EAAkB7d,KAEhC8S,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KAFF,aAKZzC,EAAApO,EAAAqO,cAAA,UACClB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GACFqb,EAAU,CAACzY,YAAc,KACzBgb,EAAS,CAAE3e,MAAO,KAClBwc,EAAUlI,MAGJT,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAFF,SAE0C,OAIhDzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,QCzFzG,IAAMsK,GAAgB,CACzBC,YAAc,GACdC,cAAgB,GAChBC,YAAc,GACdC,MAAQ,GACRC,cAAgB,GAChBC,aAAe,GACfC,aAAe,IAGNC,GAAuB,CAChCC,oBAAsB,GACtBC,kBAAoB,GACpBC,YAAc,GACdC,oBAAsB,GACtBC,mBAAqB,GACrBC,mBAAqB,IAGZC,GAAgB,CACpBld,IAAM,GACNoU,GAAI,GACJgI,YAAc,GACde,aAAc,GACdb,YAAa,GACbc,YAAa,GACbC,MAAO,GACPC,SAAU,MACVC,QAAS,GAGLC,GAAuB,CAChCC,kBAAoB,GACpBC,mBAAqB,GACrBb,kBAAoB,GACpBc,kBAAoB,GACpBC,YAAc,GACdC,eAAiB,IAGRC,GAAe,CACxB9d,IAAK,GACLoU,GAAI,GACJgI,YAAa,GACb2B,aAAc,GACdzB,YAAa,GACb0B,YAAc,GACdX,MAAO,GACPC,SAAU,OAGDW,GAAsB,CAC/BR,kBAAoB,GACpBS,mBAAoB,GACpBrB,kBAAmB,GACnBsB,kBAAmB,GACnBP,YAAa,GACbC,eAAgB,OAIPO,GAAwB,CACjCpe,IAAK,GACLqe,WAAa,GACbC,MAAO,GACPC,YAAa,GACbC,KAAM,GACN/S,SAAU,GACVgT,QAAU,GACVC,YAAa,IAGJC,GAA+B,CACxCC,iBAAmB,GACnBC,YAAc,GACdC,kBAAoB,GACpBC,WAAa,GACbC,eAAiB,GACjBC,cAAgB,GAChBC,kBAAoB,IAIXC,GAAuB,CAChCnf,IAAK,GACLof,IAAK,GACL/hB,KAAM,GACNC,MAAO,GACPC,IAAK,GACLqB,QAAS,IAIAygB,GAA8B,CACvCC,UAAY,GACZlN,WAAa,GACbnR,YAAc,GACdse,UAAY,GACZC,cAAgB,IAIPC,GAAY,CACrBC,QAAS,GACT1f,IAAK,GACL2f,YAAc,IACdC,aAAe,GACfC,WAAY,EACZC,UAAW,IACXC,IAAM,IACNC,MAAQ,KAGCC,GAAc,CACvBjgB,IAAK,GACLoQ,KAAM,GACN8P,WAAY,GAIHC,GAAa,CACjBngB,IAAK,GACLogB,WAAY,GACZC,aAAc,GACd/D,YAAa,GACbgE,iBAAkB,GAClBlB,IAAK,GACL/hB,KAAM,GACNC,MAAO,GACPsB,QAAS,IAGL2hB,GAAoB,CAC7BC,iBAAmB,GACnBC,mBAAqB,GACrB5D,kBAAoB,GACpB6D,uBAAyB,GACzBpB,UAAY,GACZlN,WAAa,GACbnR,YAAc,GACdue,cAAgB,IAIPmB,GAAe,CACnB3gB,IAAK,GACLoU,GAAI,GACJhK,KAAM,GACNwW,OAAQ,GACRC,WAAW,EACXC,iBAAkB,UAClBC,iBAAmB,IAGfC,GAAsB,CAC/BC,aAAgB,GAChBC,uBAAyB,ICzJhBC,GAAgB,eAAAxe,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAuP,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1B+O,EAAU,GADgBjP,EAAAE,KAAA,EAExBgP,KACHO,IAAIL,EAAOrW,uBACX+I,KAAK,SAAAlC,GACJ,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,0CAGnBtF,KAAK,SAAA+b,GACJ9iB,QAAQC,IAAI,qBAAsB6iB,GAClC5O,EAAO5P,OAAAye,GAAA,EAAAze,CAAOwe,KAEf9b,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,EAAMuG,WAhBQ,cAAA9G,EAAAQ,OAAA,SAmBvByO,GAnBuB,wBAAAjP,EAAAS,SAAAf,MAAH,yBAAAN,EAAAwB,MAAAC,KAAAC,YAAA,GAuBhBid,GAAe,eAAA/c,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAM+c,GAAN,IAAA/O,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACzB+O,EAAU,GADe9N,EAAAjB,KAAA,EAEvBgP,KACHO,IAAIL,EAAOrW,sBAAP,IAAA2W,OAAmCsO,IACvClc,KAAK,SAAAlC,GACJ,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,0CAGnBtF,KAAK,SAAA+b,GACJ9iB,QAAQC,IAAI,qBAAsB6iB,GAClC5O,EAAO5P,OAAAe,GAAA,EAAAf,CAAA,GAAOwe,KAEf9b,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,EAAMuG,WAhBO,cAAA3F,EAAAX,OAAA,SAmBtByO,GAnBsB,wBAAA9N,EAAAV,SAAAQ,MAAH,gBAAAP,GAAA,OAAAM,EAAAJ,MAAAC,KAAAC,YAAA,GAuBfmd,GAAoB,eAAA/c,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAMlF,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAC9B+O,EAAU,GADoBrN,EAAA1B,KAAA,EAE5BgP,KAAMO,IAAIL,EAAOrW,sBAAP,SAAA2W,OAAwCjT,IAAOqF,KAAK,SAAAlC,GAClE,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,+CAEjBtF,KAAK,SAAA+b,GACN5O,EAAO5P,OAAAye,GAAA,EAAAze,CAAOwe,KACb9b,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,EAAMuG,WAXc,cAAAlF,EAAApB,OAAA,SAc3ByO,GAd2B,wBAAArN,EAAAnB,SAAAkB,MAAH,gBAAAhB,GAAA,OAAAO,EAAAN,MAAAC,KAAAC,YAAA,GAkBpBod,GAAoB,eAAAxc,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,EAAM1F,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAC9B+O,EAAU,GADoB5M,EAAAnC,KAAA,EAE5BgP,KAAMO,IAAIL,EAAOpW,sBAAP,SAAA0W,OAAwCjT,IAAOqF,KAAK,SAAAlC,GAClE,GAAGA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,+CAEjBtF,KAAK,SAAAqc,GACNlP,EAAO5P,OAAAye,GAAA,EAAAze,CAAO8e,KACbpc,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,EAAMuG,WAXc,cAAAzE,EAAA7B,OAAA,SAa3ByO,GAb2B,wBAAA5M,EAAA5B,SAAA0B,MAAH,gBAAAZ,GAAA,OAAAG,EAAAd,MAAAC,KAAAC,YAAA,GAiBpBsd,GAAgB,eAAAlc,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,IAAA,IAAAuM,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAC1B+O,EAAU,GADgBtM,EAAAzC,KAAA,EAExBgP,KACHO,IAAIL,EAAOpW,uBACX8I,KAAK,SAAAlC,GACJ,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,0CAGnBtF,KAAK,SAAAqc,GACJlP,EAAO5P,OAAAye,GAAA,EAAAze,CAAO8e,KAEfpc,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,KAfc,cAAAoC,EAAAnC,OAAA,SAkBvByO,GAlBuB,wBAAAtM,EAAAlC,SAAAiC,MAAH,yBAAAR,EAAAtB,MAAAC,KAAAC,YAAA,GAqBhBud,GAAe,eAAA5b,EAAApD,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwD,EAAMqb,GAAN,IAAArP,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cACzB+O,EAAU,GADe/L,EAAAhD,KAAA,EAEvBgP,KACHO,IAAIL,EAAOpW,sBAAP,IAAA0W,OAAmC4O,IACvCxc,KAAK,SAAAlC,GACJ,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,0CAGnBtF,KAAK,SAAA+b,GACJ9iB,QAAQC,IAAI,qBAAsB6iB,GAClC5O,EAAO5P,OAAAe,GAAA,EAAAf,CAAA,GAAQwe,KAEhB9b,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,EAAMuG,WAhBO,cAAA5D,EAAA1C,OAAA,SAmBtByO,GAnBsB,wBAAA/L,EAAAzC,SAAAwC,MAAH,gBAAAzB,GAAA,OAAAiB,EAAA7B,MAAAC,KAAAC,YAAA,GAwBfyd,GAAe,eAAAvb,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA8D,EAAO0V,GAAP,IAAAhK,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cACvB+O,EAAU,GADazL,EAAAtD,KAAA,EAGrBgP,KAAMO,IAAIL,EAAOnW,yBAAyB6I,KAAK,SAAAlC,GACjD,GAAsB,MAAlBA,EAAOS,OACP,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,oDAErBtF,KAAK,SAAA0c,GACJA,EAAWxY,QAAQ,SAAAyY,GACdA,EAASxF,gBAAkBA,GAC5BhK,EAAQ5I,KAAKoY,OAGlB1c,MAAM,SAAAxB,GACLxF,QAAQC,IAAI,sBAAsBuF,EAAMuG,WAhBjB,cAAAtD,EAAAhD,OAAA,SAmBpByO,GAnBoB,wBAAAzL,EAAA/C,SAAA8C,MAAH,gBAAAhB,GAAA,OAAAS,EAAApC,MAAAC,KAAAC,YAAA,GAsBf4d,GAAY,eAAApb,EAAAjE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAoE,EAAO4a,GAAP,IAAAxP,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cACpB+O,EAAU,GADUnL,EAAA5D,KAAA,EAGlBgP,KAAMC,KAAKC,EAAOnW,wBAAwBwlB,GAAU3c,KAAK,SAAAlC,GAC3D,GAAsB,MAAlBA,EAAOS,OACP,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,4CAErBtF,KAAK,SAAA2c,GACJxP,EAAUwP,IACX1c,MAAM,SAAAxB,GACLxF,QAAQC,IAAI,gBAAgBuF,EAAMuG,WAZd,cAAAhD,EAAAtD,OAAA,SAejByO,GAfiB,wBAAAnL,EAAArD,SAAAoD,MAAH,gBAAAf,GAAA,OAAAQ,EAAA1C,MAAAC,KAAAC,YAAA,GAmBZ6d,GAAW,eAAA/a,EAAAvE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAmf,EAAMC,GAAN,IAAA5P,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,cACrB+O,EAAU,CAAC5O,QAAS,EAAKuM,QAAQ,GAAGrM,MAAM,IADrBue,EAAA5e,KAAA,EAInBgP,KAAMC,KAAKC,EAAOrW,sBAAsB8lB,GAAS/c,KAAK,SAAAlC,GACxD,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,2CAEnBtF,KAAK,SAAA+c,GACN5P,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAUiS,IAEjB9c,MAAM,SAAAxB,GACPxF,QAAQC,IAAI,qBAAqBuF,EAAMuG,SACvCmI,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAAQA,IAjBO,cAAAue,EAAAte,OAAA,SAoBlByO,GApBkB,wBAAA6P,EAAAre,SAAAme,MAAH,gBAAAxb,GAAA,OAAAQ,EAAAhD,MAAAC,KAAAC,YAAA,GAuBXie,GAAe,eAAAC,EAAA3f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwf,EAAMJ,GAAN,IAAA5P,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAmf,GAAA,cAAAA,EAAAjf,KAAAif,EAAAhf,MAAA,cACvB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADvB2e,EAAAhf,KAAA,EAGrBgP,KAAM/L,OAAOiM,EAAOrW,sBAAP,IAAA2W,OAAmCmP,EAAQpiB,IAA3C,KAAAiT,OAAkDmP,EAAQhO,KAAM/O,KAAK,SAAAlC,GACpF,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,OAEjBvN,KAAK,SAAA+c,GACN5P,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBwf,KAErB9c,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAbK,cAAA2e,EAAA1e,OAAA,SAepByO,GAfoB,wBAAAiQ,EAAAze,SAAAwe,MAAH,gBAAAvb,GAAA,OAAAsb,EAAApe,MAAAC,KAAAC,YAAA,GAmBfqe,GAAY,eAAAC,EAAA/f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA4f,EAAMC,GAAN,IAAArQ,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAwf,GAAA,cAAAA,EAAAtf,KAAAsf,EAAArf,MAAA,cACtB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADxBgf,EAAArf,KAAA,EAGpBgP,KAAMC,KAAKC,EAAOpW,sBAAsBsmB,GAASxd,KAAK,SAAAlC,GAC1D,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,2CAEjBtF,KAAK,SAAAwd,GACNrQ,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU0S,IACjBvd,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAAQA,IAdQ,cAAAgf,EAAA/e,OAAA,SAiBnByO,GAjBmB,wBAAAsQ,EAAA9e,SAAA4e,MAAH,gBAAAtb,GAAA,OAAAqb,EAAAxe,MAAAC,KAAAC,YAAA,GAqBZ0e,GAAa,eAAAC,EAAApgB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAigB,EAAMJ,GAAN,IAAArQ,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA4f,GAAA,cAAAA,EAAA1f,KAAA0f,EAAAzf,MAAA,cACvB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADvBof,EAAAzf,KAAA,EAGrBgP,KAAMK,IAAIH,EAAOpW,sBAAsBsmB,GAASxd,KAAK,SAAAlC,GACzD,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,yCAEjBtF,KAAK,SAAAwd,GACNrQ,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBigB,GACtBrQ,EAAQ1O,MAAQ,KAEfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAjBK,cAAAof,EAAAnf,OAAA,SAmBpByO,GAnBoB,wBAAA0Q,EAAAlf,SAAAif,MAAH,gBAAAE,GAAA,OAAAH,EAAA7e,MAAAC,KAAAC,YAAA,GAuBb+e,GAAa,eAAAC,EAAAzgB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAsgB,EAAMlB,GAAN,IAAA5P,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAigB,GAAA,cAAAA,EAAA/f,KAAA+f,EAAA9f,MAAA,cACvB+O,EAAU,CAAC5O,QAAS,EAAMuM,QAAS,GAAIrM,MAAQ,IADxByf,EAAA9f,KAAA,EAGrBgP,KAAMK,IAAIH,EAAOrW,sBAAsB8lB,GAAS/c,KAAK,SAAAlC,GACzD,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,yCAEjBtF,KAAK,SAAA+c,GACN5P,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAqBwf,GACrB5P,EAAQ1O,MAAQ,KAEfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAjBK,cAAAyf,EAAAxf,OAAA,SAmBpByO,GAnBoB,wBAAA+Q,EAAAvf,SAAAsf,MAAH,gBAAAE,GAAA,OAAAH,EAAAlf,MAAAC,KAAAC,YAAA,GAuBbof,GAAoB,eAAAC,EAAA9gB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA2gB,EAAM3jB,EAAIoU,GAAV,IAAA5B,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAsgB,GAAA,cAAAA,EAAApgB,KAAAogB,EAAAngB,MAAA,cAC9B+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADhB8f,EAAAngB,KAAA,EAG5BgP,KAAMO,IAAIL,EAAOrW,sBAAP,aAAA2W,OAA4CjT,EAA5C,KAAAiT,OAAmDmB,IAAM/O,KAAK,SAAAlC,GAC5E,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,qCAEjBtF,KAAK,SAAAwe,GACNrR,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAye,GAAA,EAAAze,CAAsBihB,GACtBrR,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAhBY,cAAA8f,EAAA7f,OAAA,SAkB3ByO,GAlB2B,wBAAAoR,EAAA5f,SAAA2f,MAAH,gBAAAG,EAAAC,GAAA,OAAAL,EAAAvf,MAAAC,KAAAC,YAAA,GA0CpB2f,GAAe,eAAAC,EAAArhB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkhB,EAAMrB,GAAN,IAAArQ,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA6gB,GAAA,cAAAA,EAAA3gB,KAAA2gB,EAAA1gB,MAAA,cACzB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADrBqgB,EAAA1gB,KAAA,EAGvBgP,KAAM/L,OAAOiM,EAAOpW,sBAAsBsmB,GAASxd,KAAK,SAAAlC,GAC5D,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,yCAEjBtF,KAAK,SAAAwd,GACNrQ,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBigB,GACtBrQ,EAAQ1O,MAAO,KACdwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAhBO,cAAAqgB,EAAApgB,OAAA,SAkBtByO,GAlBsB,wBAAA2R,EAAAngB,SAAAkgB,MAAH,gBAAAE,GAAA,OAAAH,EAAA9f,MAAAC,KAAAC,YAAA,GAqBfggB,GAAmB,eAAAC,EAAA1hB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAuhB,EAAMjE,GAAN,IAAA9N,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAkhB,GAAA,cAAAA,EAAAhhB,KAAAghB,EAAA/gB,MAAA,cAC7B+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADjB0gB,EAAA/gB,KAAA,EAG3BgP,KAAMC,KAAKC,EAAOlW,sBAAsB6jB,GAAkBjb,KAAK,SAAAlC,GACnE,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,oDAEjBtF,KAAK,SAAAof,GACNjS,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAUsU,IACjBnf,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAAQA,IAde,cAAA0gB,EAAAzgB,OAAA,SAiB1ByO,GAjB0B,wBAAAgS,EAAAxgB,SAAAugB,MAAH,gBAAAG,GAAA,OAAAJ,EAAAngB,MAAAC,KAAAC,YAAA,GAoBnBsgB,GAAoB,eAAAC,EAAAhiB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAE,SAAA6hB,EAAOta,EAAKC,GAAZ,IAAA3G,EAAA,OAAAf,GAAAC,EAAAO,KAAA,SAAAwhB,GAAA,cAAAA,EAAAthB,KAAAshB,EAAArhB,MAAA,cAC3BI,EAAW,GACI,CACjB7D,IAAKuK,GAHwBua,EAAArhB,KAAA,EAMzBgP,KAAMO,IAAIL,EAAOlW,sBAAP,IAAAwW,OAAmC1I,IAAQlF,KAAK,SAAAmN,GAC9D,GAAuB,MAAnBA,EAAQ5O,OACV,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,iDAEjBtF,KAAK,SAAAof,GACN5gB,EAAQjB,OAAAe,GAAA,EAAAf,CAAA,GAAO6hB,KACdnf,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,EAAMuG,WAfW,cAAAya,EAAA/gB,OAAA,SAkBxBF,GAlBwB,wBAAAihB,EAAA9gB,SAAA6gB,MAAF,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAzgB,MAAAC,KAAAC,YAAA,GAsBpB4gB,GAAkB,eAAAC,EAAAtiB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAmiB,EAAMC,GAAN,IAAA5S,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA+hB,GAAA,cAAAA,EAAA7hB,KAAA6hB,EAAA5hB,MAAA,cAC5B+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADlBuhB,EAAA5hB,KAAA,EAG1BgP,KAAMC,KAAKC,EAAOjW,qBAAsB0oB,GAAiB/f,KAAK,SAAAlC,GAClE,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,+CAEjBtF,KAAK,SAAAigB,GACN9S,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAUmV,IACjBhgB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAAQA,IAdc,cAAAuhB,EAAAthB,OAAA,SAgBzByO,GAhByB,wBAAA6S,EAAArhB,SAAAmhB,MAAH,gBAAAI,GAAA,OAAAL,EAAA/gB,MAAAC,KAAAC,YAAA,GAoBlBmhB,GAAmB,eAAAC,EAAA7iB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0iB,EAAOnb,EAAKC,GAAZ,IAAA3G,EAAA,OAAAf,GAAAC,EAAAO,KAAA,SAAAqiB,GAAA,cAAAA,EAAAniB,KAAAmiB,EAAAliB,MAAA,cAC3BI,EAAW,GADgB8hB,EAAAliB,KAAA,EAEzBgP,KAAMO,IAAIL,EAAOjW,qBAAP,IAAAuW,OAAkC1I,IAAQlF,KAAK,SAAAlC,GAC7D,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,gDAEjBtF,KAAK,SAAAigB,GACNzhB,EAAQjB,OAAAe,GAAA,EAAAf,CAAA,GAAO0iB,KAEdhgB,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,EAAMuG,WAZW,cAAAsb,EAAA5hB,OAAA,SAexBF,GAfwB,wBAAA8hB,EAAA3hB,SAAA0hB,MAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAthB,MAAAC,KAAAC,YAAA,GAoBnByhB,GAAS,eAAAC,EAAAnjB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAgjB,EAAMC,GAAN,IAAAzT,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA4iB,GAAA,cAAAA,EAAA1iB,KAAA0iB,EAAAziB,MAAA,cACjB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IAD7BoiB,EAAAziB,KAAA,EAGfgP,KAAMC,KAAKC,EAAOhW,kBAAmBspB,GACxC5gB,KAAK,SAAAlC,GACJ,GAAsB,MAAlBA,EAAOS,OACT,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,yCAGnBtF,KAAK,SAAA8gB,GACJ3T,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAye,GAAA,EAAAze,CAAsBujB,KAEvB7gB,MAAM,SAAAxB,GACL0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAqBkB,KAjBJ,cAmBrBxF,QAAQC,IAAI,yBAA0BiU,GAnBjB0T,EAAAniB,OAAA,SAoBdyO,GApBc,wBAAA0T,EAAAliB,SAAAgiB,MAAH,gBAAAI,GAAA,OAAAL,EAAA5hB,MAAAC,KAAAC,YAAA,GAyBTgiB,GAAY,eAAAC,EAAA1jB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAujB,EAAMvmB,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAkjB,GAAA,cAAAA,EAAAhjB,KAAAgjB,EAAA/iB,MAAA,cACtB+O,EAAU,CAAC5O,QAAS,EAAMuiB,WAAa,GAAIM,KAAO,GAAI3iB,MAAO,IADvC0iB,EAAA/iB,KAAA,EAGpBgP,KAAMO,IAAIL,EAAOhW,kBAAP,IAAAsW,OAA+BjT,IAAOqF,KAAK,SAAAlC,GACvD,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,sCAEnBtF,KAAK,SAAAqhB,GACJlU,EAAQ5O,QAAS,EACjB4O,EAAQiU,KAAOC,EAASD,KACxBjU,EAAQ2T,WAAaO,EAASP,aAC/B7gB,MAAM,SAAAxB,GACL0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAfE,cAAA0iB,EAAAziB,OAAA,SAkBnByO,GAlBmB,wBAAAgU,EAAAxiB,SAAAuiB,MAAH,gBAAAI,GAAA,OAAAL,EAAAniB,MAAAC,KAAAC,YAAA,GAsBZuiB,GAAU,eAAAC,EAAAjkB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA8jB,EAAM9mB,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAyjB,GAAA,cAAAA,EAAAvjB,KAAAujB,EAAAtjB,MAAA,cACpB+O,EAAU,CAAE5O,QAAQ,EAAMuiB,WAAY,GAAIM,KAAM,GAAI3iB,MAAO,IADvCijB,EAAAtjB,KAAA,EAElBgP,KAAM/L,OAAOiM,EAAOhW,kBAAP,IAAAsW,OAA+BjT,IAAOqF,KAAK,SAAAxB,GAC1D,GAAwB,MAApBA,EAASD,OACX,OAAOC,EAAS+O,KAEhB,MAAM,IAAIjI,MAAM,sCAEnBtF,KAAK,SAAAohB,GACNjU,EAAQ5O,QAAS,EACjB4O,EAAQ2T,WAAa,GACrB3T,EAAQiU,KAAO,KACdnhB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAdE,cAAAijB,EAAAhjB,OAAA,SAiBjByO,GAjBiB,wBAAAuU,EAAA/iB,SAAA8iB,MAAH,gBAAAE,GAAA,OAAAH,EAAA1iB,MAAAC,KAAAC,YAAA,GAqBV4iB,GAAe,eAAAC,EAAAtkB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAmkB,EAAMC,GAAN,IAAA5U,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA+jB,GAAA,cAAAA,EAAA7jB,KAAA6jB,EAAA5jB,MAAA,cACzB+O,EAAU,CAAE5O,QAAQ,EAAM0jB,YAAa,GAAIxjB,MAAO,IADzBujB,EAAA5jB,KAAA,EAGvBgP,KAAMK,IAAIH,EAAO/V,qBAAqBwqB,GAAQ/hB,KAAK,SAAAxB,GACvD,GAAwB,MAApBA,EAASD,OACX,OAAOC,EAAS+O,KAEhB,MAAM,IAAIjI,MAAM,2CAA2C9G,EAAS+O,QAErEvN,KAAK,SAAAxB,GACFA,EAAS0jB,SACX/U,EAAQ5O,OAASC,EAAS0jB,QAC1B/U,EAAQ8U,YAAR1kB,OAAAe,GAAA,EAAAf,CAAA,GAA2BiB,EAASujB,UAEpC5U,EAAQ5O,OAASC,EAAS0jB,QAC1B/U,EAAQ1O,MAAMuG,QAAUxG,EAASwG,WAElC/E,MAAM,SAAAxB,GACPxF,QAAQC,IAAI,qBAAqBuF,EAAMuG,SACvCmI,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KApBO,cAAAujB,EAAAtjB,OAAA,SAuBtByO,GAvBsB,wBAAA6U,EAAArjB,SAAAmjB,MAAH,gBAAAK,GAAA,OAAAN,EAAA/iB,MAAAC,KAAAC,YAAA,GA4BfojB,GAAU,eAAAC,EAAA9kB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA2kB,EAAM3nB,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAskB,GAAA,cAAAA,EAAApkB,KAAAokB,EAAAnkB,MAAA,cACpB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IAD1B8jB,EAAAnkB,KAAA,EAGlBgP,KAAMO,IAAIL,EAAO5V,mBAAP,IAAAkW,OAAgCjT,IAAOqF,KAAK,SAAAxB,GACxD,GAAuB,MAApBA,EAASD,OACV,OAAOC,EAAS+O,KAEhB,MAAM,IAAIjI,MAAM,0BAEnBtF,KAAK,SAAAwiB,GACNrV,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBilB,GACtBrV,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,GACpB0O,EAAQrC,QAAU,KAhBI,cAAAyX,EAAA7jB,OAAA,SAmBjByO,GAnBiB,wBAAAoV,EAAA5jB,SAAA2jB,MAAH,gBAAAG,GAAA,OAAAJ,EAAAvjB,MAAAC,KAAAC,YAAA,GAuBV0jB,GAAQ,eAAAC,EAAAplB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAilB,EAAOC,GAAP,IAAA1V,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA6kB,GAAA,cAAAA,EAAA3kB,KAAA2kB,EAAA1kB,MAAA,cAClB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IAD5BqkB,EAAA1kB,KAAA,EAEhBgP,KAAMC,KAAKC,EAAO5V,mBAAmBmrB,GAAc7iB,KAAK,SAAAxB,GAC1D,GAAuB,MAApBA,EAASD,OACR,OAAOC,EAAS+O,KAElB,MAAM,IAAIjI,MAAM,qCAEnBtF,KAAK,SAAAwiB,GACNrV,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBilB,GACtBrV,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,GACpB0O,EAAQrC,QAAU,KAfE,cAAAgY,EAAApkB,OAAA,SAiBfyO,GAjBe,wBAAA2V,EAAAnkB,SAAAikB,MAAH,gBAAAG,GAAA,OAAAJ,EAAA7jB,MAAAC,KAAAC,YAAA,GAsBRgkB,GAAiB,eAAAC,EAAA1lB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAulB,EAAMvoB,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAklB,GAAA,cAAAA,EAAAhlB,KAAAglB,EAAA/kB,MAAA,cAC3B+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADnB0kB,EAAA/kB,KAAA,EAGzBgP,KAAMO,IAAIL,EAAO3V,0BAAP,IAAAiW,OAAqCjT,IAAOqF,KAAK,SAAAxB,GAC/D,GAAuB,MAApBA,EAASD,OACV,OAAOC,EAAS+O,KAEhB,MAAM,IAAIjI,MAAM,8CAEjBtF,KAAK,SAAAojB,GACNjW,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAye,GAAA,EAAAze,CAAsB6lB,GACtBjW,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,GACpB0O,EAAQrC,QAAU,KAhBW,cAAAqY,EAAAzkB,OAAA,SAkBxByO,GAlBwB,wBAAAgW,EAAAxkB,SAAAukB,MAAH,gBAAAG,GAAA,OAAAJ,EAAAnkB,MAAAC,KAAAC,YAAA,GAqBjBskB,GAAiB,eAAAC,EAAAhmB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA6lB,EAAMC,GAAN,IAAAtW,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAylB,GAAA,cAAAA,EAAAvlB,KAAAulB,EAAAtlB,MAAA,cAC3B+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADnBilB,EAAAtlB,KAAA,EAEzBgP,KAAMC,KAAKC,EAAO3V,0BAA0B8rB,GAAoBzjB,KAAK,SAAAlC,GACzE,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,6CAEjBtF,KAAK,SAAA2jB,GACJxW,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBomB,GACtBxW,EAAQ1O,MAAQ,KACjBwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAfS,cAAAilB,EAAAhlB,OAAA,SAiBxByO,GAjBwB,wBAAAuW,EAAA/kB,SAAA6kB,MAAH,gBAAAI,GAAA,OAAAL,EAAAzkB,MAAAC,KAAAC,YAAA,GAqBjB6kB,GAAiB,eAAAC,EAAAvmB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAomB,EAAOhV,EAAGpU,GAAV,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA+lB,GAAA,cAAAA,EAAA7lB,KAAA6lB,EAAA5lB,MAAA,cAC3B+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADnBulB,EAAA5lB,KAAA,EAGzBgP,KAAM/L,OAAOiM,EAAO3V,0BAAP,IAAAiW,OAAqCjT,EAArC,KAAAiT,OAA4CmB,IAAM/O,KAAK,SAAAlC,GACxE,GAAsB,MAAnBqP,EAAQ5O,OACT,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,8CAEjBtF,KAAK,SAAAojB,GACNjW,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAye,GAAA,EAAAze,CAAsB6lB,GACtBjW,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAhBS,cAAAulB,EAAAtlB,OAAA,SAkBxByO,GAlBwB,wBAAA6W,EAAArlB,SAAAolB,MAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAhlB,MAAAC,KAAAC,YAAA,GAsBjBmlB,GAAa,eAAAC,EAAA7mB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0mB,EAAO1pB,GAAP,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAqmB,GAAA,cAAAA,EAAAnmB,KAAAmmB,EAAAlmB,MAAA,cACvB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADvB6lB,EAAAlmB,KAAA,EAGrBgP,KAAMO,IAAIL,EAAO7V,kBAAP,IAAAmW,OAA+BjT,IAAOqF,KAAK,SAAAlC,GACvD,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,OAGjBvN,KAAK,SAAAjC,GACNoP,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBQ,GACtBoP,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAfK,cAAA6lB,EAAA5lB,OAAA,SAiBpByO,GAjBoB,wBAAAmX,EAAA3lB,SAAA0lB,MAAH,gBAAAE,GAAA,OAAAH,EAAAtlB,MAAAC,KAAAC,YAAA,GAqBbwlB,GAAc,eAAAC,EAAAlnB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA+mB,EAAOC,GAAP,IAAAxX,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA2mB,GAAA,cAAAA,EAAAzmB,KAAAymB,EAAAxmB,MAAA,cACxB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IADtBmmB,EAAAxmB,KAAA,EAGtBgP,KAAMK,IAAIH,EAAO3V,0BAA0BgtB,GAAW3kB,KAAK,SAAAlC,GAC3D,GAAqB,MAAlBA,EAAOS,OACR,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,2CAErBtF,KAAK,SAAA2kB,GACNxX,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBonB,GACtBxX,EAAQ1O,MAAQ,KACfwB,MAAM,SAAAxB,GACP0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAS,GACjBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAhBM,cAAAmmB,EAAAlmB,OAAA,SAkBrByO,GAlBqB,wBAAAyX,EAAAjmB,SAAA+lB,MAAH,gBAAAG,GAAA,OAAAJ,EAAA3lB,MAAAC,KAAAC,YAAA,GCjoBrB8lB,YAAU,SAAAxnB,GAAkC,IAAhCyf,EAAgCzf,EAAhCyf,QAAQgI,EAAwBznB,EAAxBynB,mBAAwBhX,EACrBC,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SADbyB,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACzCyG,EADyCvG,EAAA,GAClCwG,EADkCxG,EAAA,GAAA4H,EAERzH,qBAAW/C,IAA3CJ,EAFwC4K,EAExC5K,mBAEF+Z,GAJ0CnP,EAEpBrK,QAEX,eAAAtM,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAMmf,GAAN,OAAAtf,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAElBnF,QAAQC,IAAI,gCAAgC6jB,IACxC9R,EAAmBjN,aAAarD,IAHlB,CAAAuD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKV2mB,EAAmBhI,GACtB/c,KAAK,SAAAqhB,GACAA,EAAS9iB,OACXkW,EAAU,CACRzP,QAAO,qBAAA4I,OAAuBmP,EAAQjF,aAA/B,gBAGTrD,EAAU,CACRzP,QAASqc,EAAS5iB,MAAMuG,QACxBwH,aAAc,YAInBvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAnBtC,OAAAtO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsB,GAAAtB,EAAA,SAsBhBuW,EAAU,CAAEzP,QAAS9G,EAAAsB,GAAMwF,QAASwH,aAAc,UAtBlC,QAAAtO,EAAAE,KAAA,iBAyBlBqW,EAAU,CAACzP,QAAQ,4GAA4GwH,aAAa,UAzB1H,yBAAAtO,EAAAS,SAAAf,EAAA,iBAAH,gBAAAgB,GAAA,OAAAM,EAAAJ,MAAAC,KAAAC,YAAA,IA+BjB,OACE8M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YAAYO,MAAOiO,EAAQ9F,aACtC8F,EAAQjF,cAEXhM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,qCACVS,QAAS,SAAAhW,GAAC,OAAIgsB,EAAYjI,IAC1BjO,MAAK,OAAAlB,OAASmP,EAAQjF,aAAjB,eAJP,KAMKiF,EAAQ/E,MANb,uBAUJlM,EAAApO,EAAAqO,cAAA,OACEwC,UAAU,aACV0C,IAAK8L,EAAQhF,YACbzB,IAAKyG,EAAQjF,aACbhJ,MAAK,2BAAAlB,OAEOmP,EAAQjF,aAFf,oDAAAlK,OAIDmP,EAAQ9F,YAJP,gHAAArJ,OAQSmP,EAAQ/E,MARjB,uBAWPlM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,YAAOgR,EAAQ9F,aACfnL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,oCACVS,QAAS,SAAAhW,GAAC,OAAIgsB,EAAYjI,IAC1BjO,MAAK,OAAAlB,OAASmP,EAAQjF,aAAjB,gBAJP,KAMKiF,EAAQ/E,MANb,qBAQCxD,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,WAWnG,SAASyY,KAAW,IAAAzR,EACAxF,mBAAS,IADTyF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GACxBuI,EADwBtI,EAAA,GACfyR,EADezR,EAAA,GAAAa,EAEItG,mBAAS,IAFbuG,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAExBoI,EAFwBnI,EAAA,GAEb4Q,EAFa5Q,EAAA,GAAAO,EAGW9G,mBAAS,IAHpB+G,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAGxBsQ,EAHwBrQ,EAAA,GAGTsQ,EAHStQ,EAAA,GAAAuQ,EAIUtX,mBAAS,IAJnBuX,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAIxBE,EAJwBD,EAAA,GAITE,EAJSF,EAAA,GAAAG,EAMY1X,mBAAS,IANrB2X,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAMTE,GANSD,EAAA,GAAAA,EAAA,IAAAE,EAOD7X,mBAAS,CAACwC,MAAK,IAPdsV,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAOxBpV,EAPwBqV,EAAA,GAOZpV,EAPYoV,EAAA,GAAAC,EAQN/X,mBAAS,kBARHgY,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GAQxBjX,EARwBkX,EAAA,GAQlBC,EARkBD,EAAA,GAAAE,EAUS9X,qBAAW/C,IAA3CJ,EAVuBib,EAUvBjb,mBASF0F,GAnByBuV,EAUH1a,QASH,SAAnBmF,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,KAIlCoU,EAAkB,eAAA3lB,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAM4d,GAAN,IAAA5P,EAAAyT,EAAA,OAAAnjB,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACnB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IAC9CmiB,EAAY,CACdjmB,IAAMsQ,EAAmBjN,aAAarD,IACtCwrB,KAAOpJ,GAJc1d,EAAAjB,KAAA,EAOjBsQ,GAAsB9K,KAAKiB,UAAU+b,IAAY5gB,KAAK,SAAAqhB,GAC1DlU,EAAO5P,OAAAe,GAAA,EAAAf,CAAA,GAAQ8jB,GACZA,EAAS9iB,OACVqnB,EAAkBvE,EAASvW,SAE1B7R,QAAQC,IAAImoB,EAAS5iB,MAAMuG,WAZT,cAAA3F,EAAAX,OAAA,SAehByO,GAfgB,wBAAA9N,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAO,EAAAN,MAAAC,KAAAC,YAAA,GAmBlBonB,EAAmB,eAAAxmB,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAOrB,GAAP,IAAA6nB,EAAA,OAAA5oB,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACpBioB,EAAkB,GADEvmB,EAAA1B,KAAA,EAGnBI,EAAS0F,QAAQ,SAAAyY,GACf0J,EAAgBC,SAAS3J,EAASvF,eACrCiP,EAAgB9hB,KAAKoY,EAASvF,gBALV,cAQxBne,QAAQC,IAAI,uBAAuBmtB,GARXvmB,EAAApB,OAAA,SASjB2nB,GATiB,wBAAAvmB,EAAAnB,SAAAkB,MAAH,gBAAAJ,GAAA,OAAAG,EAAAd,MAAAC,KAAAC,YAAA,GAqEzB,OA1CAyP,oBAAU,WAyBR,OAvBc,eAAArO,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,IAAA,IAAA7B,EAAA+nB,EAAA,OAAA9oB,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,aACK,WAEhBI,EAAW,GAHA+B,EAAAnC,KAAA,EAKTsQ,GAJc,YAI6B1O,KAAK,SAAA0c,GAClDle,EAAWke,EACXzjB,QAAQC,IAAI,kBAAkBwjB,GAC9ByI,EAAczI,KACfzc,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,KAVC,cAAA8B,EAAAnC,KAAA,EAaEgoB,EAAoB5nB,GAbtB,cAaX+nB,EAbWhmB,EAAAhB,KAef8lB,EAAiBkB,GAfFhmB,EAAA7B,OAAA,UAgBR,GAhBQ,wBAAA6B,EAAA5B,SAAA0B,MAAH,yBAAAD,EAAAtB,MAAAC,KAAAC,YAAA,EAmBd2P,GAAW3O,KAAK,SAAAlC,GACd7E,QAAQC,IAAI4E,KAGP,WACLqnB,EAAc,MAEf,IAEH1W,oBAAU,WAKR,OAJAC,KAA+B1O,KAAK,SAAAlC,GAClConB,EAAYpnB,GACZ2nB,EAAgB3nB,KAEX,WACLonB,EAAY,IACZO,EAAgB,MAEjB,CAAC/I,IAIF5Q,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,aAIAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OAjHC,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GA8GTE,CAAiB7X,KAHjC,sBAKsB,KAErByX,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACX6W,EAAeoB,IAAI,SAAAC,GAElB,OADAxtB,QAAQC,IAAI,iBAAkButB,GAE5B3a,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAM2V,EACNC,IAAKD,EACLzX,QAAS,SAAAhW,IAlFP,SAAA2tB,GACtB1tB,QAAQC,IAAI,kBAAmBytB,GAE/B,IAAIC,EAAoBlK,EAAWmK,KAAK,SAAAD,GAAiB,OAAIA,EAAkBxP,eAAiBuP,IAE5FG,EAAoB/K,EAASgL,OAAO,SAAAhK,GAAO,OAAIA,EAAQhG,cAAgB6P,EAAkB7P,cAE7F9d,QAAQC,IAAI,qBAAsB4tB,GAClCrB,EAAgBqB,GAChBb,EAASU,GA2EaK,CADUP,KAIZ3a,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KATF,IAS0CkY,MAK9C,QAIV3a,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACXzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAaO,IAE9B0W,EAAcgB,IAAI,SAAAzJ,GACjB,GACEA,EAAQjF,cACRiF,EAAQhF,aACRgF,EAAQ9F,aACR8F,EAAQ/E,OACR+E,EAAQ7E,OAER,OACEpM,EAAApO,EAAAqO,cAACkb,GAAD,CACElK,QAASA,EACT2J,IAAK3J,EAAQhO,GACbgW,mBAAoBA,SCpQxC,IAAMmC,GAAU,SAAA5pB,GAAqC,IAAlCkgB,EAAkClgB,EAAlCkgB,QAAS2J,EAAyB7pB,EAAzB6pB,mBAAyBpZ,EACvBC,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,SADfyB,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAC5CyG,EAD4CvG,EAAA,GACpCwG,EADoCxG,EAAA,GAAA4H,EAEXzH,qBAAW/C,IAA3CJ,EAF2C4K,EAE3C5K,mBAEF+Z,GAJ6CnP,EAEvBrK,QAEX,eAAAtM,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM4f,GAAN,OAAA/f,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAClBnF,QAAQC,IAAI,gCAAiCskB,IACzCvS,EAAmBjN,aAAarD,IAFlB,CAAAuD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIR+oB,EAAmB3J,GACtBxd,KAAK,SAAAqhB,GACAA,EAAS9iB,OACXkW,EAAU,CACRzP,QAAO,qBAAA4I,OAAuB4P,EAAQ9E,aAA/B,gBAGTjE,EAAU,CACRzP,QAASqc,EAAS5iB,MAAMuG,QACxBwH,aAAc,YAInBvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAlBxC,OAAAtO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsB,GAAAtB,EAAA,SAqBduW,EAAU,CAAEzP,QAAS9G,EAAAsB,GAAMwF,QAASwH,aAAc,UArBpC,QAAAtO,EAAAE,KAAA,iBAwBhBqW,EAAU,CACRzP,QACE,4GACFwH,aAAc,UA3BA,yBAAAtO,EAAAS,SAAAf,EAAA,iBAAH,gBAAAgB,GAAA,OAAAM,EAAAJ,MAAAC,KAAAC,YAAA,IAgCjB,OACE8M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YAAYO,MAAO0O,EAAQvG,aACtCuG,EAAQ9E,cAEX5M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,qCACVS,QAAS,SAAAhW,GAAC,OAAIgsB,EAAYxH,IAC1B1O,MAAK,OAAAlB,OAAS4P,EAAQ9E,aAAjB,eAJP,KAMK8E,EAAQxF,MANb,uBAUJlM,EAAApO,EAAAqO,cAAA,OACEwC,UAAU,aACV0C,IAAKuM,EAAQ7E,YACbrC,IAAKkH,EAAQ9E,aACb5J,MAAK,2BAAAlB,OACO4P,EAAQ9E,aADf,oDAAA9K,OAGD4P,EAAQvG,YAHP,gHAAArJ,OAOS4P,EAAQxF,MAPjB,uBAUPlM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,YAAOyR,EAAQvG,aACfnL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,oCACVS,QAAS,SAAAhW,GAAC,OAAIgsB,EAAYxH,IAC1B1O,MAAK,OAAAlB,OAAS4P,EAAQ9E,aAAjB,gBAJP,KAMK8E,EAAQxF,MANb,qBAQCxD,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,UAYH,SAAS4a,KAAW,IAAA5T,EAEDxF,mBAAS,IAFRyF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEzB6I,EAFyB5I,EAAA,GAEhB4T,EAFgB5T,EAAA,GAAAa,EAGKtG,mBAAS,IAHduG,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAGxBoI,EAHwBnI,EAAA,GAGZ4Q,EAHY5Q,EAAA,GAAAO,EAIY9G,mBAAS,IAJrB+G,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAIxBsQ,EAJwBrQ,EAAA,GAIRsQ,EAJQtQ,EAAA,GAAAuQ,EAKUtX,mBAAS,IALnBuX,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAKxBgC,EALwB/B,EAAA,GAKTgC,EALShC,EAAA,GAAAG,EAOa1X,mBAAS,IAPtB2X,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAORE,GAPQD,EAAA,GAAAA,EAAA,IAAAO,EAQS9X,qBAAW/C,IAA3CJ,EARuBib,EAQvBjb,mBAEFkc,GAVyBjB,EAQH1a,QAEJ,eAAApM,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMqe,GAAN,IAAArQ,EAAAyT,EAAA,OAAAnjB,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACrB+O,EAAU,CAAE5O,QAAQ,EAAMuM,QAAS,GAAIrM,MAAO,IAC9CmiB,EAAY,CACdjmB,IAAKsQ,EAAmBjN,aAAarD,IACrCwrB,KAAM3I,GAJiBne,EAAAjB,KAAA,EAOnBsQ,GAAsB9K,KAAKiB,UAAU+b,IAAY5gB,KAAK,SAAAqhB,GAC1DlU,EAAO5P,OAAAe,GAAA,EAAAf,CAAA,GAAQ8jB,GACXA,EAAS9iB,OACXqnB,EAAkBvE,EAASvW,SAE3B7R,QAAQC,IAAImoB,EAAS5iB,MAAMuG,WAZN,cAAA3F,EAAAX,OAAA,SAelByO,GAfkB,wBAAA9N,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAO,EAAAN,MAAAC,KAAAC,YAAA,IAkBlBonB,EAAsB,SAAA5nB,GAC1B,IAAI6nB,EAAkB,GAQtB,OANA7nB,EAAS0F,QAAQ,SAAAyY,GACV0J,EAAgBC,SAAS3J,EAASvF,eACrCiP,EAAgB9hB,KAAKoY,EAASvF,gBAGlCne,QAAQC,IAAI,uBAAwBmtB,GAC7BA,GA0DX,OA3CE5X,oBAAU,WA0BR,OAzBc,eAAA7O,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,IAAA,IAAArB,EAAA+nB,EAAA,OAAA9oB,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,aACK,WAEhBI,EAAW,GAHAsB,EAAA1B,KAAA,EAKTsQ,GAJc,YAMjB1O,KAAK,SAAA0c,GACJle,EAAWke,EACXyI,EAAczI,KAEfzc,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,KAZD,cAAAqB,EAAA1B,KAAA,EAeEgoB,EAAoB5nB,GAftB,cAeX+nB,EAfWzmB,EAAAP,KAiBf8lB,EAAiBkB,GAjBFzmB,EAAApB,OAAA,UAkBR,GAlBQ,wBAAAoB,EAAAnB,SAAAkB,MAAH,yBAAAD,EAAAd,MAAAC,KAAAC,YAAA,EAqBd2P,GAAW3O,KAAK,SAAAlC,GACd7E,QAAQC,IAAI4E,KAGP,WACLqnB,EAAc,MAEf,IAEH1W,oBAAU,WAKR,OAJAC,KAA+B1O,KAAK,SAAAlC,GAClCupB,EAAYvpB,GACZypB,EAAgBzpB,KAEX,WACLupB,EAAY,IACZE,EAAgB,MAEjB,IAIHzb,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,aAIAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACZ6W,EAAeoB,IAAI,SAAAC,GAClB,OACE3a,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mBACVuC,KAAM2V,EACNzX,QAAS,SAAAhW,GAAC,OAtEA,SAAA2jB,GACtB,IAAIiK,EAAoBlK,EAAWmK,KACjC,SAAAD,GAAiB,OAAIA,EAAkBxP,eAAiBuF,IAGtD6K,EAAoBnL,EAAS0K,OAAO,SAAAvJ,GACtC,OAAOA,EAAQzG,cAAgB6P,EAAkB7P,cAEnD9d,QAAQC,IAAI,oBAAqBsuB,GACjCD,EAAgBC,GA6DUR,CAAgBhuB,EAAEsW,OAAOwB,QAEtC2V,OAOVa,EAAcd,IAAI,SAAAhJ,GACjB,GACEA,EAAQ9E,cACR8E,EAAQ7E,aACR6E,EAAQxF,MAER,OACElM,EAAApO,EAAAqO,cAAC0b,GAAD,CACEjK,QAASA,EACTkJ,IAAKlJ,EAAQzO,GACboY,mBAAoBA,QClOrB,SAASO,KAAS,IAAA3Z,EAECC,mBAAS,IAFVC,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAExBgO,EAFwB9N,EAAA,GAEdiX,EAFcjX,EAAA,GAAAuF,EAGCxF,mBAAS,IAHVyF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAGxB6I,EAHwB5I,EAAA,GAGd4T,EAHc5T,EAAA,GAAAa,EAIFtG,mBAAS,YAJPuG,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAIxBhB,EAJwBiB,EAAA,GAIhBhB,EAJgBgB,EAAA,GAAAO,EAKJ9G,mBAAS,IALL+G,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAAAwQ,GAAAvQ,EAAA,GAAAA,EAAA,GAMW/G,mBAAS,KANpBuX,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAOJvX,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAP9BmZ,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAAA7P,GAAA8P,EAAA,GAAAA,EAAA,GAQOvX,qBAAW/C,KAA1CJ,EARwB4K,EAQxB5K,mBARwB4a,GAAAhQ,EAQLrK,QAEKwC,mBAAS,CAAEwC,MAAM,KAVjBsV,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAUxBpV,EAVwBqV,EAAA,GAUXpV,EAVWoV,EAAA,GAkBzBnV,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAwCxC,OAhBAlC,oBAAU,WAUR,OATAC,KAA+B1O,KAAK,SAAAlC,GAClConB,EAAYpnB,KAGd4Q,KAA+B1O,KAAK,SAAAlC,GAClCupB,EAAYvpB,KAIP,WACLonB,EAAY,IACZmC,EAAY,MAEb,IAGDvb,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KAFF,gBAE0D,KAChD,KAGZzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACXzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACfzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OAhEC,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GA6DTE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,MAEDkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,WACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,cAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KANF,aAQAzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,WACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,cAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KANF,aAQCtD,EAAmBjN,aAAarD,IAC/BmR,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,6BAGVzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAO9W,gBACd,IACCsV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KAFJ,eAMFzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,6BAEZzC,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,CAAMC,GAAIvB,EAAOxX,YACbgW,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADJ,YAMJ,QAQRzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBAEA,aAAZ+E,EAAyBxH,EAAApO,EAAAqO,cAAC4b,GAAD,CAAU5L,SAAUA,IAAe,GAEhD,aAAZzI,EAAyBxH,EAAApO,EAAAqO,cAAC6b,GAAD,CAAUvL,SAAUA,IAAe,MC9HvE,SAASwL,KAAa,IAAA9Z,EACUC,mBAAS6J,IADnB5J,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACbgP,EADa9O,EAAA,GACJ6Z,EADI7Z,EAAA,GAAAuF,EAEYxF,mBAAS,CAAC+Z,MAAO,GAAGjiB,IAAK,GAAGkiB,KAAM,EAAEC,SAAU,GAAGC,SAAU,IAFvEzU,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEb2U,EAFa1U,EAAA,GAEH2U,EAFG3U,EAAA,GAAAa,EAGOtG,mBAAS,CAAChJ,QAAU,GAAIwH,aAAa,SAH5C+H,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAGbE,EAHaD,EAAA,GAGNE,EAHMF,EAAA,GAAAO,EAIO9G,mBAASmK,IAJhBpD,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAIbV,EAJaW,EAAA,GAINV,EAJMU,EAAA,GAAAuQ,EAKgBtX,mBAAS,IALzBuX,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAKb5I,EALa6I,EAAA,GAKDJ,EALCI,EAAA,GAAA1P,EAMoBzH,qBAAW/C,IAA3CJ,EANY4K,EAMZ5K,mBACFod,GAPcxS,EAMQrK,QACd,eAAAlO,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAA+uB,EAAApL,EAAA2L,EAAA,OAAA7qB,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP2pB,EAAUI,EAAVJ,MADO7pB,EAAAC,KAAA,EAGTwe,EAAWD,EAAWmK,KACxB,SAAAlK,GAAQ,OAAIA,EAAS5F,cAAgBgG,EAAQhG,cAGzCuR,EAAalwB,EAASgB,QACzB2a,IADgB,YAAAnG,OACA3C,EAAmBjN,aAAarD,IADhC,KAAAiT,OACuC+O,EAASvF,aADhD,KAAAxJ,OACgEma,EAAMjX,OACtFrD,IAAIsa,GATM7pB,EAAAE,KAAA,EAUPkqB,EAAWC,GACf,gBACA,SAAAC,GAEE,IAAMN,EAAW3lB,KAAKkmB,MACnBD,EAASE,iBAAmBF,EAASG,WAAc,KAEtDP,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GAAK4qB,EAAN,CAAgBD,eAE7B,SAAAzpB,GACExF,QAAQC,IAAIuF,EAAMuG,UAEpB,WAEE5M,EAASgB,QACN2a,IADH,YAAAnG,OACmB3C,EAAmBjN,aAAarD,IADnD,KAAAiT,OAC0D+O,EAASvF,eAChEwR,MAAMb,EAAMjX,MACZ+X,iBACA7oB,KAAK,SAAA8F,GACJ7M,QAAQC,IAAI4M,GACZgiB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GACNwf,EADK,CAERhF,YAAajS,SAhCV,OAAA5H,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsB,GAAAtB,EAAA,SAsCbjF,QAAQC,IAARgF,EAAAsB,IACAiV,EAAU,CAAEzP,QAAS9G,EAAAsB,GAAMwF,QAASwH,aAAc,UAvCrC,yBAAAtO,EAAAS,SAAAf,EAAA,iBAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,IA4CR8pB,EAAa,eAAA5pB,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAA+uB,EAAA,OAAAtqB,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,WAChBpF,EAAEsW,OAAOyZ,MAAM,GADC,CAAA1pB,EAAAjB,KAAA,eAEZ2pB,EAAQ/uB,EAAEsW,OAAOyZ,MAAM,GAC7B9vB,QAAQC,IAAI6uB,GACZK,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GACP4qB,EADM,CAETJ,MAAOA,KANS1oB,EAAAX,OAAA,UAQX,GARW,cAAAW,EAAAX,OAAA,UAUb,GAVa,wBAAAW,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GAabgqB,EAAa,eAAA5pB,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAM7G,GAAN,IAAAiwB,EAAA,OAAAxrB,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACpBpF,EAAEiW,kBACEga,EAAkB1rB,OAAOoO,OAAO,GAAIoR,IACxBpiB,IAAMsQ,EAAmBjN,aAAarD,IACtD1B,QAAQC,IAAI,kBAAmB+vB,GAC/BA,EAAkBrlB,KAAKiB,UAAUokB,GACjCC,GAAwBD,GACrBjpB,KAAK,SAAAmN,GACAA,EAAQ5O,QACVupB,EAAW3a,EAAQrC,SACnB2J,EAAU,CACRzP,QAAS,6BACTwH,aAAc,UAGhBiI,EAAU,CAAEzP,QAASmI,EAAQ1O,MAAMuG,QAASwH,aAAc,YAG7DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAnBlC1M,EAAApB,OAAA,UAsBb,GAtBa,wBAAAoB,EAAAnB,SAAAkB,MAAH,gBAAAJ,GAAA,OAAAL,EAAAN,MAAAC,KAAAC,YAAA,GA0BbkW,EAAW,eAAAtV,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,EAAMrH,GAAN,IAAAyK,EAAA0lB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlX,EAAA,OAAA5U,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cACdqF,GAAU,EAER0lB,EAAqB,WACzB,QAAGxjB,GAAMO,QAAQ6W,EAAQjF,gBACvBzD,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPiE,mBAAqB,yCAEhB,IAKL+Q,EAA4B,WAChC,QAAGzjB,GAAMO,QAAQ6W,EAAQ9F,eACvB5C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYoD,kBAAoB,0CAClC,IAKL6R,EAAc,WAClB,QAAG1jB,GAAMkB,QAAQkW,EAAQ/E,SACvB3D,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYmE,YAAa,+BAC3B,IAKL+Q,EAAoB,WACxB,QAAG3jB,GAAMO,QAAQ6W,EAAQhF,eACvB1D,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYkE,kBAAoB,+BAClC,IAKLiR,EAAoB,WACrB5jB,GAAMO,QAAQ6W,EAAQhG,cACvB1C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYgE,kBAAoB,uCAIvC/F,EAAkB,WAMpB,OALuB5O,IAAvB0lB,KAAkD1lB,EACnBA,IAA/B2lB,KAA4D3lB,EAC3CA,IAAjB4lB,KAA8C5lB,EACvBA,IAAvB6lB,KAAoD7lB,EAC7BA,IAAvB8lB,KAAoD9lB,GAjDtClD,EAAAnC,KAAA,EAsDLiU,IAtDK,cAAA9R,EAAA7B,OAAA,SAAA6B,EAAAhB,MAAA,yBAAAgB,EAAA5B,SAAA0B,MAAH,gBAAAX,GAAA,OAAAE,EAAAd,MAAAC,KAAAC,YAAA,GA0DjByP,oBAAU,WAMR,OAJAya,GADoB,YACuBlpB,KAAK,SAAAmN,GAC9ClU,QAAQC,IAAI,mBAAmBiU,GAC/BgY,EAAchY,KAET,WACLgY,EAAc,MAEf,IAGH,OACErZ,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,+BAIJD,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,eACLtM,MAAOuY,EAAQjF,aACfjF,YAAY,kBACZnH,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GAAKwf,EAANxf,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOiE,mBACNvM,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOiE,qBAE7B,IAGJvM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,YAEEwC,UAAU,eACVuC,KAAK,cACL+B,YAAY,yBACZrO,MAAOuY,EAAQ9F,YACfvL,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GAAKwf,EAANxf,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOoD,kBACN1L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOoD,oBAE7B,IAGJ1L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,mCACAD,EAAApO,EAAAqO,cAAA,UACE+E,KAAK,cACLvC,UAAU,eACV7C,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GAAKwf,EAANxf,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAGrDsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAO,MAAf,2BACCkY,EAAW8J,IAAI,SAAA7J,GAEd,OADA1jB,QAAQC,IAAI,gBAAiByjB,GAE3B7Q,EAAApO,EAAAqO,cAAA,UAAQvH,MAAOmY,EAAS5F,aACrB,IACA4F,EAASvF,aAFZ,MAE6BuF,EAAS3F,cAAe,QAK1D5C,EAAOgE,kBACNtM,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOgE,oBAE7B,IAGJtM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,kBACZrO,MAAOuY,EAAQ/E,MACftM,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GAAKwf,EAANxf,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOmE,YACNzM,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOmE,cAE7B,IAIJzM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,cACLpF,SAAU,SAAA1S,GAAC,OAAI8vB,EAAc9vB,MAE9Bob,EAAOkE,kBACNxM,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOkE,oBAE7B,IAIJxM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,2BACVuC,KAAK,qBACL9B,QAAS,SAAAhW,GAAC,OAAIqvB,EAASrvB,KAEvB8S,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,yBAMJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OACEkH,OAAO,MACPC,MAAM,MACNjC,IAAK8L,EAAQhF,aA1HP,kDA+HZjM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,eACL9B,QAAS,SAAAhW,GAAC,OACRkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GACdA,EACFulB,EAAchwB,GAAGgH,KAAK,SAAAlC,GACpB7E,QAAQC,IAAI,mBAGdub,EAAU,CACRzP,QAAS,qCACTwH,aAAc,cAMtBV,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,iBAIFzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GACPqb,EAAU8D,IACV1D,EAAU,CAAEzP,QAAS,GAAIwH,aAAc,SACvCsb,EAAWjQ,MAGb/L,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,YAKJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,OASd,SAASgd,KAAa,IAAA9D,EACU1X,mBAASyK,IADnBkN,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GACblI,EADamI,EAAA,GACJ8D,EADI9D,EAAA,GAAAE,EAEO7X,mBAAS4K,IAFhBkN,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAEbzR,EAFa0R,EAAA,GAENzR,EAFMyR,EAAA,GAAAC,EAGO/X,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAHzCwZ,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GAGNtR,GAHMuR,EAAA,GAAAA,EAAA,IAAA0D,EAIe1b,mBAAS,IAJxB2b,EAAApsB,OAAA2Q,GAAA,EAAA3Q,CAAAmsB,EAAA,GAIbhN,EAJaiN,EAAA,GAIFxE,EAJEwE,EAAA,GAAAC,EAKY5b,mBAAS,CACvC+Z,MAAO,GACPjiB,IAAK,GACLkiB,KAAM,EACNC,SAAU,GACVC,SAAU,IAVQ2B,EAAAtsB,OAAA2Q,GAAA,EAAA3Q,CAAAqsB,EAAA,GAKbzB,EALa0B,EAAA,GAKHzB,EALGyB,EAAA,GAAA3D,EAaoB9X,qBAAW/C,IAA3CJ,EAbYib,EAaZjb,mBAIFod,GAjBcnC,EAaQ1a,QAId,eAAApL,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,EAAM5H,GAAN,IAAA+uB,EAAApL,EAAA2L,EAAA,OAAA7qB,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACP2pB,EAAUI,EAAVJ,MADOlnB,EAAA1C,KAAA,EAGTwe,EAAWD,EAAWmK,KACxB,SAAAlK,GAAQ,OAAIA,EAAS5F,cAAgByG,EAAQzG,cAEzCuR,EAAalwB,EAASgB,QACzB2a,IADgB,YAAAnG,OACA3C,EAAmBjN,aAAarD,IADhC,KAAAiT,OACuC+O,EAASvF,aADhD,KAAAxJ,OACgEma,EAAMjX,OACtFrD,IAAIsa,GARMlnB,EAAAzC,KAAA,EASPkqB,EAAWC,GACf,gBACA,SAAAC,GAEE,IAAMN,EAAW3lB,KAAKkmB,MACnBD,EAASE,iBAAmBF,EAASG,WAAc,KAEtDP,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GAAK4qB,EAAN,CAAgBD,eAE7B,SAAAzpB,GACExF,QAAQC,IAAIuF,EAAMuG,UAEpB,WAEE5M,EAASgB,QACN2a,IADH,YAAAnG,OACmB3C,EAAmBjN,aAAarD,IADnD,KAAAiT,OAC0D+O,EAASvF,eAChEwR,MAAMb,EAAMjX,MACZ+X,iBACA7oB,KAAK,SAAA8F,GACJ7M,QAAQC,IAAI4M,GACZ2jB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GACNigB,EADK,CAER7E,YAAa7S,SA/BV,OAAAjF,EAAAzC,KAAA,gBAAAyC,EAAA1C,KAAA,EAAA0C,EAAArB,GAAAqB,EAAA,SAqCb5H,QAAQC,IAAR2H,EAAArB,IACAiV,EAAU,CAACzP,QAAQ,kEAAkEwH,aAAa,UAtCrF,yBAAA3L,EAAAlC,SAAAiC,EAAA,iBAAH,gBAAAH,GAAA,OAAAL,EAAAtB,MAAAC,KAAAC,YAAA,IA2CR8qB,EAAa,eAAAnpB,EAAApD,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwD,EAAMnI,GAAN,IAAA+uB,EAAA,OAAAtqB,GAAAC,EAAAO,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,WAChBpF,EAAEsW,OAAOyZ,MAAM,GADC,CAAA3nB,EAAAhD,KAAA,eAEZ2pB,EAAQ/uB,EAAEsW,OAAOyZ,MAAM,GAC7B9vB,QAAQC,IAAI6uB,GACZK,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GACP4qB,EADM,CAETJ,MAAOA,KANS3mB,EAAA1C,OAAA,UAQX,GARW,cAAA0C,EAAA1C,OAAA,UAUb,GAVa,wBAAA0C,EAAAzC,SAAAwC,MAAH,gBAAAH,GAAA,OAAAL,EAAA7B,MAAAC,KAAAC,YAAA,GAcbkW,EAAW,eAAAhU,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA8D,EAAMzI,GAAN,IAAA+wB,EAAAC,EAAAC,EAAAZ,EAAAa,EAAA7U,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cACJ,EAER2rB,EAAqB,WACzB,QAAGpkB,GAAMO,QAAQsX,EAAQ9E,gBACvBrE,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYyE,mBAAqB,yCACnC,IAKLmR,EAA4B,SAAAhxB,GAChC,QAAG2M,GAAMO,QAAQsX,EAAQvG,eACvB5C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYoD,kBAAoB,gDAClC,IAKLyS,EAAoB,SAAAjxB,GACxB,QAAG2M,GAAMO,QAAQsX,EAAQ7E,eACvBtE,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAY0E,kBAAoB,kCAClC,IAKLuQ,EAAc,SAAArwB,GAEhB,OAAoC,IAAjC2M,GAAMkB,QAAQ2W,EAAQxF,SACvB3D,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYmE,YAAY,4BAC1B,IAMP2R,EAAyB,SAAAlxB,GAC7B,QAAG2M,GAAMO,QAAQsX,EAAQzG,eACvB1C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYgE,kBAAoB,qCAClC,IAKL/C,EAAY,SAAArc,GAOhB,QANA+wB,MACAC,MACAC,MACAZ,MACAa,KAlDgBxoB,EAAAtD,KAAA,EAyDLiX,IAzDK,cAAA3T,EAAAhD,OAAA,SAAAgD,EAAAnC,MAAA,yBAAAmC,EAAA/C,SAAA8C,MAAH,gBAAAH,GAAA,OAAAJ,EAAApC,MAAAC,KAAAC,YAAA,GA8DXmrB,EAAU,eAAA3oB,EAAAjE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAoE,EAAM/I,GAAN,IAAAoxB,EAAA,OAAA3sB,GAAAC,EAAAO,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cACXgsB,EADW7sB,OAAAe,GAAA,EAAAf,CAAA,GACMigB,IACV7iB,IAAMsQ,EAAmBjN,aAAarD,IAFlCqH,EAAA5D,KAAA,EAGT8qB,GAAyBtlB,KAAKiB,UAAUulB,IAAapqB,KAAK,SAAAmN,GACzDA,EAAQ5O,QACTkrB,EAAWtc,EAAQrC,SACnB2J,EAAU,CAACzP,QAAQ,6BAA6BwH,aAAa,UAE7DiI,EAAU,CAACzP,QAAQmI,EAAQ1O,MAAMuG,QAAQwH,aAAa,YAEzDvM,MAAM,SAAAxB,GACPgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,YAXjC,cAAAxK,EAAAtD,OAAA,UAcR,GAdQ,wBAAAsD,EAAArD,SAAAoD,MAAH,gBAAAH,GAAA,OAAAJ,EAAA1C,MAAAC,KAAAC,YAAA,GA6BhB,OAXAyP,oBAAU,WAMR,OAJAya,GADoB,YACuBlpB,KAAK,SAAAmN,GAC9ClU,QAAQC,IAAI,mBAAoBiU,GAChCgY,EAAchY,KAET,WACLgY,EAAc,MAEf,IAGDrZ,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,+BAGJD,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,eACLtM,MAAOgZ,EAAQ9E,aACf7F,YAAY,kBACZnH,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GAAKigB,EAANjgB,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOyE,mBAAqB/M,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOyE,qBAAyB,IAErF/M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,YACEwC,UAAU,eACVuC,KAAK,cACL+B,YAAY,yBACZrO,MAAOgZ,EAAQvG,YACfvL,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GAAKigB,EAANjgB,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOoD,kBAAoB1L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOoD,oBAAwB,IAGnF1L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,mCACAD,EAAApO,EAAAqO,cAAA,UACE+E,KAAK,cACLvC,UAAU,eACV7C,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GAAKigB,EAANjgB,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAGrDsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAO,MAAf,2BACCkY,EAAW8J,IAAI,SAAA7J,GAEd,OADA1jB,QAAQC,IAAI,gBAAiByjB,GAE3B7Q,EAAApO,EAAAqO,cAAA,UAAQvH,MAAOmY,EAAS5F,aACrB,IACA4F,EAASvF,aAFZ,MAE6BuF,EAAS3F,cAAe,QAK1D5C,EAAOgE,kBACNtM,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOgE,oBAE7B,IAIJtM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,kBACZrO,MAAOgZ,EAAQxF,MACftM,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GAAKigB,EAANjgB,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOmE,YAAczM,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOmE,cAAmB,IAGxEzM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,cACLpF,SAAU,SAAA1S,GAAC,OAAI8wB,EAAc9wB,MAE9Bob,EAAO0E,kBAAoBhN,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO0E,oBAAwB,IAEnFhN,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,2BACVS,QAAS,SAAAhW,GAAC,OAAIqvB,EAASrvB,GAAGgH,KAAK,SAAAmN,GAAYlU,QAAQC,IAAIiU,OAEvDrB,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,yBAMJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OACEkH,OAAO,MACPC,MAAM,MACNjC,IACEuM,EAAQ7E,aACR,kDAMR7M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACAlB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAChCA,EACEgR,EAAU,CAACzP,QAAQ,uCACnBmlB,EAAWnxB,GAAGgH,KAAK,SAAAmN,GACflU,QAAQC,IAAIiU,GACZsH,EAAU,CAACzP,QAAQ,OACpB/E,MAAM,SAAAxB,GACPgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,gBAKlDV,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,iBAIFzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVS,QAAS,SAAAhW,GACPywB,EAAWhR,IACXpE,EAAUuE,IACVnE,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAErCV,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,eAWd,SAAS8b,KAAgB,IAAAC,EACatc,mBAAS,IADtBuc,EAAAhtB,OAAA2Q,GAAA,EAAA3Q,CAAA+sB,EAAA,GAChB5N,EADgB6N,EAAA,GACJpF,EADIoF,EAAA,GAAAC,EAESxc,mBAAS8I,IAFlB2T,EAAAltB,OAAA2Q,GAAA,EAAA3Q,CAAAitB,EAAA,GAEhB7N,EAFgB8N,EAAA,GAENC,EAFMD,EAAA,GAAAE,EAGS3c,mBAAS,CAAC+Z,MAAO,GAAGjiB,IAAK,GAAGkiB,KAAM,EAAEC,SAAU,GAAGC,SAAU,IAHpE0C,EAAArtB,OAAA2Q,GAAA,EAAA3Q,CAAAotB,EAAA,GAGhBxC,EAHgByC,EAAA,GAGNxC,EAHMwC,EAAA,GAAAC,EAII7c,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAJtCse,EAAAvtB,OAAA2Q,GAAA,EAAA3Q,CAAAstB,EAAA,GAIhBrW,EAJgBsW,EAAA,GAITrW,EAJSqW,EAAA,GAAAC,EAKK/c,mBAASsJ,IALd0T,EAAAztB,OAAA2Q,GAAA,EAAA3Q,CAAAwtB,EAAA,GAKhB3W,EALgB4W,EAAA,GAKR3W,EALQ2W,EAAA,GAAAC,EAMiB7c,qBAAW/C,IAA3CJ,EANeggB,EAMfhgB,mBAeFod,GArBiB4C,EAMKzf,QAed,eAAA1J,EAAAvE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAmf,EAAM9jB,GAAN,IAAA+uB,EAAAO,EAAA,OAAA7qB,GAAAC,EAAAO,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,cACP2pB,EAAUI,EAAVJ,MAEFO,EAAalwB,EAASgB,QAAQ2a,IAAjB,cAAAnG,OAAmC3C,EAAmBjN,aAAarD,IAAnE,KAAAiT,OAA0Ema,EAAMjX,OAAQrD,IAAIsa,GAHhG/K,EAAA5e,KAAA,EAILkqB,EAAWC,GACjB,gBACA,SAAAC,GAEI,IAAMN,EAAW3lB,KAAKkmB,MACrBD,EAASE,iBAAmBF,EAASG,WAAc,KAEpDP,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GACT4qB,EADQ,CAEXD,eAGJ,SAAAzpB,GAEIxF,QAAQC,IAAIuF,EAAMuG,UAEtB,WAEI5M,EAASgB,QACR2a,IAAI,cACJ6U,MAAMb,EAAMjX,MACZ+X,iBACA7oB,KAAK,SAAA8F,GACF7M,QAAQC,IAAI4M,GACZ4kB,EAAYntB,OAAAe,GAAA,EAAAf,CAAA,GACTof,EADQ,CAEXtF,aAAcvR,SA9BX,wBAAAkX,EAAAre,SAAAme,MAAH,gBAAA7a,GAAA,OAAAH,EAAAhD,MAAAC,KAAAC,YAAA,IAqCRksB,EAAa,eAAAhO,EAAA3f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwf,EAAMnkB,GAAN,IAAAmyB,EAAA,OAAA1tB,GAAAC,EAAAO,KAAA,SAAAmf,GAAA,cAAAA,EAAAjf,KAAAif,EAAAhf,MAAA,QAEZ+sB,EAAc5tB,OAAOoO,OAAO,GAAGgR,IACvBhiB,IAAMsQ,EAAmBjN,aAAarD,IAClDwwB,EAAcvnB,KAAKiB,UAAUsmB,GAC7BlyB,QAAQC,IAAI,WAAYiyB,GACxBjC,GAAyBiC,GAAanrB,KAAK,SAAAmN,GACvCud,EAAYvd,GACZgY,EAAc,CAAEzI,WAAYA,EAAWnY,KAAK4I,KAC5CsH,EAAU,CAAEzP,QAAS,wCAEtB/E,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAZtC,wBAAA4Q,EAAAze,SAAAwe,MAAH,gBAAAW,GAAA,OAAAZ,EAAApe,MAAAC,KAAAC,YAAA,GAgBbkW,EAAW,eAAAoI,EAAA/f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA4f,EAAMvkB,GAAN,IAAAyK,EAAA2nB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApW,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAwf,GAAA,cAAAA,EAAAtf,KAAAsf,EAAArf,MAAA,cAEVqF,GAAU,EACR2nB,EAAsB,WACxB,QAAGzlB,GAAMO,QAAQyW,EAAS3F,iBACtB3C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACH6W,EADE,CAELmD,oBAAqB,oCAElB,IAIT8T,EAAsB,WACxB,QAAG1lB,GAAMO,QAAQyW,EAASxF,iBACtB9C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACH6W,EADE,CAELsD,oBAAsB,kCAEnB,IAIT4T,EAAqB,WACvB,QAAG3lB,GAAMO,QAAQyW,EAASvF,gBACtB/C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACH6W,EADE,CAELuD,mBAAoB,mCAEjB,IAIT4T,EAAoB,WACtB,QAAG5lB,GAAMO,QAAQyW,EAAS1F,eACtB5C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACH6W,EADE,CAELoD,kBAAoB,kCAEjB,IAITgU,EAAc,WAChB,QAAG7lB,GAAMO,QAAQyW,EAASzF,SACtB7C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACH6W,EADE,CAELqD,YAAc,4BAEX,IAITgU,EAAqB,WACvB,QAAG9lB,GAAMO,QAAQyW,EAAStF,gBACtBhD,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACH6W,EADE,CAELwD,mBAAqB,mCAElB,IAKTvC,EAAW,WAQb,OAPwB5R,IAAxB2nB,KAAmD3nB,EAC3BA,IAAxB4nB,KAAmD5nB,EAC5BA,IAAvB6nB,KAAkD7nB,EAC5BA,IAAtB8nB,KAAiD9nB,EACjCA,IAAhB+nB,KAA2C/nB,EACpBA,IAAvBgoB,KAAkDhoB,GAtExCga,EAAArf,KAAA,GA2EDiX,IA3EC,eAAAoI,EAAA/e,OAAA,SAAA+e,EAAAle,MAAA,yBAAAke,EAAA9e,SAAA4e,MAAH,gBAAAY,GAAA,OAAAb,EAAAxe,MAAAC,KAAAC,YAAA,GAiFjB,OACE8M,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBADf,qBAMJzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,+BACAD,EAAApO,EAAAqO,cAAA,UACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,gBACLtM,MAAOmY,EAASxF,cAChBzL,SAAU,SAAA1S,GAAC,OACT0xB,EAAYntB,OAAAe,GAAA,EAAAf,CAAA,GAAKof,EAANpf,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAErDsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAO,MAAf,2CACAsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAM,YAAd,YACAsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAM,YAAd,aAEH4P,EAAOsD,oBAAsB5L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOsD,sBAA0B,IAGvF5L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,eACL+B,YAAY,kBACZrO,MAAOmY,EAASvF,aAChB1L,SAAU,SAAA1S,GAAC,OAAG0xB,EAAYntB,OAAAe,GAAA,EAAAf,CAAA,GAAKof,EAANpf,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAEtE4P,EAAOuD,mBAAqB7L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOuD,qBAAyB,IAGrF7L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,gBACL+B,YAAY,mBACZrO,MAAOmY,EAAS3F,cAChBtL,SAAU,SAAA1S,GAAC,OACT0xB,EAAYntB,OAAAe,GAAA,EAAAf,CAAA,GAAKof,EAANpf,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOmD,oBAAsBzL,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOmD,sBAA0B,IAEvFzL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,YAEEwC,UAAU,eACVuC,KAAK,cACL+B,YAAY,iBACZrO,MAAOmY,EAAS1F,YAChBvL,SAAU,SAAA1S,GAAC,OACT0xB,EAAYntB,OAAAe,GAAA,EAAAf,CAAA,GAAKof,EAANpf,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAIxD4P,EAAOoD,kBAAoB1L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOoD,oBAAwB,IAEnF1L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,YACEwC,UAAU,eACVuC,KAAK,QACL+B,YAAY,WACZrO,MAAOmY,EAASzF,MAChBxL,SAAU,SAAA1S,GAAC,OACT0xB,EAAYntB,OAAAe,GAAA,EAAAf,CAAA,GAAKof,EAANpf,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAIxD4P,EAAOqD,YAAc3L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOqD,cAAkB,IAEvE3L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,8BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACV7C,SAAU,SAAA1S,GAAC,OAzOO,SAAAA,GAC5B,GAAIA,EAAEsW,OAAOyZ,MAAM,GAAI,CACrB,IAAMhB,EAAQ/uB,EAAEsW,OAAOyZ,MAAM,GAM7B,OALA9vB,QAAQC,IAAI6uB,GACZK,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GACP4qB,EADM,CAETJ,MAAOA,MAEF,EAET,OAAO,EA+NkB2D,CAAsB1yB,MAEtCob,EAAOwD,mBAAqB9L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOwD,qBAAyB,IAErF9L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,2BACVuC,KAAK,sBACL9B,QAAS,SAAAhW,GAAC,OAAIqvB,EAASrvB,KAEvB8S,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,0BAKJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OACEkH,OAAO,MACPC,MAAM,MACNjC,IAAK0L,EAAStF,cA5GR,kDAiHZvL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,gBACL9B,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAC9BA,EAAUgR,EAAU,CAACzP,QAAS,sCAAuCwH,aAAa,UAC9E0e,EAAclyB,OAGtB8S,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,mBAIFzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,iBACL9B,QAAW,SAAAhW,GACT0xB,EAAY5T,IACZzC,EAAUiD,IACV7C,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAGrCV,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,YAKJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACTiG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,OAQlG,SAASmf,KAAW,IAAAC,EACH5d,mBAAS,kBADN6d,EAAAtuB,OAAA2Q,GAAA,EAAA3Q,CAAAquB,EAAA,GAC1BtY,EAD0BuY,EAAA,GACjBtY,EADiBsY,EAAA,GAAAC,EAEH9d,mBAAS6J,IAFNkU,EAAAxuB,OAAA2Q,GAAA,EAAA3Q,CAAAuuB,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAGH/d,mBAASyK,KAHNwT,EAAA1uB,OAAA2Q,GAAA,EAAA3Q,CAAAyuB,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAIHje,mBAAS,CAACwC,MAAK,KAJZ2b,EAAA5uB,OAAA2Q,GAAA,EAAA3Q,CAAA2uB,EAAA,GAI1Bzb,EAJ0B0b,EAAA,GAIdzb,EAJcyb,EAAA,GAYzBxb,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAG1C,OACE7E,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KADF,4BAKFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OA1BG,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAuBXE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,MAEDkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,oBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,kBAAb,KALF,eAOAzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,eACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,kBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KALF,aAOAzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,eACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,kBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KALF,cAQA,QAKG,iBAAZ+E,EAA6BxH,EAAApO,EAAAqO,cAAC8b,GAAD,MAAiB,GAClC,iBAAZvU,EAA6BxH,EAAApO,EAAAqO,cAACyd,GAAD,MAAiB,GAClC,mBAAZlW,EAA+BxH,EAAApO,EAAAqO,cAACse,GAAD,MAAoB,KClhCrD,IAAM+B,GAAa,eAAA9uB,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAMjD,GAAN,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAErB+O,EAAU,CAAC5O,QAAO,EAAKuM,QAAQ,GAAGrM,MAAM,IAFnBP,EAAAE,KAAA,EAInBgP,KAAMO,IAAIL,EAAO9V,uBAAP,aAAAoW,OAA2CjT,IAAOqF,KAAK,SAAAmN,GACnE,GAAsB,MAAnBA,EAAQ5O,OACP,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,8CAErBtF,KAAK,SAAAojB,GACJjW,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAARvN,OAAAye,GAAA,EAAAze,CAAsB6lB,GACtBjW,EAAQ1O,MAAO,KAChBwB,MAAM,SAAAxB,GACL0O,EAAQ5O,QAAS,EACjB4O,EAAQrC,QAAU,GAClBqC,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,KAjBC,cAAAP,EAAAQ,OAAA,SAoBlByO,GApBkB,wBAAAjP,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GAwBbqtB,GAAc,eAAAntB,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAOmtB,EAAW3xB,GAAlB,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACtB+O,EAAU,CAAC5O,QAAS,EAAKuM,QAAQ,GAAGrM,MAAM,IADpBY,EAAAjB,KAAA,EAGpBgP,KAAMK,IAAIH,EAAO9V,uBAAP,qBAAAoW,OAAqDjT,GAAM2xB,GAAYtsB,KAAK,SAAAmN,GACxF,GAAsB,MAAnBA,EAAQ5O,OACP,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,0CAErBtF,KAAK,SAAAusB,GACJpf,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBgvB,GACtBpf,EAAQ1O,MAAQ,GAChB0O,EAAQ5O,QAAS,IAClB0B,MAAM,SAAAxB,GACL0O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,GACpB0O,EAAQrC,QAAU,GAClBqC,EAAQ5O,QAAU,IAhBI,cAAAc,EAAAX,OAAA,SAkBnByO,GAlBmB,wBAAA9N,EAAAV,SAAAQ,MAAH,gBAAAN,EAAAY,GAAA,OAAAP,EAAAJ,MAAAC,KAAAC,YAAA,GAqBdwtB,GAAa,eAAAptB,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAOysB,EAAW3xB,GAAlB,IAAAwS,EAAA,OAAA1P,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACrB+O,EAAU,CAAC5O,QAAS,EAAKuM,QAAQ,GAAGrM,MAAM,IADrBqB,EAAA1B,KAAA,EAGnBgP,KAAMK,IAAIH,EAAO9V,uBAAP,oBAAAoW,OAAoDjT,GAAM2xB,GAAYtsB,KAAK,SAAAmN,GACvF,GAAsB,MAAnBA,EAAQ5O,OACP,OAAO4O,EAAQI,KAEf,MAAM,IAAIjI,MAAM,0CAErBtF,KAAK,SAAAusB,GACJpf,EAAQrC,QAARvN,OAAAe,GAAA,EAAAf,CAAA,GAAsBgvB,GACtBpf,EAAQ1O,MAAQ,GAChB0O,EAAQ5O,QAAS,IAClB0B,MAAM,SAAAxB,GACL0O,EAAQ1O,MAARlB,OAAAe,GAAA,EAAAf,CAAA,GAAoBkB,GACpB0O,EAAQrC,QAAU,GAClBqC,EAAQ5O,QAAS,IAhBI,cAAAuB,EAAApB,OAAA,UAkBlB,GAlBkB,wBAAAoB,EAAAnB,SAAAkB,MAAH,gBAAAH,EAAAe,GAAA,OAAArB,EAAAN,MAAAC,KAAAC,YAAA,GCpCpBytB,GAAc,SAAAF,GAAW,IAAAxe,EACKC,mBAASsN,IADdrN,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACtB2e,EADsBze,EAAA,GACT0e,EADS1e,EAAA,GAAAuF,EAGFxF,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,QAHhCiH,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAGtBgB,EAHsBf,EAAA,GAGfgB,EAHehB,EAAA,GAKtBxI,EAAsBmD,qBAAW/C,IAAjCJ,mBAED2hB,EAAO,eAAAtvB,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAAszB,EAAA3xB,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACRkuB,EADQ/uB,OAAAe,GAAA,EAAAf,CAAA,GACSmvB,GACrBJ,EAAa1oB,KAAKiB,UAAUynB,GACxB3xB,EAAMsQ,EAAmBjN,aAAarD,IAH9BuD,EAAAE,KAAA,EAIPsQ,GAA2B4d,EAAW3xB,GAAKqF,KAAK,SAAAmN,GAChDA,EAAQ5O,QACTouB,EAAWxf,EAAQrC,SACnB2J,EAAU,CAACzP,QAAQ,gCAAgCwH,aAAa,UAEhEmgB,EAAWrR,IACX7G,EAAU,CAACzP,QAAQmI,EAAQ1O,MAAMuG,QAAQwH,aAAa,aAEvDvM,MAAM,SAAAxB,GACNgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,YAbrC,cAAAtO,EAAAQ,OAAA,UAeL,GAfK,wBAAAR,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GAkBP6tB,EAAM,eAAA3tB,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAAszB,EAAA3xB,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAETkuB,EAFS/uB,OAAAe,GAAA,EAAAf,CAAA,GAEQmvB,GAErBJ,EAAa1oB,KAAKiB,UAAUynB,GAExB3xB,EAAMsQ,EAAmBjN,aAAarD,IAN7B0E,EAAAjB,KAAA,EAQPsQ,GAA0B4d,EAAW3xB,GAAKqF,KAAK,SAAAmN,GAChDA,EAAQ5O,QACTouB,EAAWxf,EAAQrC,SACnB2J,EAAU,CAACzP,QAAQ,mCAEnByP,EAAU,CAAEzP,QAASmI,EAAQ1O,MAAMuG,QAASwH,aAAc,YAE3DvM,MAAM,SAAAxB,GACJgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAhB1C,cAAAnN,EAAAX,OAAA,UAmBN,GAnBM,wBAAAW,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GAuCZ,OAbAyP,oBAAU,WASR,OARa,eAAArP,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,IAAA,IAAAitB,EAAA,OAAArvB,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACV0uB,EAAYP,EAAQA,QADVzsB,EAAA1B,KAAA,EAERuuB,EAAWG,GAFH,cAAAhtB,EAAApB,OAAA,UAGP,GAHO,wBAAAoB,EAAAnB,SAAAkB,MAAH,yBAAAT,EAAAN,MAAAC,KAAAC,YAAA,EAMb+tB,GAAU/sB,KAAK,SAAAlC,GAAM,OAAI7E,QAAQC,IAAI4E,KAE9B,WAAO2W,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,UAEhD,CAAC+f,IAGFzgB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,YAEFzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,wBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACLtM,MAAOkoB,EAAY3nB,KACnB2G,SAAU,SAAA1S,GAAC,OACT2zB,EAAWpvB,OAAAe,GAAA,EAAAf,CAAA,GAAKmvB,EAANnvB,OAAA0X,GAAA,EAAA1X,CAAA,GAAoBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAI7DsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,uBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,SACLtM,MAAOkoB,EAAYnR,OACnB7P,SAAU,SAAA1S,GAAC,OACT2zB,EAAWpvB,OAAAe,GAAA,EAAAf,CAAA,GAAKmvB,EAANnvB,OAAA0X,GAAA,EAAA1X,CAAA,GAAoBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAK7DsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,0BAEAD,EAAApO,EAAAqO,cAAA,UACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,YACLtM,MAAOkoB,EAAYlR,UACnB9P,SAAU,SAAA1S,GAAC,OACT2zB,EAAWpvB,OAAAe,GAAA,EAAAf,CAAA,GAAKmvB,EAANnvB,OAAA0X,GAAA,EAAA1X,CAAA,GAAoBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAGzDsH,EAAApO,EAAAqO,cAAA,UAAQvH,OAAO,EAAMwoB,SAAUN,EAAYlR,WAA3C,OACA1P,EAAApO,EAAAqO,cAAA,UAAQvH,OAAO,EAAOwoB,UAAWN,EAAYlR,WAA7C,QAIJ1P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,iCAEAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,mBACLtM,MAAOkoB,EAAYjR,iBACnB/P,SAAU,SAAA1S,GAAC,OACT2zB,EAAWpvB,OAAAe,GAAA,EAAAf,CAAA,GAAKmvB,EAANnvB,OAAA0X,GAAA,EAAA1X,CAAA,GAAoBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAK5DkoB,EAAYhR,iBACL5P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACrBzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKkF,IAAKyb,EAAYhR,iBAAkBnN,UAAU,eAClDzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,wCAGC,KAGTD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,gCACVuC,KAAK,UACL9B,QAAS,SAAAhW,GAAC,OAAI4zB,EAAQ5zB,GAAGgH,KAAK,SAAAlC,GAC5B7E,QAAQC,IAAI4E,OAGdgO,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAAkC,IARpC,WAYAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,SACL9B,QAAS,SAAAhW,GAAC,OAAI6zB,EAAO7zB,GAAGgH,KAAK,SAAAlC,GAC3B7E,QAAQC,IAAI4E,OAGdgO,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAAkC,IARpC,WAYJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,QAQtGygB,GAAc,SAAArtB,GAA2B,IAAzB2sB,EAAyB3sB,EAAzB2sB,QAAQW,EAAiBttB,EAAjBstB,YAAiB5Y,EACbtG,mBAASsN,IADI/G,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GACvCoY,EADuCnY,EAAA,GAC3BoY,EAD2BpY,EAAA,GAU7C,OAPA9F,oBAAU,WAER,OADAke,EAAWJ,GACJ,cAGN,CAACA,IAGFzgB,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,oBACZzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,MACVS,QAAS,SAAAhW,GAAK,IACN+V,EAAO2d,EAAP3d,GACNme,EAAYne,KAGbjD,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQwb,EAAY3nB,QAEnC+G,EAAApO,EAAAqO,cAAA,eAAO2gB,EAAYnR,OAAnB,OACAzP,EAAApO,EAAAqO,cAAA,UAAK2gB,EAAYlR,UAAY,MAAQ,MACrC1P,EAAApO,EAAAqO,cAAA,UAAKD,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQwb,EAAYjR,sBAKrC0R,GAAiB,WAAM,IAAArY,EACG9G,mBAAS,IADZ+G,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GACrBsY,EADqBrY,EAAA,GACZsY,EADYtY,EAAA,GAAAuQ,EAEDtX,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,QAFjC+Y,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAEd7Q,GAFc8Q,EAAA,GAAAA,EAAA,IAAAG,EAGU1X,mBAASsN,IAHnBqK,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAGrB4H,EAHqB3H,EAAA,GAGR4H,EAHQ5H,EAAA,GAIrB1a,EAAsBmD,qBAAW/C,IAAjCJ,mBAEAiiB,EAAc,SAAAne,GAClB,IAAIoX,EAAOiH,EAASvG,KAAK,SAAA0F,GAAO,OAAIA,EAAQxd,KAAOA,IACnD9V,QAAQC,IAAI,eAAeitB,GAE3BoH,EAAehwB,OAAAe,GAAA,EAAAf,CAAA,GAAI4oB,KA8BrB,OAzBA1X,oBAAU,WAmBR,OAlBsB,eAAArO,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAE,SAAA0C,IAAA,IAAA1F,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAChBzD,EAAMsQ,EAAmBjN,aAAarD,IADtB4F,EAAAnC,KAAA,EAEdsQ,GAA0B/T,GAAKqF,KAAK,SAAAmN,GACrCA,EAAQ5O,OACT8uB,EAAYlgB,EAAQrC,SAEpBuiB,EAAY,MAEbptB,MAAM,SAAAxB,GACP4uB,EAAY,MATM,cAAA9sB,EAAA7B,OAAA,UAWb,GAXa,wBAAA6B,EAAA5B,SAAA0B,MAAF,yBAAAD,EAAAtB,MAAAC,KAAAC,YAAA,EActBwuB,GAAmBxtB,KAAK,SAAAlC,GACpB7E,QAAQC,IAAI,uBAAwB4E,KAGjC,WACLuvB,EAAY,IACZ5Y,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,UAEpC,IAGDV,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACXzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACXzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,sBAEE+e,EAAave,GACXjD,EAAApO,EAAAqO,cAAC0hB,GAAD,CAAalB,QAASe,IAEtBxhB,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACfzC,EAAApO,EAAAqO,cAAA,aACID,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,kBACAD,EAAApO,EAAAqO,cAAA,oBACAD,EAAApO,EAAAqO,cAAA,uBACAD,EAAApO,EAAAqO,cAAA,gCAGND,EAAApO,EAAAqO,cAAA,aAEQqhB,EAAS5G,IAAI,SAAA+F,GACX,OACEzgB,EAAApO,EAAAqO,cAAC2hB,GAAD,CACER,YAAaA,EACbX,QAASA,EACT7F,IAAK6F,EAAQxd,YAwGhC4e,GAzFG,WAAM,IAAA9H,EAEM7X,mBAAS,IAFf8X,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAGiB9X,mBAAS,CAC5CrT,IAAM,GACNgS,UAAU,KALQqZ,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GAGd6H,EAHc5H,EAAA,GAGD6H,EAHC7H,EAAA,GAAA0D,EAOO1b,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAPzCmd,EAAApsB,OAAA2Q,GAAA,EAAA3Q,CAAAmsB,EAAA,GAONjV,GAPMkV,EAAA,GAAAA,EAAA,IASd1e,EAAsBmD,qBAAW/C,IAAjCJ,mBAyBR,OAvBEwD,oBAAU,WAkBR,OAjBsB,eAAA9N,EAAApD,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,IAAA,IAAAjG,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBzD,EAAMsQ,EAAmBjN,aAAarD,IADnBkG,EAAAzC,KAAA,EAEjBgP,KAAMO,IAAIL,EAAO7V,kBAAP,IAAAmW,OAA+BjT,IAAOqF,KAAK,SAAAxB,GACzD,GAAwB,MAApBA,EAASD,OACX,OAAOC,EAAS+O,OAEjBvN,KAAK,SAAA4tB,GACNC,EAAeD,KACd3tB,MAAM,SAAAxB,GACPgW,EAAU,CAACzP,QAAQ,qDATE,wBAAAnE,EAAAlC,SAAAiC,MAAH,yBAAAD,EAAA7B,MAAAC,KAAAC,YAAA,EAatB8uB,GAAmB9tB,KAAK,SAAAlC,GACtB7E,QAAQC,IAAI4E,KAGP,WACL+vB,EAAe,CAAClzB,IAAI,GAAGgS,UAAS,MAEjC,IAGHb,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACG0d,EAAajhB,SACZb,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KAFF,aAEiD,MAInDzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UAAQwC,UAAU,oBACf,IACDzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KAFF,mBAE0D,KAChD,OAOhBzC,EAAApO,EAAAqO,cAACgiB,GAAD,QAKJjiB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KAFF,aAEiD,KAEjDzC,EAAApO,EAAAqO,cAAA,YAEFD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,iBACdzC,EAAApO,EAAAqO,cAAA,2ECnWlB,IAAIiiB,GAAe,CAClBv1B,OAAS,mCACTw1B,UAfD,WACC,IAAM7rB,EAAM,IAAIC,KAIhB,OAHkBD,EAAI0F,cAGH,IAFA1F,EAAIwF,WAEe,IADrBxF,EAAIsF,UAWTwmB,GACZC,cANO,GAOPC,mBAAoB,iHACpBC,YAAa,0GACVC,cAAe,4GACfC,UAAW,8GACXC,aAAc,2GACdC,YAAa,2GAEV,SAAeC,GAAtB9vB,GAAA,OAAA+vB,GAAA7vB,MAAAC,KAAAC,0DAAO,SAAApB,EAAiC+e,GAAjC,IAAAxP,EAAAyhB,EAAA,OAAAnxB,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF+O,EAAU,GACVyhB,EAAa,GACd31B,QAAQC,IAAI,WAAWyjB,GAHpBze,EAAAsB,GAIEmd,EAJFze,EAAAE,KAKU,kBALVF,EAAAsB,GAAA,EAMU,WANVtB,EAAAsB,GAAA,EAOU,aAPVtB,EAAAsB,GAAA,GAQU,SARVtB,EAAAsB,GAAA,GASU,YATVtB,EAAAsB,GAAA,GAUU,WAVVtB,EAAAsB,GAAA,0BAK2BovB,EAAaZ,GAAaI,mBALrDlwB,EAAAQ,OAAA,0BAMqBkwB,EAAaZ,GAAaK,YAN/CnwB,EAAAQ,OAAA,2BAOuBkwB,EAAaZ,GAAaM,cAPjDpwB,EAAAQ,OAAA,2BAQmBkwB,EAAaZ,GAAaO,UAR7CrwB,EAAAQ,OAAA,2BASqBkwB,EAAaZ,GAAaQ,aAT/CtwB,EAAAQ,OAAA,2BAUqBkwB,EAAaZ,GAAaS,YAV/CvwB,EAAAQ,OAAA,2BAWckwB,EAAaZ,GAAaI,mBAXxClwB,EAAAQ,OAAA,2BAAAR,EAAAE,KAAA,GAcAywB,KAAMlhB,IAAIihB,GAAY5uB,KAAK,SAAAlC,GAChC,GAAsB,MAAlBA,EAAOS,OACV,OAAOT,EAAOyP,KAEd,MAAM,IAAIjI,MAAM,0CAEftF,KAAK,SAAA8uB,GACP3hB,EAAU2hB,IACR7uB,MAAM,SAAAxB,GACRxF,QAAQC,IAAIuF,KAvBP,eAyBNxF,QAAQC,IAAI,aAAciU,GAzBpBjP,EAAAQ,OAAA,SA0BCyO,EAAQ2hB,UA1BT,yBAAA5wB,EAAAS,SAAAf,6BChBP,SAASmxB,GAATzxB,GAAiC,IAAb0xB,EAAa1xB,EAAb0xB,UAAajhB,EACRC,mBAAS,IADDC,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAG5BkhB,GAH4BhhB,EAAA,GAAAA,EAAA,GAGlB+gB,GAEd,OADA/1B,QAAQC,IAAI,WAAW+1B,GAEtBnjB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACCpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,4BACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,8BACdzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAMic,EAAQnpB,IAAKwJ,OAAO,UAC5BxD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAa0gB,EAAQngB,SAGrChD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACdzC,EAAApO,EAAAqO,cAAA,OAAKkF,IAAKge,EAAQC,WAAY3gB,UAAU,eACxCzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YAAY0gB,EAAQhY,aACnCnL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,8BACdzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAMic,EAAQnpB,IAAKwJ,OAAO,UAC5BxD,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZ,IACA0gB,EAAQE,OAAOre,KAFjB,MAE0Bme,EAAQG,OAAQ,MAG3CtjB,EAAApO,EAAAqO,cAAA,UACClB,KAAK,SACL0D,UAAU,kBACHS,QAAS,SAAAhW,MAGhB8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KAAsC,IANvC,oBAiBN,IAoIe8gB,GApIF,WAAM,IAAA7b,EACYxF,mBAAS,iBADrByF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GACZmJ,EADYlJ,EAAA,GACHiX,EADGjX,EAAA,GAAAa,EAEStG,mBAAS,IAFlBuG,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAEVgb,EAFU/a,EAAA,GAEHgb,EAFGhb,EAAA,GAAAO,EAGa9G,mBAAS,CAACwC,MAAK,IAH5BuE,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAGVrE,EAHUsE,EAAA,GAGErE,EAHFqE,EAAA,GAcXpE,EAAmB,SAAnBA,IACJD,EAAQ,CAACF,MAAK,IACdtG,SAASsE,oBAAoB,QAASmC,IAGlC7B,EAAK,GAAAlB,OAAM+O,EAAS,GAAG6S,eAAlB5hB,OAAkC+O,EAAS8S,MAAM,GAAjD,SAmBZ,OAjBAhhB,oBAAU,WAAM,SAAAihB,IAAA,OAAAA,EAAAnyB,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KACb,SAAAC,IAAA,IAAA+xB,EAAA,OAAAlyB,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BswB,GAAkB/R,GAF7C,cAEQiT,EAFR1xB,EAAAqB,KAGItG,QAAQiS,IAAI0kB,GACZL,EAASK,GAJb1xB,EAAAQ,OAAA,UAKW,GALX,cAAAR,EAAAC,KAAA,EAAAD,EAAAsB,GAAAtB,EAAA,SAOIjF,QAAQC,IAARgF,EAAAsB,IAPJtB,EAAAQ,OAAA,UAQW,GARX,yBAAAR,EAAAS,SAAAf,EAAA,kBADakB,MAAAC,KAAAC,YAAA,kBAAA0wB,EAAA5wB,MAAAC,KAAAC,YAYb6wB,GAAY7vB,KAAK,SAAAlC,GACf7E,QAAQC,IAAI4E,MAEb,CAAC6e,IAGF7Q,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KAFF,QAE4C,MAI9CzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OA9CD,SAAAA,GACrBA,EAAEiW,iBACFyB,EAAQ,CAACF,MAAK,IACdtG,SAAS0G,iBAAiB,QAASD,GA2CTE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAgC,KAEjCkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,gBACL9B,QAAS,kBAAM0b,EAAY,mBAE3B5e,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KALF,iBAKuD,KAGvDzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,SACL9B,QAAS,kBAAM0b,EAAY,YAE3B5e,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KALF,UAKgD,KAGhDzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,WACL9B,QAAS,kBAAM0b,EAAY,cAE3B5e,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KALF,YAKkD,KAGlDzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,OACL9B,QAAS,kBAAM0b,EAAY,UAE3B5e,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KALF,QAK8C,KAG9CzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,UACL9B,QAAS,kBAAM0b,EAAY,aAE3B5e,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KALF,WAKiD,KAEjDzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,SACL9B,QAAS,kBAAM0b,EAAY,YAE3B5e,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KALF,YAQA,QAKVzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KAFF,IAEsCO,EAAO,OAIhDwgB,GACCA,EAAM9I,IAAI,SAACnZ,EAAMyiB,GACf,OAAOhkB,EAAApO,EAAAqO,cAACgjB,GAAD,CAAUC,UAAW3hB,EAAMqZ,IAAKoJ,+BCpKrD,SAASC,GAATzyB,GAAkE,IAAzCU,EAAyCV,EAAzCU,aAAcuD,EAA2BjE,EAA3BiE,wBAA2BwM,EACtBC,mBAAS,CACjDgiB,iBAAiB,EACjBh4B,KAAMgG,EAAa/C,YACnBg1B,iBAAkBjyB,EAAajD,gBAJ+BkT,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACzDmiB,EADyDjiB,EAAA,GAC1CkiB,EAD0CliB,EAAA,GA4B5DmiB,EAAkB,SAAAp3B,GACpBC,QAAQC,IAAI,4BAEZqI,KAEF,OACEuK,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACG,IACDD,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,wCAONzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,gCAEFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,YACED,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAACskB,GAAA3yB,EAAD,CACEoT,KAAK,mBACLwf,QAASJ,EAAcD,iBACvBvkB,SAAU,SAAA1S,GAAC,OAAIo3B,OAEjBtkB,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,aACb2hB,EAAcD,iBACX,sBACA,0BAIVnkB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,QACL0D,UAAU,eACVuC,KAAK,qBACLtM,MAAOxG,EAAa/F,SAGvBi4B,EAAcD,iBACb,GAEAnkB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,iBACVuC,KAAK,wBACL9B,QAAS,SAAAhW,GAAC,OAAIo3B,MAEdtkB,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,kCAWdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,iBAEFzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAACskB,GAAA3yB,EAAD,CACEoT,KAAK,uBACLpF,SAAU,SAAA1S,GArG9Bm3B,EAAiB,CACfH,iBAAkBE,EAAcF,gBAChCh4B,KAAMk4B,EAAcl4B,KACpBi4B,iBAAkBC,EAAcD,oBAmGdK,QAASJ,EAAcF,kBAGzBlkB,EAAApO,EAAAqO,cAAA,wCACC,OAGLD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,qBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACfzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KAFF,SAIAzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACLpF,SAAU,SAAA1S,GAAC,OA/GT,SAAAA,GACpBm3B,EAAiB,CACfH,gBAAiBE,EAAcF,gBAC/Bh4B,KAAMgB,EAAEsW,OAAO9K,MACfyrB,iBAAkBC,EAAcD,mBA2GDM,CAAgBv3B,IAC/BwL,MAAO0rB,EAAcl4B,QAGzB8T,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,wBACVuC,KAAK,uBACL9B,QAAS,SAAAhW,GAhH3BC,QAAQC,IAAI,4BAkHM4S,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,kCAgBtB,SAASiiB,KAAiB,IAAAhd,EAEsBxF,mBAAS,CACjDyiB,gBAAgB,EAChBC,oBAAmB,EACnBC,aAAY,EACZC,eAAc,IANInd,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEhBqd,EAFgBpd,EAAA,GAEAqd,EAFArd,EAAA,GASlBsd,EAAmB,SAAAzhB,GAErB,OADArW,QAAQC,IAAIoW,GACLA,GACL,IAAM,iBACJrW,QAAQC,IAAI,0BACZ43B,EAAmBvzB,OAAAe,GAAA,EAAAf,CAAA,GAERszB,EAFO,CAGVJ,gBAAiBI,EAAgBJ,kBAEnC,MAGR,IAAK,qBACHx3B,QAAQC,IAAI,8BACZ43B,EAAmBvzB,OAAAe,GAAA,EAAAf,CAAA,GAChBszB,EADe,CAElBH,oBAAqBG,EAAgBH,sBACpC,MAGH,IAAK,cACHz3B,QAAQC,IAAI,uBACZ43B,EAAmBvzB,OAAAe,GAAA,EAAAf,CAAA,GACdszB,EADa,CAEhBF,aAAcE,EAAgBF,eAC7B,MAGL,IAAK,gBAAkB13B,QAAQC,IAAI,yBACjC43B,EAAmBvzB,OAAAe,GAAA,EAAAf,CAAA,GACdszB,EADa,CAEhBD,eAAgBC,EAAgBD,mBAmBxC,OACE9kB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,oBACmD,KAC1C,OAIfzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAACskB,GAAA3yB,EAAD,CACEoT,KAAK,iBACLpF,SAAU,SAAA1S,GAAC,OAAI+3B,EAAiB,mBAChCT,QAASO,EAAgBJ,iBAG3B3kB,EAAApO,EAAAqO,cAAA,QAAM+C,MAAO,iBACV,KACDhD,EAAApO,EAAAqO,cAAA,6BAAyB,OAK/BD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAACskB,GAAA3yB,EAAD,CACEoT,KAAK,qBACLpF,SAAU,SAAA1S,GAAC,OAAI+3B,EAAiB,uBAChCT,QAASO,EAAgBH,qBAE3B5kB,EAAApO,EAAAqO,cAAA,mCACC,OAILD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAACskB,GAAA3yB,EAAD,CACEoT,KAAK,cACLpF,SAAU,SAAA1S,GAAC,OAAI+3B,EAAiB,gBAChCT,QAASO,EAAgBF,cAE3B7kB,EAAApO,EAAAqO,cAAA,0CACC,OAGLD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAACskB,GAAA3yB,EAAD,CACEoT,KAAK,gBACLpF,SAAU,SAAA1S,GAAC,OAAI+3B,EAAiB,kBAChCT,QAASO,EAAgBD,gBAE3B9kB,EAAApO,EAAAqO,cAAA,4CACC,OAGLD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,0BACL9B,QAAS,SAAAhW,GAhFrBC,QAAQC,IAAI,+BAkFA4S,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,kCAYlB,SAASyiB,GAAT9xB,GAAwCA,EAAdlB,aAAc,IAAAsW,EACZtG,mBAASvB,IADG8H,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAC7BvW,EAD6BwW,EAAA,GACvBpG,EADuBoG,EAAA,GAAAO,EAET9G,mBAASpB,IAFAmI,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAE7BV,EAF6BW,EAAA,GAEtBV,EAFsBU,EAAA,GAAAuQ,EAGTtX,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAHzB+Y,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAG7B9Q,EAH6B+Q,EAAA,GAGtB9Q,EAHsB8Q,EAAA,GAI7Bta,EAAsBmD,qBAAW/C,IAAjCJ,mBAEDgmB,EAAkB,SAAAj4B,GAAC,OAAImV,EAAQ5Q,OAAAe,GAAA,EAAAf,CAAA,GAAIQ,EAALR,OAAA0X,GAAA,EAAA1X,CAAA,GAAWvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,UAEjE0sB,EAAuB,eAAA9xB,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAAkU,EAAA,OAAAzP,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxB8O,EADwB3P,OAAAe,GAAA,EAAAf,CAAA,GACRQ,IACVpD,IAAMsQ,EAAmBjN,aAAarD,IAChDuS,EAAYtJ,KAAKiB,UAAUqI,GAC3BjU,QAAQC,IAAI,sBAAuBgU,GAJPhP,EAAAE,KAAA,EAMtBsQ,GAAuBxB,GAAWlN,KAAK,SAAAmN,GACvCA,EAAQ5O,QACV4P,EAAQhB,EAAQrC,SAChB2J,EAAU,CAACzP,QAAQ,0CAEnByP,EAAU,CAACzP,QAAQ,+CAA+CwH,aAAa,YAEhFvM,MAAM,SAAAxB,GACPgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,YAdpB,cAAAtO,EAAAQ,OAAA,UAgBrB,GAhBqB,wBAAAR,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAQ,EAAAN,MAAAC,KAAAC,YAAA,GAmBvBkW,EAAW,eAAAtV,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAAyK,EAAAuS,EAAAC,EAAAC,EAAAC,EAAAd,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACdqF,GAAU,EAERuS,EAAc,WAClB,QAAIrQ,GAAMO,QAAQnI,EAAKzD,SACrB+Z,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAK6W,EAAN,CAAcvH,YAAa,kCAC7B,IAILoJ,EAAgB,WACpB,QAAItQ,GAAMO,QAAQnI,EAAKxD,WACrB8Z,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPtH,cAAe,oCAEV,IAILoJ,EAAa,WACjB,OAAgC,IAA5BvQ,GAAMmB,OAAO/I,EAAK/F,QACpBqc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAK6W,EAAN,CAAcrH,WAAY,4BAC5B,IAILoJ,EAAc,WAClB,OAAwC,IAApCxQ,GAAMY,cAAcxI,EAAK9F,SAC3Boc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAK6W,EAAN,CAAcxY,YAAa,+BAC7B,IAIY,WACrB,QAAI+J,GAAMO,QAAQnI,EAAKjD,YACrBuZ,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPvY,eAAgB,qCAEX,IAIgB,WACzB,OAAIkC,EAAKjD,WAAaiD,EAAK2O,iBACzB2H,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPpH,qBAAsB,6BAEjB,IAKLqI,EAAW,WAKf,OAJiB5R,IAAjBuS,KAA8CvS,EAC3BA,IAAnBwS,KAAgDxS,EAChCA,IAAhByS,KAA6CzS,EAC5BA,IAAjB0S,KAA8C1S,GA3D9BpE,EAAAjB,KAAA,GA+DLiX,IA/DK,eAAAhW,EAAAX,OAAA,SAAAW,EAAAE,MAAA,yBAAAF,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAe,EAAAd,MAAAC,KAAAC,YAAA,GA4FjB,OAzBAyP,oBAAU,WAmBR,OAlBgB,eAAArO,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,IAAA,IAAAlF,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACXzD,EAAMsQ,EAAmBjN,aAAarD,IAD3BmF,EAAA1B,KAAA,EAETsQ,GAAsB/T,GAAKqF,KAAK,SAAAmN,GACjCA,EAAQ5O,QACT4P,EAAQhB,EAAQrC,WAEjB7K,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,EAAMuG,WAPL,cAAAlF,EAAApB,OAAA,UAUR,GAVQ,wBAAAoB,EAAAnB,SAAAkB,MAAH,yBAAAO,EAAAtB,MAAAC,KAAAC,YAAA,EAad2P,GAAW3O,KAAK,SAAAmN,GACdlU,QAAQC,IAAI,uBAIT,WACLiV,EAAQ1B,IACRgI,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,SACnC6H,EAAUzH,MAEX,CAAC3B,IAEFa,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,aACG,IACDD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAFF,oBAEmD,QAMzDzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,uBACbzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,WACZrO,MAAOzG,EAAKzD,MACZoR,SAAU,SAAA1S,GAAC,OAAIi4B,EAAgBj4B,MAEhCob,EAAOvH,YAAcf,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOvH,cAAkB,IAEvEf,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,UACL+B,YAAY,aACZrO,MAAOzG,EAAKxD,QACZmR,SAAU,SAAA1S,GAAC,OAAIi4B,EAAgBj4B,MAEhCob,EAAOtH,cAAgBhB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOtH,gBAAoB,IAE3EhB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACL+B,YAAY,UACZrO,MAAOzG,EAAK/F,KACZ0T,SAAU,SAAA1S,GAAC,OAAIi4B,EAAgBj4B,MAEhCob,EAAOrH,WAAajB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOrH,aAAiB,IAErEjB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,WACZrO,MAAOzG,EAAK9F,MACZyT,SAAU,SAAA1S,GAAC,OAAIi4B,EAAgBj4B,MAEhCob,EAAOxY,YAAckQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOxY,cAAkB,IAEvEkQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,SACL9B,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAChCA,EACIgR,EAAU,CACRzP,QAAS,qCACTwH,aAAc,UAEhB0kB,EAAwBl4B,GAAGgH,KAAK,SAAAlC,GAChC7E,QAAQC,IAAI4E,SAIlBgO,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,YAIFzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,SACL9B,QAAS,SAAAhW,GACPmV,EAAQ1B,IACR4H,EAAUzH,IACV6H,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAGrCV,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,YAKJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACViG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,OAQnG,SAAS2kB,KAAU,IAAAzL,EACA1X,mBAAS,mBADT2X,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GACvBpS,EADuBqS,EAAA,GACdpS,EADcoS,EAAA,GAAAE,EAEC7X,mBAAS,CAAEwC,MAAM,IAFlBsV,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAEvBpV,EAFuBqV,EAAA,GAEVpV,EAFUoV,EAAA,GASxBnV,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAGpCygB,EAAiB,SAACp4B,GAClBua,EAAWva,GACXC,QAAQC,IAAIoa,IASlB,OALE7E,oBAAU,WACRxV,QAAQC,IAAIoa,IACX,IAIHxH,EAAApO,EAAAqO,cAACV,GAAmByE,SAApB,KAA8B,SAACvG,GAAY,IACjChI,EAAgDgI,EAAhDhI,wBAAyB0J,EAAuB1B,EAAvB0B,mBACjC,OACEa,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,aAIFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OAvCD,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAoCPE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,MAEDkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAAIo4B,EAAe,qBAE7BtlB,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KANF,qBAQAzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,gBACL9B,QAAS,SAAAhW,GAAC,OAAIo4B,EAAe,mBAE7BtlB,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KANF,kBASAzC,EAAApO,EAAAqO,cAAA,MACElB,KAAK,SACL0D,UAAU,4BACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAAIo4B,EAAe,qBAE7BtlB,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KANF,sBASA,QAKG,oBAAZ+E,EACCxH,EAAApO,EAAAqO,cAACilB,GAAD,CAAiBhzB,aAAciN,EAAmBjN,eAElD,GAEW,oBAAZsV,EAAgCxH,EAAApO,EAAAqO,cAACykB,GAAD,MAAsB,GAC1C,kBAAZld,EACCxH,EAAApO,EAAAqO,cAACgkB,GAAD,CACE/xB,aAAciN,EAAmBjN,aACjCuD,wBAAyBA,IAG3B,OCxmBP,IC2BD8vB,GAAa,SAAA/zB,GAAY,IAAV6oB,EAAU7oB,EAAV6oB,KAAUpY,EAEDC,mBAAS6J,IAFR5J,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAEvBgP,EAFuB9O,EAAA,GAEf6Z,EAFe7Z,EAAA,GAAAuF,EAGDxF,mBAASyK,IAHRhF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAGvBgK,EAHuB/J,EAAA,GAGfgW,EAHehW,EAAA,GAK7BhF,oBAAU,WAgBR,OAfc,eAAAvP,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACU,aAAnB+nB,EAAKmL,UADI,CAAApzB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAELmzB,GAA4BpL,EAAKqL,oBAAoBxxB,KAAK,SAAAmN,GAC5D2a,EAAW3a,KAHJ,OAAAjP,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EAMLmzB,GAA4BpL,EAAKqL,oBAAoBxxB,KAAK,SAAAmN,GAC5Dsc,EAAWtc,KAPJ,cAAAjP,EAAAQ,OAAA,UAUN,GAVM,wBAAAR,EAAAS,SAAAf,MAAH,yBAAAsB,EAAAJ,MAAAC,KAAAC,YAAA,EAYd2P,GAAW3O,KAAK,SAAAlC,GACd7E,QAAQC,IAAI4E,KAEP,WACLgqB,EAAWjQ,IACX4R,EAAWhR,MAEZ,IACD,IAAIxB,EAAc,GAIlB,OAFKA,EADL8F,EAAQ9F,YACW8F,EAAQ9F,YACRuG,EAAQvG,YAEzBnL,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,MAAI+C,MAAOmI,GAEa,aAAnBkP,EAAKmL,UACJxlB,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQ6L,EAAQjF,eAC5BhM,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQsM,EAAQ9E,gBAGlC5M,EAAApO,EAAAqO,cAAA,UAAID,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQiV,EAAKmL,aAC7BxlB,EAAApO,EAAAqO,cAAA,UAAKoa,EAAKsL,UACV3lB,EAAApO,EAAAqO,cAAA,eAAOoa,EAAKnO,MAAZ,OACAlM,EAAApO,EAAAqO,cAAA,eAAOoa,EAAK1L,UAAZ,SAKFiX,GAAiB,WAAM,IAAApd,EACCtG,mBAAS,IADVuG,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GACnBqd,EADmBpd,EAAA,GACZqd,EADYrd,EAAA,GAAAO,EAEG9G,mBAAS4M,IAFZ7F,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAEnB+c,EAFmB9c,EAAA,GAEX+c,EAFW/c,EAAA,GAAAuQ,EAGCtX,mBAAS,CACjC+jB,kBAAoB,KAJGxM,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAGnBlR,EAHmBmR,EAAA,GAGZlR,EAHYkR,EAAA,GAAAG,EAMD1X,mBAASoM,IANRuL,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAMlBtE,EANkBuE,EAAA,GAMZqM,EANYrM,EAAA,GAAAE,EAOC7X,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAPnCsZ,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAOnBrR,EAPmBsR,EAAA,GAOZrR,EAPYqR,EAAA,GAAAC,EASG/X,mBAAS,mBATZgY,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GASXxS,GATWyS,EAAA,GAAAA,EAAA,IAAA0D,EAUI1b,oBAAS,GAVb2b,EAAApsB,OAAA2Q,GAAA,EAAA3Q,CAAAmsB,EAAA,GAUVuI,GAVUtI,EAAA,GAAAA,EAAA,IAAAC,EAWE5b,oBAAS,GAXX6b,EAAAtsB,OAAA2Q,GAAA,EAAA3Q,CAAAqsB,EAAA,GAWlBsI,EAXkBrI,EAAA,GAarBsI,GAbqBtI,EAAA,GAaTlV,oBAbSkB,EAeezH,qBAAW/C,IAA3CJ,EAfiB4K,EAejB5K,mBAfiB4K,EAeGrK,QAwG5B,OA9DAiD,oBAAU,WAgBR,OAfc,eAAArP,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,IAAA,IAAAxE,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACXzD,EAAMsQ,EAAmBjN,aAAarD,IAE1C42B,GAAyB52B,GAAKqF,KAAK,SAAAqhB,GACjCpoB,QAAQC,IAAI,eAAgBmoB,EAASP,YACrC8Q,EAAUvQ,EAASP,YACnBkR,EAAQ3Q,EAASD,QANJ,wBAAA/hB,EAAAV,SAAAQ,MAAH,yBAAAC,EAAAN,MAAAC,KAAAC,YAAA,EAWdozB,GAAWpyB,KAAK,SAAAmN,MAIT,WACLykB,EAAU,MAEX,IAGHnjB,oBAAU,WAmCR,OAjCyB,eAAA7O,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,IAAA,IAAAwyB,EAAA,OAAA50B,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACtBi0B,EAAiB,GADKvyB,EAAA1B,KAAA,EAEpBuzB,EAAOztB,QAAQ,SAAAouB,GACbr5B,QAAQC,IAAI,gBAAgBo5B,GAC5BD,EAAe9tB,KAAK,CAClBitB,mBAAoBc,EAAcd,mBAClCjW,OAAQ,CACNgX,cAAe,MACf/tB,MAAO8tB,EAActa,WARP,cAAAlY,EAAApB,OAAA,SAanB2zB,GAbmB,wBAAAvyB,EAAAnB,SAAAkB,MAAH,yBAAAD,EAAAd,MAAAC,KAAAC,YAAA,EAgBzBwzB,GAAsBxyB,KAAK,SAAAqyB,GAEnBp5B,QAAQC,IAAI,iBAAkBm5B,GAC9Bp5B,QAAQC,IAAI,SAAS6Q,OAAO0oB,QAC5B1oB,OAAO0oB,OAAOC,QAAQ,CAClBC,YAAa,SAACplB,EAAM3C,GAClB,OAAOA,EAAQgoB,MAAMC,OAAO,CAAER,eAAiBA,KAEjDS,UAAS,eAAAC,EAAAx1B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAE,SAAA0C,EAAOkN,EAAM3C,GAAb,IAAAgoB,EAAA,OAAAn1B,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EACWwM,EAAQgoB,MAAMI,UADzB,OACHJ,EADGryB,EAAAhB,KAET0yB,GAAW,GACXh5B,QAAQC,IAAI05B,GAHH,wBAAAryB,EAAA5B,SAAA0B,MAAF,gBAAAzB,EAAAC,GAAA,OAAAk0B,EAAAj0B,MAAAC,KAAAC,YAAA,KAKVi0B,OAAOd,KAIX,cAGN,CAACD,IAGFpmB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KADF,qBAKFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,2BACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KADF,mBAIAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mBACVuC,KAAK,cACL9B,QAAS,SAAAhW,GAAC,OACRu4B,GACEn5B,EAASe,KAAK2H,YAAYnG,KAC1BqF,KAAK,SAAAmN,GACLlU,QAAQC,IAAIiU,IACW,IAAnBA,EAAQ5O,SACVyzB,EAAQ5X,IACRwX,EAAU,IACVnd,EAAU,CACRzP,QAAS,qBACTwH,aAAc,eAMtBV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KApBF,kBAwBJzC,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACfzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,yBAGJD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,yBAGJD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,wBAGJD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,qBAGJD,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,2BAKRD,EAAApO,EAAAqO,cAAA,aACG4lB,EAAOr5B,OAAS,EACfq5B,EAAOnL,IAAI,SAACL,EAAM2J,GAChB,OAAQhkB,EAAApO,EAAAqO,cAACmnB,GAAD,CAAY/M,KAAMA,EAAMO,IAAKoJ,MAGvChkB,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBAAhB,+CAMLiG,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,IAGJV,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,2BACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KADF,aACoD,MAItDzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,kBACkB6S,EAAK3G,UADvB,KAGA3O,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,YAA0C6S,EAAK1G,IAA/C,OACA5O,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,cAA4C6S,EAAKzG,MAAjD,KACA7O,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACL+B,YAAY,iBACZrO,MAAOqtB,EAAQ9mB,KACfW,SAAU,SAAA1S,GAAC,OACT84B,EAAWv0B,OAAAe,GAAA,EAAAf,CAAA,GACNs0B,EADKt0B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAI/B4P,EAAO2d,kBACNjmB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO2d,oBAE7B,IAGJjmB,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,wBACVuC,KAAK,YACL9B,QAAS,SAAAhW,GAAC,OAxOJ,SAAAA,GAQpB,GAAI64B,EAAQ9mB,KAAK,CACb,IAAIgX,EAAMxkB,OAAAe,GAAA,EAAAf,CAAA,GAAOs0B,GACjB,IACI9P,EAAOpnB,IAAMsQ,EAAmBjN,aAAarD,IAC7ConB,EAASne,KAAKiB,UAAUkd,GACxBwP,GAA4BxP,GAAQ/hB,KAAK,SAAAmN,GACvClU,QAAQC,IAAI,yBAA0BiU,GAClCA,EAAQ5O,SAMVkW,EAAU,CAACzP,QAAQmI,EAAQ1O,MAAMuG,QAAQwH,aAAa,UACtDvT,QAAQC,IAAIiU,EAAQ1O,MAAMuG,YAI/B,MAAMvG,GACLxF,QAAQC,IAAIuF,GACZgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,gBAIpD6H,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAa2d,kBAAoB,iCAC1Ctd,EAAU,CAACzP,QAAQ,+BAuMO4c,KAEd9V,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eAAb,KANF,eAQAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kBACVuC,KAAK,QACL9B,QAAS,SAAAhW,GACP84B,EAAWlX,IACXvG,EAAU,CAAE0d,kBAAmB,KAC/Btd,EAAU,CAAEzP,QAAS,GAAIwH,aAAc,WAGzCV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAVF,gBAaFzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,OAAKgI,IAAK,SAAAof,GAAC,OAAKhB,EAAYgB,KAC5BrnB,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,WACLhC,MAAM,iDACNE,QAAS,SAAAhW,GAAC,OAAIua,EAAWva,KAEzB8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KAPF,2BAmBd6kB,GAAkB,WAAM,IAAA9I,EACKtc,mBAAS+K,IADdwR,EAAAhtB,OAAA2Q,GAAA,EAAA3Q,CAAA+sB,EAAA,GACnBlL,EADmBmL,EAAA,GACV8I,EADU9I,EAAA,GAAAC,EAECxc,mBAASsL,IAFVmR,EAAAltB,OAAA2Q,GAAA,EAAA3Q,CAAAitB,EAAA,GAEnBpW,EAFmBqW,EAAA,GAEZpW,EAFYoW,EAAA,GAAAE,EAGC3c,mBAAS,CAAChJ,QAAS,GAAGwH,aAAa,SAHpCoe,EAAArtB,OAAA2Q,GAAA,EAAA3Q,CAAAotB,EAAA,GAGnBnW,EAHmBoW,EAAA,GAGZnW,EAHYmW,EAAA,GAAA1E,EAIc9X,qBAAW/C,IAA3CJ,EAJkBib,EAIlBjb,mBAEFiK,GANoBgR,EAIE1a,QAEX,eAAApL,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,EAAM5H,GAAN,IAAAyK,EAAA6vB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAve,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACdqF,GAAU,EAER6vB,EAAmB,WACvB,QAAG3tB,GAAMO,QAAQkZ,EAASpG,cACxB3E,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPmF,iBAAmB,uCAEd,IAILga,EAAc,WAClB,QAAG5tB,GAAMO,QAAQkZ,EAASnG,SACxB5E,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPoF,YAAc,yCAET,IAILga,EAAoB,WACxB,QAAG7tB,GAAMO,QAAQkZ,EAASlG,eACxB7E,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPqF,kBAAoB,wCAEf,IAILga,EAAa,WACjB,QAAG9tB,GAAMO,QAAQkZ,EAASjG,QACxB9E,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPsF,WAAa,sCAER,IAILga,EAAiB,WACrB,QAAG/tB,GAAMO,QAAQkZ,EAAShZ,YACxBiO,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPuF,eAAiB,0CAEZ,IAILga,EAAgB,WACpB,QAAGhuB,GAAMO,QAAQkZ,EAAShG,WACxB/E,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPwF,cAAgB,oCAEX,IAILga,EAAoB,WACxB,QAAGjuB,GAAMO,QAAQkZ,EAAS/F,eACxBhF,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPyF,kBAAkB,8CAEb,IAKLxE,EAAW,WASb,OARqB5R,IAArB6vB,KAAgD7vB,EAC/BA,IAAjB8vB,KAA8C9vB,EACvBA,IAAvB+vB,KAAoD/vB,EACpCA,IAAhBgwB,KAA6ChwB,EACzBA,IAApBiwB,KAAiDjwB,EAC9BA,IAAnBkwB,KAAgDlwB,EACzBA,IAAvBmwB,KAAoDnwB,GAjFtC5C,EAAAzC,KAAA,GAsFLiX,IAtFK,eAAAxU,EAAAnC,OAAA,SAAAmC,EAAAtB,MAAA,yBAAAsB,EAAAlC,SAAAiC,MAAH,gBAAAnB,GAAA,OAAAW,EAAAtB,MAAAC,KAAAC,YAAA,IA0FX60B,EAAkB,eAAAlzB,EAAApD,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwD,EAAMnI,GAAN,IAAAiiB,EAAA,OAAAxd,GAAAC,EAAAO,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAErB6c,EAAmB1d,OAAOoO,OAAO,GAAGyT,IACvBzkB,IAAMsQ,EAAmBjN,aAAarD,IACvDsgB,EAAmBrX,KAAKiB,UAAUoW,GAJT7Z,EAAAhD,KAAA,EAMnBmzB,GAAgCtW,GAAkBjb,KAAK,SAAAxB,GACrDA,EAASD,QACX80B,EAAY70B,EAASsM,SACrB2J,EAAU,CAACzP,QAAS,sCAAsCwH,aAAc,UAGxEiI,EAAU,CACRzP,QAASxG,EAASC,MAAMuG,QACxBwH,aAAc,YAInBvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAnB7B,cAAApL,EAAA1C,OAAA,UAsBlB,GAtBkB,wBAAA0C,EAAAzC,SAAAwC,MAAH,gBAAAzB,GAAA,OAAAiB,EAAA7B,MAAAC,KAAAC,YAAA,GAqDxB,OA3BAyP,oBAAU,WAoBR,OAjByB,eAAAvN,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA8D,IAAA,IAAAyD,EAAAC,EAAA,OAAA1H,GAAAC,EAAAO,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAEtB8G,EAAO+F,EAAmBjN,aAAarD,IACvCwK,EAAW2uB,EAAkB37B,gBAAkB,oBAAsB+M,EAAO,IAHtDxD,EAAAtD,KAAA,EAKpBmzB,GAAiCrsB,EAAKC,GAAUnF,KAAK,SAAAof,GACzDiU,EAAYjU,KACXnf,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,KARY,cAAAiD,EAAAhD,OAAA,UAUnB,GAVmB,wBAAAgD,EAAA/C,SAAA8C,MAAH,yBAAAP,EAAApC,MAAAC,KAAAC,YAAA,EAazB+0B,GAAsB/zB,KAAK,SAAAlC,GACzB7E,QAAQC,IAAI4E,KAGP,WACLu1B,EAAYta,IACZ1E,EAAUiF,IACV7E,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAEpC,IAGDV,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,YACVO,MACE,qGAGFhD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KANF,sBAUFzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,aACL+B,YAAY,+DACZrO,MAAO4a,EAASpG,WAChBtN,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOmF,iBAAmBzN,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOmF,mBAAuB,IAGjFzN,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,mBACZrO,MAAO4a,EAASnG,MAChBvN,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOoF,YAAc1N,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOoF,cAAkB,IAGvE1N,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,cACL+B,YAAY,kBACZrO,MAAO4a,EAASlG,YAChBxN,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOqF,kBAAoB3N,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOqF,oBAAwB,IAGnF3N,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACL+B,YAAY,UACZrO,MAAO4a,EAASjG,KAChBzN,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOsF,WAAa5N,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOsF,aAAiB,IAErE5N,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,WACL+B,YAAY,cACZrO,MAAO4a,EAAShZ,SAChBsF,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOuF,eAAiB7N,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOuF,iBAAqB,IAE7E7N,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,UACL+B,YAAY,aACZrO,MAAO4a,EAAShG,QAChB1N,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOwF,cAAgB9N,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOwF,gBAAoB,IAG3E9N,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,cACL+B,YAAY,iBACZrO,MAAO4a,EAAS/F,YAChB3N,SAAU,SAAA1S,GAAC,OACTq6B,EAAY91B,OAAAe,GAAA,EAAAf,CAAA,GAAK6hB,EAAN7hB,OAAA0X,GAAA,EAAA1X,CAAA,GAAiBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGxD4P,EAAOyF,kBAAoB/N,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOyF,oBAAwB,IAGnF/N,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,gBACL9B,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAChCA,EACEgR,EAAU,CAACzP,QAAQ,qCAAqCwH,aAAa,UACrEqnB,EAAmB76B,GAAGgH,KAAK,SAAAxB,GAC3BvF,QAAQC,IAAIsF,SAIhBsN,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAZF,yBAcAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,QACL9B,QAAS,SAAAhW,GACPqb,EAAUiF,IACV+Z,EAAYta,IACZtE,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAGrCV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAVF,WAcFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cAETiG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,QAU7GuG,GAAiB,WAAM,IAAA8X,EACI7c,mBAAS8L,IADbgR,EAAAvtB,OAAA2Q,GAAA,EAAA3Q,CAAAstB,EAAA,GAClB5K,EADkB6K,EAAA,GACVkJ,EADUlJ,EAAA,GAAAC,EAEE/c,mBAASgM,IAFXgR,EAAAztB,OAAA2Q,GAAA,EAAA3Q,CAAAwtB,EAAA,GAElB3W,EAFkB4W,EAAA,GAEX3W,EAFW2W,EAAA,GAAAY,EAGE5d,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,SAHpCqf,EAAAtuB,OAAA2Q,GAAA,EAAA3Q,CAAAquB,EAAA,GAGlBpX,EAHkBqX,EAAA,GAGXpX,EAHWoX,EAAA,GAAAZ,EAIe7c,qBAAW/C,IAA3CJ,EAJiBggB,EAIjBhgB,mBAEFiK,GANmB+V,EAIGzf,QAEX,eAAAhK,EAAAjE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAoE,EAAM/I,GAAN,IAAAyK,EAAAwwB,EAAA/d,EAAAge,EAAA/d,EAAAge,EAAA9e,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cACdqF,GAAU,EAERwwB,EAAY,WAChB,OAAkC,IAA/BtuB,GAAMO,QAAQ+Z,EAAQlG,QACO,IAA7BpU,GAAMoB,MAAMkZ,EAAQlG,OACrB1F,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEP6F,UAAY,2BAEP,KAOL/D,EAAa,WACjB,QAAIvQ,GAAMmB,QAAwB,IAAjBmZ,EAAQjoB,QACvBqc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPrH,WAAY,4BAEP,IAKLmnB,EAAY,WAChB,OAAmC,IAA/BvuB,GAAMO,QAAQ+Z,EAAQ/nB,SACpByN,GAAMqB,OAAsB,IAAhBiZ,EAAQ/nB,OACtBmc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEP8F,UAAW,2BAEN,KAOP/D,EAAc,WAClB,OAA2C,IAAvCxQ,GAAMY,cAAc0Z,EAAQhoB,SAC9Boc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPxY,YAAa,6BAER,IAKLu4B,EAAgB,WACpB,OAAsC,IAAnCxuB,GAAMO,QAAQ+Z,EAAQ1mB,YACa,IAAjCoM,GAAMI,MAAMka,EAAQ1mB,WACrB8a,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEP+F,cAAgB,iCAEX,KAOP9E,EAAW,WAMf,OALc5R,IAAdwwB,KAAyCxwB,EACzBA,IAAhByS,KAA6CzS,EAC9BA,IAAfywB,KAA4CzwB,EAC3BA,IAAjB0S,KAA8C1S,EAC3BA,IAAnB0wB,KAAgD1wB,GAxEhCzB,EAAA5D,KAAA,EA4ELiX,IA5EK,cAAArT,EAAAtD,OAAA,SAAAsD,EAAAzC,MAAA,yBAAAyC,EAAArD,SAAAoD,MAAH,gBAAAtB,GAAA,OAAAe,EAAA1C,MAAAC,KAAAC,YAAA,IA+EXo1B,EAAmB,eAAAtyB,EAAAvE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAmf,EAAM9jB,GAAN,IAAA+mB,EAAA,OAAAtiB,GAAAC,EAAAO,KAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,cACtB2hB,EAAkBxiB,OAAOoO,OAAO,GAAGsU,IACvBtlB,IAAMsQ,EAAmBjN,aAAarD,IACtDolB,EAAkBnc,KAAKiB,UAAUkb,GAEjCwR,GAA+BxR,GAAiB/f,KAAK,SAAAxB,GAC9CA,EAASD,QACVy1B,EAAWx1B,EAASsM,SACpB2J,EAAU,CAACzP,QAAQ,qCAAqCwH,aAAa,UAErEiI,EAAU,CAACzP,QAAQxG,EAASC,MAAMuG,QAAQwH,aAAa,YAE1DvM,MAAM,SAAAxB,GACLgW,EAAU,CAACzP,QAASvG,EAAMuG,QAAQwH,aAAa,YAbzBwQ,EAAAte,OAAA,UAgBnB,GAhBmB,wBAAAse,EAAAre,SAAAme,MAAH,gBAAA9b,GAAA,OAAAc,EAAAhD,MAAAC,KAAAC,YAAA,GA2CzB,OAxBAyP,oBAAU,WAiBR,OAfmB,eAAAyO,EAAA3f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwf,IAAA,IAAAjY,EAAAC,EAAA,OAAA1H,GAAAC,EAAAO,KAAA,SAAAmf,GAAA,cAAAA,EAAAjf,KAAAif,EAAAhf,MAAA,cAChB8G,EAAO+F,EAAmBjN,aAAarD,IACvCwK,EAAW2uB,EAAkB37B,gBAAkB,mBAAqB+M,EAAO,IAF3DkY,EAAAhf,KAAA,EAIdmzB,GAAgCrsB,EAAMC,GAAUnF,KAAK,SAAAxB,GACzDw1B,EAAWx1B,KACVyB,MAAM,SAAAxB,GACPxF,QAAQC,IAAIuF,KAPM,cAAA2e,EAAA1e,OAAA,UAUb,GAVa,wBAAA0e,EAAAze,SAAAwe,MAAH,yBAAAD,EAAApe,MAAAC,KAAAC,YAAA,EAanBq1B,GAAgBr0B,KAAK,SAAAlC,GAAM,OAAI7E,QAAQC,IAAI4E,KAEpC,WACLk2B,EAAWla,IACXzF,EAAU2F,IACVvF,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAEpC,IAGCV,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACIpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACXzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACXzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACVzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KAAwC,IAD5C,oBAMJzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,MACL0D,UAAU,eACVuC,KAAK,MACL+B,YAAY,SACZrO,MAAOyb,EAAQlG,IACfrO,SAAU,SAAA1S,GAAC,OAAIg7B,EAAWz2B,OAAAe,GAAA,EAAAf,CAAA,GAAI0iB,EAAL1iB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAElE4P,EAAO6F,UAAYnO,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO6F,YAAgB,IAGrEnO,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,MACL0D,UAAU,eACVuC,KAAK,OACL+B,YAAY,UACZrO,MAAOyb,EAAQjoB,KACf0T,SAAU,SAAA1S,GAAC,OAAIg7B,EAAWz2B,OAAAe,GAAA,EAAAf,CAAA,GAAI0iB,EAAL1iB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAElE4P,EAAOrH,WAAajB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOrH,aAAiB,IAGvEjB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,MACL0D,UAAU,eACVuC,KAAK,MACL+B,YAAY,SACZrO,MAAOyb,EAAQ/nB,IACfwT,SAAU,SAAA1S,GAAC,OAAIg7B,EAAWz2B,OAAAe,GAAA,EAAAf,CAAA,GAAI0iB,EAAL1iB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAElE4P,EAAO8F,UAAYpO,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO8F,YAAgB,IAGrEpO,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,QACL0D,UAAU,eACVuC,KAAK,QACL+B,YAAY,WACZrO,MAAOyb,EAAQhoB,MACfyT,SAAU,SAAA1S,GAAC,OAAIg7B,EAAWz2B,OAAAe,GAAA,EAAAf,CAAA,GAAI0iB,EAAL1iB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAElE4P,EAAOxY,YAAckQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOxY,cAAkB,IAGzEkQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,SACIlB,KAAK,MACL0D,UAAU,eACVuC,KAAK,UACL+B,YAAY,qBACZrO,MAAOyb,EAAQ1mB,QACfmS,SAAU,SAAA1S,GAAC,OAAIg7B,EAAWz2B,OAAAe,GAAA,EAAAf,CAAA,GAAI0iB,EAAL1iB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAM9X,EAAEsW,OAAO9K,YAElE4P,EAAO+F,cAAgBrO,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO+F,gBAAoB,IAG7ErO,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,UACIlB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,gBACL9B,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAChCA,EACEgR,EAAU,CAACzP,QAAS,kCACpBovB,EAAoBp7B,GAAGgH,KAAK,SAAAlC,GAC5B7E,QAAQC,IAAI4E,SAIhBgO,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAAgC,IAZpC,iBAeAzC,EAAApO,EAAAqO,cAAA,UACIlB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,QACL9B,QAAS,SAAAhW,GACPg7B,EAAWla,IACXzF,EAAU2F,IACVvF,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAGrCV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAAkC,IAVtC,UAeJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cAETiG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,QA2F5G8nB,GApEE,WAAM,IAAAxI,EACU9d,mBAAS,oBADnB+d,EAAAxuB,OAAA2Q,GAAA,EAAA3Q,CAAAuuB,EAAA,GACZxY,EADYyY,EAAA,GACJxY,EADIwY,EAAA,GAAAwI,EAEqBnmB,qBAAW/C,IAFhC2gB,GAAAuI,EAEXtpB,mBAFWspB,EAES/oB,QACEwC,mBAAS,CAACwC,MAAK,KAH1Byb,EAAA1uB,OAAA2Q,GAAA,EAAA3Q,CAAAyuB,EAAA,GAGZvb,EAHYwb,EAAA,GAGAvb,EAHAub,EAAA,GAUbtb,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAGxC,OACE7E,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KADF,cAGAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OAvBC,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAoBTE,CAAiB7X,KAHjC,YAKY,KAEXyX,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,mBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,sBAH3B,oBAOAzH,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,qBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KALF,oBAOAzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,qBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KALF,qBAQA,QAKG,qBAAZ+E,EAAiCxH,EAAApO,EAAAqO,cAACyoB,GAAD,MAAsB,GAC3C,oBAAZlhB,EAAgCxH,EAAApO,EAAAqO,cAAC0oB,GAAD,MAAqB,GACzC,oBAAZnhB,EAAgCxH,EAAApO,EAAAqO,cAAC2oB,GAAD,MAAqB,MCh8B1DC,GAAQ,WAAM,IAAA5mB,EACUC,mBAAS8M,IADnB7M,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACTyU,EADSvU,EAAA,GACF2mB,EADE3mB,EAAA,GAAAuF,EAEYxF,mBAASkN,IAFrBzH,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAETY,EAFSX,EAAA,GAEDY,EAFCZ,EAAA,GAAAa,EAGYtG,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,SAHlD+H,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAGTE,EAHSD,EAAA,GAGDE,EAHCF,EAAA,GAAAO,EAIU9G,mBAAS,CAAC6mB,QAAU,YAAYC,MAAM,UAJhD/f,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAITigB,EAJShgB,EAAA,GAIDigB,EAJCjgB,EAAA,GAKR9J,EAAuBmD,qBAAW/C,IAAlCJ,mBAEFiK,EAAW,eAAA5X,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAAyK,EAAAwxB,EAAA1J,EAAA2J,EAAAC,EAAAlB,EAAA/d,EAAAC,EAAAge,EAAA9e,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdqF,GAAU,EAERwxB,EAAmB,WACvB,QAAGtvB,GAAMO,QAAQsc,EAAMzH,cACrB1G,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAY+G,iBAAmB,uCACjC,IAKLoQ,EAAoB,WACxB,QAAG5lB,GAAMO,QAAQsc,EAAMvL,eACrB5C,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYoD,kBAAoB,yCAClC,IAKL0d,EAAqB,WACzB,QAAGvvB,GAAMO,QAAQsc,EAAMxH,gBACrB3G,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYgH,mBAAoB,yCAClC,IAKL+Z,EAAyB,WAC7B,QAAGxvB,GAAMO,QAAQsc,EAAMvH,oBACrB5G,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYiH,uBAAyB,6CACvC,IAKL4Y,EAAY,WAChB,OAA8B,IAA3BtuB,GAAMoB,MAAMyb,EAAMzI,OACnB1F,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAY6F,UAAY,iCAC1B,IAKL/D,EAAa,WACjB,OAAgC,IAA7BvQ,GAAMmB,OAAO0b,EAAMxqB,QACpBqc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYrH,WAAa,mCAC3B,IAKLoJ,EAAc,WAClB,OAAwC,IAArCxQ,GAAMY,cAAcic,EAAMvqB,SAC3Boc,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAYxY,YAAc,6BAC5B,IAKJu4B,EAAgB,WACpB,OAAIxuB,GAAMO,QAAQsc,EAAMjpB,YACU,IAA/BoM,GAAMI,MAAMyc,EAAMjpB,WACnB8a,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAI6W,EAAL,CAAY+F,cAAc,+BAC5B,KAOL9E,EAAW,WAUf,OATqB5R,IAArBwxB,KAAgDxxB,EAC1BA,IAAtB8nB,KAAiD9nB,EAC1BA,IAAvByxB,KAAkDzxB,EACvBA,IAA3B0xB,KAAsD1xB,EACxCA,IAAdwwB,KAAyCxwB,EAC1BA,IAAfyS,KAA0CzS,EAC1BA,IAAhB0S,KAA2C1S,EACzBA,IAAlB0wB,KAA6C1wB,GA9E9BvF,EAAAQ,OAAA,SAmFV2W,KAnFU,yBAAAnX,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GAsFX0jB,EAAQ,eAAAxjB,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAA2B,EAAAkoB,EAAA,OAAAplB,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACTzD,EAAMsQ,EAAmBjN,aAAarD,KACtCkoB,EAFStlB,OAAAe,GAAA,EAAAf,CAAA,GAEUilB,IACV7nB,IAAMA,EACnBkoB,EAAejf,KAAKiB,UAAUge,GAC9BnU,GAAqBmU,GAAc7iB,KAAK,SAAAxB,GACnCA,EAASD,QACVq2B,EAASp2B,EAASsM,SAClB2J,EAAU,CAACzP,QAAQ,6BAA6BwH,aAAa,UAE7DiI,EAAU,CAACzP,QAAQ,yBAAyBwH,aAAa,YAE1DvM,MAAM,SAAAxB,GACPgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,YAbnCnN,EAAAX,OAAA,UAgBN,GAhBM,wBAAAW,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GA0Cd,OAvBAyP,oBAAU,WAiBR,OAfgB,eAAArP,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,IAAA,IAAAlF,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACbzD,EAAMsQ,EAAmBjN,aAAarD,IADzBmF,EAAA1B,KAAA,EAEXsQ,GAAuB/T,GAAKqF,KAAK,SAAAxB,GACjCA,EAASD,QACXq2B,EAASp2B,EAASsM,SAClBkqB,EAAQz3B,OAAAe,GAAA,EAAAf,CAAA,GAAIw3B,EAAL,CAAaF,QAAQ,mBAE5B57B,QAAQC,IAAIsF,EAASC,MAAMuG,WAPd,cAAAlF,EAAApB,OAAA,UAUV,GAVU,wBAAAoB,EAAAnB,SAAAkB,MAAH,yBAAAT,EAAAN,MAAAC,KAAAC,YAAA,EAahBojB,GAAapiB,KAAK,SAAAo1B,GAAYn8B,QAAQC,IAAI,mBAEnC,WACL07B,EAAS9Z,IACTzG,EAAU6G,IACVzG,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,WAEpC,IAEDV,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,IAA2BzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,yBAAb,KAA3B,mBAEAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,eAGjBzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,2BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,aACLtM,MAAOge,EAAMzH,WACbrP,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAO+G,iBAAmBrP,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO+G,mBAAuB,IAEjFrP,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,cACLtM,MAAOge,EAAMvL,YACbvL,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAOoD,kBAAoB1L,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOoD,oBAAwB,IAEnF1L,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,6BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,eACLtM,MAAOge,EAAMxH,aACbtP,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAOgH,mBAAqBtP,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOgH,qBAAyB,IAErFtP,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,iCACAD,EAAApO,EAAAqO,cAAA,YACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,mBACLtM,MAAOge,EAAMvH,iBACbvP,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAOiH,uBAAyBvP,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOiH,yBAA6B,IAE7FvP,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,oBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,MACLtM,MAAOge,EAAMzI,IACbrO,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAO6F,UAAYnO,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO6F,YAAgB,IAEnEnO,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,qBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACLtM,MAAOge,EAAMxqB,KACb0T,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAOrH,WAAajB,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOrH,aAAiB,IAErEjB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACLtM,MAAOge,EAAMvqB,MACbyT,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAOxY,YAAckQ,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOxY,cAAkB,IAEvEkQ,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,wBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,UACLtM,MAAOge,EAAMjpB,QACbmS,SAAU,SAAA1S,GAAC,OACT47B,EAASr3B,OAAAe,GAAA,EAAAf,CAAA,GAAKilB,EAANjlB,OAAA0X,GAAA,EAAA1X,CAAA,GAAcvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGlD4P,EAAO+F,cAAgBrO,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAO+F,gBAAoB,IAE3ErO,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,eACL9B,QAAS,SAAAhW,GAAC,OAAIkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAChCA,EACEgR,EAAU,CAACzP,QAAQ,wBAAyBwH,aAAa,UACzDkW,EAAS1pB,GAAGgH,KAAK,SAAAxB,GACjBvF,QAAQC,IAAIsF,SAIhBsN,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KAZF,IAYmC,IAChCwmB,EAAQF,SAGX/oB,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,QACL9B,QAAS,SAAAhW,GACPyb,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,SACnC6H,EAAU6G,IACV0Z,EAAS9Z,MAGXhP,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KAVF,IAUqC,IAVrC,UAcJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QAAU8G,EAAApO,EAAAqO,cAAC2J,GAAD,CAAe1Q,QAASwP,EAAOxP,QAASwH,aAAcgI,EAAOhI,eAAmB,SA6CnG6oB,GA/BM,WAAM,IAAA/P,EACKtX,mBAAS,SADduX,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GACjBhS,EADiBiS,EAAA,GACThS,EADSgS,EAAA,GAEKnX,qBAAW/C,IAAjCJ,mBAEN,OACEa,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KADF,kBAGAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mBACVuC,KAAK,QACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAWva,EAAEsW,OAAOwB,QAElChF,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KANF,oBAYS,UAAZ+E,EAAsBxH,EAAApO,EAAAqO,cAACupB,GAAD,MAAY,MC7TvCC,GAAgB,SAAAj4B,GAAiB,IAAdyf,EAAczf,EAAdyf,QAAchP,EACFC,mBAAS6J,IADP5J,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAC9BynB,EAD8BvnB,EAAA,GAChB6Z,EADgB7Z,EAAA,GAAAuF,EAEDxF,mBAAS,IAFRyF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAE9BkJ,EAF8BjJ,EAAA,GAElB0R,EAFkB1R,EAAA,GAAAa,EAGTtG,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAH7B+H,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAG9BE,EAH8BD,EAAA,GAGtBE,EAHsBF,EAAA,GAK/BkhB,EAAQ,eAAAv2B,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAA+jB,EAAA,OAAAtf,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACX2e,EADWxf,OAAAe,GAAA,EAAAf,CAAA,GACIi4B,GACnBzY,EAAUnZ,KAAKiB,UAAUkY,GAFV7e,EAAAE,KAAA,EAGTsQ,GACWqO,GACd/c,KAAK,SAAAmN,GACAA,EAAQ5O,QACVupB,EAAW3a,EAAQrC,SACnB2J,EAAU,CACRzP,QAAS,+BACTwH,aAAc,SAGhBiI,EAAU,CAAEzP,QAASmI,EAAQ1O,MAAMuG,QAASwH,aAAc,YAG7DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAjBvC,cAAAtO,EAAAQ,OAAA,UAmBR,GAnBQ,wBAAAR,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAM,EAAAJ,MAAAC,KAAAC,YAAA,GAsBRie,EAAe,eAAA7d,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAA+jB,EAAA,OAAAtf,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAClB2e,EADkBxf,OAAAe,GAAA,EAAAf,CAAA,GACHi4B,GADGn2B,EAAAjB,KAAA,EAGhBsQ,GACaqO,GAChB/c,KAAK,SAAAlC,GACAA,EAAOS,QACTupB,EAAWhqB,EAAOgN,SAClB2J,EAAU,CACRzP,QAAS,+BACTwH,aAAc,SAGhBiI,EAAU,CAAEzP,QAASlH,EAAOW,MAAMuG,QAASwH,aAAc,YAG5DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAjBhC,cAAAnN,EAAAX,OAAA,UAmBf,GAnBe,wBAAAW,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAO,EAAAN,MAAAC,KAAAC,YAAA,GAsCrB,OAhBAyP,oBAAU,WAWR,OATAC,GADoB,YAGjB1O,KAAK,SAAAmN,GACJgY,EAAchY,KAEflN,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,KAEhBqpB,EAAW/K,GACJ,WACL+K,EAAWjQ,IACXsN,EAAc,MAEf,IAEDrZ,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,mBACAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,sCACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAIikB,EAAgBjkB,KAE9B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KANF,YAYJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,6BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,eACLtM,MAAOgxB,EAAa1d,aACpBpM,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GACNi4B,EADKj4B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAKlCsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,YACEwC,UAAU,eACVuC,KAAK,cACLtM,MAAOgxB,EAAave,YACpBvL,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GACNi4B,EADKj4B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAKlCsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACLtM,MAAOgxB,EAAaxd,MACpBtM,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GACNi4B,EADKj4B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAKlCsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,yBACAD,EAAApO,EAAAqO,cAAA,UACEwC,UAAU,eACVuC,KAAK,cACLtM,MAAOgxB,EAAaze,YACpBrL,SAAU,SAAA1S,GAAC,OACT8uB,EAAWvqB,OAAAe,GAAA,EAAAf,CAAA,GACNi4B,EADKj4B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAI7BkY,EAAW8J,IAAI,SAAA7J,GACd,OACE7Q,EAAApO,EAAAqO,cAAA,UAAQvH,MAAOmY,EAAS5F,aACrB4F,EAASvF,kBAOpBtL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,gCACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAIy8B,EAASz8B,KAEvB8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KANF,mBAQAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,gCACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GACP8uB,EAAW/K,GACXtI,EAAU,CAAEzP,QAAS,GAAIwH,aAAc,WAGzCV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KATF,kBAaFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,SAyBVkpB,GAAc,SAAA91B,GAAe,IAAb+1B,EAAa/1B,EAAb+1B,QAAa7gB,EACJ9G,mBAASvB,IADLsI,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GACxB8gB,EADwB7gB,EAAA,GACjB8gB,EADiB9gB,EAAA,GAAAuQ,EAEJtX,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,QAF9B+Y,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAEjB7Q,GAFiB8Q,EAAA,GAAAA,EAAA,IAIzBpB,EAAa,eAAA/jB,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAMlF,GAAN,OAAA8C,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACZsQ,GAA0B/T,GAAKqF,KAAK,SAAAmN,GACnCA,EAAQ5O,OACPs3B,EAAU1oB,EAAQrC,UAElB2J,EAAU,CAACzP,QAAQ,6CAA6CwH,aAAa,UAC7EqpB,EAAUppB,OAEfxM,MAAM,SAAAxB,GACLgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,UAC9CqpB,EAAUppB,MAVI,cAAA3M,EAAApB,OAAA,UAYX,GAZW,wBAAAoB,EAAAnB,SAAAkB,MAAH,gBAAAJ,GAAA,OAAAW,EAAAtB,MAAAC,KAAAC,YAAA,GAenB,OACI8M,EAAApO,EAAAqO,cAAA,UACID,EAAApO,EAAAqO,cAAA,UACIoY,EAAcwR,EAAQG,YAAY91B,KAAK,SAAAlC,GACnC,GAAIA,EACA,OAAOgO,EAAApO,EAAAqO,cAAA,QAAM+C,MAAO8mB,EAAO59B,MAApB,IAA4B49B,EAAO9kB,KAAnC,MAA4C8kB,EAAOr7B,QAAnD,QAInBuR,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQI,iBACbjqB,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQK,gBACblqB,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQM,cAAgB,MAAO,MACpCnqB,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQnkB,aAKnB0kB,GAAkB,SAAAv1B,GAAe,IAAboc,EAAapc,EAAboc,QAAa2I,EACJ1X,mBAAS,IADL2X,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAC5BlH,EAD4BmH,EAAA,GACnBwQ,EADmBxQ,EAAA,GAAAE,EAER7X,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,QAF1BsZ,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAErBpR,GAFqBqR,EAAA,GAAAA,EAAA,IAG5B7a,EAAsBmD,qBAAW/C,IAAjCJ,mBA+BP,OA7BAwD,oBAAU,WAuBN,OAtBsB,eAAAvN,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,IAAA,IAAA1F,EAAAoU,EAAA,OAAAtR,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cACjBzD,EAAMsQ,EAAmBjN,aAAarD,IACtCoU,EAAKgO,EAAQhO,GAEjBL,GAAiC/T,EAAIoU,GAAI/O,KAAK,SAAAmN,GACvCA,EAAQ5O,OACP43B,EAAYhpB,EAAQrC,SAGpBqrB,EAAY,MAEjBl2B,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,EAAMuG,WAZDzE,EAAA7B,OAAA,UAed,GAfc,wBAAA6B,EAAA5B,SAAA0B,MAAH,yBAAAa,EAAApC,MAAAC,KAAAC,YAAA,EAkBtBo3B,GAAmBp2B,KAAK,SAAAlC,GAChB7E,QAAQC,IAAI4E,KAGb,WACH2W,EAAU,CAACzP,QAAQ,GAAGwH,aAAa,QACnC2pB,EAAY,MAEjB,IAGDrqB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,sBAEFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OAEPzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACVzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,mBAAiDwO,EAAQjF,cACzDhM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,sBAAoDwO,EAAQ/E,MAA5D,OACAlM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,kBAAgDwO,EAAQ9F,cAE5DnL,EAAApO,EAAAqO,cAAA,YAERD,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACTzC,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACbzC,EAAApO,EAAAqO,cAAA,aACID,EAAApO,EAAAqO,cAAA,UACID,EAAApO,EAAAqO,cAAA,oBACAD,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,kBACAD,EAAApO,EAAAqO,cAAA,yBAGRD,EAAApO,EAAAqO,cAAA,aACKyS,EAASgI,IAAI,SAAAmP,GACV,OAAO7pB,EAAApO,EAAAqO,cAACsqB,GAAD,CAAaV,QAASA,EAASjP,IAAKiP,EAAQ5mB,cAY3EunB,GAAc,SAAA90B,GAAiB,IAAdub,EAAcvb,EAAdub,QAAcgJ,EACL/X,mBAAS,WADJgY,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GAC5BzS,EAD4B0S,EAAA,GACnBzS,EADmByS,EAAA,GAGnC,OACEla,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAawO,EAAQjF,eAGrChM,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,kBACiBzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAR,IAAc+J,EAAQjF,aAAtB,MAEjBhM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,mBACkBzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAR,IAAc+J,EAAQ/E,MAAtB,MAElBlM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,YACWzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAK+J,EAAQ7E,OAAS,OAAS,UAElDpM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,UACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,aAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KANF,YAQAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,aACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,gBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KANF,gBASFzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,mBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,sBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eAAb,KANF,sBAUFzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,qBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KANF,sBAWNzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACA,YAAZ+E,EACCxH,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,YACEvH,MAAOuY,EAAQ9F,YACf1I,UAAU,kBAGdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKkF,IAAK8L,EAAQhF,YAAaxJ,UAAU,iBAG3C,KACS,oBAAZ+E,EACCxH,EAAApO,EAAAqO,cAACwqB,GAAD,CAAexZ,QAASA,IACtB,KACS,qBAAZzJ,EAAiCxH,EAAApO,EAAAqO,cAACyqB,GAAD,CAAiBzZ,QAASA,IAAe,UAQjF0Z,GAAc,SAAA30B,GAAgC,IAA7Bib,EAA6Bjb,EAA7Bib,QAAS2Z,EAAoB50B,EAApB40B,cAC9B,OACE5qB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,2CACVS,QAAS,SAAAhW,GACP,IAAI+V,EAAKgO,EAAQhO,GACjB2nB,EAAc3nB,KAGfgO,EAAQjF,cAEXhM,EAAApO,EAAAqO,cAAA,UAAKgR,EAAQ9F,aACbnL,EAAApO,EAAAqO,cAAA,UAAKgR,EAAQ/E,UA6ENiN,GAvEE,WAAM,IAAAyE,EACW1b,mBAAS,IADpB2b,EAAApsB,OAAA2Q,GAAA,EAAA3Q,CAAAmsB,EAAA,GACd3N,EADc4N,EAAA,GACJzE,EADIyE,EAAA,GAAAC,EAES5b,mBAAS6J,IAFlBgS,EAAAtsB,OAAA2Q,GAAA,EAAA3Q,CAAAqsB,EAAA,GAEd7M,EAFc8M,EAAA,GAEL/B,EAFK+B,EAAA,GAAAS,EAIOtc,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAJ7C+d,EAAAhtB,OAAA2Q,GAAA,EAAA3Q,CAAA+sB,EAAA,GAKbrf,GALasf,EAAA,GAAAA,EAAA,GAKUnc,qBAAW/C,IAAlCJ,oBAEFyrB,EAAgB,SAAA3nB,GACpB+Y,EAAW/L,EAAS8K,KAAK,SAAA9J,GAAO,OAAIA,EAAQhO,KAAOA,MAyBrD,OAtBAN,oBAAU,WAgBR,OAfsB,eAAAyO,EAAA3f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,IAAA,IAAAjG,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBzD,EAAMsQ,EAAmBjN,aAAarD,IADnBkG,EAAAzC,KAAA,EAEjBsQ,GAAiC/T,GAAKqF,KAAK,SAAAmN,GAC7ClU,QAAQC,IAAIiU,GACZ+X,EAAY/X,KACXlN,MAAM,SAAAxB,GACPymB,EAAY,MANO,cAAArkB,EAAAnC,OAAA,UAQhB,GARgB,wBAAAmC,EAAAlC,SAAAiC,MAAH,yBAAAsc,EAAApe,MAAAC,KAAAC,YAAA,EAWtB8c,GAAmB9b,KAAK,SAAAlC,GACtB7E,QAAQC,IAAI4E,KAGP,WACLonB,EAAY,IACZ4C,EAAWjQ,MAEZ,IAGD/L,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,aAEDwO,EAAQhO,GACPjD,EAAApO,EAAAqO,cAAC4qB,GAAD,CAAa5Z,QAASA,IAEtBjR,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACfzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,0BACAD,EAAApO,EAAAqO,cAAA,yBACAD,EAAApO,EAAAqO,cAAA,qBAGJD,EAAApO,EAAAqO,cAAA,aACGgQ,EAASyK,IAAI,SAAAzJ,GACZ,OACEjR,EAAApO,EAAAqO,cAAC6qB,GAAD,CACEF,cAAeA,EACf3Z,QAASA,EACT2J,IAAK3J,EAAQhO,YCle3B8nB,GAAgB,SAAAv5B,GAAiB,IAAdkgB,EAAclgB,EAAdkgB,QAAczP,EACFC,mBAASyK,IADPxK,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GAC9B+oB,EAD8B7oB,EAAA,GAChBwb,EADgBxb,EAAA,GAAAuF,EAEDxF,mBAAS,IAFRyF,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAE9BkJ,EAF8BjJ,EAAA,GAElB0R,EAFkB1R,EAAA,GAAAa,EAGTtG,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAH7B+H,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAG9BE,EAH8BD,EAAA,GAGtBE,EAHsBF,EAAA,GAK/BkhB,EAAQ,eAAAv2B,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAAwkB,EAAA,OAAA/f,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXof,EADWjgB,OAAAe,GAAA,EAAAf,CAAA,GACIu5B,GACnBtZ,EAAU5Z,KAAKiB,UAAU2Y,GAFVtf,EAAAE,KAAA,EAGTsQ,GACW8O,GACdxd,KAAK,SAAAmN,GACAA,EAAQ5O,QACVkrB,EAAWtc,EAAQrC,SACnB2J,EAAU,CACRzP,QAAS,+BACTwH,aAAc,SAGhBiI,EAAU,CAAEzP,QAASmI,EAAQ1O,MAAMuG,QAASwH,aAAc,YAG7DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAjBvC,cAAAtO,EAAAQ,OAAA,UAmBR,GAnBQ,wBAAAR,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAM,EAAAJ,MAAAC,KAAAC,YAAA,GAsBR2f,EAAe,eAAAvf,EAAA7B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAAwkB,EAAA,OAAA/f,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAClBof,EADkBjgB,OAAAe,GAAA,EAAAf,CAAA,GACHu5B,GADGz3B,EAAAjB,KAAA,EAGhBsQ,GACa8O,GAChBxd,KAAK,SAAAlC,GACAA,EAAOS,QACTkrB,EAAW3rB,EAAOgN,SAClB2J,EAAU,CACRzP,QAAS,+BACTwH,aAAc,SAGhBiI,EAAU,CAAEzP,QAASlH,EAAOW,MAAMuG,QAASwH,aAAc,YAG5DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAjBhC,cAAAnN,EAAAX,OAAA,UAmBf,GAnBe,wBAAAW,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAO,EAAAN,MAAAC,KAAAC,YAAA,GAsCrB,OAhBAyP,oBAAU,WAWR,OATAC,GADoB,YAGjB1O,KAAK,SAAAmN,GACJgY,EAAchY,KAEflN,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,KAEhBgrB,EAAWjM,GACJ,WACLiM,EAAWhR,IACX0M,EAAc,MAEf,IAEDrZ,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,mBACAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,sCACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAI2lB,EAAgB3lB,KAE9B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KANF,YAYJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,6BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,eACLtM,MAAOsyB,EAAape,aACpBhN,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GACNu5B,EADKv5B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAKlCsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,YACEwC,UAAU,eACVuC,KAAK,cACLtM,MAAOsyB,EAAa7f,YACpBvL,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GACNu5B,EADKv5B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAKlCsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,QACLtM,MAAOsyB,EAAa9e,MACpBtM,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GACNu5B,EADKv5B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,aAKlCsH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,yBACAD,EAAApO,EAAAqO,cAAA,UACEwC,UAAU,eACVuC,KAAK,cACLtM,MAAOsyB,EAAa/f,YACpBrL,SAAU,SAAA1S,GAAC,OACTywB,EAAWlsB,OAAAe,GAAA,EAAAf,CAAA,GACNu5B,EADKv5B,OAAA0X,GAAA,EAAA1X,CAAA,GAEPvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAI7BkY,EAAW8J,IAAI,SAAA7J,GACd,OACE7Q,EAAApO,EAAAqO,cAAA,UAAQvH,MAAOmY,EAAS5F,aACrB4F,EAASvF,kBAOpBtL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,gCACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAIy8B,EAASz8B,KAEvB8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KANF,mBAQAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,gCACVuC,KAAK,gBACL9B,QAAS,SAAAhW,GACPywB,EAAWjM,GACX/I,EAAU,CAAEzP,QAAS,GAAIwH,aAAc,WAGzCV,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KATF,kBAaFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,SAWVkpB,GAAc,SAAA91B,GAAiB,IAAd+1B,EAAc/1B,EAAd+1B,QAAc7gB,EACP9G,mBAASvB,IADFsI,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAC5B8gB,EAD4B7gB,EAAA,GACpB8gB,EADoB9gB,EAAA,GAAAuQ,EAEPtX,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAF/B+Y,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAEpB7Q,GAFoB8Q,EAAA,GAAAA,EAAA,IAI7BpB,EAAa,eAAA/jB,EAAA7C,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAMlF,GAAN,OAAA8C,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACpBnF,QAAQC,IAAI,gBAAgByB,GADRmF,EAAA1B,KAAA,EAEdsQ,GACW/T,GACdqF,KAAK,SAAAmN,GACAA,EAAQ5O,OACVs3B,EAAU1oB,EAAQrC,UAElB2J,EAAU,CACRzP,QAAS,6CACTwH,aAAc,UAEhBqpB,EAAUppB,OAGbxM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,UAClDqpB,EAAUppB,MAjBM,cAAA3M,EAAApB,OAAA,UAmBb,GAnBa,wBAAAoB,EAAAnB,SAAAkB,MAAH,gBAAAJ,GAAA,OAAAW,EAAAtB,MAAAC,KAAAC,YAAA,GAsBnB,OACE8M,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,UACGoY,EAAcwR,EAAQG,YAAY91B,KAAK,SAAAlC,GACtC,GAAIA,EACF,OACEgO,EAAApO,EAAAqO,cAAA,QAAM+C,MAAO8mB,EAAO59B,MACjB,IACA49B,EAAO9kB,KAFV,MAEmB8kB,EAAOr7B,QAAS,QAM3CuR,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQI,iBACbjqB,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQK,gBACblqB,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQM,cAAgB,MAAQ,MACrCnqB,EAAApO,EAAAqO,cAAA,UAAK4pB,EAAQnkB,aAKbulB,GAAiB,SAAAp2B,GAAe,IAAb6c,EAAa7c,EAAb6c,QAAakI,EACD1X,mBAAS,IADR2X,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GAC1BlH,EAD0BmH,EAAA,GAChBwQ,EADgBxQ,EAAA,GAAAE,EAEL7X,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAFjCsZ,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAElBpR,GAFkBqR,EAAA,GAAAA,EAAA,IAGzB7a,EAAuBmD,qBAAW/C,IAAlCJ,mBAkCT,OAhCCwD,oBAAU,WAyBR,OAxBsB,eAAAvN,EAAA3D,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,IAAA,IAAA1F,EAAAoU,EAAA,OAAAtR,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cACnBzD,EAAMsQ,EAAmBjN,aAAarD,IACtCoU,EAAKyO,EAAQzO,GAEjBL,GACwB/T,EAAKoU,GAC1B/O,KAAK,SAAAmN,GACAA,EAAQ5O,OACV43B,EAAYhpB,EAAQrC,SAEpBqrB,EAAY,MAGfl2B,MAAM,SAAAxB,GACLxF,QAAQC,IAAIuF,EAAMuG,WAdCzE,EAAA7B,OAAA,UAiBhB,GAjBgB,wBAAA6B,EAAA5B,SAAA0B,MAAH,yBAAAa,EAAApC,MAAAC,KAAAC,YAAA,EAoBtBo3B,GAAmBp2B,KAAK,SAAAlC,GACtB7E,QAAQC,IAAI4E,KAGP,WACL2W,EAAU,CAAEzP,QAAS,GAAIwH,aAAc,QACvC2pB,EAAY,MAEb,IAIFrqB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,sBAEFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OAEXzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACX,IADH,kBAEkBiP,EAAQ9E,cAE1B5M,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAmB,IAAjC,sBAAyDiP,EAAQxF,MAAjE,OACAlM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACX,IADH,iBAEiBiP,EAAQvG,eAK/BnL,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACXzC,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACfzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,oBACAD,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,kBACAD,EAAApO,EAAAqO,cAAA,yBAGJD,EAAApO,EAAAqO,cAAA,aACGyS,EAASgI,IAAI,SAAAmP,GACZ,OAAO7pB,EAAApO,EAAAqO,cAACirB,GAAD,CAAarB,QAASA,EAASjP,IAAKiP,EAAQ5mB,cAcnEkoB,GAAc,SAAAz1B,GAAiB,IAAdgc,EAAchc,EAAdgc,QAAcuI,EACL/X,mBAAS,WADJgY,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GAC5BzS,EAD4B0S,EAAA,GACnBzS,EADmByS,EAAA,GAGnC,OACEla,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAaiP,EAAQ9E,eAGrC5M,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,OACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,cACZzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,kBACiBzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAR,IAAcwK,EAAQ9E,aAAtB,MAEjB5M,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,mBACkBzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAR,IAAcwK,EAAQxF,MAAtB,MAElBlM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBAAd,YACWzC,EAAApO,EAAAqO,cAAA,KAAGiH,KAAK,KAAKwK,EAAQtF,OAAS,OAAS,UAElDpM,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,UACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,aAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KANF,YAQAzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,aACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,gBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,oBAAb,KANF,gBASFzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,mBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,sBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,eAAb,KANF,sBAUFzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,mBACZzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,kCACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,qBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KANF,sBAWNzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACA,YAAZ+E,EACCxH,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,4BACAD,EAAApO,EAAAqO,cAAA,YACEvH,MAAOgZ,EAAQvG,YACf1I,UAAU,kBAGdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,OAAKkF,IAAKuM,EAAQ7E,YAAapK,UAAU,iBAG3C,KACS,oBAAZ+E,EACCxH,EAAApO,EAAAqO,cAACmrB,GAAD,CAAe1Z,QAASA,IACtB,KACS,qBAAZlK,EACCxH,EAAApO,EAAAqO,cAACorB,GAAD,CAAiB3Z,QAASA,IAAa,QAQ/C4Z,GAAc,SAAAt1B,GAAgC,IAA7B0b,EAA6B1b,EAA7B0b,QAAS6Z,EAAoBv1B,EAApBu1B,cAC9B,OACEvrB,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,2CACVS,QAAS,SAAAhW,GACP,IAAI+V,EAAKyO,EAAQzO,GACjBsoB,EAActoB,KAGfyO,EAAQ9E,cAEX5M,EAAApO,EAAAqO,cAAA,UAAKyR,EAAQvG,aACbnL,EAAApO,EAAAqO,cAAA,UAAKyR,EAAQxF,SA4EJoP,GAvEE,WAAM,IAAAsC,EACW1b,mBAAS,IADpB2b,EAAApsB,OAAA2Q,GAAA,EAAA3Q,CAAAmsB,EAAA,GACdrN,EADcsN,EAAA,GACJtC,EADIsC,EAAA,GAAAC,EAES5b,mBAASyK,IAFlBoR,EAAAtsB,OAAA2Q,GAAA,EAAA3Q,CAAAqsB,EAAA,GAEdpM,EAFcqM,EAAA,GAELJ,EAFKI,EAAA,GAAAS,EAIOtc,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAJ7C+d,EAAAhtB,OAAA2Q,GAAA,EAAA3Q,CAAA+sB,EAAA,GAKbrf,GALasf,EAAA,GAAAA,EAAA,GAKUnc,qBAAW/C,IAAlCJ,oBAEFosB,EAAgB,SAAAtoB,GACpB0a,EAAWpN,EAASwK,KAAK,SAAArJ,GAAO,OAAIA,EAAQzO,KAAOA,MA2BrD,OAxBAN,oBAAU,WAmBR,OAlBsB,eAAAyO,EAAA3f,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAiD,IAAA,IAAAjG,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBzD,EAAMsQ,EAAmBjN,aAAarD,IADnBkG,EAAAzC,KAAA,EAEjBsQ,GACkB/T,GACrBqF,KAAK,SAAAmN,GACJlU,QAAQC,IAAIiU,GACZka,EAAYla,KAEblN,MAAM,SAAAxB,GACL4oB,EAAY,MATO,cAAAxmB,EAAAnC,OAAA,UAWhB,GAXgB,wBAAAmC,EAAAlC,SAAAiC,MAAH,yBAAAsc,EAAApe,MAAAC,KAAAC,YAAA,EActBsd,GAAmBtc,KAAK,SAAAlC,GACtB7E,QAAQC,IAAI4E,KAGP,WACLupB,EAAY,IACZoC,EAAWhR,MAEZ,IAED3M,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,aAEDiP,EAAQzO,GACPjD,EAAApO,EAAAqO,cAACurB,GAAD,CAAa9Z,QAASA,IAEtB1R,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACfzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,0BACAD,EAAApO,EAAAqO,cAAA,yBACAD,EAAApO,EAAAqO,cAAA,qBAGJD,EAAApO,EAAAqO,cAAA,aACGsQ,EAASmK,IAAI,SAAAhJ,GACZ,OACE1R,EAAApO,EAAAqO,cAACwrB,GAAD,CACEF,cAAeA,EACf7Z,QAASA,EACTkJ,IAAKlJ,EAAQzO,YCpf3ByoB,GAAgB,WAAM,IAAAzpB,EACIC,mBAASsN,IADbrN,EAAA1Q,OAAA2Q,GAAA,EAAA3Q,CAAAwQ,EAAA,GACnBwe,EADmBte,EAAA,GACV0e,EADU1e,EAAA,GAAAuF,EAEExF,mBAAS2N,IAFXlI,EAAAlW,OAAA2Q,GAAA,EAAA3Q,CAAAiW,EAAA,GAEnBY,EAFmBX,EAAA,GAEXY,EAFWZ,EAAA,GAAAa,EAGEtG,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAHxC+H,EAAAhX,OAAA2Q,GAAA,EAAA3Q,CAAA+W,EAAA,GAGnBE,EAHmBD,EAAA,GAGXE,EAHWF,EAAA,GAKlBtJ,EAAuBmD,qBAAW/C,IAAlCJ,mBAEFiK,EAAW,eAAA5X,EAAAC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAC,EAAM5E,GAAN,IAAAyK,EAAAg0B,EAAAC,EAAAriB,EAAA,OAAA5X,GAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdqF,GAAU,EACRg0B,EAAe,WACnB,OAAsC,IAAlC9xB,GAAMkB,QAAQ0lB,EAAQhR,UACxBlH,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GAAK6W,EAAN,CAAcwH,aAAc,8BAC9B,IAKL8b,EAAyB,SAAA1+B,GAC7B,QAAI2M,GAAMO,QAAQqmB,EAAQ9Q,oBACxBpH,EAAU9W,OAAAe,GAAA,EAAAf,CAAA,GACL6W,EADI,CAEPyH,uBAAwB,qCAEnB,IAKLxG,EAAW,SAAArc,GAIf,OAHkByK,IAAlBg0B,KAA+Ch0B,EACnBA,IAA5Bi0B,KAAyDj0B,GAvBzCvF,EAAAE,KAAA,EA4BLiX,IA5BK,cAAAnX,EAAAQ,OAAA,SAAAR,EAAAqB,MAAA,wBAAArB,EAAAS,SAAAf,MAAH,gBAAAgB,GAAA,OAAAtB,EAAAwB,MAAAC,KAAAC,YAAA,GA+BXskB,EAAiB,eAAApkB,EAAA3B,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAwB,EAAMnG,GAAN,IAAAyqB,EAAA,OAAAhmB,GAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACpBqlB,EADoBlmB,OAAAe,GAAA,EAAAf,CAAA,GACMgvB,IACX5xB,IAAMsQ,EAAmBjN,aAAarD,IACzD8oB,EAAqB7f,KAAKiB,UAAU4e,GAHZpkB,EAAAjB,KAAA,EAIlBsQ,GACe+U,GAClBzjB,KAAK,SAAAqhB,GACAA,EAAS9iB,QACXouB,EAAWtL,EAASvW,SACpB2J,EAAU,CACRzP,QAAS,yCACTwH,aAAc,UAGhBiI,EAAU,CAAEzP,QAASqc,EAAS5iB,MAAMuG,QAASwH,aAAc,YAG9DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,YAlB9B,cAAAnN,EAAAX,OAAA,UAqBjB,GArBiB,wBAAAW,EAAAV,SAAAQ,MAAH,gBAAAN,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GAwBvB,OACE8M,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,uBAAb,KADF,wBAKFzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,uBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,SACLtM,MAAO+nB,EAAQhR,OACf7P,SAAU,SAAA1S,GAAC,OACT2zB,EAAWpvB,OAAAe,GAAA,EAAAf,CAAA,GAAKgvB,EAANhvB,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,YAGtD4P,EAAOwH,aACN9P,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOwH,eAE7B,IAGJ9P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,iCACAD,EAAApO,EAAAqO,cAAA,UACEwC,UAAU,eACVuC,KAAK,mBACLtM,MAAO+nB,EAAQ9Q,iBACf/P,SAAU,SAAA1S,GAAC,OACT2zB,EAAWpvB,OAAAe,GAAA,EAAAf,CAAA,GAAKgvB,EAANhvB,OAAA0X,GAAA,EAAA1X,CAAA,GAAgBvE,EAAEsW,OAAOwB,KAAO9X,EAAEsW,OAAO9K,WAGrDsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAO,WAAf,WACAsH,EAAApO,EAAAqO,cAAA,UAAQvH,MAAO,cAAf,eAED4P,EAAOyH,uBACN/P,EAAApO,EAAAqO,cAAC+G,GAAD,CAAa9N,QAASoP,EAAOyH,yBAE7B,IAIJ/P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,qBACL9B,QAAS,SAAAhW,GAAC,OACRkc,EAAYlc,GAAGgH,KAAK,SAAAyD,GAClBA,EACIgR,EAAU,CACRzP,QAAS,uCAEXse,EAAkBtqB,GAAGgH,KAAK,SAAAlC,GACxB7E,QAAQC,IAAI4E,SAKtBgO,EAAApO,EAAAqO,cAAA,cACED,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,yBAMJzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACZiG,EAAOxP,QACN8G,EAAApO,EAAAqO,cAAC2J,GAAD,CACE1Q,QAASwP,EAAOxP,QAChBwH,aAAcgI,EAAOhI,eAGvB,QAURmrB,GAAU,SAAAv4B,GAAqB,IAAlBukB,EAAkBvkB,EAAlBukB,YAAkB7O,EACL9G,mBAAS,CACrCrT,IAAK,GACLi9B,eAAiB,GACjBC,iBAAmB,KAJc9iB,EAAAxX,OAAA2Q,GAAA,EAAA3Q,CAAAuX,EAAA,GAC5BgjB,EAD4B/iB,EAAA,GACnBgjB,EADmBhjB,EAAA,GAAAuQ,EAMHtX,mBAAS,CACvC+Z,MAAO,GACPjiB,IAAK,GACLkiB,KAAM,EACNC,SAAU,GACVC,SAAU,IAXuB3C,EAAAhoB,OAAA2Q,GAAA,EAAA3Q,CAAA+nB,EAAA,GAM5B6C,EAN4B5C,EAAA,GAMlB6C,EANkB7C,EAAA,GAAAG,EAcT1X,mBAAS,CAAChJ,QAAQ,GAAGwH,aAAa,QAdzBmZ,EAAApoB,OAAA2Q,GAAA,EAAA3Q,CAAAmoB,EAAA,GActBjR,GAdsBkR,EAAA,GAAAA,EAAA,IAiB3B1a,EAAuBmD,qBAAW/C,IAAlCJ,mBAEFod,EAAQ,eAAAzoB,EAAArC,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAAkC,EAAM7G,GAAN,IAAA+uB,EAAAO,EAAA,OAAA7qB,GAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACP2pB,EAAUI,EAAVJ,MADOjoB,EAAA3B,KAAA,EAGPmqB,EAAalwB,EAASgB,QAAQ2a,IAAjB,YAAAnG,OAAiC3C,EAAmBjN,aAAarD,IAAjE,KAAAiT,OAAwE+V,EAAY5U,GAApF,KAAAnB,OAA0Fma,EAAMjX,OAAQrD,IAAIsa,GAHlHjoB,EAAA1B,KAAA,EAIPkqB,EAAWC,GACf,gBACA,SAAAC,GAEE,IAAMN,EAAW3lB,KAAKkmB,MACnBD,EAASE,iBAAmBF,EAASG,WAAc,KAEtDP,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GAAK4qB,EAAN,CAAgBD,eAE7B,SAAAzpB,GACExF,QAAQC,IAAIuF,EAAMuG,UAEpB,WAEE5M,EAASgB,QACN2a,IADH,YAAAnG,OACmB3C,EAAmBjN,aAAarD,IADnD,KAAAiT,OAC0D+V,EAAY5U,KACnE6Z,MAAMb,EAAMjX,MACZ+X,iBACA7oB,KAAK,SAAA8F,GACJ7M,QAAQC,IAAI4M,GACZiyB,EAAWx6B,OAAAe,GAAA,EAAAf,CAAA,GACNu6B,EADK,CAERD,iBAAkB/xB,SA1Bf,OAAAhG,EAAA1B,KAAA,gBAAA0B,EAAA3B,KAAA,EAAA2B,EAAAN,GAAAM,EAAA,SAgCb7G,QAAQC,IAAR4G,EAAAN,IACAiV,EAAU,CAACzP,QAAQ,0BAA0BwH,aAAa,UAjC7C,yBAAA1M,EAAAnB,SAAAkB,EAAA,iBAAH,gBAAAJ,GAAA,OAAAG,EAAAd,MAAAC,KAAAC,YAAA,GA2Ed,OACE8M,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,YAGAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,UAAQlB,KAAK,SAAS0D,UAAU,mBAAmBuC,KAAK,OACtDhF,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,KADF,QAGAzC,EAAApO,EAAAqO,cAAA,UAAQlB,KAAK,SAAS0D,UAAU,mBAAmBuC,KAAK,UACtDhF,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,gBAAb,KADF,2BAMJzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACLtM,MAAOmf,EAAY5e,QAIvB+G,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,wBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,SACLtM,MAAOmf,EAAYpI,UAIvBzP,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,0BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACV/J,MAAOmf,EAAYnI,aAIvB1P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,iCACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACV/J,MAAOmf,EAAYlI,oBAIvB3P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,iCACAD,EAAApO,EAAAqO,cAAA,SAAOlB,KAAK,OAAO0D,UAAU,eAAeuC,KAAK,QAAQpF,SAAU,SAAA1S,GAAC,OA/FxD,SAAAA,GACpB,GAAIA,EAAEsW,OAAOyZ,MAAM,GAAI,CACrB,IAAMhB,EAAQ/uB,EAAEsW,OAAOyZ,MAAM,GAM7B,OALA9vB,QAAQC,IAAI6uB,GACZK,EAAY7qB,OAAAe,GAAA,EAAAf,CAAA,GACP4qB,EADM,CAETJ,MAAOA,MAEF,EAET,OAAO,EAqFyEiQ,CAAch/B,OAGxF8S,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,uBACL9B,QAAS,SAAAhW,GAAC,OAAIqvB,EAASrvB,GAAGgH,KAAK,SAAAlC,GAC7B7E,QAAQC,IAAI4E,OAGb,IACDgO,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,sBAAb,KATF,6BAYFzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,iCACAD,EAAApO,EAAAqO,cAAA,OACEkF,IAAK6mB,EAAQD,kBAhFP,8CAiFNtpB,UAAU,aACV2E,MAAM,MACND,OAAO,UAKbnH,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACXzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAK,kBACL9B,QAAS,SAAAhW,GAAC,OAlHD,SAAAA,GACnB,IAAI2B,EAAMsQ,EAAmBjN,aAAarD,IAEtCgqB,EAASpnB,OAAAe,GAAA,EAAAf,CAAA,GAAOu6B,GAepB,OAdAnT,EAAUhqB,IAAMA,EAChBgqB,EAAUiT,eAAiBjU,EAAY5U,GAEvCL,GAA2BiW,GAAW3kB,KAAK,SAAAlC,GACtCA,EAAOS,QACRw5B,EAAWj6B,EAAOgN,SAClB2J,EAAU,CAACzP,QAAQ,8CAEnByP,EAAU,CAACzP,QAAQlH,EAAOW,MAAMuG,QAAQwH,aAAa,YAEtDvM,MAAM,SAAAxB,GACPgW,EAAU,CAACzP,QAAQvG,EAAMuG,QAAQwH,aAAa,aAGzC,EAgGiByrB,KAEdnsB,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,KAAuC,IANzC,wBAiBR2pB,GAAa,SAAA93B,GAAqB,IAAlBujB,EAAkBvjB,EAAlBujB,YACpB,OACE7X,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KADF,gBAKFzC,EAAApO,EAAAqO,cAAA,QAAMwC,UAAU,mBACdzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,sBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,OACLtM,MAAOmf,EAAY5e,QAIvB+G,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,wBACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACVuC,KAAK,SACLtM,MAAOmf,EAAYpI,UAIvBzP,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,0BACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACV/J,MAAOmf,EAAYnI,aAIvB1P,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,cACbzC,EAAApO,EAAAqO,cAAA,iCACAD,EAAApO,EAAAqO,cAAA,SACElB,KAAK,OACL0D,UAAU,eACV/J,MAAOmf,EAAYlI,wBAS3B0c,GAAkB,SAAAx3B,GAAqB,IAAlBgjB,EAAkBhjB,EAAlBgjB,YACzB,OACE7X,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aAAd,wBAEgC,eAAjCoV,EAAYlI,iBACX3P,EAAApO,EAAAqO,cAACqsB,GAAD,CAAYzU,YAAaA,IAEzB7X,EAAApO,EAAAqO,cAACssB,GAAD,CAAS1U,YAAaA,OAO1B2U,GAAkB,SAAAp3B,GAIlB,IAHJyiB,EAGIziB,EAHJyiB,YACA4U,EAEIr3B,EAFJq3B,gBACAC,EACIt3B,EADJs3B,kBAEA,OACE1sB,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,UAAK4X,EAAY5e,MACjB+G,EAAApO,EAAAqO,cAAA,eAAO4X,EAAYpI,OAAnB,OACAzP,EAAApO,EAAAqO,cAAA,UAAKD,EAAApO,EAAAqO,cAACkF,GAAA,EAAD,CAAYC,OAAQyS,EAAYlI,oBACrC3P,EAAApO,EAAAqO,cAAA,UAAK4X,EAAYnI,UAAY,MAAQ,MAClC,IACD1P,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,+BACVuC,KAAM6S,EAAY5U,GAClBC,QAAS,SAAAhW,GACP,IAAI+V,EAAK4U,EAAY5U,GACrBypB,EAAkBzpB,IAEpBD,MAAM,UAENhD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,aAAb,MAEFzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,yBACVuC,KAAM6S,EAAY5U,GAClBC,QAAS,SAAAhW,GACP,IAAI+V,EAAK4U,EAAY5U,GACrBwpB,EAAgBxpB,IAElBD,MAAM,QAENhD,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,qBAAb,QAOJkqB,GAAe,WAAM,IAAA5S,EACe7X,mBAAS,IADxB8X,EAAAvoB,OAAA2Q,GAAA,EAAA3Q,CAAAsoB,EAAA,GAClBzC,EADkB0C,EAAA,GACJ4S,EADI5S,EAAA,GAAAC,EAEa/X,mBAASsN,IAFtB0K,EAAAzoB,OAAA2Q,GAAA,EAAA3Q,CAAAwoB,EAAA,GAElBpC,EAFkBqC,EAAA,GAEL2S,EAFK3S,EAAA,GAAA0D,EAGK1b,mBAAS,oBAHd2b,EAAApsB,OAAA2Q,GAAA,EAAA3Q,CAAAmsB,EAAA,GAGlBpW,EAHkBqW,EAAA,GAGTpW,EAHSoW,EAAA,GAAAC,EAIG5b,mBAAS,CAAEhJ,QAAS,GAAIwH,aAAc,QAJzCqd,EAAAtsB,OAAA2Q,GAAA,EAAA3Q,CAAAqsB,EAAA,GAIVnV,GAJUoV,EAAA,GAAAA,EAAA,IAKjB5e,EAAuBmD,qBAAW/C,IAAlCJ,mBAEFstB,EAAkB,SAAAxpB,GACtB,IAAI6pB,EAAoBxV,EAAayD,KACnC,SAAAlD,GAAW,OAAIA,EAAY5U,KAAOA,IAEpC4pB,EAAeC,GAEfrlB,EAAW,qBAGPilB,EAAoB,SAAAzpB,GACxB,IAAIpU,EAAMsQ,EAAmBjN,aAAarD,IAC1C+T,GAA8BK,EAAIpU,GAAKqF,KAAK,SAAAqhB,GACpCA,EAAS9iB,OACXm6B,EAAgBrX,EAASvW,SAEzB2J,EAAU,CAAEzP,QAASqc,EAAS5iB,MAAMuG,QAASwH,aAAc,YAG9DvM,MAAM,SAAAxB,GACLgW,EAAU,CAAEzP,QAASvG,EAAMuG,QAASwH,aAAc,aAiCxD,OA7BAiC,oBAAU,WAuBR,OAtB0B,eAAAjN,EAAAjE,OAAAC,GAAA,EAAAD,CAAAE,GAAAC,EAAAC,KAAG,SAAA0C,IAAA,IAAA1F,EAAA,OAAA8C,GAAAC,EAAAO,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cACrBzD,EAAMsQ,EAAmBjN,aAAarD,IAC5C+T,GACqB/T,GAClBqF,KAAK,SAAAqhB,GACAA,EAAS9iB,QACXm6B,EAAgBrX,EAASvW,SACzB7R,QAAQC,IAAI,uBAAwBmoB,EAASvW,UAE7C7R,QAAQC,IAAI,eAAgBmoB,EAAS5iB,SAGxCwB,MAAM,SAAAxB,GACLxF,QAAQC,IAAI,eAAgBuF,EAAMuG,WAbXzE,EAAA7B,OAAA,UAepB,GAfoB,wBAAA6B,EAAA5B,SAAA0B,MAAH,yBAAAmB,EAAA1C,MAAAC,KAAAC,YAAA,EAkB1B65B,GAAuB74B,KAAK,SAAAlC,GAC1B7E,QAAQC,IAAI4E,KAGP,WACL66B,EAAerd,IACfod,EAAgB,MAEjB,IAGD5sB,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,wBAAb,KADF,kBAMW,qBAAZ+E,EACCxH,EAAApO,EAAAqO,cAAC+sB,GAAD,CAAiBnV,YAAaA,IAE9B7X,EAAApO,EAAAqO,cAAA,SAAOwC,UAAU,0BACfzC,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,kBACAD,EAAApO,EAAAqO,cAAA,oBACAD,EAAApO,EAAAqO,cAAA,8BACAD,EAAApO,EAAAqO,cAAA,uBACAD,EAAApO,EAAAqO,cAAA,uBAGJD,EAAApO,EAAAqO,cAAA,aACGqX,EAAaoD,IAAI,SAAA7C,GAChB,OACE7X,EAAApO,EAAAqO,cAACgtB,GAAD,CACEP,kBAAmBA,EACnBD,gBAAiBA,EACjB5U,YAAaA,EACb+C,IAAK/C,EAAY5U,QAKzBjD,EAAApO,EAAAqO,cAAA,aACED,EAAApO,EAAAqO,cAAA,UACED,EAAApO,EAAAqO,cAAA,kBACAD,EAAApO,EAAAqO,cAAA,oBACAD,EAAApO,EAAAqO,cAAA,8BACAD,EAAApO,EAAAqO,cAAA,uBACAD,EAAApO,EAAAqO,cAAA,0BAwECitB,GA/DE,WAAM,IAAA1O,EACStc,mBAAS,gBADlBuc,EAAAhtB,OAAA2Q,GAAA,EAAA3Q,CAAA+sB,EAAA,GACdhX,EADciX,EAAA,GACLhX,EADKgX,EAAA,GAAAC,EAESxc,mBAAS,CAACwC,MAAK,IAFxBia,EAAAltB,OAAA2Q,GAAA,EAAA3Q,CAAAitB,EAAA,GAEd/Z,EAFcga,EAAA,GAEF/Z,EAFE+Z,EAAA,GAUb9Z,EAAmB,SAAnBA,IACJD,EAAQ,CAAEF,MAAM,IAChBtG,SAASsE,oBAAoB,QAASmC,IAG1C,OACE7E,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,gBACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,kBACbzC,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,aACZzC,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,mBAAb,KADF,aAIAzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,aACbzC,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,YACbzC,EAAApO,EAAAqO,cAAA,UACElB,KAAK,SACL0D,UAAU,mCACVS,QAAS,SAAAhW,GAAC,OAxBG,SAAAA,GACvBA,EAAEiW,iBACFyB,EAAQ,CAAEF,MAAM,IAChBtG,SAAS0G,iBAAiB,QAASD,GAqBXE,CAAiB7X,KAE/B8S,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,cAAb,MAEDkC,EAAYD,KACX1E,EAAApO,EAAAqO,cAAA,MAAIwC,UAAU,YACZzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,eACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,kBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KALF,iBAOAzC,EAAApO,EAAAqO,cAAA,MACEwC,UAAU,yBACVuC,KAAK,iBACL9B,QAAS,SAAAhW,GAAC,OAAIua,EAAW,oBAEzBzH,EAAApO,EAAAqO,cAAA,KAAGwC,UAAU,iBAAb,KALF,wBASF,MAKK,iBAAZ+E,EAA6BxH,EAAApO,EAAAqO,cAACktB,GAAD,MAAmB,GACpC,mBAAZ3lB,EAA+BxH,EAAApO,EAAAqO,cAACmtB,GAAD,MAAoB,cCrnBxCC,QACU,cAA7BpvB,OAAOqvB,SAASC,UAEgB,UAA7BtvB,OAAOqvB,SAASC,UAEhBtvB,OAAOqvB,SAASC,SAASC,MACxB,kFCXDC,GAA0B,CAC7BC,cAAaj8B,OAAAe,GAAA,EAAAf,CAAA,GAAOlE,IACpBogC,uBAAsBl8B,OAAAe,GAAA,EAAAf,CAAA,GnD2DkB,CACxCwP,WAAa,GACbnR,YAAc,GACdue,cAAgB,GAChBuf,eAAiB,GACjBC,cAAgB,KmD/DhBlvB,cAAgB,GAChBC,cAAe,IAuEDkvB,GAnEiB,WAAgD,IAA/Cv1B,EAA+CrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAArCg8B,IAAyB3uB,EAAY5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EAK/E,OAHApM,QAAQC,IAAI,gCAAgC0R,GAGpCA,EAAQC,MAChB,KAAKzH,GAML,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GACJ,OAAO7F,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,EAAX,CACCoG,cAAcG,EAAQE,QAAQ9F,QAC9B0F,cAAcE,EAAQE,QAAQC,KAC9ByuB,cAAcj8B,OAAAe,GAAA,EAAAf,CAAA,GAAIqN,EAAQE,QAAQtM,YAGpC,QAAS,OAAOjB,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,KCtEjBw1B,GAA0B,CAC7BC,mBAAkBv8B,OAAAe,GAAA,EAAAf,CAAA,GAAOnD,IACzB2/B,wBAAuBx8B,OAAAe,GAAA,EAAAf,CAAA,GpD6GiB,CACxCsP,YAAc,GACdC,cAAgB,GAChBktB,eAAiB,GACjBC,cAAgB,KoDhHhBxvB,cAAgB,GAChBC,cAAe,KAiCDwvB,GA/BoB,WAAiD,IAAhD71B,EAAgDrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAAtCs8B,IAA0BjvB,EAAY5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EACnF,OAAQuF,EAAQC,MAChB,KAAKpF,GAML,KAAKA,GAML,KAAKA,GAML,KAAKA,GACJ,OAAOlI,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,EAAX,CACCoG,cAAcG,EAAQE,QAAQ9F,QAC9B0F,cAAcE,EAAQE,QAAQC,KAC9B+uB,mBAAmBv8B,OAAAe,GAAA,EAAAf,CAAA,GAAIqN,EAAQE,QAAQtM,YAEzC,QAAS,OAAOjB,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,KCrBN81B,GANOC,aAAgB,CACrCC,gBAAkB1vB,GAClBoV,gBAAkB6Z,GAClBU,iBAAmBJ,KCMhBK,GAAuB,CAC1BC,0BAA0Bj9B,OAAAe,GAAA,EAAAf,CAAA,GAAIxB,IAC9B0+B,oBAAoBl9B,OAAAe,GAAA,EAAAf,CAAA,GAAKjB,IACzBmO,cAAgB,GAChBC,cAAgB,KAGbgwB,GAAyB,CAC5BC,4BAA2Bp9B,OAAAe,GAAA,EAAAf,CAAA,GAAOX,IAClCg+B,cAAar9B,OAAAe,GAAA,EAAAf,CAAA,GrDWqB,CAClCs9B,mBAAqB,KqDXrBpwB,cAAgB,GAChBC,cAAe,KAGZowB,GAA0B,CAC7BC,6BAA4Bx9B,OAAAe,GAAA,EAAAf,CAAA,GAAOR,IACnCi+B,eAAcz9B,OAAAe,GAAA,EAAAf,CAAA,GrDcqB,CACnC09B,qBAAuB,KqDdvBxwB,cAAgB,GAChBC,cAAc,KC5BXwwB,GAAgCd,aAAgB,CACnDe,kBD6BwC,WAA6C,IAA5C92B,EAA4CrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAAlCg9B,IAAsB3vB,EAAY5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EAErF,OADApM,QAAQC,IAAI,+CAAgD0R,GACnDA,EAAQC,MACjB,KAAKT,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GACJ,OAAO7M,OAAAe,GAAA,EAAAf,CAAA,GACH8G,EADJ,CAECm2B,0BAA0Bj9B,OAAAe,GAAA,EAAAf,CAAA,GAAKqN,EAAQE,QAAQtM,UAC/CiM,cAAeG,EAAQE,QAAQ9F,QAC/B0F,cAAeE,EAAQE,QAAQC,OAIjC,KAAKX,GACJ,OAAO7M,OAAAe,GAAA,EAAAf,CAAA,GACH8G,EADJ,CAECo2B,oBAAoBl9B,OAAAe,GAAA,EAAAf,CAAA,GAAIqN,EAAQE,QAAQtM,UACxCiM,cAAcG,EAAQE,QAAQ9F,QAC9B0F,cAAcE,EAAQE,QAAQC,OAIhC,QACC,OAAOxN,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,KC/FZ+2B,oBDqG0C,WAAkD,IAAjD/2B,EAAiDrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAArCm9B,IAAyB9vB,EAAY5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EAE5F,OADApM,QAAQC,IAAI,iDAAkD0R,GACrDA,EAAQC,MACjB,KAAKR,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GACJ,OAAO9M,OAAAe,GAAA,EAAAf,CAAA,GACH8G,EADJ,CAECs2B,4BAA4Bp9B,OAAAe,GAAA,EAAAf,CAAA,GAAKqN,EAAQE,QAAQtM,UACjDiM,cAAeG,EAAQE,QAAQ9F,QAC/B0F,cAAeE,EAAQE,QAAQC,OAIjC,QACC,OAAOxN,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,KCrJZg3B,qBD0J2C,WAAmD,IAAlDh3B,EAAkDrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAAtCu9B,IAA0BlwB,EAAY5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EAC9F,OAASuF,EAAQC,MACjB,KAAKP,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GACJ,OAAO/M,OAAAe,GAAA,EAAAf,CAAA,GACH8G,EADJ,CAEC02B,6BAA6Bx9B,OAAAe,GAAA,EAAAf,CAAA,GAAKqN,EAAQE,QAAQtM,UAClDiM,cAAeG,EAAQE,QAAQ9F,QAC/B0F,cAAeE,EAAQE,QAAQC,OAGjC,QACC,OAAOxN,OAAAe,GAAA,EAAAf,CAAA,GAAI8G,OCxLFi3B,IAdiBlB,aAAgB,IAIlBA,aAAgB,IAInBA,aAAgB,IAMZA,aAAgB,CAC1Cr+B,qBAAsBm/B,MC1BnBK,GAAyB,CAC5BC,gBAAgB,GAChBC,qBAAqB,ICAXC,GAActB,aAAgB,CACxCuB,QAAUxB,GACVyB,OAAQN,GACRO,eDCmC,WAA+C,IAA9Cx3B,EAA8CrF,UAAA1G,OAAA,QAAA+M,IAAArG,UAAA,GAAAA,UAAA,GAAAzB,OAAAe,GAAA,EAAAf,CAAA,GAApCg+B,IAAwB3wB,EAAY5L,UAAA1G,OAAA,EAAA0G,UAAA,QAAAqG,EAElF,OADApM,QAAQC,IAAI,0CAA2C0R,GAC9CA,EAAQC,MACjB,KAAKnF,GAOL,KAAKA,GACJ,OAAAnI,OAAAe,GAAA,EAAAf,CAAA,GACI8G,EADJ,CAECm3B,gBAAgB5wB,EAAQE,QAAQtM,SAASg9B,gBACzCC,qBAAqB7wB,EAAQE,QAAQtM,SAASi9B,uBAGhD,QAAS,OAAAl+B,OAAAe,GAAA,EAAAf,CAAA,GAAU8G,OEFdy3B,GAAaC,aAAgBC,aAClCC,OAWczZ,GARH0Z,aACXR,GARsB,GAUtBI,cCrBDK,IAASlJ,OACRnnB,EAAApO,EAAAqO,cAACqwB,GAAA,EAAD,CAAU5Z,MAAOA,IAChB1W,EAAApO,EAAAqO,cCwBa,WAGd,OACGD,EAAApO,EAAAqO,cAACswB,GAAD,KAEEvwB,EAAApO,EAAAqO,cAACmE,EAAA,SAAD,KACEpE,EAAApO,EAAAqO,cAAC6C,EAAA,EAAD,KAEE9C,EAAApO,EAAAqO,cAACuwB,GAAD,MAEAxwB,EAAApO,EAAAqO,cAACsK,GAAD,MAEAvK,EAAApO,EAAAqO,cAAA,OAAKwC,UAAU,mBACbzC,EAAApO,EAAAqO,cAAA,WAASwC,UAAU,kBACjBzC,EAAApO,EAAAqO,cAAA,WAASwC,UAAU,WACjBzC,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAO3X,UAAW+mC,UAAWnsB,KAChDzE,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAOzX,WAAY6mC,UAAW3rB,KACjDjF,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAO1X,aAAc8mC,UAAWrpB,KACnDvH,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOxX,WAAY4mC,UAAWzoB,KAC3CnI,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOvX,YAAa2mC,UAAW/mB,KAC5C7J,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOtX,YAAa0mC,UAAW9mB,KAC5C9J,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CACEE,KAAMnvB,EAAOrX,qBACbymC,UAAW/lB,KAEb7K,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOjX,YAAaqmC,UAAWhV,KAC5C5b,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOhX,qBAAsBomC,UAAWC,KACrD7wB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAO/W,qBAAsBmmC,UAAWE,KAGrD9wB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOlX,UAAWsmC,UAAWrN,KAC1CvjB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOE,KAAMnvB,EAAOtW,eAAgB0lC,UAAW/O,KAC/C7hB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAO7W,WAAYimC,UAAWvL,KAEjDrlB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAO9W,eAAgBkmC,UAAWpI,KACrDxoB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAO1W,eAAgB8lC,UAAWrH,KACrDvpB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAOzW,uBAAwB6lC,UAAWzX,KAC7DnZ,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAOxW,uBAAwB4lC,UAAWtV,KAC7Dtb,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnvB,EAAOvW,kBAAmB2lC,UAAW1D,KACxDltB,EAAApO,EAAAqO,cAACwwB,EAAA,EAAD,CACEE,KAAMnvB,EAAO3W,mBACb+lC,UAAW/Q,QAMnB7f,EAAApO,EAAAqO,cAAC2K,GAAD,UDxER,OAGDxM,SAASgF,eAAe,ST0GpB,kBAAmB2tB,WACtBA,UAAUC,cAAcC,MAAM/8B,KAAK,SAAAg9B,GAClCA,EAAaC","file":"static/js/main.d9c0f958.chunk.js","sourcesContent":["export const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const account_page = '/account';\r\n\r\nexport const blog_page = '/blog';\r\n\r\nexport const market_page = '/market';\r\nexport const market_products_page = '/market-products';\r\nexport const market_services_page = '/market-services';\r\nexport const check_out_page = \"/market-check-out\";\r\n\r\n\r\nexport const admin_page = '/admin-user'; // + userid\r\nexport const shopping_basket_page = '/admin-user-shopping-basket';\r\nexport const my_market_products = '/admin-user-market';\r\nexport const manage_my_shop = '/admin-store-manager';\r\nexport const store_manager_products = '/admin-store-manager-products';\r\nexport const store_manager_services = '/admin-store-manager-services';\r\nexport const transactions_page = '/admin-store-transactions';\r\n\r\n\r\n\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n\r\n\r\n\r\n/**\r\n * api routes \r\n */\r\n\r\nexport const api_products_endpoint = '/api/products';\r\nexport const api_services_endpoint = '/api/services';\r\nexport const api_categories_endpoint = '/api/categories';\r\nexport const api_physical_endpoint = '/api/physical-address';\r\nexport const api_contact_endpoint = '/api/contact-details';\r\nexport const api_cart_endpoint = '/api/cart';\r\nexport const api_coupons_endpoint = '/api/coupons';\r\nexport const api_dashboard_endpoint = '/api/dashboard';\r\nexport const api_user_endpoint = '/api/user';\r\nexport const api_store_endpoint = '/api/store';\r\nexport const api_transactions_endpoint = '/api/transactions';\r\n\r\nexport const api_paypal_checkout_webhook = \"/api/checkout/paypal/webhook\";\r\n","export const app_name = 'WEQTrading';\r\nexport const app_long_name = 'WEQ Trading Online Store';\r\nexport const app_descrition = 'WEQ Trading Online Store';\r\nexport const cell = '27780111869';\r\nexport const email = 'info@weqtrading.com';\r\nexport const fax = '086****786';\r\nexport const localStorageKey = 'weqtrading-';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {auth,\r\n\tfirebase,\r\n\tstorage\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneVerified:false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tUSER_LOGIN_STATUS : 'USER:USER_LOGIN_STATUS',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\n\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginStatus = () => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGIN_STATUS,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","\r\nimport moment from 'moment';\r\nclass Utilities {\r\n  constructor(today, url) {\r\n    this.today = today;\r\n    this.url = url;\r\n  }\r\n\r\n  isUrl = url => {\r\n    let pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name and extension\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?\" + // port\r\n      \"(\\\\/[-a-z\\\\d%@_.~+&:]*)*\" + // path\r\n      \"(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return pattern.test(url);\r\n  };\r\n\r\n  isEmpty = a => {\r\n    return a !== undefined ? a === null || a === \"\" : true;\r\n  };\r\n\r\n  isProvince = province => {\r\n    let province_list = [\r\n      \"limpopo\",\r\n      \"mpumalanga\",\r\n      \"north west\",\r\n      \"gauteng\",\r\n      \"kwazulu natal\",\r\n      \"eastern cape\",\r\n      \"western cape\",\r\n      \"northern cape\",\r\n      \"orange free state\"\r\n    ];\r\n    for (let i = 0; i < province_list.length; i++) {\r\n      if (province === province_list[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateEmail = email => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  validatePassword = password => {\r\n    let re = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n    );\r\n    return re.test(password);\r\n  };\r\n\r\n  validateUsername = username => {\r\n    let re = /^\\w+$/;\r\n    return re.test(username);\r\n  };\r\n\r\n  isNumber = n => {\r\n    return n !== undefined ? typeof n !== \"boolean\" && !isNaN(n) : false;\r\n  };\r\n\r\n  isMoney = n => {\r\n    return this.isNumber(n) ? true : false;\r\n  };\r\n\r\n  isCell = n => {\r\n    return this.isNumber(n)\r\n      ? n.length === 10 || n.length === 11 || n.length === 12 || n.length === 13\r\n      : false;\r\n  };\r\n\r\n  isTel = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  isFax = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  getAge = dateString => {\r\n    let dates = dateString.split(\"-\");\r\n    let d = new Date();\r\n\r\n    let userday = dates[2];\r\n    let usermonth = dates[1];\r\n    let useryear = dates[0];\r\n\r\n    let curday = d.getDate();\r\n    let curmonth = d.getMonth() + 1;\r\n    let curyear = d.getFullYear();\r\n\r\n    let age = curyear - useryear;\r\n\r\n    if (curmonth < usermonth || (curmonth === usermonth && curday < userday)) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n  isIDNumber = n => {\r\n    return n !== undefined ? this.isNumber(n) && n.length === 13 : true;\r\n  };\r\n  numDaysBetweenDates = (firstDate, secondDate) => {\r\n    let f_dates = firstDate.split(\"-\");\r\n    let s_dates = secondDate.split(\"-\");\r\n\r\n    // let d = new Date();\r\n\r\n    let f_day = parseInt(f_dates[2]);\r\n    let f_month = parseInt(f_dates[1]);\r\n    let f_year = parseInt(f_dates[0]);\r\n\r\n    let s_day = parseInt(s_dates[2]);\r\n    let s_month = parseInt(s_dates[1]);\r\n    let s_year = parseInt(s_dates[0]);\r\n\r\n    // TODO- Please revise the number of days algorithm\r\n    // let years = f_year - s_year;\r\n    // let months = f_month - s_month;\r\n    // let days = f_day - s_day;\r\n\r\n    let a = moment([f_year, f_month, f_day]);\r\n    let b = moment([s_year, s_month, s_day]);\r\n\r\n    return a.diff(b, \"days\") + 1;\r\n\r\n    //\r\n    // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n    //     return days\r\n    // }else if ((years === 0) && (months > 0)){\r\n    //     return (days + (months * 30))\r\n    // }else{\r\n    //     return 365\r\n    // }\r\n  };\r\n\r\n  countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n    try {\r\n      return stamp_1 - stamp_2;\r\n    } catch (e) {\r\n      return parseInt(stamp_1) - parseInt(stamp_2);\r\n    }\r\n  };\r\n\r\n  throttle = (func, limit) => {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function() {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  };\r\n\r\n  debounce = (func, delay) => {\r\n    let inDebounce;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(inDebounce);\r\n      inDebounce = setTimeout(() => func.apply(context, args), delay);\r\n    };\r\n  };\r\n\r\n  isMobile = () => {\r\n    if (window.innerWidth <= 800 && window.innerHeight <= 600) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nexport let UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","\r\nimport {\r\n    USER_ACCOUNT_ACTIONS\r\n} from '../../actions';\r\nimport {\r\n    account_details_type,\r\n    account_details_type_error\r\n} from '../../types';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nlet UserAccountInitState = {\r\n    user_account: {...account_details_type},\r\n    user_account_errors: {...account_details_type_error},\r\n    form_response: '',\r\n    response_code: '',\r\n};\r\n    \r\nexport let loginUser = async (username, password) => {\r\n    let user_account_state = {...UserAccountInitState};\r\n    let user_account;\r\n    let form_response;\r\n    let response_code;\r\n\r\n    await auth.doSignInWithEmailAndPassword(username, password).then(result => {\r\n            \r\n\r\n            if (result.status === true){\r\n                user_account = {...result.response};\r\n                form_response = 'User Logged In Successfully';\r\n                response_code = 200;\r\n            }else {\r\n                user_account = {...result.response};\r\n                form_response = result.error.message;\r\n                response_code = result.error.code;\r\n            }\r\n\r\n    });\r\n    \r\n    user_account_state.user_account = {...user_account};    \r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE',user_account_state);\r\n    return {...user_account_state};\r\n}\r\n\r\nexport let logOutUser = async() => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n    await auth.doSignOut().then(result => {\r\n        if (result.status === true){\r\n                user_account = {\r\n                    ...account_details_type\r\n                };\r\n                form_response = 'User Logout Successfully';\r\n                response_code = 200;\r\n                }\r\n                else {\r\n                    user_account = {\r\n                        ...account_details_type\r\n                    };\r\n                    form_response = result.error.message;\r\n                    response_code = result.error.code;\r\n                }\r\n    });\r\n    user_account_state.user_account = {\r\n        ...user_account\r\n    };\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE', user_account_state);\r\n    return {\r\n        ...user_account_state\r\n    };\r\n\r\n}\r\n\r\n\r\nexport let SendEmailVerification = async(user) => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n        console.log('Sending email verifications');\r\n\r\n    await auth.doSendEmailVerification(user).then( result => {\r\n        if (result.status === true){\r\n            user_account={\r\n                ...user,\r\n                email_verification_sent : true\r\n            };\r\n            form_response= 'successfully sent email verifications';\r\n            response_code= 200\r\n        }else{\r\n            user_account = {\r\n                ...user,\r\n                email_verification_sent: false\r\n            };\r\n            form_response= result.error.message;\r\n            response_code= result.error.code\r\n        }\r\n    });\r\n    user_account_state.user_account = {...user_account};\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n\r\n    return user_account_state;\r\n}","import React,{Component,useReducer,createContext} from 'react';\r\nimport {firebase,auth} from '../../firebase';\r\nimport userAccountReducer, {\r\n  UserAccountInitState\r\n} from '../../reducers/profileReducers/accountDetailsReducer';\r\n\r\nimport {\r\n  loginUser, logOutUser, SendEmailVerification\r\n} from './actions';\r\n\r\nexport const UserAccountContext = createContext();\r\nexport default class UserAccountContextProvider extends Component {\r\n    state = {user_account_state: {...UserAccountInitState}};\r\n\r\n    doLogin = async (username,password) => {\r\n      let user_account_state = await loginUser(username,password);\r\n      this.setState({user_account_state})\r\n    }\r\n\r\n    doLogout = async() => {\r\n      let user_account_state = await logOutUser();\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n    doSendEmailVerification = async() => {\r\n      if (this.state.user_account_state.user_account.emailVerified){\r\n      console.log('Cannot send verification email account already verified');\r\n    }else{\r\n      let user_account_state = await SendEmailVerification(this.state.user_account_state.user_account);\r\n      this.setState({\r\n        user_account_state: user_account_state\r\n      });\r\n    }\r\n    }\r\n\r\n    onChange = (user) => {\r\n      let {\r\n        user_account\r\n      } = this.state.user_account_state;\r\n\r\n      let user_account_state = Object.assign({},this.state.user_account_state)\r\n      user_account_state.user_account = {\r\n        ...user\r\n      };\r\n\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n  componentWillMount = () => {\r\n    // const unsubscribe = firebase.auth().onAuthStateChanged(this.onChange);    \r\n    const dounsubscribe = firebase.firebase.auth().onAuthStateChanged(this.onChange)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      < UserAccountContext.Provider value = {\r\n        {\r\n          ...this.state, doLogin: this.doLogin, doLogout: this.doLogout, doSendEmailVerification: this.doSendEmailVerification\r\n        }\r\n      } >\r\n                {this.props.children}\r\n      </UserAccountContext.Provider>              \r\n    )\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const user_init = {\r\n    username : '',\r\n    password : ''\r\n};\r\n\r\nexport const user_errors_init = {\r\n    username_error : '',\r\n    password_error : ''\r\n};\r\n\r\n\r\nexport const inline_init = {\r\n    message: '', \r\n    message_type:'info'\r\n};\r\n\r\n\r\nexport const extended_user = {\r\n    uid : '',\r\n    names: '',\r\n    surname: '',\r\n    cell: '',\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n    is_admin : false\r\n};\r\n\r\nexport const extended_user_error = {\r\n    names_error: \"\",\r\n    surname_error: \"\",\r\n    cell_error: \"\",\r\n    email_error: \"\",\r\n    password_error: \"\",\r\n    repeatpassword_error: \"\"\r\n\r\n};","import axios from 'axios';\r\nimport * as routes from \"../../constants/routes\";\r\n\r\nexport const addUser =async (sent_user) => {\r\n    let results = {status : false,payload:{},error : {}}\r\n\r\n    await axios.post(routes.api_user_endpoint,sent_user).then(results => {\r\n        if (results.status === 200){\r\n            return results.data\r\n        }else{\r\n            throw new Error('there was an error saving user');\r\n        }\r\n    }).then(user => {\r\n        results.status = true;\r\n        results.payload = {...user};\r\n        results.error = {};\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error}\r\n\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const updateUser = async (sent_user) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.put(routes.api_user_endpoint, sent_user).then(results => {\r\n        if (results.status === 200) {\r\n          return results.data;\r\n        } else {\r\n          throw new Error(\"there was an error saving user\");\r\n        }\r\n      }).then(user => {\r\n        results.status = true;\r\n        results.payload = { ...user };\r\n        results.error = {};\r\n      }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = { ...error };\r\n      });\r\n\r\n    return results;    \r\n};\r\n\r\n\r\nexport const fetchUser = async (uid) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.get(routes.api_user_endpoint + `/${uid}`).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('error fetching user');\r\n        }\r\n    }).then(user_details => {\r\n        results.status = true;\r\n        results.payload = {...user_details};\r\n        results.error = {}\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error};\r\n    });\r\n\r\n    return results;\r\n}","import React, {Component, useState,useContext,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\nimport {firebase,auth} from '../../../firebase';\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport { extended_user } from '../../Auth/auth-constants';\r\nimport * as apiRequests from '../../Auth/auth-api';\r\n\r\nconst SideBarMenuAuth = () => {\r\n  const[user,setUser] = useState(extended_user);\r\n  const {user_account_state} = useContext(UserAccountContext);\r\n\r\n  const openClientMenu = (e,id) => {    \r\n    e.preventDefault();      \r\n\r\n    let thisNode = document.getElementById(id);\r\n    if ((thisNode.className === \"treeview\")) {\r\n      thisNode.className = \"active treeview\";\r\n    }else{\r\n      thisNode.className = \"treeview\";\r\n    } \r\n\r\n  };\r\n\r\n  function closeStoreMenu(thisNode) {\r\n    thisNode.className = \"treeview\";\r\n    document.removeEventListener('click',closeStoreMenu);\r\n  };\r\n\r\n  const openStoreMenu = (e, id) => {\r\n    e.preventDefault();\r\n    let thisNode = document.getElementById(id);\r\n      if ((thisNode.className === \"treeview\")) {\r\n        thisNode.className = \"active treeview\";\r\n      } else {\r\n        thisNode.className = \"treeview\";\r\n      } \r\n  };\r\n\r\n  const openMarketMenu = (e, id) => {\r\n    e.preventDefault();\r\n\r\n    let thisNode = document.getElementById(id);\r\n    if ((thisNode.className === \"treeview\")) {\r\n      thisNode.className = \"active treeview\";\r\n    } else {\r\n      thisNode.className = \"treeview\";\r\n    } \r\n  };\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests.fetchUser(uid).then(results => {\r\n        if(results.status){\r\n          setUser(results.payload);\r\n        }\r\n      }).catch(error => {\r\n        console.log(error.message);\r\n      });\r\n      return true;\r\n    }\r\n\r\n    fetchAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setUser(extended_user);\r\n      try{\r\n      document.removeEventListener(\"click\", closeStoreMenu);\r\n      }catch(error){\r\n\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n\treturn (\r\n    <ul className=\"sidebar-menu\">\r\n      <li className=\"header\">W-Trading</li>\r\n      <li>\r\n        <Link to={routes.home_page} title=\"weqtrading online store\">\r\n          <i className=\"fa fa-home\" /> <strong>Home</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.about_page} title=\"About\">\r\n          <i className=\"fa fa-info\" /> <strong>About</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.contact_page} title=\"Contact Us\">\r\n          <i className=\"fa fa-envelope\" /> <strong>Contact</strong>\r\n        </Link>\r\n      </li>\r\n      <li\r\n        id=\"clientarea\"\r\n        className=\"treeview\"\r\n        onClick={e => {\r\n          let id = \"clientarea\";\r\n          return openClientMenu(e, id);\r\n        }}\r\n      >\r\n        <Link to=\"#\">\r\n          <i className=\"fa fa-user-md\" /> <span>Client Area</span>\r\n          <span className=\"pull-right-container\">\r\n            <i className=\"fa fa-angle-left pull-right\" />\r\n          </span>\r\n        </Link>\r\n        <ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n          <li>\r\n            <Link to={routes.admin_page} title=\"manage your Account\">\r\n              <i className=\"fa fa-sign-in\"> </i> <strong> Account</strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li\r\n            id=\"store\"\r\n            className=\"treeview\"\r\n            onClick={e => {\r\n              let id = \"store\";\r\n              return openStoreMenu(e, id);\r\n            }}\r\n          >\r\n            <Link to=\"#\">\r\n              <i className=\"fa fa-user-md\" /> <span>Store</span>\r\n              <span className=\"pull-right-container\">\r\n                <i\r\n                  className=\"fa fa-angle-left pull-right\"\r\n                  onClick={e => {\r\n                    if (e.target.className === \"fa fa-angle-left pull-right\") {\r\n                      e.target.className = \"fa fa-angle-right pull-right\";\r\n                    } else {\r\n                      e.target.className = \"fa fa-angle-left pull-right\";\r\n                    }\r\n                  }}\r\n                />\r\n              </span>\r\n            </Link>\r\n            <ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n              <li>\r\n                <Link to={routes.manage_my_shop} title=\"manage my shop\">\r\n                  <i className=\"fa fa-dashboard\"> </i>{\" \"}\r\n                  <strong>Store Manager</strong>{\" \"}\r\n                </Link>{\" \"}\r\n              </li>\r\n              <li>\r\n                <Link to={routes.my_market_products} title=\"Shopping Basket\">\r\n                  <i className=\"fa fa-shopping-basket\"> </i>{\" \"}\r\n                  <strong> Add to Store </strong>{\" \"}\r\n                </Link>{\" \"}\r\n              </li>\r\n              <li>\r\n                <Link to={routes.store_manager_products} title=\"transactions\">\r\n                  <i className=\"fa fa-shopping-cart\"> </i>{\" \"}\r\n                  <strong>Products</strong>{\" \"}\r\n                </Link>{\" \"}\r\n              </li>\r\n              <li>\r\n                <Link to={routes.store_manager_services} title=\"transactions\">\r\n                  <i className=\"fa fa-shopping-basket\"> </i>{\" \"}\r\n                  <strong>Services</strong>{\" \"}\r\n                </Link>{\" \"}\r\n              </li>\r\n              <li>\r\n                <Link to={routes.transactions_page} title=\"transactions\">\r\n                  <i className=\"fa fa-credit-card\"> </i>{\" \"}\r\n                  <strong>Transactions</strong>{\" \"}\r\n                </Link>{\" \"}\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li\r\n        id=\"marketplace\"\r\n        className=\"treeview\"\r\n        onClick={e => {\r\n          let id = \"marketplace\";\r\n          openMarketMenu(e, id);\r\n        }}\r\n      >\r\n        <Link to=\"#\">\r\n          <i className=\"fa fa-user-md\" /> <span>Market Place</span>\r\n          <span className=\"pull-right-container\">\r\n            <i\r\n              className=\"fa fa-angle-left pull-right\"\r\n              onClick={e => {\r\n                if (e.target.className === \"fa fa-angle-left pull-right\") {\r\n                  e.target.className = \"fa fa-angle-right pull-right\";\r\n                } else {\r\n                  e.target.className = \"fa fa-angle-left pull-right\";\r\n                }\r\n              }}\r\n            />\r\n          </span>\r\n        </Link>\r\n        <ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n          <li>\r\n            <Link to={routes.check_out_page} title=\"Check Out\">\r\n              <i className=\"fa fa-shopping-cart\"> </i>{\" \"}\r\n              <strong> CheckOut</strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li>\r\n            <Link to={routes.market_products_page} title=\"Market\">\r\n              <i className=\"fa fa-shopping-basket\" /> Products\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to={routes.market_services_page} title=\"Market\">\r\n              <i className=\"fa fa-shopping-basket\" /> Services\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to={routes.blog_page} title=\"Weq Trading Blog\">\r\n          <i className=\"fa fa-book\"> </i> <strong>Blog</strong>\r\n        </Link>\r\n      </li>\r\n      {user.is_admin ? (\r\n        <li>\r\n          <Link to={routes.dashboard_page} title=\"Dashboard\">\r\n            <i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong>\r\n          </Link>\r\n        </li>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <li>\r\n        <Link to={routes.logout_page} title=\"Logout\">\r\n          <i className=\"fa fa-sign-out\"> </i> <strong> Logout </strong>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t) \r\n}\r\n\r\n\r\n\r\nexport default class MenuItems extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser_logged_in : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet isUserLoggedIN = () => {\t\t\t\t\t\r\n\t\t\treturn auth.currentUser ? true:false;\r\n\t\t}\r\n\t\tif (isUserLoggedIN()){\r\n\t\t\tthis.setState({user_logged_in : true})\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n\t\t\t  const { doLogin, user_account_state } = context;\r\n\t\t\t  console.log('SIDEBAR',user_account_state.user_account);\r\n\t\t\treturn (\r\n        <div>\r\n          {user_account_state.user_account.uid ? (\r\n            <SideBarMenuAuth />\r\n          ) : (\r\n            <SideBarMenuNonAuth />\r\n          )}\r\n        </div>\r\n      );\r\n\t  }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n\t}\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment,useState,useContext } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function Home (){\r\n\r\n  const {user_account_state} = useContext(UserAccountContext);\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-home\"> </i> Weq Trading{\" \"}\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n              <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li className=\"btn btn-block droplink\" name=\"entertainment\">\r\n                    <Link to={routes.market_services_page}>\r\n                      <i className=\"fa fa-shopping-bag\"> </i> Market Services{\" \"}\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"btn btn-block droplink\">\r\n                    <Link to={routes.market_products_page}>\r\n                      <strong>\r\n                        {\" \"}\r\n                        <i className=\"fa fa-shopping-bag\"> </i> Market Products{\" \"}\r\n                      </strong>{\" \"}\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"btn btn-block droplink\">\r\n                    {user_account_state.user_account.uid ? (\r\n                      <Link to={routes.logout_page}>\r\n                        <strong>\r\n                          {\" \"}\r\n                          <i className=\"fa fa-sign-in\"> </i> Log out{\" \"}\r\n                        </strong>{\" \"}\r\n                      </Link>\r\n                    ) : (\r\n                      <Link to={routes.login_page}>\r\n                        <strong>\r\n                          {\" \"}\r\n                          <i className=\"fa fa-sign-in\"> </i> Log in to Weq\r\n                          Trading{\" \"}\r\n                        </strong>{\" \"}\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-info\"> </i> About\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong> Introduction </strong>\r\n              </h3>\r\n            </div>\r\n            <blockquote>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Whittlesea Experience Quality Computer College &amp;\r\n                  Solutions is a registered company registered as a close\r\n                  corporation\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is a service provider company, which is concerned about\r\n                  its community, because the main aim is to fight\r\n                  unemployment.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is owned by two directors but aims to employing more\r\n                  than twenty employees.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  The books of this company are managed by the accountant\r\n                  Ntombizamfaku Nelisa Sigcau.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  This company has got visions and dreams of the rainbow\r\n                  nation.\r\n                </li>\r\n              </ul>\r\n            </blockquote>\r\n          </div>\r\n\r\n          <div className=\"box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Vision</strong>\r\n              </h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                To be a leading and effective organization that is based on\r\n                its community needs, fulfilment and also that is capable of\r\n                meaningful contribution towards the development of the\r\n                people.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see a well developed community.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see the previously disadvantaged community with the\r\n                skills to fight poverty and unemployment.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see an improved standard of living for every South\r\n                African.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Services</strong>\r\n              </h3>\r\n              <blockquote>\r\n                The company offers the following other services\r\n              </blockquote>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Internet Connections / WIFI access\r\n              </li>\r\n              <li className=\"list-group-item\">Construction</li>\r\n              <li className=\"list-group-item\">Fencing</li>\r\n              <li className=\"list-group-item\">Renovations</li>\r\n              <li className=\"list-group-item\">Rentals Apartments</li>\r\n              <li className=\"list-group-item\">Transportation</li>\r\n              <li className=\"list-group-item\" > Training</li>\r\n              <li className='list-group-item'> Supply of Chairs,Tables, and Tents</li>\r\n              <li className='list-group-item'>Installations of Surveilance Cameras and Alarms</li>\r\n              <li className='list-group-item'>Supply of cleaning Materials</li>\r\n              <li className='list-group-item'>Construction</li>\r\n              <li className='list-group-item'>Tilling</li>\r\n              <li className='list-group-item'>Plumbing</li>\r\n              <li className='list-group-item'>Wiring (Electrical)</li>\r\n              <li className='list-group-item'>Painting</li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport {Capitalize} from 'react-lodash'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{<Capitalize string={this.state.message} /> }</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\nexport let contact_form_details  = {\r\n            messageid:\"\",\r\n            names : \"\",\r\n            email : \"\",\r\n            cell: \"\",\r\n            subject: \"\",\r\n            message: \"\",\r\n\r\n            message_read : false,\r\n            date_read : \"\",\r\n            date_sent : \"\"\r\n};\r\n\r\nexport let contact_response_message_detail = {\r\n        messageid:\"\",\r\n        response:\"\",\r\n        date_sent:\"\",\r\n};\r\n\r\nlet contact_form_errors = {\r\n            names_error : '',\r\n            email_error : '',\r\n            cell_error : '',\r\n            subject_error : '',\r\n            message_error : '',\r\n\r\n};\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact\",data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React,{Fragment} from 'react'\r\nimport './Contact.css';\r\nexport default function ContactDetails () {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-info\"> </i> Contact Details\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <div className=\"small-box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-building\"> </i> Business Details\r\n                </strong>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Name : </strong>\r\n                    <em>Weq Trading &amp; Projects</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Registration Number : </strong>\r\n                    <em>2010/158059/23</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Address : </strong>\r\n                    <em>80 Shepstone Street, Whittlesea,5360</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong> Business Fax : </strong>\r\n                    <em>\r\n                      <a href=\"mailto:0408421225\">040-842-1225</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                    <em>\r\n                      <a href=\"mailto:0865182222@faxfx.net\">086-518-2222</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Contact Person : </strong>\r\n                        <em>Nsubuga Charles Heinnrich</em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:O781111869\">O78-111-1869 </a>\r\n                        </em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:0838630886\">083-863-0886 </a>\r\n                        </em>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <iframe\r\n                  src=\"https://www.google.com/maps/embed?pb=!1m22!1m11!1m3!1d1031.541083124503!2d26.82210571473625!3d-32.17379083467601!2m2!1f0!2f0!3m2!1i1024!2i768!4f13.1!4m8!3e0!4m5!1s0x1e62350d78cff7e3%3A0x6d7e84c719fdcd2b!2sWeq+Trading+And+Projects!3m2!1d-32.1735701!2d26.8231617!4m0!5e1!3m2!1sen!2sza!4v1564836874505!5m2!1sen!2sza\"\r\n                  className=\"map-style\"\r\n                  height=\"460\"\r\n                  width=\"600\"\r\n                  allowfullscreen\r\n                  frameBorder=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>      \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\nimport ContactDetails from './ContactDetails';\r\n\r\nexport default function Contact() {\r\n\tconst [display, setDisplay] = useState(\"contact-form\");\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\t\r\n\r\n\r\n\tconst ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t};\r\n\r\n\tconst SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n  };\r\n  \r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"contactform\"\r\n                    onClick={e => setDisplay(\"contact-form\")}\r\n                  >\r\n                    <i className=\"fa fa-envelope\"> </i>\r\n                    Contact Form\r\n                  </li>\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"contactdetails\"\r\n                    onClick={e => setDisplay(\"contact-details\")}\r\n                  >\r\n                    <i className=\"fa fa-info\"> </i>\r\n                    Contact Details\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display === \"contact-form\" ? <ThisContactForm /> : \"\"}\r\n        {display === \"contact-details\" ? <ContactDetails /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nfunction Input({\r\n        type,\r\n        placeholder,\r\n        name,\r\n        className,\r\n        onChange\r\n    },ref){\r\n  return (\r\n      <input \r\n        ref={ref}\r\n        type={type} \r\n        className={className} \r\n        name={name} \r\n        placeholder={placeholder}\r\n        onChange = {onChange}        \r\n        />\r\n        )\r\n}\r\n\r\nconst forwadedInput = React.forwardRef(Input);\r\n\r\nexport default forwadedInput;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Capitalize} from 'react-lodash';\r\nclass InlineMessage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {message : this.props.message,\r\n\t\t\tmessage_type : this.props.message_type};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box-info'}>\r\n\t\t\t\t<div className={'box box-header'}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={'box-tools'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={'box-title btn-outline-info btn-lg'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<em><i className='fa fa-check-circle'> </i> <small> {<Capitalize string={this.state.message} />}  </small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nInlineMessage.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tmessage_type : PropTypes.string\r\n};\r\n\r\nexport default InlineMessage;","import React, { Fragment, useEffect, useContext, useRef,useState } from \"react\";\r\nimport { Link,Redirect ,navigate} from \"react-router-dom\";\r\nimport { routes } from \"../../../constants\";\r\nimport {user_init,user_errors_init, inline_init} from '../auth-constants';\r\n\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport Input from '../../Input/Input';\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nexport default function Login() {\r\n\r\n  const [values,setValues] = useState(user_init);\r\n  const [errors,setErrors] = useState(user_errors_init);\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const submitRef = useRef(null);\r\n\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\t  \r\n\r\n  \tconst handleChange = e => {\r\n        setValues({...values,[e.target.name]:e.target.value})\r\n    };\r\n    \r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      const check_username = () => {\r\n        if(Utils.validateEmail(values.username) === false){\r\n            setErrors({...errors, username_error: 'invalid username'});\r\n            return true;\r\n        }\r\n          return false;      \r\n      };\r\n\r\n      const check_password = () => {\r\n        if(Utils.isEmpty(values.password)){\r\n          setErrors({...errors,password_error:'password field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_username() ? isError = true : isError = isError;\r\n        check_password() ? isError = true : isError = isError;\r\n\r\n        return isError\r\n      };\r\n      return await do_check()\r\n    };\r\n\r\n  useEffect(() => {\r\n\t  usernameRef.current.focus();  \r\n      \r\n  }, []);\r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      console.log(\"The big loggin context\",context);\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const {\r\n        username,password\r\n      } = values;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login User\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool dropdown-toggle\"\r\n                    onClick={e => showDropdownMenu(e)}\r\n                  >\r\n                    <i className='fa fa-bars'> </i>{\" \"}\r\n                  </button>\r\n                  {displayMenu.menu ? (\r\n                    <ul className=\"dropmenu\">\r\n                      <li\r\n                        className=\"btn btn-block droplink\"\r\n                      >\r\n                      <Link to={routes.forget_password_page}>\r\n                            <i className=\"fa fa-unlock\"> </i> Forget Password\r\n                      </Link>\r\n                      </li>\r\n                      <li\r\n                        className=\"btn btn-block droplink\"\r\n                      ><Link to={routes.signup_page}>\r\n                            <i className=\"fa fa-sign-in\"> </i> Subscribe\r\n                      </Link>\r\n                      </li>\r\n                    </ul>\r\n                  ):null\r\n                  }\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={e => doLogin(username, password)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    placeholder=\"Login Name\"\r\n                    ref={usernameRef}\r\n                    value={values.username}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.username_error ? (\r\n                    <InlineError message={errors.username_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    ref={passwordRef}\r\n                    value={values.password}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.password_error ? (\r\n                    <InlineError message={errors.password_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    ref={submitRef}\r\n                    onClick={e =>\r\n                      checkErrors(e).then(isError => {\r\n                        isError\r\n                          ? setInline({\r\n                              message: \"error processing login \",\r\n                              message_type: \"error\"\r\n                            })\r\n                          : doLogin(username, password);\r\n                      })\r\n                    }\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Login\r\n                    </strong>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning btn-lg\"\r\n                    onClick={e => {\r\n                      setValues(user_init);\r\n                      setErrors(user_errors_init);\r\n                      setInline(inline_init);\r\n                    }}\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-eraser\"> </i> Reset\r\n                    </strong>\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  {inline.message ? (\r\n                    <InlineMessage\r\n                      message={inline.message}\r\n                      message_type={inline.message_type}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Redirect,navigate } from \"react-router-dom\";\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function Logout() {\r\n    return (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n          const {\r\n              doLogout\r\n          } = context;\r\n          return (\r\n            <Fragment>\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-sign-out\"> </i> Logout\r\n                  </h3>\r\n\r\n                  <div className=\"box-tools\">\r\n                    <Link to={routes.home_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-home\"> </i>{' '} Home\r\n                      </button>\r\n                    </Link>\r\n                    <Link to={routes.login_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-sign-in\"> </i>{' '} Login\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      name=\"logout\"\r\n                      onClick={e => {\r\n                        doLogout();\r\n                        //navigate(\"/\", true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-sign-out\"> </i>{\" \"}\r\n                      <strong> Logout </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Fragment>\r\n          );\r\n      }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n}\r\n","\r\nimport React, {Fragment,useState,useContext,useEffect} from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { auth } from '../../../firebase';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { extended_user, extended_user_error, inline_init, user_init, user_errors_init } from '../auth-constants';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\nimport { Utils } from '../../../utilities';\r\nimport * as apiRequests from '../auth-api';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [user,setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState(inline_init);\r\n    const { doLogin, user_account_state} = useContext(UserAccountContext);\r\n\r\n    const createUser = async e => {\r\n            await auth.doCreateUserWithEmailAndPassword(user.email,user.password).then(authUser => {\r\n                console.log(authUser);\r\n                let sent_user = {...user};\r\n                sent_user.uid = user_account_state.user_account.uid;\r\n                sent_user = JSON.stringify(sent_user);\r\n\r\n                apiRequests.addUser(sent_user).then(result => {\r\n                    if (result.status){\r\n                        setInline({message:'user successfully created',message_type:'info'});\r\n                        setUser(result.payload);\r\n                    }else{\r\n                        setInline({message:'user not created successfully try adding user details later',message_type:'error'});\r\n                    }\r\n                }).catch(error => {\r\n                    setInline({message:error.message,message_type:'error'});\r\n                });\r\n\r\n            }).catch(error => {\r\n                setInline({message:error.message,message_type:'error'});\r\n            });\r\n\r\n            return true;\r\n    };\r\n\r\n    // names: \"\",\r\n    // surname: \"\",\r\n    // cell: \"\",\r\n    // email: \"\",\r\n    // password: \"\",\r\n    // repeatpassword: \"\"\r\n\r\n\r\n    const checkErrors = async e => {\r\n        let isError = false;\r\n\r\n        const check_names = () => {\r\n            if(Utils.isEmpty(user.names)){\r\n                setErrors({...errors,names_error : 'names field cannot be empty'});\r\n                return true;\r\n            };\r\n            return false;\r\n        }\r\n        const check_surname = () => {\r\n            if(Utils.isEmpty(user.surname)){\r\n                setErrors({...errors,surname_error: 'surname field cannot be empty'})\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_cell = () => {\r\n            if(Utils.isCell(user.cell) === false){\r\n                setErrors({...errors,cell_error:'cell field is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_email = () => {\r\n            if(Utils.validateEmail(user.email) === false){\r\n                setErrors({...errors,email_error:'email address is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password = () => {\r\n            if(Utils.isEmpty(user.password)){\r\n                setErrors({...errors, password_error : 'password field cannot be empty'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password_two = () => {\r\n            if (user.password !== user.repeatpassword){\r\n                setErrors({...errors, repeatpassword_error:'passwords do not match'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_names() ? isError = true : isError = isError;\r\n            check_surname() ? isError = true : isError = isError;\r\n            check_cell() ? isError = true : isError = isError;\r\n            check_email() ? isError = true : isError = isError;\r\n            check_password() ? isError = true : isError = isError;\r\n            check_password_two() ? isError = true : isError = isError;\r\n\r\n            return isError\r\n        };\r\n\r\n        return await do_check();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-sign-out\"> </i> Sign Up\r\n              </strong>\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <Link to={routes.login_page}>\r\n                <button type=\"button\" className=\"btn btn-box-tool btn-lg\">\r\n                  <strong>\r\n                    <i className=\"fa fa-sign-in\"> </i> Login{\" \"}\r\n                  </strong>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        \r\n        \r\n            <form className='form-horizontal col-md-6'>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='names'\r\n                        placeholder='Names...'\r\n                        value={user.names}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='surname'\r\n                        placeholder='Surname...'\r\n                        value={user.surname}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='cell'\r\n                        placeholder='Cell...'\r\n                        value={user.cell}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='email'\r\n                        placeholder='Email...'\r\n                        value={user.email}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='password'\r\n                        placeholder='Password...'\r\n                        value={user.password}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.password_error ? <InlineError message={errors.password_error} /> : ''}\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='repeatpassword'\r\n                        placeholder='Repeat Password...'\r\n                        value={user.repeatpassword}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.repeatpassword_error ? <InlineError message={errors.repeatpassword_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-success btn-lg'\r\n                        name='signup'\r\n                        onClick={e => checkErrors(e).then(isError => {\r\n                            isError ?\r\n                                setInline({message: 'error processing form',message_type:'error'})\r\n                            :   createUser(e).then(result => {\r\n\r\n                            });\r\n                        })}\r\n                    >\r\n                        <i className='fa fa-sign-in'> </i>{' '}\r\n                        Sign Up\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-warning btn-lg'\r\n                        name='reset'\r\n                        onClick={e => {\r\n                            setUser(extended_user);\r\n                            setErrors(extended_user_error);\r\n                            setInline(inline_init);\r\n                        }}\r\n                    >\r\n                        <i className='fa fa-eraser'> </i>{' '}\r\n                        Reset\r\n                    </button>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default SignUp","import React, { Fragment,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function SideBar (){\r\n\t\r\n\tlet onSearch = e => {    \r\n\t\te.preventDefault();\r\n\t\tconsole.log('Searching site...');\r\n\t\t// Remember to clear search field      \r\n\t};\r\n\t\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const userSignedInText = user_account_state.user_account\r\n        .uid\r\n        ? `<p id=\"strSideUserNameID\"><Link to={routes.logout_page}> Logout</Link></p>`\r\n        : `<p id=\"strSideUserNameID\"><Link to={routes.login_page}> Login</Link></p>`;\r\n\r\n    \r\n      return (\r\n        <Fragment>\r\n          <aside className=\"main-sidebar\">\r\n            <section className=\"sidebar\">\r\n              <div className=\"user-panel\">\r\n                <div className=\"pull-left image\">\r\n                  <img\r\n                    src=\"/static/dist/img/sms.jpeg\"\r\n                    id=\"strSideUserImageID\"\r\n                    className=\"img-circle\"\r\n                    alt=\"Weq-Trading\"\r\n                  />\r\n                </div>\r\n                <div className=\"pull-left info\">\r\n                  {user_account_state.user_account.uid ? (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.logout_page}> Logout</Link>\r\n                    </p>\r\n                  ) : (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.login_page}> Login</Link>\r\n                    </p>\r\n                  )\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <form\r\n                onSubmit={e => onSearch(e)}\r\n                method=\"get\"\r\n                className=\"sidebar-form\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"input-group-btn\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      name=\"search\"\r\n                      id=\"search-btn\"\r\n                      className=\"btn btn-flat\"\r\n                    >\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                <MenuItems />\r\n              </ul>\r\n            </section>\r\n          </aside>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { inline_init } from '../auth-constants';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nexport default function Forget(){\r\n  const [email,setEmail] = useState({email:''});\r\n  const [errors,setErrors] = useState({email_error : ''});\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n\r\n\tfunction sendRecoveryEmail  (e) {\r\n\t\te.preventDefault();\r\n    console.log('Sending Recovery Email');      \r\n    setInline({message:'sending recovery email',message_type:'info'});\r\n    // TODO create a backend firebase function to send recovery email and trigger through https\r\n    // actually call a firebase function that sends a recovery email from firebase\r\n\t}\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            {\" \"}\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-key\"> </i> Forget Password\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <Link to={routes.login_page}>\r\n              <button type=\"button\" className=\"btn btn-box-tool\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login\r\n                </strong>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <form\r\n            className=\"form-horizontal\"\r\n            onSubmit={e => sendRecoveryEmail(e)}\r\n          >\r\n            <div className=\"form-group\">\r\n              <span>\r\n                Enter your username so what we can send you a password recovery\r\n                message\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n\t\t\t  <input \r\n\t\t\t\t  type=\"email\" \r\n\t\t\t\t  className=\"form-control\" \r\n\t\t\t\t  name=\"email\" \r\n\t\t\t\t  value={email.email}\r\n\t\t\t\t  onChange={e => setEmail({[e.target.name]:e.target.value})}\t\t\t\t  \r\n\t\t\t\t  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-lg\"\r\n                onClick={e => sendRecoveryEmail(e)}\r\n              >\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-unlock-alt\"> </i> Recover\r\n                </strong>\r\n              </button>\r\n\t\t\t\t<button \r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\tonClick={e =>{\r\n            setErrors({email_error : ''});\r\n            setEmail({ email: \"\" });\r\n            setInline(inline_init);\r\n          }  }\r\n\t\t\t\t>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-eraser\"> </i> Reset{\" \"}\r\n                  </strong>\r\n                </button>              \r\n            </div>\r\n            <div className='form-group'>\r\n              {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","\r\nexport const category_init = {    \r\n    category_id : '',\r\n    category_name : '',\r\n    description : '',\r\n    notes : '',\r\n    category_type : '',\r\n    sub_category : '',\r\n    category_art : '',\r\n};\r\n\r\nexport const category_errors_init = {\r\n    category_name_error : '',\r\n    description_error : '',\r\n    notes_error : '',\r\n    category_type_error : '',\r\n    sub_category_error : '',\r\n    category_art_error : ''\r\n};\r\n\r\nexport const products_init = {\r\n         uid : '',\r\n         id: '',\r\n         category_id : '',\r\n         product_name: '',\r\n         description: '',\r\n         product_art: '',\r\n         price: '',\r\n         currency: 'zar',\r\n         active : true\r\n};\r\n\r\nexport const products_errors_init = {\r\n    category_id_error : '',\r\n    product_name_error : '',\r\n    description_error : '',\r\n    product_art_error : '',\r\n    price_error : '',\r\n    currency_error : ''\r\n};\r\n\r\nexport const service_init = {\r\n    uid: '',\r\n    id: '',\r\n    category_id: '',\r\n    service_name: '',\r\n    description: '',\r\n    service_art : '',\r\n    price: '',\r\n    currency: 'zar'\r\n};\r\n\r\nexport const service_errors_init = {\r\n    category_id_error : '',\r\n    service_name_error: '',\r\n    description_error: '',\r\n    service_art_error: '',\r\n    price_error: '',\r\n    currency_error: 'zar'\r\n};\r\n\r\n\r\nexport const physical_address_init = {\r\n    uid: '',\r\n    deliver_to : '',\r\n    stand: '',\r\n    street_name: '',\r\n    city: '',\r\n    province: '',\r\n    country : '',\r\n    postal_code: '',\r\n};\r\n\r\nexport const physical_address_errors_init = {\r\n    deliver_to_error : '',\r\n    stand_error : '',\r\n    street_name_error : '',\r\n    city_error : '',\r\n    province_error : '',\r\n    country_error : '',\r\n    postal_code_error : ''\r\n};\r\n\r\n\r\nexport const contact_details_init = {\r\n    uid: \"\",\r\n    tel: \"\",\r\n    cell: \"\",\r\n    email: \"\",\r\n    fax: \"\",\r\n    website: \"\"\r\n};\r\n\r\n\r\nexport const contact_details_errors_init = {\r\n    tel_error : '',\r\n    cell_error : '',\r\n    email_error : '',\r\n    fax_error : '',\r\n    website_error : ''\r\n};\r\n\r\n\r\nexport const cart_init = {\r\n    cart_id :'',  // # unique id for this cart instance\r\n    uid :'',\r\n    total_items : '0',\r\n    date_created : '',\r\n    is_active : true,\r\n    sub_total :'0',\r\n    tax : '0',\r\n    total : '0'\r\n};\r\n\r\nexport const coupon_init = {\r\n    uid: '',    \r\n    code: '',\r\n    validated : false    \r\n};\r\n\r\n\r\nexport const store_init = {\r\n         uid: \"\",\r\n         store_name: \"\",\r\n         company_name: \"\",\r\n         description: \"\",\r\n         physical_address: \"\",\r\n         tel: \"\",\r\n         cell: \"\",\r\n         email: \"\",\r\n         website: \"\"\r\n};\r\n\r\nexport const store_errors_init = {\r\n    store_name_error : '',\r\n    company_name_error : '',\r\n    description_error : '',\r\n    physical_address_error : '',\r\n    tel_error : '',\r\n    cell_error : '',\r\n    email_error : '',\r\n    website_error : ''\r\n};\r\n\r\n\r\nexport const payment_init = {\r\n         uid: \"\",\r\n         id: \"\",\r\n         date: \"\",\r\n         amount: \"\",\r\n         processed: false,\r\n         transaction_type: \"deposit\",\r\n         deposit_slip_url : ''\r\n       };\r\n\r\nexport const payment_errors_init = {\r\n    amount_error  : '',\r\n    transaction_type_error : ''\r\n};","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\nexport const fetchProductsAPI = async () => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_products_endpoint)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      console.log('Fetch Products API', products);\r\n      results = [...products];\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchProductAPI = async product_id => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_products_endpoint + `/${product_id}`)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      console.log(\"Fetch Products API\", products);\r\n      results = {...products};\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchUserProductsAPI = async uid => {\r\n  let results = [];\r\n  await axios.get(routes.api_products_endpoint + `/user/${uid}`).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error fetching user products');\r\n    }\r\n  }).then(products => {\r\n    results = [...products];\r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchUserServicesAPI = async uid => {\r\n  let results = [];\r\n  await axios.get(routes.api_services_endpoint + `/user/${uid}`).then(result => {\r\n    if(result.status){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error fetching user services');\r\n    }\r\n  }).then(services => {\r\n    results = [...services];\r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  return results;\r\n}\r\n\r\n\r\nexport const fetchServicesAPI = async () => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_services_endpoint)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching services\");\r\n      }\r\n    })\r\n    .then(services => {\r\n      results = [...services];\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchServiceAPI = async service_id => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_services_endpoint + `/${service_id}`)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      console.log(\"Fetch Products API\", products);\r\n      results = { ...products };\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n\r\n};\r\n\r\n\r\nexport const fetchCategories = async (category_type) => {\r\n    let results = [];\r\n\r\n    await axios.get(routes.api_categories_endpoint).then(result => {\r\n        if (result.status === 200){\r\n            return result.data;\r\n        }else{\r\n            throw new Error('there was an error fetching product categories');\r\n        }\r\n    }).then(categories => {\r\n        categories.forEach(category => {\r\n          if(category.category_type === category_type){\r\n            results.push(category)\r\n          }\r\n        })\r\n    }).catch(error => {\r\n        console.log('Categories Error : ',error.message);\r\n    })\r\n    \r\n    return results;\r\n};\r\n\r\nexport const saveCategory = async (category) => {\r\n    let results = [];\r\n\r\n    await axios.post(routes.api_categories_endpoint,category).then(result => {\r\n        if (result.status === 200){\r\n            return result.data;\r\n        }else{\r\n            throw new Error('there was an error saving new category');\r\n        }\r\n    }).then(category => {\r\n        results = category;\r\n    }).catch(error => {\r\n        console.log('Save Caregoty',error.message);\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const saveProduct = async(product) => {\r\n  let results = {status : true,payload:{},error:{}};\r\n   \r\n\r\n  await axios.post(routes.api_products_endpoint,product).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error saving new product');\r\n      }\r\n  }).then(product => {\r\n    results.status = true;\r\n    results.payload = product;\r\n\r\n  }).catch(error => {\r\n    console.log('Save product error',error.message);\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\nexport const onDeleteProduct = async(product) => {\r\n    let results = { status: true, payload: {}, error: {} };\r\n\r\n    await axios.delete(routes.api_products_endpoint + `/${product.uid}/${product.id}`).then(result => {\r\n        if (result.status === 200){\r\n          return result.data;\r\n        }\r\n    }).then(product => {\r\n      results.status = true;\r\n      results.payload = {...product};\r\n    \r\n    }).catch(error => {\r\n      results.status = false;\r\n      results.error = {...error};      \r\n    });\r\n    return results;\r\n};\r\n\r\n\r\nexport const doAddService = async(service) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_services_endpoint,service).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving new service');\r\n    }\r\n  }).then(service => {\r\n    results.status = true;\r\n    results.payload = service;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const updateService = async(service) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.put(routes.api_services_endpoint,service).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error updating service');\r\n    }\r\n  }).then(service => {\r\n    results.status = true;\r\n    results.payload = {...service};\r\n    results.error = {}\r\n\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = {};\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const updateProduct = async(product) => {\r\n  let results = {status : true, payload: {}, error : {}};\r\n\r\n  await axios.put(routes.api_products_endpoint,product).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error updating product');\r\n    }\r\n  }).then(product => {\r\n    results.status = true;\r\n    results.payload ={...product};\r\n    results.error = {};\r\n\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = {};\r\n    results.error = {...error}\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchProductRequests = async(uid,id) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.get(routes.api_products_endpoint + `/requests/${uid}/${id}`).then(result => {\r\n    if (result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('error fetching product requests');\r\n    }\r\n  }).then(requests => {\r\n    results.status = true;\r\n    results.payload = [...requests];\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = [];\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const fetchServiceRequests = async(uid,id) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.get(routes.api_services_endpoint + `/requests/${uid}/${id}`).then(result =>{\r\n    if (result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('error fetching service requests');\r\n    }\r\n  }).then(requests => {\r\n    results.status = true;\r\n    results.payload = [...requests];\r\n    results.error = {};  \r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = [];\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const onDeleteService = async(service) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.delete(routes.api_services_endpoint,service).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error deleting service');\r\n    }\r\n  }).then(service => {\r\n    results.status = true;\r\n    results.payload = {...service};\r\n    results.error ={}\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = {};\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const savePhysicalAddress = async(physical_address) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_physical_endpoint,physical_address).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving new physical address');\r\n    }\r\n  }).then(physical => {\r\n    results.status = true;\r\n    results.payload = physical;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchPhysicalAddress =async (seed,stateKey) => {\r\n    let response = {};\r\n    let request_data = {\r\n      uid: seed\r\n    };\r\n\r\n    await axios.get(routes.api_physical_endpoint + `/${seed}`).then(results => {\r\n      if (results.status === 200){\r\n        return results.data;\r\n      }else{\r\n        throw new Error('there was an error loading physical address');\r\n      }\r\n    }).then(physical => {\r\n      response = {...physical};\r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\n\r\nexport const saveContactDetails = async(contact_details) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_contact_endpoint, contact_details).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving contact details')\r\n    }\r\n  }).then(contact => {\r\n    results.status = true;\r\n    results.payload = contact;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchContactDetails = async (seed,stateKey) => {\r\n    let response = {};\r\n    await axios.get(routes.api_contact_endpoint + `/${seed}`).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error loading contact details');\r\n      }\r\n    }).then(contact => {\r\n      response = {...contact};\r\n\r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\n\r\n\r\nexport const addToCart = async cart_item => {\r\n    let results = { status: true, payload: {}, error: {} };\r\n\r\n    await axios.post(routes.api_cart_endpoint, cart_item)\r\n      .then(result => {\r\n        if (result.status === 200) {\r\n          return result.data;\r\n        } else {\r\n          throw new Error(\"there was an error adding cart item\");\r\n        }\r\n      })\r\n      .then(cart_items => {\r\n        results.status = true;\r\n        results.payload = [...cart_items];\r\n      })\r\n      .catch(error => {\r\n        results.status = false;\r\n        results.error = { ...error };\r\n      });\r\n    console.log(\"Add to cart results : \", results);\r\n    return results;\r\n};\r\n\r\n\r\n\r\nexport const retrieveCart = async uid => {\r\n  let results = {status : true, cart_items : [], cart : {}, error: {} };\r\n\r\n  await axios.get(routes.api_cart_endpoint + `/${uid}`).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error fetching cart');\r\n      }\r\n  }).then(Response => {\r\n      results.status = true;\r\n      results.cart = Response.cart;\r\n      results.cart_items = Response.cart_items;\r\n  }).catch(error => {\r\n      results.status = false;\r\n      results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const deleteCart = async uid => {\r\n  let results = { status: true, cart_items: [], cart: {}, error: {} };\r\n  await axios.delete(routes.api_cart_endpoint + `/${uid}`).then(response => {\r\n      if (response.status === 200){\r\n        return response.data\r\n      }else{\r\n        throw new Error('there was an error removing cart');\r\n      }\r\n  }).then(cart => {\r\n    results.status = true;\r\n    results.cart_items = [];\r\n    results.cart = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const applyCouponCode = async coupon => {\r\n  let results = { status: true, coupon_code: {}, error: {} };\r\n\r\n  await axios.put(routes.api_coupons_endpoint,coupon).then(response => {\r\n    if (response.status === 200){\r\n      return response.data;\r\n    }else{\r\n      throw new Error('error on server or coupon code not found',response.data);\r\n    }\r\n  }).then(response => {\r\n    if (response.succeed){\r\n      results.status = response.succeed;\r\n      results.coupon_code = { ...response.coupon };    \r\n    }else{\r\n      results.status = response.succeed;\r\n      results.error.message = response.message;    \r\n    }\r\n  }).catch(error => {\r\n    console.log('coupon code error ',error.message);\r\n    results.status = false;\r\n    results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n\r\n};\r\n\r\n\r\nexport const fetchStore = async uid => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.get(routes.api_store_endpoint + `/${uid}`).then(response => {\r\n      if(response.status === 200){\r\n        return response.data;\r\n      }else{\r\n        throw new Error('error fetching store');\r\n      }\r\n  }).then(store => {\r\n    results.status = true;\r\n    results.payload = {...store};\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = {...error};\r\n    results.payload = {};\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const addStore = async (client_store) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n  await axios.post(routes.api_store_endpoint,client_store).then(response => {\r\n      if(response.status === 200){\r\n          return response.data;\r\n      }else{\r\n        throw new Error('there was an error adding store');\r\n      }\r\n  }).then(store => {\r\n    results.status = true;\r\n    results.payload = {...store};\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = {...error};\r\n    results.payload = {};\r\n  });\r\n  return results;\r\n}\r\n\r\n\r\n\r\nexport const fetchTransactions = async(uid) => {\r\n  let results = { status: true, payload: [], error: {} };\r\n\r\n  await axios.get(routes.api_transactions_endpoint+`/${uid}`).then(response => {\r\n    if(response.status === 200){\r\n      return response.data;\r\n    }else{\r\n      throw new Error('there was an error fetching transactions');\r\n    }\r\n  }).then(transactions => {\r\n    results.status = true;\r\n    results.payload = [...transactions];\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = {...error};\r\n    results.payload = {};\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const createTransaction = async client_transaction => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n  await axios.post(routes.api_transactions_endpoint,client_transaction).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error creating transaction');\r\n    }\r\n  }).then(transaction => {\r\n      results.status = true;\r\n      results.payload = {...transaction};\r\n      results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = {};\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const removeTransaction = async (id,uid) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.delete(routes.api_transactions_endpoint+`/${uid}/${id}`).then(result => {\r\n    if(results.status === 200){\r\n      return results.data;\r\n    }else{\r\n      throw new Error('there was an error removing transanction');\r\n    }\r\n  }).then(transactions => {\r\n    results.status = true;\r\n    results.payload = [...transactions];\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = [];\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchUserByID = async (uid) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n  \r\n  await axios.get(routes.api_user_endpoint + `/${uid}`).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n      }\r\n  }).then(user => {\r\n    results.status = true;\r\n    results.payload = {...user};\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload = {};\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const processDeposit = async (deposited) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.put(routes.api_transactions_endpoint,deposited).then(result => {\r\n        if(result.status === 200){\r\n          return result.data;\r\n        }else{\r\n          throw new Error('there was an error processing deposit');\r\n        }\r\n  }).then(deposited => {\r\n    results.status = true;\r\n    results.payload = {...deposited}\r\n    results.error = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.payload= {};\r\n    results.error = {...error};\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const onSearch = async search_text => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.get(routes.api_products_endpoint + `/search/${search_text}`).then(result => {\r\n      if (result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('error performing search');\r\n      }\r\n  }).then(products => {\r\n    results.status = true;\r\n    results.payload = [...products];\r\n    results.error = {}  ;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = { ...error };\r\n  })\r\n\r\n\r\n  await axios.get(routes.api_services_endpoint + `/search/${search_text}`).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('error performing seach');\r\n    }\r\n  }).then(services => {\r\n    results.status = true;\r\n    results.payload = [...results.payload,...services];\r\n    results.error = {}\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n};","import React ,{useState,useEffect,Fragment,useContext}from 'react';\r\nimport {products_init,category_init} from '../market-constants';\r\nimport { routes,settings } from '../../../constants';\r\nimport * as apiRequests from '../api-requests';\r\nimport * as productStore from '../CheckOut/store-basket';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nconst Product = ({product,addProductToBasket}) => {\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const addToBasket = async product => {    \r\n    \r\n    console.log('Adding this product to basket',product);\r\n    if (user_account_state.user_account.uid){\r\n    try {\r\n      await addProductToBasket(product)\r\n        .then(Response => {\r\n          if (Response.status) {\r\n            setInline({\r\n              message: ` successfully add ${product.product_name} to basket`\r\n            });\r\n          } else {\r\n            setInline({\r\n              message: Response.error.message,\r\n              message_type: \"error\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setInline({ message: error.message, message_type: \"error\" });\r\n        });\r\n    } catch (error) {\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n  }else{\r\n    setInline({message:'you are presently not logged in please login in order to start buying and selling products in this portal',message_type:'error'});\r\n  }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"box box-info\">\r\n      <div className=\"polaroid\">\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\" title={product.description}>\r\n              {product.product_name}\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-light\"\r\n                onClick={e => addToBasket(product)}\r\n                title={`Add ${product.product_name} to Basket`}\r\n              >\r\n                R {product.price}.00 Add to Basket\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"pola-image\"\r\n            src={product.product_art}\r\n            alt={product.product_name}\r\n            title={\r\n              `\r\n              Title : ${product.product_name}  \r\n              Description : \r\n              ${product.description}\r\n              \r\n              ----------------------------------\r\n              \r\n              Price : R ${product.price}.00\r\n            `}\r\n          />\r\n          <div className=\"polatext\">\r\n            <span>{product.description}</span>\r\n            <div className=\"box-tools\">\r\n              <div className=\"box-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning btn-outline-light\"\r\n                  onClick={e => addToBasket(product)}\r\n                  title={`Add ${product.product_name} to Basket `}\r\n                >\r\n                  R {product.price}.00 Add to Basket\r\n                </button>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default function Products() {\r\n    const [products,setProducts] = useState([]);\r\n    const [categories,setCategories] = useState([]);\r\n    const [sub_categories,setSubCategories] = useState([]);\r\n    const [show_products, setShowProducts] = useState([]);\r\n\r\n    const [shoppingBasket,setShoppingBasket] = useState([]);\r\n    const [displayMenu,setMenu] = useState({menu:false});\r\n    const [title,setTitle] = useState('All Categories');\r\n\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n\r\n    const addProductToBasket = async product => {   \r\n        let results = { status: true, payload: {}, error: {} };     \r\n        let cart_item = {\r\n          uid : user_account_state.user_account.uid,\r\n          item : product,\r\n        };\r\n\r\n        await apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {          \r\n          results = { ...Response };\r\n          if(Response.status){                        \r\n            setShoppingBasket(Response.payload)\r\n          }else{\r\n             console.log(Response.error.message);\r\n          }            \r\n        });\r\n        return results;\r\n    };\r\n\r\n\r\n    const createSubCategories = async (response) => {\r\n        let subCategoryList = [];\r\n\r\n       await response.forEach(category => {\r\n          if (!subCategoryList.includes(category.sub_category)) {\r\n            subCategoryList.push(category.sub_category);\r\n          }\r\n        });\r\n        console.log('Sub Category List : ',subCategoryList);\r\n        return subCategoryList;\r\n    };\r\n\r\n\r\n    const onCategoryClick = cat => {\r\n      console.log(\"Cliked category\", cat);\r\n      \r\n      let expanded_category = categories.find(expanded_category => expanded_category.sub_category === cat);\r\n\r\n      let filtered_products = products.filter(product => product.category_id === expanded_category.category_id);\r\n\r\n      console.log('Filtered Products ', filtered_products);\r\n      setShowProducts(filtered_products);\r\n      setTitle(cat);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n      const fetchAPI = async () => {\r\n        let category_type = \"products\";\r\n        \r\n        let response = [];\r\n\r\n        await apiRequests.fetchCategories(category_type).then(categories => {\r\n            response = categories;\r\n            console.log('This Categirues',categories);\r\n            setCategories(categories);\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n\r\n        let subs = await createSubCategories(response);\r\n\r\n        setSubCategories(subs);\r\n        return true;\r\n      };\r\n\r\n      fetchAPI().then(result => {\r\n        console.log(result);        \r\n      });\r\n\r\n      return () => {\r\n        setCategories([]);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      apiRequests.fetchProductsAPI().then(result => {\r\n        setProducts(result);\r\n        setShowProducts(result);\r\n      });\r\n      return () => {\r\n        setProducts([]);\r\n        setShowProducts([]);\r\n      };\r\n    }, [categories]);\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-product-hunt\"> </i> Products\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool dropdown-toggle\"\r\n                  onClick={e => showDropdownMenu(e)}\r\n                >\r\n                  Products Categories{\" \"}\r\n                </button>\r\n                {displayMenu.menu ? (\r\n                  <ul className=\"dropmenu\">\r\n                    {sub_categories.map(sub => {\r\n                      console.log(\"Sub Categories\", sub);\r\n                      return (\r\n                        <li\r\n                          className=\"btn btn-block droplink\"\r\n                          name={sub}\r\n                          key={sub}\r\n                          onClick={e => {\r\n                            let cat = sub;\r\n                            onCategoryClick(cat);\r\n                          }}\r\n                        >\r\n                          <i className=\"fa fa-folder-open\"> </i> {sub}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className='box box-header'>\r\n                <h3 className='box-title'>{title}</h3>\r\n            </div>\r\n            {show_products.map(product => {\r\n              if (\r\n                product.product_name &&\r\n                product.product_art &&\r\n                product.description &&\r\n                product.price &&\r\n                product.active\r\n              ) {\r\n                return (\r\n                  <Product\r\n                    product={product}\r\n                    key={product.id}\r\n                    addProductToBasket={addProductToBasket}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","import React, { useState, Fragment,useContext,useEffect } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { service_init, category_init } from \"../market-constants\";\r\nimport { routes, settings } from \"../../../constants\";\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\n\r\nconst Service = ({ service, addServiceToBasket }) => {\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"info\" });\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const addToBasket = async service => {\r\n    console.log(\"Adding this service to basket\", service);\r\n    if (user_account_state.user_account.uid) {\r\n      try {\r\n        await addServiceToBasket(service)\r\n          .then(Response => {\r\n            if (Response.status) {\r\n              setInline({\r\n                message: ` successfully add ${service.service_name} to basket`\r\n              });\r\n            } else {\r\n              setInline({\r\n                message: Response.error.message,\r\n                message_type: \"error\"\r\n              });\r\n            }\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n      } catch (error) {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      }\r\n    } else {\r\n      setInline({\r\n        message:\r\n          \"you are presently not logged in please login in order to start buying and selling services in this portal\",\r\n        message_type: \"error\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box box-info\">\r\n      <div className=\"polaroid\">\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\" title={service.description}>\r\n              {service.service_name}\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-light\"\r\n                onClick={e => addToBasket(service)}\r\n                title={`Add ${service.service_name} to Basket`}\r\n              >\r\n                R {service.price}.00 Add to Basket\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"pola-image\"\r\n            src={service.service_art}\r\n            alt={service.service_name}\r\n            title={`\r\n              Title : ${service.service_name}  \r\n              Description : \r\n              ${service.description}\r\n              \r\n              ----------------------------------\r\n              \r\n              Price : R ${service.price}.00\r\n            `}\r\n          />\r\n          <div className=\"polatext\">\r\n            <span>{service.description}</span>\r\n            <div className=\"box-tools\">\r\n              <div className=\"box-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning btn-outline-light\"\r\n                  onClick={e => addToBasket(service)}\r\n                  title={`Add ${service.service_name} to Basket `}\r\n                >\r\n                  R {service.price}.00 Add to Basket\r\n                </button>\r\n                {inline.message ? (\r\n                  <InlineMessage\r\n                    message={inline.message}\r\n                    message_type={inline.message_type}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default function Services() {\r\n\r\n    const[services,setServices] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [sub_categories, setSubCategories] = useState([]);\r\n    const [show_services, setShowServices] = useState([]);\r\n\r\n    const [shoppingBasket, setShoppingBasket] = useState([]);\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  \r\n    const addServiceToBasket = async service => {\r\n      let results = { status: true, payload: {}, error: {} };\r\n      let cart_item = {\r\n        uid: user_account_state.user_account.uid,\r\n        item: service\r\n      };\r\n\r\n      await apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {\r\n        results = { ...Response };\r\n        if (Response.status) {\r\n          setShoppingBasket(Response.payload);\r\n        } else {\r\n          console.log(Response.error.message);\r\n        }\r\n      });\r\n      return results;\r\n    };\r\n\r\n    const createSubCategories = response => {\r\n      let subCategoryList = [];\r\n\r\n      response.forEach(category => {\r\n        if (!subCategoryList.includes(category.sub_category)) {\r\n          subCategoryList.push(category.sub_category);\r\n        }\r\n      });\r\n      console.log(\"Sub Category List : \", subCategoryList);\r\n      return subCategoryList;\r\n    };\r\n\r\n    const onCategoryClick = category => {\r\n      let expanded_category = categories.find(\r\n        expanded_category => expanded_category.sub_category === category\r\n      );\r\n\r\n      let filtered_services = services.filter(service => {\r\n        return service.category_id === expanded_category.category_id;\r\n      });\r\n      console.log(\"Filtered Service \", filtered_services);\r\n      setShowServices(filtered_services);\r\n    };\r\n\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        let category_type = \"services\";\r\n\r\n        let response = [];\r\n\r\n        await apiRequests\r\n          .fetchCategories(category_type)\r\n          .then(categories => {\r\n            response = categories;\r\n            setCategories(categories);\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n\r\n        let subs = await createSubCategories(response);\r\n\r\n        setSubCategories(subs);\r\n        return true;\r\n      };\r\n\r\n      fetchAPI().then(result => {\r\n        console.log(result);\r\n      });\r\n\r\n      return () => {\r\n        setCategories([]);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      apiRequests.fetchServicesAPI().then(result => {\r\n        setServices(result);\r\n        setShowServices(result);\r\n      });\r\n      return () => {\r\n        setServices([]);\r\n        setShowServices([]);\r\n      };\r\n    }, []);\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-server\"> </i> Services\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            {sub_categories.map(sub => {\r\n              return (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name={sub}\r\n                  onClick={e => onCategoryClick(e.target.name)}\r\n                >\r\n                  {sub}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {show_services.map(service => {\r\n          if (\r\n            service.service_name &&\r\n            service.service_art &&            \r\n            service.price\r\n          ) {\r\n            return (\r\n              <Service\r\n                service={service}\r\n                key={service.id}\r\n                addServiceToBasket={addServiceToBasket}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from \"react\";\r\n\r\nimport Products from \"./Products/Products\";\r\nimport Services from \"./Service/Services\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { routes } from \"../../constants\";\r\nimport * as apiRequests from './api-requests';\r\nimport {firebase} from '../../firebase';\r\n\r\nimport {UserAccountContext} from '../../context/UserAccount/userAccountContext';\r\n\r\n\r\nexport default function Market() {\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [display,setDisplay] = useState('products');\r\n  const [search,setSearch] = useState('');\r\n  const [search_results,setSearchResults] = useState([]);\r\n  const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n  const {user_account_state,doLogin } = useContext(UserAccountContext);\r\n\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  \r\n\r\n  const onSearch = async e => {\r\n    e.preventDefault();\r\n    \r\n    let search_text = search;\r\n\r\n    await apiRequests.onSearch(search_text).then(results => {\r\n      if (results.status){\r\n        setSearchResults(results.payload);\r\n      }else{\r\n        setSearchResults([]);\r\n      }\r\n    }).catch(error => {\r\n      setInline({message:'error performing search',message_type:'error'});\r\n    });\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    apiRequests.fetchProductsAPI().then(result => {\r\n      setProducts(result);\r\n    });\r\n\r\n    apiRequests.fetchServicesAPI().then(result => {\r\n      setServices(result);\r\n    });\r\n\r\n\r\n    return () => {\r\n      setProducts([]);\r\n      setServices([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-shopping-basket\"> </i> Market Place{\" \"}\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n              <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"products\"\r\n                    onClick={e => setDisplay(\"products\")}\r\n                  >\r\n                    <i className=\"fa fa-product-hunt\"> </i> Products\r\n                  </li>\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"services\"\r\n                    onClick={e => setDisplay(\"services\")}\r\n                  >\r\n                    <i className=\"fa fa-server\"> </i> Services\r\n                  </li>\r\n                  {user_account_state.user_account.uid ? (\r\n                    <li\r\n                      type=\"button\"\r\n                      className=\"btn btn-box-tool droplink\"                    \r\n                    >\r\n\r\n                      <Link to={routes.check_out_page}>\r\n                        {\" \"}\r\n                          <i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n                      </Link>\r\n                    </li>\r\n                  ) : (\r\n                    <li\r\n                      type=\"button\"\r\n                      className=\"btn btn-box-tool droplink\"                    \r\n                    >\r\n                    <Link to={routes.login_page}>\r\n                        <i className=\"fa fa-sign-in\"> </i> Login                      \r\n                    </Link>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              ):null}\r\n            </div>\r\n\r\n\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n\r\n          {display === \"products\" ? <Products products={products} /> : \"\"}\r\n\r\n          {display === \"services\" ? <Services services={services} /> : \"\"}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from \"react\";\r\nimport {\r\n  products_init,\r\n  products_errors_init,\r\n  service_init,\r\n  service_errors_init,\r\n  category_init,\r\n  category_errors_init\r\n} from \"./market-constants\";\r\nimport { firebase } from \"../../firebase\";\r\nimport * as RequestsAPI from \"./api-requests\";\r\nimport axios from \"axios\";\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\n\r\nimport {Utils} from '../../utilities';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nfunction AddProduct() {\r\n  const [product, setProduct] = useState(products_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message : '', message_type:'info'});\r\n  const [errors,setErrors] = useState(products_errors_init)\r\n  const [categories, setCategories] = useState([]);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === product.category_id\r\n      );\r\n\r\n      const uploadTask = firebase.storage\r\n        .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setProduct({\r\n                ...product,\r\n                product_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n\r\n  };\r\n\r\n  const FileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doSaveProduct = async e => {\r\n    e.preventDefault();\r\n    let product_to_save = Object.assign({}, product);\r\n    product_to_save.uid = user_account_state.user_account.uid;\r\n    console.log(\"Product to Save\", product_to_save);\r\n    product_to_save = JSON.stringify(product_to_save);\r\n    RequestsAPI.saveProduct(product_to_save)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"successfully saved product\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_product_name = () => {\r\n      if(Utils.isEmpty(product.product_name)){\r\n        setErrors({\r\n          ...errors,\r\n          product_name_error : 'product name field cannot be empty'\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_description = () => {\r\n      if(Utils.isEmpty(product.description)){\r\n        setErrors({...errors,description_error : 'product description cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = () => {\r\n      if(Utils.isMoney(product.price)){\r\n        setErrors({...errors,price_error: 'product price is invalid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_art = () => {\r\n      if(Utils.isEmpty(product.product_art)){\r\n        setErrors({...errors,product_art_error : 'product art is not valid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_category_id = () => {\r\n      if(Utils.isEmpty(product.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select main category type'});\r\n      }\r\n    }\r\n\r\n    const do_check_errors = () => {\r\n        check_product_name() ? isError = true : isError = isError;\r\n        check_product_description() ? (isError = true) : (isError = isError);\r\n        check_price() ? (isError = true) : (isError = isError);\r\n        check_product_art() ? (isError = true) : (isError = isError);\r\n        check_category_id() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n    }\r\n\r\n\r\n    return await do_check_errors();     \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let category_type = 'products';\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log('Category results',results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Product</strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"product_name\"\r\n              value={product.product_name}\r\n              placeholder=\"Product Name...\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.product_name_error ? (\r\n              <InlineError message={errors.product_name_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Product Description...\"\r\n              value={product.description}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? (\r\n              <InlineError message={errors.description_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Product Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Product Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={product.price}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? (\r\n              <InlineError message={errors.price_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Product Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"product_art\"\r\n              onChange={e => FileArtChange(e)}\r\n            />\r\n            {errors.product_art_error ? (\r\n              <InlineError message={errors.product_art_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-product-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Product Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={product.product_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-product\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  if (isError) {\r\n                    doSaveProduct(e).then(result => {\r\n                      console.log(\"Product saved\");\r\n                    });\r\n                  } else {\r\n                    setInline({\r\n                      message: \"there was an error processing form\",\r\n                      message_type: \"error\"\r\n                    });\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Product\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setErrors(products_errors_init);\r\n                setInline({ message: \"\", message_type: \"info\" });\r\n                setProduct(products_init);\r\n              }}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddService() {\r\n  const [service, setService] = useState(service_init);\r\n  const [errors,setErrors] = useState(service_errors_init);\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [categories,setCategories] = useState([]);\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === service.category_id\r\n      );\r\n      const uploadTask = firebase.storage\r\n        .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setService({\r\n                ...service,\r\n                service_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'please fill in the form correctly before you upload service art',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const fileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_service_name = () => {\r\n      if(Utils.isEmpty(service.service_name)){\r\n        setErrors({...errors,service_name_error : 'service name field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_description = e => {\r\n      if(Utils.isEmpty(service.description)){\r\n        setErrors({...errors,description_error : 'service description field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_art = e => {\r\n      if(Utils.isEmpty(service.service_art)){\r\n        setErrors({...errors,service_art_error : 'service art cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = e => {\r\n      \r\n        if(Utils.isMoney(service.price) === false){\r\n          setErrors({...errors,price_error:'invalid service price'});\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const check_service_category = e => {\r\n      if(Utils.isEmpty(service.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select service category'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const do_check =  e => {\r\n      check_service_name() ? isError = true : isError = false;\r\n      check_service_description() ? isError = true : isError = false;\r\n      check_service_art() ? isError = true : isError = false;\r\n      check_price() ? isError = true : isError = false;\r\n      check_service_category() ? isError = true : isError = false;\r\n\r\n      return isError;\r\n      \r\n    } \r\n\r\n\r\n    return await do_check();\r\n    \r\n  }\r\n\r\n\r\n  const addService = async e => {\r\n      let my_service = {...service}; \r\n      my_service.uid = user_account_state.user_account.uid;\r\n      await RequestsAPI.doAddService(JSON.stringify(my_service)).then(results => {\r\n          if(results.status){\r\n            setService(results.payload);\r\n            setInline({message:'successfully saved service',message_type:'info'});\r\n          }else{\r\n            setInline({message:results.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log(\"Category results\", results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Service</strong>\r\n          </h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"service_name\"\r\n              value={service.service_name}\r\n              placeholder=\"Service Name...\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.service_name_error ? <InlineError message={errors.service_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Service Description...\"\r\n              value={service.description}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Service Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={service.price}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? <InlineError message={errors.price_error} />  : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"service_art\"\r\n              onChange={e => fileArtChange(e)}\r\n            />\r\n            {errors.service_art_error ? <InlineError message={errors.service_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              onClick={e => doUpload(e).then(results => {console.log(results)})}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Service Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={\r\n                  service.service_art ||\r\n                  \"https://via.placeholder.com/300/09f/fff.png\"\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button \r\n            type='button'\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={e => checkErrors(e).then(isError => {\r\n              isError ?\r\n                setInline({message:'there was an error processing form'})\r\n              : addService(e).then(results => {\r\n                    console.log(results);\r\n                    setInline({message:''})\r\n                }).catch(error => {\r\n                  setInline({message:error.message,message_type:'error'});\r\n                });\r\n            })}\r\n            \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Service\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setService(service_init);\r\n                setErrors(service_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}>\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddCategories() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(category_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [errors, setErrors] = useState(category_errors_init);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const CategoryArtFileChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n\r\n    const uploadTask = firebase.storage.ref(`categories/${user_account_state.user_account.uid}/${image.name}`).put(image);\r\n        await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n            //progress\r\n            const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setUploaded({\r\n            ...uploaded,\r\n            progress\r\n            });\r\n        },\r\n        error => {\r\n            //error function\r\n            console.log(error.message);\r\n        },\r\n        () => {\r\n            // complete function\r\n            firebase.storage\r\n            .ref(\"categories\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                console.log(url);\r\n                setCategory({\r\n                ...category,\r\n                category_art: url\r\n                });\r\n            });\r\n      }\r\n    );\r\n  };\r\n\r\n  const doAddCategory = async e => {\r\n        // e.preventDefault();\r\n        let my_category = Object.assign({},category);\r\n        my_category.uid = user_account_state.user_account.uid;\r\n        my_category = JSON.stringify(my_category);\r\n        console.log(\"CATEGORY\", my_category);\r\n        RequestsAPI.saveCategory(my_category).then(results => {\r\n            setCategory(results);\r\n            setCategories({ categories: categories.push(results) });\r\n            setInline({ message: \"successfully created new category\" });\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n  };\r\n\r\n  const checkErrors = async e => {\r\n        // e.preventDefault();\r\n        let isError = false;\r\n        const check_category_name = () => {\r\n            if(Utils.isEmpty(category.category_name)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_name_error: 'category name cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_type = () => {    \r\n            if(Utils.isEmpty(category.category_type)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_type_error : 'Please select category type'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_sub_category = () => {\r\n            if(Utils.isEmpty(category.sub_category)){\r\n                setErrors({\r\n                    ...errors,\r\n                    sub_category_error: 'sub category cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_description = () => {\r\n            if(Utils.isEmpty(category.description)){\r\n                setErrors({\r\n                    ...errors,\r\n                    description_error : 'description cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_notes = () => {\r\n            if(Utils.isEmpty(category.notes)){\r\n                setErrors({\r\n                    ...errors,\r\n                    notes_error : 'Notes cannot be empty'\r\n                });\r\n                return true\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_art = () => {\r\n            if(Utils.isEmpty(category.category_art)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_art_error : 'Category Art cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_category_name() ? isError = true : isError = isError;\r\n            check_category_type() ? isError = true : isError = isError;\r\n            check_sub_category() ? isError = true : isError = isError;\r\n            check_description() ? isError = true : isError = isError;\r\n            check_notes() ? isError = true : isError = isError;\r\n            check_category_art() ? isError = true : isError = isError;\r\n\r\n            return isError;\r\n        }\r\n\r\n        return await do_check();\r\n  };\r\n\r\n\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-bookmark-o\"></i> Add Categories\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Category Type </label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_type\"\r\n              value={category.category_type}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }>\r\n                <option value={null}>Select Product or Service Category Type</option>\r\n                <option value=\"products\">Products</option>\r\n                <option value=\"services\">Services</option>\r\n            </select>\r\n            {errors.category_type_error ? <InlineError message={errors.category_type_error} /> : ''}\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <input \r\n                type='text' \r\n                className='form-control'\r\n                name='sub_category'\r\n                placeholder='Sub Category...'\r\n                value={category.sub_category}\r\n                onChange={e =>setCategory({ ...category, [e.target.name]: e.target.value })}\r\n            />\r\n            {errors.sub_category_error ? <InlineError message={errors.sub_category_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_name\"\r\n              placeholder=\"Category Name...\"\r\n              value={category.category_name}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.category_name_error ? <InlineError message={errors.category_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Description...\"\r\n              value={category.description}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"notes\"\r\n              placeholder=\"Notes...\"\r\n              value={category.notes}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.notes_error ? <InlineError message={errors.notes_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Category Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={e => CategoryArtFileChange(e)}\r\n            />\r\n            {errors.category_art_error ? <InlineError message={errors.category_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-category-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Category Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img                \r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={category.category_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-category\"\r\n              onClick={e => checkErrors(e).then(isError => {\r\n                  isError ? setInline({message: 'there was an error processing form ', message_type:'error'}) \r\n                    : doAddCategory(e)\r\n              }) }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Save Category\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              name=\"reset-category\"\r\n              onClick = {e => {\r\n                setCategory(category_init);\r\n                setErrors(category_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}              \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className='form-group'>\r\n              { inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default function MyMarket() {\r\n  const [display, setDisplay] = useState(\"add-categories\");\r\n  const [product, setProduct] = useState(products_init);\r\n  const [service, setService] = useState(service_init);\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n              Services\r\n            </strong>\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className='fa fa-bars'> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-categories\"\r\n                    onClick={e => setDisplay(\"add-categories\")}\r\n                  >\r\n                    <i className=\"fa fa-bookmark\"> </i> Categories\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-products\"\r\n                    onClick={e => setDisplay(\"add-products\")}\r\n                  >\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Products\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-services\"\r\n                    onClick={e => setDisplay(\"add-services\")}\r\n                  >\r\n                    <i className=\"fa fa-shopping-cart\"> </i> Services\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"add-products\" ? <AddProduct /> : \"\"}\r\n        {display === \"add-services\" ? <AddService /> : \"\"}\r\n        {display === \"add-categories\" ? <AddCategories /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import axios from \"axios\"\r\nimport {routes} from '../../constants';\r\n\r\n\r\nexport const fetchPayments = async uid => {\r\n\r\n    let results = {status:true,payload:{},error:{}};\r\n\r\n    await axios.get(routes.api_dashboard_endpoint+`/payments/${uid}`).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('there was an error fetching transactions');\r\n        }\r\n    }).then(transactions => {\r\n        results.status = true;\r\n        results.payload = [...transactions];\r\n        results.error ={};\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = [];\r\n        results.error = {...error};\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const approvePayment = async (processing,uid) => {\r\n    let results = {status : true,payload:{},error:{}};\r\n\r\n    await axios.put(routes.api_dashboard_endpoint + `/payments/approve/${uid}`,processing).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('there was an error approving payment');\r\n        }\r\n    }).then(payment => {\r\n        results.payload = {...payment};\r\n        results.error = {};\r\n        results.status = true;\r\n    }).catch(error => {\r\n        results.error = {...error};\r\n        results.payload = {};\r\n        results.status  = false;\r\n    });\r\n    return results;\r\n};\r\n\r\nexport const rejectPayment = async (processing,uid) => {\r\n    let results = {status : true,payload:{},error:{}};\r\n\r\n    await axios.put(routes.api_dashboard_endpoint + `/payments/reject/${uid}`,processing).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('there was an error rejecting payment');\r\n        }      \r\n    }).then(payment => {\r\n        results.payload = {...payment};\r\n        results.error = {};\r\n        results.status = true;\r\n    }).catch(error => {\r\n        results.error = {...error};\r\n        results.payload = {};\r\n        results.status = false;\r\n    });\r\n    return true;\r\n}","import React, { Fragment,useContext,useState,useEffect } from 'react'\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport { routes } from \"../../constants\";\r\nimport {payment_init, payment_errors_init} from '../Market/market-constants';\r\nimport * as apiRequests from './dashboard-api';\r\nimport axios from 'axios';\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\nimport { Utils } from '../../utilities';\r\n\r\nimport {Capitalize} from 'react-lodash';\r\n\r\nconst ShowPayment = payment => {\r\n  const [thispayment, setPayment] = useState(payment_init);\r\n\r\n  const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n  const {user_account_state} = useContext(UserAccountContext);\r\n\r\n  const Approve = async e => {\r\n      let processing = {...thispayment};\r\n      processing = JSON.stringify(processing);\r\n      let uid = user_account_state.user_account.uid;\r\n     await apiRequests.approvePayment(processing,uid).then(results => {\r\n        if(results.status){\r\n          setPayment(results.payload);\r\n          setInline({message:'successfully approved payment',message_type:'inf'});\r\n        }else{\r\n          setPayment(payment_init);\r\n          setInline({message:results.error.message,message_type:'error'});\r\n        }\r\n      }).catch(error => {        \r\n         setInline({message:error.message,message_type:'error'});\r\n      });\r\n      return true;\r\n  };\r\n\r\n  const Reject = async e => {\r\n    \r\n    let processing = {...thispayment};\r\n    \r\n    processing = JSON.stringify(processing);\r\n    \r\n    let uid = user_account_state.user_account.uid;\r\n\r\n    await apiRequests.rejectPayment(processing,uid).then(results => {\r\n      if(results.status){\r\n        setPayment(results.payload);\r\n        setInline({message:'successfully rejected payment'})\r\n      }else{        \r\n        setInline({ message: results.error.message, message_type: \"error\" });\r\n      }\r\n    }).catch(error => {\r\n         setInline({ message: error.message, message_type: \"error\" });\r\n    });\r\n\r\n    return true;\r\n    \r\n    \r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const apiCall = async () =>{\r\n      let mypayment = payment.payment;\r\n      await setPayment(mypayment);\r\n      return true;\r\n    };\r\n\r\n    apiCall().then(result => console.log(result))\r\n\r\n    return () => {setInline({message:'',message_type:'inf'})};\r\n\r\n  }, [payment]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Payment</h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date : </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={thispayment.date}\r\n              onChange={e =>\r\n                setPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={thispayment.amount}\r\n              onChange={e =>\r\n                setPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"processed\"\r\n              value={thispayment.processed}\r\n              onChange={e =>\r\n                setPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={true} selected={thispayment.processed}>Yes</option>\r\n              <option value={false} selected={!thispayment.processed} >No</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"transaction_type\"\r\n              value={thispayment.transaction_type}\r\n              onChange={e =>\r\n                setPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          {thispayment.deposit_slip_url ? \r\n                  <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img src={thispayment.deposit_slip_url} className=\"pola-image\" />\r\n              <div className=\"polatext\">\r\n                <label>Proof of Transaction</label>\r\n              </div>\r\n            </div>\r\n          </div>:null\r\n        }\r\n\r\n        <div className='form-group'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-success btn-lg margin'\r\n              name='approve'\r\n              onClick={e => Approve(e).then(result => {\r\n                console.log(result);\r\n              })}\r\n            >\r\n              <i className='fa fa-rocket'> </i>{' '}\r\n              Approve\r\n            </button>\r\n\r\n            <button\r\n              type='button'\r\n              className='btn btn-warning btn-lg'\r\n              name='reject'\r\n              onClick={e => Reject(e).then(result => {\r\n                console.log(result);\r\n              })}\r\n            >\r\n              <i className='fa fa-eraser'> </i>{' '}\r\n              Reject\r\n            </button>\r\n        </div>\r\n        <div className='form-group'>\r\n          {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}  \r\n        </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst PaymentItem = ({payment,OpenPayment}) => {\r\n  const[thispayment,setPayment] = useState(payment_init);\r\n\r\n  useEffect(() => {\r\n    setPayment(payment);\r\n    return () => {\r\n\r\n    };\r\n  }, [payment])\r\n\r\n  return (\r\n    <tr className=\"btn-outline-dark\">\r\n      <td\r\n        className='btn'        \r\n        onClick={e => {\r\n          let { id } = thispayment;\r\n          OpenPayment(id);\r\n        }}\r\n      >\r\n        {<Capitalize string={thispayment.date} />}\r\n      </td>\r\n      <td>R {thispayment.amount}.00</td>\r\n      <td>{thispayment.processed ? \"Yes\" : \"No\"}</td>\r\n      <td>{<Capitalize string={thispayment.transaction_type} />}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ManagePayments = () => {\r\n  const[payments,setPayments] = useState([]);\r\n  const[inline,setInline] = useState({message:'',message_type:'inf'});\r\n  const[show_payment,setShowPayment] = useState(payment_init);\r\n  const{user_account_state} = useContext(UserAccountContext);\r\n  \r\n  const OpenPayment = id =>{\r\n    let item = payments.find(payment => payment.id === id);\r\n    console.log('fetched item',item);\r\n\r\n    setShowPayment({...item});\r\n  };\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentsAPI =async () => {\r\n        let uid = user_account_state.user_account.uid\r\n        await apiRequests.fetchPayments(uid).then(results => {\r\n          if(results.status){\r\n            setPayments(results.payload);\r\n          }else{\r\n            setPayments([]);\r\n          }\r\n        }).catch(error => {\r\n          setPayments([]);          \r\n        });\r\n        return true;\r\n    };\r\n\r\n    fetchPaymentsAPI().then(result => {\r\n        console.log('fetch payment api : ', result);\r\n    });\r\n\r\n    return () => {\r\n      setPayments([]);\r\n      setInline({message:'',message_type:'inf'});\r\n    };\r\n  }, []);\r\n\r\n  return(\r\n    <Fragment>\r\n      <div className='box box-body'>\r\n          <div className='box box-header'>\r\n              <h3 className='box-title'>Payments Manager </h3>\r\n          </div>\r\n              { show_payment.id ?\r\n                  <ShowPayment payment={show_payment} />  :\r\n\r\n                  <table className='table table-responsive'>\r\n                    <thead>\r\n                        <tr>\r\n                          <td>Date</td>\r\n                          <td>Amount</td>\r\n                          <td>Processed</td>\r\n                          <td>Transaction Type</td>                \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            payments.map(payment => {\r\n                              return (\r\n                                <PaymentItem\r\n                                  OpenPayment={OpenPayment}\r\n                                  payment={payment}\r\n                                  key={payment.id}\r\n                                />\r\n                              );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                  </table>\r\n              }                            \r\n \r\n      </div>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\n\r\nconst Dashboard = () => {\r\n  \r\n    const[admins,setAdmins] = useState([]);\r\n    const[present_user,setPresentUser] = useState({\r\n      uid : '',\r\n      is_admin: false\r\n    })\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n\r\n    const{user_account_state} = useContext(UserAccountContext);\r\n\r\n    useEffect(() => {\r\n      const fetchPresentUser = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n        await axios.get(routes.api_user_endpoint + `/${uid}`).then(response => {\r\n          if (response.status === 200){\r\n            return response.data\r\n          }\r\n        }).then(present_user => {\r\n          setPresentUser(present_user);          \r\n        }).catch(error => {\r\n          setInline({message:'you are not authorized to access our dashboard'});\r\n        });\r\n      };\r\n\r\n      fetchPresentUser().then(result => {\r\n        console.log(result);\r\n      });\r\n\r\n      return () => {\r\n        setPresentUser({uid:'',is_admin:false });\r\n      };\r\n    }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {present_user.is_admin ? (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-dashboard\"> </i> Dashboard{\" \"}\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <button className=\"btn btn-box-tool\">\r\n                  {\" \"}\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-callout-info\"> </i> Manage Payments{\" \"}\r\n                  </strong>{\" \"}\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <ManagePayments />\r\n\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"box box-danger\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-dashboard\"> </i> Dashboard{\" \"}\r\n                </strong>\r\n                <hr />\r\n              </h3>\r\n              <div className=\"box box-warning\">\r\n                <span className=\"error-content\">\r\n                  <em>you are not authorized to access our dashboard</em>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","import Axios from 'axios';\r\n\r\nfunction return_date(){\r\n\tconst now = new Date();\r\n\tconst this_year = now.getFullYear();\r\n\tconst this_month = now.getMonth();\r\n\tconst this_day = now.getDate();\r\n\treturn this_year + '-' + this_month + '-' + this_day;\r\n}\r\n\r\nfunction return_page_size(){\r\n\t// consider checking the backend for page size\r\n\treturn 20;\r\n}\r\n\r\nlet articles_api = {\r\n\tapiKey : '41e896a0a1c94b61903408fae1a49471',\r\n\tthis_date : return_date(),\r\n\tthis_pagesize :return_page_size(),\r\n\tentertainment_news: 'https://newsapi.org/v2/top-headlines?country=za&category=entertainment&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n\tsports_news: 'https://newsapi.org/v2/top-headlines?country=za&category=sports&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    business_news: 'https://newsapi.org/v2/top-headlines?country=za&category=business&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    tech_news: 'https://newsapi.org/v2/top-headlines?country=za&category=technology&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    science_news: 'https://newsapi.org/v2/top-headlines?country=za&category=science&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    health_news: 'https://newsapi.org/v2/top-headlines?country=za&category=health&apiKey=41e896a0a1c94b61903408fae1a49471'\r\n};\r\nexport async function get_blog_articles(category) {\t\r\n\tlet results = '';\r\n\tlet apiRequest = '';\r\n    console.log('CATEGORY',category);\t\r\n\t\tswitch(category){\r\n            case 'entertainment': apiRequest = articles_api.entertainment_news;break;\r\n            case 'sports' : apiRequest = articles_api.sports_news;break;\r\n            case 'business' : apiRequest = articles_api.business_news;break;\r\n            case 'tech' : apiRequest = articles_api.tech_news;break;\r\n            case 'science': apiRequest = articles_api.science_news;break;\r\n            case 'health' : apiRequest = articles_api.health_news;break;\r\n            default: apiRequest = articles_api.entertainment_news;break;        \r\n        }\r\n        \r\n\tawait Axios.get(apiRequest).then(result => {\r\n\t\tif (result.status === 200) {\r\n\t\t\treturn result.data;\r\n\t\t} else {\r\n\t\t\tthrow new Error('There was an error fetching articles');\r\n\t\t}\r\n\t}).then(articles => {\r\n\t\tresults = articles;\r\n\t}).catch(error => {\r\n\t\tconsole.log(error);\r\n\t});\r\n\tconsole.log('RESULTS : ', results);\r\n\treturn results.articles;\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport './Blog.css';\r\nimport {useForceUpdate} from '../hooks/forceUpdate';\r\nimport {get_blog_articles} from './articles';\r\n\r\nlet blog_posts = '';\r\n\r\n\r\nfunction BlogPost({ post_data }) {\r\n\tconst [post, setPost] = useState({});\r\n\r\n\tlet article = post_data;\r\n\tconsole.log('Articles',article);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body with-border\">\r\n\t\t\t\t<div className=\"box box-header with-border\">\r\n\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t<h2 className=\"box-title\">{article.title}</h2>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t<img src={article.urlToImage} className=\"pola-image\" />\r\n\t\t\t\t\t<div className=\"polatext\">{article.description}</div>\r\n\t\t\t\t\t<div className=\"box box-footer with-border\">\r\n\t\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{article.source.name} - {article.author}{' '}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-primary'\r\n              onClick={e => {}}\r\n              // when clicked display the entire article\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-file-pdf-o'> </i>{' '}\r\n              Read more...\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst Blog = () => {\r\n\tconst[category,setCategory] = useState('entertainment');\r\n  const [posts, setPosts] = useState([]);\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\t\r\n\r\n  \r\n\r\nconst showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({menu:true});\r\n    document.addEventListener('click', hideDropdownMenu);    \r\n  }\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({menu:false});\r\n    document.removeEventListener('click', hideDropdownMenu);    \r\n  }\r\n\r\n  const title = `${category[0].toUpperCase()}${category.slice(1)} News`;\r\n\r\n\tuseEffect(() => {\r\n    async function fetchData() {\r\n      try{\r\n        let blog_posts = await get_blog_articles(category);\r\n        console.dir(blog_posts);\r\n        setPosts(blog_posts);\r\n        return true;\r\n      }catch(error){\r\n        console.log(error);\r\n        return false;\r\n      }            \r\n    }\r\n    fetchData().then(result => {\r\n      console.log(result);\r\n    })\r\n  }, [category]);\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-file-text\"> </i> Blog{\" \"}\r\n            </strong>\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className='fa fa-bars'> </i>{\" \"}\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"entertainment\"\r\n                    onClick={() => setCategory(\"entertainment\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Entertainment{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"sports\"\r\n                    onClick={() => setCategory(\"sports\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Sports{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"business\"\r\n                    onClick={() => setCategory(\"business\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Business{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"tech\"\r\n                    onClick={() => setCategory(\"tech\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Tech{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"science\"\r\n                    onClick={() => setCategory(\"science\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Science{\" \"}\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"health\"\r\n                    onClick={() => setCategory(\"health\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Health\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-files-o\"> </i> {title}{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          {posts &&\r\n            posts.map((post, index) => {\r\n              return <BlogPost post_data={post} key={index} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Blog;","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport Switch from 'react-switch';\r\nimport {Utils} from '../../utilities';\r\nimport {extended_user, extended_user_error} from '../Auth/auth-constants';\r\nimport * as apiRequests from '../Auth/auth-api';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport InlineError from '../Forms/InlineError';\r\nimport InlineMessage from '../Forms/InlineMessage';\r\n\r\nfunction Verifications({ user_account, doSendEmailVerification }) {\r\n  const [verifications, setVerifications] = useState({\r\n    use_onetime_pin: false,\r\n    cell: user_account.phoneNumber,\r\n    account_verified: user_account.emailVerified\r\n  });\r\n\r\n  let toggleVerifications = e => {\r\n    setVerifications({\r\n      use_onetime_pin: !verifications.use_onetime_pin,\r\n      cell: verifications.cell,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n\r\n  let OnChangeHandler = e => {\r\n    setVerifications({\r\n      use_onetime_pin: verifications.use_onetime_pin,\r\n      cell: e.target.value,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n  let UpdateVerifications = e => {\r\n    console.log(\"Updating verifications\");\r\n    //TODO- this means that i have to actually send a verification\r\n    //sms to the old number and then to the new number\r\n  };\r\n\r\n  let onAccountVerify = e => {\r\n    console.log(\"on Account verifications\");\r\n    //Send verification email from firebase\r\n    doSendEmailVerification();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <small>\r\n                <i className=\"fa fa-lock\"> </i>\r\n                Verifications &amp; Security Settings\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">Account Verification Status</h3>\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        <Switch\r\n                          name=\"account-verified\"\r\n                          checked={verifications.account_verified}\r\n                          onChange={e => onAccountVerify(e)}\r\n                        />\r\n                        <span className=\"box-title\">\r\n                          {verifications.account_verified\r\n                            ? \"Account is Verified\"\r\n                            : \"Account not verified\"}\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"verification-email\"\r\n                        value={user_account.email}\r\n                      />\r\n                    </div>\r\n                    {verifications.account_verified ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-google\"\r\n                          name=\"sendverificationEmail\"\r\n                          onClick={e => onAccountVerify(e)}\r\n                        >\r\n                          <strong>\r\n                            <i className=\"fa fa-send\"> </i> Send Verification\r\n                            Email\r\n                          </strong>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">One Time Pin</h3>\r\n                </div>\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      <Switch\r\n                        name=\"verifications_active\"\r\n                        onChange={e => toggleVerifications(e)}\r\n                        checked={verifications.use_onetime_pin}\r\n                      />\r\n\r\n                      <span> OTP SMS (ONE TIME PIN) </span>\r\n                      {\"  \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group-addon\">\r\n                      <div className=\"input-group\" />\r\n                      <i className=\"fa fa-mobile-phone\"> </i> Cell\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cell\"\r\n                      onChange={e => OnChangeHandler(e)}\r\n                      value={verifications.cell}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-google btn-lg\"\r\n                      name=\"update-verifications\"\r\n                      onClick={e => UpdateVerifications(e)}\r\n                    >\r\n                      <strong>\r\n                        <i className=\"fa fa-mobile-phone\"> </i> Update\r\n                        Verifications\r\n                      </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AccountSettings(){\r\n\r\n    const[accountSettings,setAccountSettings] = useState({\r\n        account_active: true,\r\n        receive_job_offers:true,\r\n        receive_sms:true,        \r\n        receive_email:true\r\n    });\r\n\r\n    let onToggleSettings = target => {\r\n      console.log(target);\r\n      switch(target){\r\n        case  'account_active':{ \r\n          console.log('Setting account active');\r\n          setAccountSettings(\r\n                {\r\n                  ...accountSettings,\r\n                  account_active: !accountSettings.account_active\r\n                }\r\n              );break;\r\n        }\r\n        \r\n        case 'receive_job_offers':{ \r\n          console.log(\"Setting receive job offers\");\r\n          setAccountSettings({\r\n          ...accountSettings,\r\n          receive_job_offers: !accountSettings.receive_job_offers,\r\n        });break;\r\n        }\r\n        \r\n        case 'receive_sms':{\r\n          console.log('setting receive sms');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_sms: !accountSettings.receive_sms\r\n          });break;\r\n        }\r\n        \r\n        case 'receive_email':{ console.log('setting receive email');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_email: !accountSettings.receive_email\r\n          });break;\r\n        }\r\n    }\r\n    }\r\n\r\n    let UpdateAccountSettings = e => {\r\n      console.log('Updating account settings');\r\n      // store settings in locaStorage\r\n      // save settings in the backend\r\n    }\r\n\r\n    let onLoadAccountSettings = e => {\r\n      console.log('Loading account settings');\r\n      // load settings from backend  -> then\r\n        // save in store\r\n      // if backend load failed the load from store\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <small>\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings{\" \"}\r\n                </small>{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          <div className=\"box-footer\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name='account_active'\r\n                    onChange={e => onToggleSettings(\"account_active\")}\r\n                    checked={accountSettings.account_active}\r\n                  />\r\n\r\n                  <span title={\"Close Account\"}>\r\n                    {\"  \"}\r\n                    <em> Account Status</em>{\" \"}\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_job_offers\"\r\n                    onChange={e => onToggleSettings(\"receive_job_offers\")}\r\n                    checked={accountSettings.receive_job_offers}\r\n                  />\r\n                  <span>Receive Job Offers </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_sms\"\r\n                    onChange={e => onToggleSettings(\"receive_sms\")}\r\n                    checked={accountSettings.receive_sms}\r\n                  />\r\n                  <span>Receive SMS Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_email\"\r\n                    onChange={e => onToggleSettings(\"receive_email\")}\r\n                    checked={accountSettings.receive_email}\r\n                  />\r\n                  <span>Receive Email Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-lg\"\r\n                  name=\"update-account-settings\"\r\n                  onClick={e => UpdateAccountSettings(e)}\r\n                >\r\n                  <strong>\r\n                    <i className=\"fa fa-save\"> </i> Update Account Settings\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nfunction PersonalDetails({user_account}){\r\n    const [user, setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    const onChangeHandler = e => setUser({...user,[e.target.name]:e.target.value});    \r\n\r\n    const onUpdatePersonalDetails = async e => {\r\n        let sent_user = {...user};\r\n        sent_user.uid = user_account_state.user_account.uid;\r\n        sent_user = JSON.stringify(sent_user)\r\n        console.log('Updating User with ', sent_user);\r\n\r\n        await apiRequests.updateUser(sent_user).then(results => {\r\n          if (results.status){\r\n            setUser(results.payload);\r\n            setInline({message:'successfully update personal details'});\r\n          }else{\r\n            setInline({message:'there was an error updating personal details',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n        return true;\r\n    };\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n\r\n      const check_names = () => {\r\n        if (Utils.isEmpty(user.names)) {\r\n          setErrors({ ...errors, names_error: \"names field cannot be empty\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_surname = () => {\r\n        if (Utils.isEmpty(user.surname)) {\r\n          setErrors({\r\n            ...errors,\r\n            surname_error: \"surname field cannot be empty\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_cell = () => {\r\n        if (Utils.isCell(user.cell) === false) {\r\n          setErrors({ ...errors, cell_error: \"cell field is invalid\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_email = () => {\r\n        if (Utils.validateEmail(user.email) === false) {\r\n          setErrors({ ...errors, email_error: \"email address is invalid\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_password = () => {\r\n        if (Utils.isEmpty(user.password)) {\r\n          setErrors({\r\n            ...errors,\r\n            password_error: \"password field cannot be empty\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_password_two = () => {\r\n        if (user.password !== user.repeatpassword) {\r\n          setErrors({\r\n            ...errors,\r\n            repeatpassword_error: \"passwords do not match\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_names() ? (isError = true) : (isError = isError);\r\n        check_surname() ? (isError = true) : (isError = isError);\r\n        check_cell() ? (isError = true) : (isError = isError);\r\n        check_email() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n      };\r\n\r\n      return await do_check();\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          let uid = user_account_state.user_account.uid;\r\n          await apiRequests.fetchUser(uid).then(results => {\r\n            if(results.status){\r\n              setUser(results.payload);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error.message);\r\n          });\r\n\r\n          return true;\r\n        };\r\n\r\n        fetchAPI().then(results => {\r\n          console.log('Fetch API exected')\r\n        });\r\n\r\n\r\n      return () => {\r\n        setUser(extended_user);\r\n        setInline({message:'',message_type:'info'});\r\n        setErrors(extended_user_error);\r\n      };\r\n    }, [user_account_state])\r\n    return (\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <small>\r\n                {\" \"}\r\n                <i className=\"fa fa-user\"> </i> Personal Details{\" \"}\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer col-lg-8\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"names\"\r\n                placeholder=\"Names...\"\r\n                value={user.names}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"surname\"\r\n                placeholder=\"Surname...\"\r\n                value={user.surname}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"cell\"\r\n                placeholder=\"Cell...\"\r\n                value={user.cell}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Email...\"\r\n                value={user.email}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"update\"\r\n                onClick={e => checkErrors(e).then(isError => {\r\n                  isError\r\n                    ? setInline({\r\n                        message: \"there was an error processing form\",\r\n                        message_type: \"error\"\r\n                      })\r\n                    : onUpdatePersonalDetails(e).then(result => {\r\n                      console.log(result);\r\n                    })\r\n                }) }\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cloud-upload\"> </i> Update\r\n                </strong>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"cancel\"\r\n                onClick={e => {\r\n                  setUser(extended_user);\r\n                  setErrors(extended_user_error);\r\n                  setInline({message:'',message_type:'info'});\r\n                }}\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-eraser\"> </i> Reset\r\n                </strong>\r\n              </button>\r\n            </div>\r\n            <div className='form-group'>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default function Account (){\r\n    const [display, setDisplay] = useState(\"personaldetails\");\r\n    const [displayMenu, setMenu] = useState({ menu: false });\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n    \r\n    let onSwitchScreen = (e) => {\r\n        setDisplay(e);\r\n        console.log(display);        \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      console.log(display);\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const { doSendEmailVerification, user_account_state } = context;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Account\r\n                </strong>\r\n              </h3>\r\n              <div className=\"box-tools\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool dropdown-toggle\"\r\n                    onClick={e => showDropdownMenu(e)}\r\n                  >\r\n                    <i className=\"fa fa-bars\"> </i>\r\n                  </button>\r\n                  {displayMenu.menu ? (\r\n                    <ul className=\"dropmenu\">\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"personaldetails\"\r\n                        onClick={e => onSwitchScreen(\"personaldetails\")}\r\n                      >\r\n                        <i className=\"fa fa-user\"> </i> Personal Details\r\n                      </li>\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"verifications\"\r\n                        onClick={e => onSwitchScreen(\"verifications\")}\r\n                      >\r\n                        <i className=\"fa fa-lock\"> </i> Verifications\r\n                      </li>\r\n\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"accountsettings\"\r\n                        onClick={e => onSwitchScreen(\"accountsettings\")}\r\n                      >\r\n                        <i className=\"fa fa-cogs\"> </i> Account Settings\r\n                      </li>\r\n                    </ul>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {display === \"personaldetails\" ? (\r\n              <PersonalDetails user_account={user_account_state.user_account} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {display === \"accountsettings\" ? <AccountSettings /> : \"\"}\r\n            {display === \"verifications\" ? (\r\n              <Verifications\r\n                user_account={user_account_state.user_account}\r\n                doSendEmailVerification={doSendEmailVerification}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","\r\nexport const client_id = 'AULnK8eNTwd5pVu8N4sWE_j4fLA4yrhNyJs82ikVjbRXiySyOzuNBWUn59NHL0-V0kBvkpxZrSIB8Tux';\r\n\r\n","import React,{Fragment,useState,useEffect,useContext,useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\n\r\nimport {\r\n  physical_address_init,\r\n  physical_address_errors_init,\r\n  contact_details_init,\r\n  contact_details_errors_init,\r\n  products_init,\r\n  service_init,\r\n  cart_init,\r\n  coupon_init\r\n} from \"../market-constants\";\r\n\r\n\r\nimport * as APIRequests from '../api-requests';\r\nimport {firebase} from '../../../firebase';\r\nimport { Utils } from '../../../utilities';\r\n\r\nimport * as settings from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {Capitalize} from 'react-lodash';\r\nimport { client_id } from './checkout_constants';\r\n\r\nconst BasketItem = ({item}) => {\r\n  \r\n  const[product,setProduct] = useState(products_init);\r\n  const[service,setService] = useState(service_init);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {   \r\n        if (item.item_type === 'products'){\r\n          await APIRequests.fetchProductAPI(item.id_service_product).then(results => {\r\n              setProduct(results);\r\n          });\r\n        }else{\r\n          await APIRequests.fetchServiceAPI(item.id_service_product).then(results => {\r\n              setService(results);\r\n          });\r\n        }\r\n        return true;\r\n    };\r\n    fetchAPI().then(result => {\r\n      console.log(result);\r\n    })\r\n    return () => {\r\n      setProduct(products_init);\r\n      setService(service_init);\r\n    };\r\n  }, [])\r\n    let description = '';\r\n    product.description\r\n      ? (description = product.description)\r\n      : (description = service.description);\r\n    return (\r\n      <tr>\r\n        <td title={description}>\r\n          {\r\n            (item.item_type === 'products') ?\r\n              <Capitalize string={product.product_name} /> \r\n            : <Capitalize string={service.service_name} />\r\n          }\r\n        </td>\r\n        <td><Capitalize string={item.item_type} /></td>\r\n        <td>{item.quantity}</td>\r\n        <td>R {item.price}.00</td>\r\n        <td>R {item.sub_total}.00</td>\r\n      </tr>\r\n    );\r\n}\r\n\r\nconst ShoppingBasket = () => {\r\n    const[basket,setBasket] = useState([]);\r\n    const[coupons,setCoupons] = useState(coupon_init);\r\n    const[errors,setErrors] = useState({\r\n      coupon_code_error : ''\r\n    });\r\n    const [cart, setCart] = useState(cart_init);\r\n    const[inline,setInline] = useState({message:'',message_type:'info'});\r\n    \r\n    const[display,setDisplay] = useState('shopping-basket');\r\n    const [paidFor,SetPaidFor] = useState(false);\r\n    const [loaded,setLoaded] = useState(false);\r\n    \r\n    let paypalRef = useRef();\r\n\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n    \r\n    \r\n    const applyCouponCode = e => {\r\n        /**\r\n         * compile code information from state\r\n         * send coupon to back end\r\n         * backend server must find out if the code there matches \r\n         * the ones in the database, if it does then apply discounts \r\n         * appropriately\r\n         */\r\n        if (coupons.code){\r\n            let coupon = {...coupons};\r\n            try{\r\n                coupon.uid = user_account_state.user_account.uid;\r\n                coupon = JSON.stringify(coupon);\r\n                APIRequests.applyCouponCode(coupon).then(results => {\r\n                  console.log('coupon code results : ', results);\r\n                  if (results.status){\r\n                    // activate the discount only on the total amount\r\n                    // the app will then send the total amount into\r\n                    // the payment record and then save it back to server\r\n                    \r\n                  }else{\r\n                    setInline({message:results.error.message,message_type:'error'});\r\n                    console.log(results.error.message);\r\n                  }\r\n                });\r\n\r\n              }catch(error){\r\n                console.log(error);\r\n                setInline({message:error.message,message_type:'error'});\r\n              }              \r\n            \r\n        }else{\r\n          setErrors({...errors, coupon_code_error : 'coupon code cannot be empty'});\r\n          setInline({message:'error applying coupon code'});\r\n        }\r\n            \r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n      const apiFetch = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n\r\n        APIRequests.retrieveCart(uid).then(Response => {\r\n          console.log(\"Cart Items :\", Response.cart_items);\r\n          setBasket(Response.cart_items);\r\n          setCart(Response.cart);\r\n        }); \r\n\r\n      };\r\n\r\n      apiFetch().then(results => {\r\n\r\n      });\r\n\r\n      return () => {\r\n        setBasket([]);\r\n      };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      const createPurchaseUnits = async () => {\r\n        let purchase_units = [];\r\n        await basket.forEach(purchase_item => {\r\n                console.log('Purchase Item',purchase_item);\r\n                purchase_units.push({\r\n                  id_service_product: purchase_item.id_service_product,\r\n                  amount: {\r\n                    currency_code: \"USD\",\r\n                    value: purchase_item.price\r\n                  }\r\n                });\r\n              });\r\n\r\n        return purchase_units;\r\n      };\r\n\r\n      createPurchaseUnits().then(purchase_units => {\r\n\r\n              console.log('Purchase Units', purchase_units);\r\n              console.log('PAYPAL',window.paypal);\r\n              window.paypal.Buttons({\r\n                  createOrder: (data, actions) => {\r\n                    return actions.order.create({ purchase_units : purchase_units });\r\n                  },\r\n                  onApprove: async (data, actions) => {\r\n                    const order = await actions.order.capture();\r\n                    SetPaidFor(true);\r\n                    console.log(order);\r\n                  }\r\n              }).render(paypalRef);\r\n\r\n          }) // end create purchase units         \r\n      \r\n      return () => {\r\n        \r\n      };\r\n    }, [loaded])\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-warning\">\r\n            <div className=\"row\">\r\n              <div className=\"box box-footer col-md-8\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-shopping-cart\"> </i> Shopping Items\r\n                  </h3>\r\n\r\n                  <div className=\"box-tools\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-box-tool\"\r\n                      name=\"clear_items\"\r\n                      onClick={e =>\r\n                        APIRequests.deleteCart(\r\n                          firebase.auth.currentUser.uid\r\n                        ).then(results => {\r\n                          console.log(results);\r\n                          if (results.status === true) {\r\n                            setCart(cart_init);\r\n                            setBasket([]);\r\n                            setInline({\r\n                              message: \"cart items cleared\",\r\n                              message_type: \"error\"\r\n                            });\r\n                          }\r\n                        })\r\n                      }\r\n                    >\r\n                      <i className=\"fa fa-eraser\"> </i> Clear Items\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <table className=\"table table-responsive\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Item Name</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Item Type</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Quantity</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Price</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Sub Total</em>\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {basket.length > 0 ? (\r\n                      basket.map((item, index) => {\r\n                        return (<BasketItem item={item} key={index} />: \"\");\r\n                      })\r\n                    ) : (\r\n                      <span className=\"box box-warning\">\r\n                        There are not items in your shopping list\r\n                      </span>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                {inline.message ? (\r\n                  <InlineMessage\r\n                    message={inline.message}\r\n                    message_type={inline.message_type}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <div className=\"box box-footer col-md-4\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Check Out{\" \"}\r\n                  </h3>\r\n                </div>\r\n\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Sub Totals : R {cart.sub_total}0\r\n                  </li>\r\n                  <li className=\"list-group-item\"> Tax : R {cart.tax}.00</li>\r\n                  <li className=\"list-group-item\"> Total : R {cart.total}0</li>\r\n                  <li className=\"list-group-item\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"code\"\r\n                      placeholder=\"Coupon Code...\"\r\n                      value={coupons.code}\r\n                      onChange={e =>\r\n                        setCoupons({\r\n                          ...coupons,\r\n                          [e.target.name]: e.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                    {errors.coupon_code_error ? (\r\n                      <InlineError message={errors.coupon_code_error} />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger margin\"\r\n                      name=\"applycode\"\r\n                      onClick={e => applyCouponCode(e)}\r\n                    >\r\n                      <i className=\"fa fa-money\"> </i> Apply Code\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-warning\"\r\n                      name=\"reset\"\r\n                      onClick={e => {\r\n                        setCoupons(coupon_init);\r\n                        setErrors({ coupon_code_error: \"\" });\r\n                        setInline({ message: \"\", message_type: \"info\" });\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-eraser\"> </i> Reset Code\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <div ref={v => (paypalRef = v)} />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success margin\"\r\n                      name=\"checkout\"\r\n                      title=\"Send Invoice and Pay Via EFT or Make a Deposit\"\r\n                      onClick={e => setDisplay(e)}\r\n                    >\r\n                      <i className=\"fa fa-shopping-bag\"> </i> Checkout (EFT)\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\nconst PhysicalAddress = () => {\r\n    const [physical,setPhysical] = useState(physical_address_init);\r\n    const [errors,setErrors] = useState(physical_address_errors_init);\r\n    const [inline,setInline] = useState({message: '',message_type:'info'});\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n\r\n      const check_deliver_to = () => {\r\n        if(Utils.isEmpty(physical.deliver_to)){\r\n          setErrors({\r\n            ...errors,\r\n            deliver_to_error : 'Deliver to field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_stand = () => {\r\n        if(Utils.isEmpty(physical.stand)){\r\n          setErrors({\r\n            ...errors,\r\n            stand_error : 'stand number field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_street_name = () => {\r\n        if(Utils.isEmpty(physical.street_name)){\r\n          setErrors({\r\n            ...errors,\r\n            street_name_error : 'street name field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_city = () => {\r\n        if(Utils.isEmpty(physical.city)){\r\n          setErrors({\r\n            ...errors,\r\n            city_error : 'city name field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_province = () => {\r\n        if(Utils.isEmpty(physical.province)){\r\n          setErrors({\r\n            ...errors,\r\n            province_error : 'province name field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_country = () => {\r\n        if(Utils.isEmpty(physical.country)){\r\n          setErrors({\r\n            ...errors,\r\n            country_error : 'country field cannot be empty'\r\n          });\r\n          return true;\r\n        };\r\n        return false;\r\n      }\r\n      const check_postal_code = () => {\r\n        if(Utils.isEmpty(physical.postal_code)){\r\n          setErrors({\r\n            ...errors,\r\n            postal_code_error:'postal code error field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const do_check = () => {\r\n          check_deliver_to() ? isError = true : isError = isError;\r\n          check_stand() ? (isError = true) : (isError = isError);\r\n          check_street_name() ? (isError = true) : (isError = isError);\r\n          check_city() ? (isError = true) : (isError = isError);\r\n          check_province() ? (isError = true) : (isError = isError);\r\n          check_country() ? (isError = true) : (isError = isError);\r\n          check_postal_code() ? (isError = true) : (isError = isError);\r\n\r\n          return isError;\r\n      };\r\n\r\n      return await do_check();\r\n\r\n    };\r\n\r\n    const addPhysicalAddress = async e => {\r\n      \r\n      let physical_address = Object.assign({},physical);\r\n      physical_address.uid = user_account_state.user_account.uid;\r\n      physical_address = JSON.stringify(physical_address);\r\n\r\n      await APIRequests.savePhysicalAddress(physical_address).then(response => {\r\n          if (response.status) {\r\n            setPhysical(response.payload);\r\n            setInline({message: \"successfully saved physical address\",message_type: \"info\"\r\n            });\r\n          } else {\r\n            setInline({\r\n              message: response.error.message,\r\n              message_type: \"error\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n      return true;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      // load physical address for this user\r\n      const loadPhysicalAddress = async () => {\r\n\r\n        let seed = user_account_state.user_account.uid;        \r\n        let stateKey = settings.settings.localStorageKey + 'physical-address-' + seed + '-';\r\n\r\n        await APIRequests.fetchPhysicalAddress(seed,stateKey).then(physical => {\r\n          setPhysical(physical);\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n        return true;\r\n      };\r\n\r\n      loadPhysicalAddress().then(result => {\r\n        console.log(result);\r\n      });\r\n\r\n      return () => {\r\n        setPhysical(physical_address_init);\r\n        setErrors(physical_address_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, [])\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3\r\n              className=\"box-title\"\r\n              title={\r\n                \"an address where your service should be rendered or where you are located if a service is virtual\"\r\n              }\r\n            >\r\n              <i className=\"fa fa-map-marker\"> </i> Delivery Address\r\n            </h3>\r\n          </div>\r\n\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"deliver_to\"\r\n                placeholder=\"Deliver to, or a place where the service will be rendered...\"\r\n                value={physical.deliver_to}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.deliver_to_error ? <InlineError message={errors.deliver_to_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"stand\"\r\n                placeholder=\"Stand Number ...\"\r\n                value={physical.stand}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.stand_error ? <InlineError message={errors.stand_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"street_name\"\r\n                placeholder=\"Street Name....\"\r\n                value={physical.street_name}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.street_name_error ? <InlineError message={errors.street_name_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"city\"\r\n                placeholder=\"City...\"\r\n                value={physical.city}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.city_error ? <InlineError message={errors.city_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"province\"\r\n                placeholder=\"Province...\"\r\n                value={physical.province}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.province_error ? <InlineError message={errors.province_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"country\"\r\n                placeholder=\"Country...\"\r\n                value={physical.country}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.country_error ? <InlineError message={errors.country_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"postal_code\"\r\n                placeholder=\"Postal Code...\"\r\n                value={physical.postal_code}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.postal_code_error ? <InlineError message={errors.postal_code_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"save_physical\"\r\n                onClick={e => checkErrors(e).then(isError => {\r\n                  isError ?\r\n                    setInline({message:'there was an error processing form',message_type:'error'})\r\n                  : addPhysicalAddress(e).then(response => {\r\n                    console.log(response);\r\n                  })\r\n                })}\r\n              >\r\n                <i className=\"fa fa-save\"> </i> Add Physical Address\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"reset\"\r\n                onClick={e => {\r\n                  setErrors(physical_address_errors_init);\r\n                  setPhysical(physical_address_init);\r\n                  setInline({message:'',message_type:'info'});\r\n                }}\r\n              >\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </button>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                {\r\n                  inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n                }\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst ContactDetails = () => {\r\n    const [contact,setContact] = useState(contact_details_init);\r\n    const [errors,setErrors] = useState(contact_details_errors_init);\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e  => {\r\n      let isError = false;\r\n\r\n      const check_tel = () => {\r\n        if(Utils.isEmpty(contact.tel) === false){\r\n        if(Utils.isTel(contact.tel) === false){\r\n          setErrors({\r\n            ...errors,\r\n            tel_error : 'tel field is invalid'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      return false;\r\n      }\r\n\r\n      const check_cell = () => {\r\n        if (Utils.isCell(contact.cell === false)) {\r\n          setErrors({\r\n            ...errors,\r\n            cell_error: \"cell field is invalid\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_fax = () => {\r\n        if (Utils.isEmpty(contact.fax) === false){\r\n          if (Utils.isFax(contact.fax === false)) {\r\n            setErrors({\r\n              ...errors,\r\n              fax_error: \"fax field is invalid\"\r\n            });\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_email = () => {\r\n        if (Utils.validateEmail(contact.email) === false) {\r\n          setErrors({\r\n            ...errors,\r\n            email_error: \"email field is invalid\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_website = () => {\r\n        if(Utils.isEmpty(contact.website) === false){\r\n          if(Utils.isUrl(contact.website) === false){\r\n            setErrors({\r\n              ...errors,\r\n              website_error : 'website address is invalid'\r\n            });\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const do_check = () => {\r\n        check_tel() ? isError = true : isError = isError;\r\n        check_cell() ? (isError = true) : (isError = isError);\r\n        check_fax() ? (isError = true) : (isError = isError);\r\n        check_email() ? (isError = true) : (isError = isError);\r\n        check_website() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n      }\r\n\r\n      return await do_check();\r\n    }\r\n\r\n    const onAddContactDetails = async e => {\r\n      let contact_details = Object.assign({},contact);\r\n      contact_details.uid = user_account_state.user_account.uid;\r\n      contact_details = JSON.stringify(contact_details);\r\n\r\n      APIRequests.saveContactDetails(contact_details).then(response => {\r\n          if(response.status){\r\n            setContact(response.payload);\r\n            setInline({message:'successfully saved contact details',message_type:'info'});\r\n          }else{\r\n            setInline({message:response.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n          setInline({message: error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n      const fetchContacts = async () => {\r\n        let seed = user_account_state.user_account.uid;\r\n        let stateKey = settings.settings.localStorageKey + 'contact-details-' + seed + '-';\r\n\r\n        await APIRequests.fetchContactDetails(seed, stateKey).then(response => {\r\n          setContact(response);\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n\r\n        return true;\r\n      };\r\n\r\n      fetchContacts().then(result => console.log(result));\r\n\r\n      return () => {\r\n        setContact(contact_details_init);\r\n        setErrors(contact_details_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, []);\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 className='box-title'>\r\n                        <i className='fa fa-mobile-phone'> </i>{' '}\r\n                        Contact Details\r\n                    </h3>\r\n                </div>\r\n\r\n                <form className='form-group'>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='tel'\r\n                            className='form-control'\r\n                            name='tel'\r\n                            placeholder='Tel...'\r\n                            value={contact.tel}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='tel'\r\n                            className='form-control'\r\n                            name='cell'\r\n                            placeholder='Cell...'\r\n                            value={contact.cell}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='tel'\r\n                            className='form-control'\r\n                            name='fax'\r\n                            placeholder='Fax...'\r\n                            value={contact.fax}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.fax_error ? <InlineError message={errors.fax_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='email'\r\n                            className='form-control'\r\n                            name='email'\r\n                            placeholder='Email...'\r\n                            value={contact.email}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='url'\r\n                            className='form-control'\r\n                            name='website'\r\n                            placeholder='Website Address...'\r\n                            value={contact.website}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-success btn-lg'\r\n                            name='save-contacts'\r\n                            onClick={e => checkErrors(e).then(isError => {\r\n                              isError ?\r\n                                setInline({message: 'error processing contact form'})\r\n                              : onAddContactDetails(e).then(result => {\r\n                                console.log(result);\r\n                              });\r\n                            })}\r\n                        >\r\n                            <i className='fa fa-save'> </i>{' '}\r\n                            Save Contacts\r\n                        </button>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-warning btn-lg'\r\n                            name='reset'\r\n                            onClick={e => {\r\n                              setContact(contact_details_init);\r\n                              setErrors(contact_details_errors_init);\r\n                              setInline({message:'',message_type:'info'});\r\n                            }}\r\n                        >\r\n                            <i className='fa fa-eraser'> </i>{' '}\r\n                            Reset\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        {\r\n                          inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  return(\r\n    <Fragment>\r\n      <div className='box box-body'>\r\n          <div className='box box-header'>\r\n              <h3 className='box-title'></h3>\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\n\r\nconst CheckOut = () => {\r\n    const [display,setDisplay] = useState('physical_address');\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n    const [displayMenu,setMenu] = useState({menu:false});\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool dropdown-toggle\"\r\n                  onClick={e => showDropdownMenu(e)}\r\n                >\r\n                  Check Out{\" \"}\r\n                </button>\r\n                {displayMenu.menu ? (\r\n                  <ul className=\"dropmenu\">\r\n                    <li\r\n                      className=\"btn btn-block droplink\"\r\n                      name=\"physical_address\"\r\n                      onClick={e => setDisplay(\"physical_address\")}\r\n                    >\r\n                      Physical Address\r\n                    </li>\r\n                    <li\r\n                      className=\"btn btn-block droplink\"\r\n                      name=\"contact_details\"\r\n                      onClick={e => setDisplay(\"contact_details\")}\r\n                    >\r\n                      <i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n                    </li>\r\n                    <li\r\n                      className=\"btn btn-block droplink\"\r\n                      name=\"shopping_basket\"\r\n                      onClick={e => setDisplay(\"shopping_basket\")}\r\n                    >\r\n                      <i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n                    </li>\r\n                  </ul>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {display === \"physical_address\" ? <PhysicalAddress /> : \"\"}\r\n          {display === \"contact_details\" ? <ContactDetails /> : \"\"}\r\n          {display === \"shopping_basket\" ? <ShoppingBasket /> : \"\"}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,\r\n  service_init\r\n} from \"../market-constants\";\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport * as apiRequests from '../api-requests';\r\nimport { Utils } from '../../../utilities';\r\nimport { api_products_endpoint } from '../../../constants/routes';\r\n\r\n\r\n\r\nconst Store = () => {\r\n    const [store, setStore] = useState(store_init);\r\n    const [errors, setErrors] = useState(store_errors_init);\r\n    const [inline, setInline] = useState({ message: \"\", message_type: \"info\" });\r\n    const [my_form,setForm] = useState({primary : 'Add Store',reset:'Reset'});\r\n    const { user_account_state } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      \r\n      const check_store_name = () => {\r\n        if(Utils.isEmpty(store.store_name)){\r\n          setErrors({...errors,store_name_error : 'store name field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_description = () => {\r\n        if(Utils.isEmpty(store.description)){\r\n          setErrors({...errors,description_error : 'desciprition field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_company_name = () => {\r\n        if(Utils.isEmpty(store.company_name)){\r\n          setErrors({...errors,company_name_error: 'company name field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_physical_address = () => {\r\n        if(Utils.isEmpty(store.physical_address)){\r\n          setErrors({...errors,physical_address_error : 'physical address field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_tel = () => {\r\n        if(Utils.isTel(store.tel) === false){\r\n          setErrors({...errors,tel_error : 'telephone field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_cell = () => {\r\n        if(Utils.isCell(store.cell) === false){\r\n          setErrors({...errors,cell_error : 'cell number field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_email = () => {\r\n        if(Utils.validateEmail(store.email) === false){\r\n          setErrors({...errors,email_error : 'email field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n       const check_website = () => {\r\n         if(!Utils.isEmpty(store.website)){\r\n         if(Utils.isUrl(store.website) === false){\r\n           setErrors({...errors,website_error:\"website field is invalid\"});\r\n           return true;\r\n         }\r\n         return false;\r\n        }\r\n        return false;         \r\n       }\r\n\r\n       const do_check = () => {\r\n         check_store_name() ? isError = true : isError = isError;\r\n         check_description() ? isError = true : isError = isError;\r\n         check_company_name() ? isError = true : isError = isError;\r\n         check_physical_address() ? isError = true : isError = isError;\r\n         check_tel() ? isError = true : isError = isError;\r\n         check_cell() ? isError = true : isError = isError;\r\n         check_email() ? isError = true : isError = isError;\r\n         check_website() ? isError = true : isError = isError;\r\n\r\n         return isError;\r\n       }\r\n\r\n       return do_check();\r\n    };\r\n\r\n    const addStore = async e => {\r\n        let uid = user_account_state.user_account.uid;\r\n        let client_store = {...store};\r\n        client_store.uid = uid;\r\n        client_store = JSON.stringify(client_store);\r\n        apiRequests.addStore(client_store).then(response => {\r\n          if(response.status){\r\n            setStore(response.payload);\r\n            setInline({message:'successfully updated store',message_type:'info'});\r\n          }else{\r\n            setInline({message:'error adding new store',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n\r\n        return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n      const fetchStore = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n        await apiRequests.fetchStore(uid).then(response => {\r\n          if (response.status) {\r\n            setStore(response.payload);\r\n            setForm({...my_form,primary:'Update Store'});\r\n          } else {\r\n            console.log(response.error.message);\r\n          }\r\n        });\r\n        return true;\r\n      };\r\n\r\n      fetchStore().then(success => {console.log('Store fetched')});\r\n\r\n      return () => {\r\n        setStore(store_init);\r\n        setErrors(store_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, []);\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <i className='fa fa-shopping-basket'> </i>  Store Manager</h3>\r\n\r\n            <div className='box-tools'>\r\n            </div>\r\n          </div>\r\n          <div className='box box-footer'>\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>Store Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"store_name\"\r\n                  value={store.store_name}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.store_name_error ? <InlineError message={errors.store_name_error} /> : '' }\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"description\"\r\n                  value={store.description}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Company Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"company_name\"\r\n                  value={store.company_name}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.company_name_error ? <InlineError message={errors.company_name_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Physical Address</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"physical_address\"\r\n                  value={store.physical_address}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.physical_address_error ? <InlineError message={errors.physical_address_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Tel</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"tel\"\r\n                  value={store.tel}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Cell</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"cell\"\r\n                  value={store.cell}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={store.email}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"website\"\r\n                  value={store.website}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n              </div>\r\n              <div className='form-group'>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-success btn-lg'\r\n                    name='save-company'\r\n                    onClick={e => checkErrors(e).then(isError => {\r\n                      isError ? \r\n                        setInline({message:'error processing form', message_type:'error'})\r\n                      : addStore(e).then(response => {\r\n                        console.log(response);\r\n                      })\r\n                    })}\r\n                  >\r\n                    <i className='fa fa-save'> </i> {' '}\r\n                    {my_form.primary}\r\n                    \r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-warning btn-lg'\r\n                    name='reset'\r\n                    onClick={e => {\r\n                      setInline({message:'',message_type:'info'});\r\n                      setErrors(store_errors_init);\r\n                      setStore(store_init);\r\n                    }}\r\n                  >\r\n                    <i className='fa fa-eraser'> </i> {' '}\r\n                    Reset\r\n                  </button>\r\n              </div>\r\n              <div className='form-group'>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StoreManager = () => {\r\n    const[display,setDisplay] = useState('store');\r\n    const{user_account_state} = useContext(UserAccountContext);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-dashboard\"> </i> Store Manager\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool\"\r\n                name=\"store\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-product-hunt\"> </i> Store Manager\r\n              </button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {display === \"store\" ? <Store /> : \"\"}\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default StoreManager;\r\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,  \r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport { api_products_endpoint } from \"../../../constants/routes\";\r\nimport { extended_user } from \"../../Auth/auth-constants\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ManageProduct = ({ product }) => {\r\n  const [form_product, setProduct] = useState(products_init);\r\n  const [categories, setCategories] = useState([]);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const onUpdate = async e => {\r\n    let product = { ...form_product };\r\n    product = JSON.stringify(product);\r\n    await apiRequests\r\n      .updateProduct(product)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"product successfully updated\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  const onDeleteProduct = async e => {\r\n    let product = { ...form_product };\r\n\r\n    await apiRequests\r\n      .onDeleteProduct(product)\r\n      .then(result => {\r\n        if (result.status) {\r\n          setProduct(result.payload);\r\n          setInline({\r\n            message: \"product successfully deleted\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: result.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let category_type = \"products\";\r\n    apiRequests\r\n      .fetchCategories(category_type)\r\n      .then(results => {\r\n        setCategories(results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setProduct(product);\r\n    return () => {\r\n      setProduct(products_init);\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Product Manager</h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-danger\"\r\n              name=\"delete-product\"\r\n              onClick={e => onDeleteProduct(e)}\r\n            >\r\n              <i className=\"fa fa-eraser\"> </i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <label>Product Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"product_name\"\r\n                value={form_product.product_name}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={form_product.description}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={form_product.price}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"category_id\"\r\n                value={form_product.category_id}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              >\r\n                {categories.map(category => {\r\n                  return (\r\n                    <option value={category.category_id}>\r\n                      {category.sub_category}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg margin\"\r\n                name=\"update-product\"\r\n                onClick={e => onUpdate(e)}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Update Product\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg margin\"\r\n                name=\"update-product\"\r\n                onClick={e => {\r\n                  setProduct(product);\r\n                  setInline({ message: \"\", message_type: \"info\" });\r\n                }}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Undo Changes\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {inline.message ? (\r\n                <InlineMessage\r\n                  message={inline.message}\r\n                  message_type={inline.message_type}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// id = ndb.StringProperty() # id of this request\r\n// product_id = ndb.StringProperty() # the same as the product id in the product table\r\n// client_uid = ndb.StringProperty() # user id of the client who requested the product\r\n// total_requested = ndb.StringProperty(default='1')\r\n// date_requested = ndb.StringProperty()\r\n// products_sent = ndb.BooleanProperty(default=False)\r\n// date_sent = ndb.StringProperty()\r\n\r\n\r\n{/* <td>Client</td>\r\n<td>Requests</td>\r\n<td>Date Requested</td>\r\n<td>Sent</td>\r\n<td>Sent Date</td> */}\r\n\r\nconst RequestItem = ({request}) => {\r\n    const [client,setClient] = useState(extended_user);\r\n    const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n    const fetchUserByID = async uid => {\r\n        await apiRequests.fetchUserByID(uid).then(results => {\r\n            if(results.status){\r\n                setClient(results.payload);\r\n            }else{\r\n                setInline({message:'there was an error fetching client details',message_type:'error'});\r\n                setClient(extended_user);\r\n            }\r\n        }).catch(error => {\r\n            setInline({message:error.message,message_type:'error'});\r\n            setClient(extended_user);\r\n        });\r\n        return true;\r\n    };\r\n\r\n    return(\r\n        <tr>\r\n            <td>{\r\n                fetchUserByID(request.client_uid).then(result => {\r\n                    if (result){\r\n                        return <span title={client.cell}> {client.name} - {client.surname} </span>;\r\n                    }\r\n                })\r\n            }</td>\r\n            <td>{request.total_requested}</td>\r\n            <td>{request.date_requested}</td>\r\n            <td>{request.products_sent ? 'Yes': 'No'}</td>\r\n            <td>{request.date_sent}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProductRequests = ({product}) => {\r\n    const [requests,setRequests] = useState([])\r\n    const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchRequestsAPI = async () => {\r\n            let uid = user_account_state.user_account.uid;\r\n            let id = product.id;\r\n\r\n            apiRequests.fetchProductRequests(uid,id).then(results => {\r\n                if(results.status){\r\n                    setRequests(results.payload);\r\n                    \r\n                }else{\r\n                    setRequests([]);\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n\r\n            return true;\r\n        };\r\n\r\n        fetchRequestsAPI().then(result => {\r\n                console.log(result);\r\n        });\r\n\r\n        return () => {\r\n            setInline({message:'',message_type:'inf'});\r\n            setRequests([]);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> Product Requests</h3>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className='row'>\r\n                \r\n                    <ul className='list-group'>\r\n                        <li className='list-group-item'> Product Name : {product.product_name}</li>\r\n                        <li className='list-group-item'> Product Price : R {product.price}.00</li>\r\n                        <li className='list-group-item'> Description : {product.description}</li>                \r\n                    </ul> \r\n                    <hr></hr> \r\n            </div>\r\n            <div className='row'>\r\n                  <table className='table table-responsive'>\r\n                      <thead>\r\n                          <tr>\r\n                              <td>Client</td>\r\n                              <td>Requests</td>\r\n                              <td>Date Requested</td>\r\n                              <td>Sent</td>\r\n                              <td>Sent Date</td>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {requests.map(request => {\r\n                              return <RequestItem request={request} key={request.id} />;\r\n                          })}\r\n                      </tbody>\r\n                  </table>\r\n            </div>\r\n          </div>\r\n        </div>            \r\n      </Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst ShowProduct = ({ product }) => {\r\n  const [display, setDisplay] = useState(\"details\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-primary\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">{product.product_name}</h3>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Product Name : <a href=\"#\"> {product.product_name} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Product Price : <a href=\"#\"> {product.price} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Active : <a href=\"#\">{product.active ? \"True\" : \"False\"}</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"details\"\r\n                  onClick={e => setDisplay(\"details\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"show-sales\"\r\n                  onClick={e => setDisplay(\"show-sales\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Show Sales\r\n                </button>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"product-requests\"\r\n                  onClick={e => setDisplay(\"product-requests\")}\r\n                >\r\n                  <i className=\"fa fa-inbox\"> </i> Product Requests\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"manage-products\"\r\n                  onClick={e => setDisplay(\"manage-products\")}\r\n                >\r\n                  <i className=\"fa fa-dashboard\"> </i> Manage Product\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            {display === \"details\" ? (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    value={product.description}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"polaroid\">\r\n                  <img src={product.product_art} className=\"pola-image\" />\r\n                </div>\r\n              </Fragment>\r\n            ) : null}\r\n            {display === \"manage-products\" ? (\r\n              <ManageProduct product={product} />\r\n            ) : null}\r\n            {display === 'product-requests' ? <ProductRequests product={product} />  : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ProductItem = ({ product, onOpenProduct }) => {\r\n  return (\r\n    <Fragment>\r\n      <tr>\r\n        <td\r\n          className=\"btn btn-block btn-outline-primary margin\"\r\n          onClick={e => {\r\n            let id = product.id;\r\n            onOpenProduct(id);\r\n          }}\r\n        >\r\n          {product.product_name}\r\n        </td>\r\n        <td>{product.description}</td>\r\n        <td>{product.price}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [product, setProduct] = useState(products_init);\r\n\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const onOpenProduct = id => {\r\n    setProduct(products.find(product => product.id === id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchProductsAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests.fetchUserProductsAPI(uid).then(results => {\r\n          console.log(results);\r\n          setProducts(results);\r\n        }).catch(error => {\r\n          setProducts([]);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchProductsAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setProducts([]);\r\n      setProduct(products_init);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Products</h3>\r\n        </div>\r\n        {product.id ? (\r\n          <ShowProduct product={product} />\r\n        ) : (\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <td>Product Name</td>\r\n                <td>Description</td>\r\n                <td>Price</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => {\r\n                return (\r\n                  <ProductItem\r\n                    onOpenProduct={onOpenProduct}\r\n                    product={product}\r\n                    key={product.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Products;","\r\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,\r\n  service_init\r\n  \r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport { api_products_endpoint } from \"../../../constants/routes\";\r\n\r\nimport { extended_user } from \"../../Auth/auth-constants\";\r\n\r\n\r\nconst ManageService = ({ service }) => {\r\n  const [form_service, setService] = useState(service_init);\r\n  const [categories, setCategories] = useState([]);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const onUpdate = async e => {\r\n    let service = { ...form_service };\r\n    service = JSON.stringify(service);\r\n    await apiRequests\r\n      .updateService(service)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setService(results.payload);\r\n          setInline({\r\n            message: \"service successfully updated\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  const onDeleteService = async e => {\r\n    let service = { ...form_service };\r\n\r\n    await apiRequests\r\n      .onDeleteService(service)\r\n      .then(result => {\r\n        if (result.status) {\r\n          setService(result.payload);\r\n          setInline({\r\n            message: \"service successfully deleted\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: result.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    apiRequests\r\n      .fetchCategories(category_type)\r\n      .then(results => {\r\n        setCategories(results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setService(service);\r\n    return () => {\r\n      setService(service_init);\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Service Manager</h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-danger\"\r\n              name=\"delete-product\"\r\n              onClick={e => onDeleteService(e)}\r\n            >\r\n              <i className=\"fa fa-eraser\"> </i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <label>Service Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"service_name\"\r\n                value={form_service.service_name}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={form_service.description}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={form_service.price}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"category_id\"\r\n                value={form_service.category_id}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              >\r\n                {categories.map(category => {\r\n                  return (\r\n                    <option value={category.category_id}>\r\n                      {category.sub_category}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg margin\"\r\n                name=\"update-service\"\r\n                onClick={e => onUpdate(e)}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Update Service\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg margin\"\r\n                name=\"reset_service\"\r\n                onClick={e => {\r\n                  setService(service);\r\n                  setInline({ message: \"\", message_type: \"info\" });\r\n                }}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Undo Changes\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {inline.message ? (\r\n                <InlineMessage\r\n                  message={inline.message}\r\n                  message_type={inline.message_type}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst RequestItem = ({ request }) => {\r\n  const [client, setClient] = useState(extended_user);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const fetchUserByID = async uid => {\r\n    console.log('Fetching User',uid);\r\n    await apiRequests\r\n      .fetchUserByID(uid)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setClient(results.payload);\r\n        } else {\r\n          setInline({\r\n            message: \"there was an error fetching client details\",\r\n            message_type: \"error\"\r\n          });\r\n          setClient(extended_user);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n        setClient(extended_user);\r\n      });\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {fetchUserByID(request.client_uid).then(result => {\r\n          if (result) {\r\n            return (\r\n              <span title={client.cell}>\r\n                {\" \"}\r\n                {client.name} - {client.surname}{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </td>\r\n      <td>{request.total_requested}</td>\r\n      <td>{request.date_requested}</td>\r\n      <td>{request.products_sent ? \"Yes\" : \"No\"}</td>\r\n      <td>{request.date_sent}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ServiceRequests =({service}) => {\r\n     const [requests, setRequests] = useState([]);\r\n     const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n     const { user_account_state } = useContext(UserAccountContext);\r\n\r\n     useEffect(() => {\r\n       const fetchRequestsAPI = async () => {\r\n         let uid = user_account_state.user_account.uid;\r\n         let id = service.id;\r\n\r\n         apiRequests\r\n           .fetchProductRequests(uid, id)\r\n           .then(results => {\r\n             if (results.status) {\r\n               setRequests(results.payload);\r\n             } else {\r\n               setRequests([]);\r\n             }\r\n           })\r\n           .catch(error => {\r\n             console.log(error.message);\r\n           });\r\n\r\n         return true;\r\n       };\r\n\r\n       fetchRequestsAPI().then(result => {\r\n         console.log(result);\r\n       });\r\n\r\n       return () => {\r\n         setInline({ message: \"\", message_type: \"inf\" });\r\n         setRequests([]);\r\n       };\r\n     }, []);\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> Service Requests</h3>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className=\"row\">\r\n              \r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Service Name : {service.service_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">{\" \"} Service Price : R {service.price}.00</li>\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Description : {service.description}\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <table className=\"table table-responsive\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Client</td>\r\n                      <td>Requests</td>\r\n                      <td>Date Requested</td>\r\n                      <td>Sent</td>\r\n                      <td>Sent Date</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {requests.map(request => {\r\n                      return <RequestItem request={request} key={request.id} />;\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        \r\n      </Fragment>\r\n    );\r\n};\r\n\r\nconst ShowService = ({ service }) => {\r\n  const [display, setDisplay] = useState(\"details\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-primary\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">{service.service_name}</h3>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Service Name : <a href=\"#\"> {service.service_name} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Service Price : <a href=\"#\"> {service.price} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Active : <a href=\"#\">{service.active ? \"True\" : \"False\"}</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"details\"\r\n                  onClick={e => setDisplay(\"details\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"show-sales\"\r\n                  onClick={e => setDisplay(\"show-sales\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Show Sales\r\n                </button>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"service-requests\"\r\n                  onClick={e => setDisplay(\"service-requests\")}\r\n                >\r\n                  <i className=\"fa fa-inbox\"> </i> Service Requests\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"manage-services\"\r\n                  onClick={e => setDisplay(\"manage-services\")}\r\n                >\r\n                  <i className=\"fa fa-dashboard\"> </i> Manage service\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            {display === \"details\" ? (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    value={service.description}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"polaroid\">\r\n                  <img src={service.service_art} className=\"pola-image\" />\r\n                </div>\r\n              </Fragment>\r\n            ) : null}\r\n            {display === \"manage-services\" ? (\r\n              <ManageService service={service} />\r\n            ) : null}\r\n            {display === 'service-requests' ? \r\n              <ServiceRequests service={service}/> : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ServiceItem = ({ service, onOpenService }) => {\r\n  return (\r\n    <tr>\r\n      <td\r\n        className=\"btn btn-block btn-outline-primary margin\"\r\n        onClick={e => {\r\n          let id = service.id;\r\n          onOpenService(id);\r\n        }}\r\n      >\r\n        {service.service_name}\r\n      </td>\r\n      <td>{service.description}</td>\r\n      <td>{service.price}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Services = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [service, setService] = useState(service_init);\r\n\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const onOpenService = id => {\r\n    setService(services.find(service => service.id === id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchServicesAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests\r\n        .fetchUserServicesAPI(uid)\r\n        .then(results => {\r\n          console.log(results);\r\n          setServices(results);\r\n        })\r\n        .catch(error => {\r\n          setServices([]);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchServicesAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setServices([]);\r\n      setService(service_init);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Services</h3>\r\n        </div>\r\n        {service.id ? (\r\n          <ShowService service={service} />\r\n        ) : (\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <td>Service Name</td>\r\n                <td>Description</td>\r\n                <td>Price</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {services.map(service => {\r\n                return (\r\n                  <ServiceItem\r\n                    onOpenService={onOpenService}\r\n                    service={service}\r\n                    key={service.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default Services;","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init\r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport {firebase} from '../../../firebase';\r\nimport {Capitalize} from 'react-lodash';\r\n\r\nconst CreatePayment = () => {\r\n  const [payment, setPayment] = useState(payment_init);\r\n  const [errors, setErrors] = useState(payment_errors_init);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n    const check_amount = () => {\r\n      if (Utils.isMoney(payment.amount) === false) {\r\n        setErrors({ ...errors, amount_error: \"amount field is invalid\" });\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const check_transaction_type = e => {\r\n      if (Utils.isEmpty(payment.transaction_type)) {\r\n        setErrors({\r\n          ...errors,\r\n          transaction_type_error: \"please select transaction type\"\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const do_check = e => {\r\n      check_amount() ? (isError = true) : (isError = isError);\r\n      check_transaction_type() ? (isError = true) : (isError = isError);\r\n\r\n      return isError;\r\n    };\r\n\r\n    return await do_check(e);\r\n  };\r\n\r\n  const createTransaction = async e => {\r\n    let client_transaction = { ...payment };\r\n    client_transaction.uid = user_account_state.user_account.uid;\r\n    client_transaction = JSON.stringify(client_transaction);\r\n    await apiRequests\r\n      .createTransaction(client_transaction)\r\n      .then(Response => {\r\n        if (Response.status) {\r\n          setPayment(Response.payload);\r\n          setInline({\r\n            message: \"successfully created a new transaction\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: Response.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-mastercard\"> </i> Create Transaction\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={payment.amount}\r\n              onChange={e =>\r\n                setPayment({ ...payment, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.amount_error ? (\r\n              <InlineError message={errors.amount_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"transaction_type\"\r\n              value={payment.transaction_type}\r\n              onChange={e =>\r\n                setPayment({ ...payment, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={\"deposit\"}>Deposit</option>\r\n              <option value={\"withdrawal\"}>Withdrawal</option>\r\n            </select>\r\n            {errors.transaction_type_error ? (\r\n              <InlineError message={errors.transaction_type_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"create_transaction\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  isError\r\n                    ? setInline({\r\n                        message: \"there was an error processing form\"\r\n                      })\r\n                    : createTransaction(e).then(result => {\r\n                        console.log(result);\r\n                      });\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-dollar\"> </i> Create Transaction\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst Deposit = ({ transaction }) => {\r\n  const [deposit, setDeposit] = useState({\r\n    uid: '',\r\n    transaction_id : '',\r\n    proof_of_deposit : '',\r\n  });\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      const uploadTask = firebase.storage.ref(`deposits/${user_account_state.user_account.uid}/${transaction.id}/${image.name}`).put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`deposits/${user_account_state.user_account.uid}/${transaction.id}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setDeposit({\r\n                ...deposit,\r\n                proof_of_deposit: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'upload proof of deposit',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeProof = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const ProcessPayment = e => {\r\n      let uid = user_account_state.user_account.uid;\r\n      // rewrite this\r\n      let deposited = {...deposit};\r\n      deposited.uid = uid;\r\n      deposited.transaction_id = transaction.id;\r\n\r\n      apiRequests.processDeposit(deposited).then(result => {\r\n        if(result.status){\r\n          setDeposit(result.payload);\r\n          setInline({message:'successfully sent deposit for processing'});\r\n        }else{\r\n          setInline({message:result.error.message,message_type:'error'});\r\n        }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  };\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-amex\"> </i> Deposit\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button type=\"button\" className=\"btn btn-box-tool\" name=\"eft\">\r\n              <i className=\"fa fa-bank\"> </i> EFT\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-box-tool\" name=\"paypal\">\r\n              <i className=\"fa fa-paypal\"> </i> PayPal / Credit Card\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={transaction.date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Amount </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={transaction.amount}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.processed}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.transaction_type}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Proof of Payment</label>\r\n            <input type=\"file\" className=\"form-control\" name=\"proof\" onChange={e => onChangeProof(e)}  />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-sm\"\r\n              name=\"upload-proof-payment\"\r\n              onClick={e => doUpload(e).then(result => {\r\n                console.log(result)\r\n              })}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-cloud-upload\"> </i> Upload Proof of Payment\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <label>Proof of Payment</label>\r\n              <img\r\n                src={deposit.proof_of_deposit || placeholder}\r\n                className=\"pola-image\"\r\n                width=\"300\"\r\n                height=\"300\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <button\r\n                type='button'\r\n                className='btn btn-success btn-lg'\r\n                name='process-payment'\r\n                onClick={e => ProcessPayment(e)}\r\n              >\r\n                <i className='fa fa-credit-card'> </i>{\" \"}\r\n                Process Payment\r\n\r\n              </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Withdrawal = ({ transaction }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-amex\"> </i> Withdrawal\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={transaction.date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Amount </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={transaction.amount}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.processed}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.transaction_type}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ShowTransaction = ({ transaction }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-info\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Transaction Details</h3>\r\n        </div>\r\n        {transaction.transaction_type === \"withdrawal\" ? (\r\n          <Withdrawal transaction={transaction} />\r\n        ) : (\r\n          <Deposit transaction={transaction} />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst TransactionItem = ({\r\n  transaction,\r\n  OpenTransaction,\r\n  RemoveTransaction\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{transaction.date}</td>\r\n      <td>R {transaction.amount}.00</td>\r\n      <td>{<Capitalize string={transaction.transaction_type} /> }</td>\r\n      <td>{transaction.processed ? \"Yes\" : \"No\"}</td>      \r\n        {\" \"}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm margin\"\r\n          name={transaction.id}\r\n          onClick={e => {\r\n            let id = transaction.id;\r\n            RemoveTransaction(id);\r\n          }}\r\n          title=\"Delete\"\r\n        >\r\n          <i className=\"fa fa-cut\"> </i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          name={transaction.id}\r\n          onClick={e => {\r\n            let id = transaction.id;\r\n            OpenTransaction(id);\r\n          }}\r\n          title=\"Open\"\r\n        >\r\n          <i className=\"fa fa-folder-open\"> </i>\r\n        </button>\r\n      \r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Transactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [transaction, setTransaction] = useState(payment_init);\r\n  const [display, setDisplay] = useState(\"transaction-list\");\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const OpenTransaction = id => {\r\n    let found_transaction = transactions.find(\r\n      transaction => transaction.id === id\r\n    );\r\n    setTransaction(found_transaction);\r\n    //fire a condition to open a transaction\r\n    setDisplay(\"show-transaction\");\r\n  };\r\n\r\n  const RemoveTransaction = id => {\r\n    let uid = user_account_state.user_account.uid;\r\n    apiRequests.removeTransaction(id, uid).then(Response => {\r\n        if (Response.status) {\r\n          setTransactions(Response.payload);\r\n        } else {\r\n          setInline({ message: Response.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTransactionsAPI = async () => {\r\n      const uid = user_account_state.user_account.uid;\r\n      apiRequests\r\n        .fetchTransactions(uid)\r\n        .then(Response => {\r\n          if (Response.status) {\r\n            setTransactions(Response.payload);\r\n            console.log(\"Transactions Fetched\", Response.payload);\r\n          } else {\r\n            console.log(\"Transactions\", Response.error);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Transactions\", error.message);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchTransactionsAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setTransaction(payment_init);\r\n      setTransactions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"box box-body\">\r\n      <div className=\"box box-header\">\r\n        <h3 className=\"box-title\">\r\n          <i className=\"fa fa-cc-diners-club\"> </i> Transactions\r\n        </h3>\r\n\r\n      </div>\r\n\r\n      {display === \"show-transaction\" ? (\r\n        <ShowTransaction transaction={transaction} />\r\n      ) : (\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <td>Date</td>\r\n              <td>Amount</td>\r\n              <td>Transaction Type</td>\r\n              <td>Processed</td>\r\n              <td>Control</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map(transaction => {\r\n              return (\r\n                <TransactionItem\r\n                  RemoveTransaction={RemoveTransaction}\r\n                  OpenTransaction={OpenTransaction}\r\n                  transaction={transaction}\r\n                  key={transaction.id}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Date</td>\r\n              <td>Amount</td>\r\n              <td>Transaction Type</td>\r\n              <td>Processed</td>\r\n              <td>Control</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Payments = () => {\r\n  const [display, setDisplay] = useState(\"transactions\");\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-paypal\"> </i> Payments\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"transactions\"\r\n                    onClick={e => setDisplay(\"transactions\")}\r\n                  >\r\n                    <i className=\"fa fa-cc-amex\"> </i> Transactions\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"create-payment\"\r\n                    onClick={e => setDisplay(\"create-payment\")}\r\n                  >\r\n                    <i className=\"fa fa-cc-amex\"> </i> Create Transaction\r\n                  </li>\r\n                </ul>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display === \"transactions\" ? <Transactions /> : \"\"}\r\n        {display === \"create-payment\" ? <CreatePayment /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default Payments","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\t\r\n\t,    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment,createContext,useReducer,useContext } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport {routes} from '../../constants';\nimport Header from '../Layout/Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Contact from '../Contact/Contact';\n\nimport Login from '../Auth/Login/Login';\nimport Logout from '../Auth/Logout/Logout';\nimport SignUp from \"../Auth/Signup/Signup\";\nimport SideBar from '../Layout/SideBar/SideBar';\nimport Footer from '../Layout/Footer/Footer';\nimport Forget from '../Auth/Forget/Forget';\nimport Market from '../Market/Market';\nimport Market_Products from '../Market/Products/Products';\nimport Market_Services from '../Market/Service/Services';\n\n\nimport MyMarket from '../Market/MyMarket';\n\n\n\nimport UserAccountContextProvider from '../../context/UserAccount/userAccountContext';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Blog from '../Blog/Blog';\nimport Account from '../Account/Account';\n\nimport CheckOut from '../Market/CheckOut/CheckOut';\nimport StoreManager from '../Market/StoreManager/StoreManager';\nimport Products from '../Market/StoreManager/ProductsManager';\nimport Services from '../Market/StoreManager/ServiceManager';\n\nimport Payments from '../Market/Transactions/Transactions';\n\n\nexport default function App () {\n\t\n\t\n\treturn (\n    <UserAccountContextProvider>\n      \n      <Fragment>\n        <Router>\n          {/* Header  Component*/}\n          <Header />\n          {/* Sidebar Component */}\n          <SideBar />\n          {/* Body and Main Page Routes */}\n          <div className=\"content-wrapper\">\n            <section className=\"content-header\">\n              <section className=\"content\">\n                <Route exact path={routes.home_page} component={Home} />\n                <Route exact path={routes.about_page} component={About} />\n                <Route exact path={routes.contact_page} component={Contact} />\n                <Route path={routes.login_page} component={Login} />\n                <Route path={routes.logout_page} component={Logout} />\n                <Route path={routes.signup_page} component={SignUp} />\n                <Route\n                  path={routes.forget_password_page}\n                  component={Forget}\n                />\n                <Route path={routes.market_page} component={Market} />\n                <Route path={routes.market_products_page} component={Market_Products} />\n                <Route path={routes.market_services_page} component={Market_Services} />\n\n\n                <Route path={routes.blog_page} component={Blog} />\n                <Route path={routes.dashboard_page} component={Dashboard} />\n                <Route exact path={routes.admin_page} component={Account} />\n\n                <Route exact path={routes.check_out_page} component={CheckOut} />\n                <Route exact path={routes.manage_my_shop} component={StoreManager} />\n                <Route exact path={routes.store_manager_products} component={Products} />\n                <Route exact path={routes.store_manager_services} component={Services} />\n                <Route exact path={routes.transactions_page} component={Payments} />\n                <Route\n                  path={routes.my_market_products}\n                  component={MyMarket}\n                />\n              </section>\n            </section>\n          </div>\n          {/* Footer Component  */}\n          <Footer />\n        </Router>\n      </Fragment>\n    </UserAccountContextProvider>\n  );\n};\n"],"sourceRoot":""}