{"version":3,"sources":["constants/routes.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Contact/Contact.jsx","components/Profile/Profile.jsx","components/Auth/Signup/Signup.jsx","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","actions/userAccountActions/index.js","components/Forms/InlineError.jsx","components/Forms/InlineMessage.jsx","components/Auth/Login/Login.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/Market.jsx","serviceWorker.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","reducers/profileReducers/userContactDetailsReducer.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","actions/walletActions/index.js","utilities/index.js","reducers/profileReducers/accountDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","profile_page","blog_page","market_page","admin_page","dashboard_page","SideBarMenuAuth","react_default","a","createElement","className","react_router_dom","to","routes","title","SideBarMenuNonAuth","MenuItems","props","_useState","useState","user","_useState2","Object","slicedToArray","isLoggedIn","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","onClick","SidebarCollapse","Home","About","Contact","onSubmit","e","preventDefault","console","log","SubmitHandler","type","name","placeholder","Profile","value","Signup","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","contact_details_type","user_contact_id","cell","email","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","names","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","asyncToGenerator","regenerator_default","mark","_callee","username","result","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","USER_ACCOUNT_ACTIONS","InlineError","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","message","Component","InlineMessage","message_type","Login","showSignUp","prevState","showsignIn","setState","signupText","showsideScreen","bind","assertThisInitialized","_this2","Login_SignInForm","user_errors","form_response","response_code","Initial_State","SignInForm","_this3","onChangeHandler","defineProperty","target","event","_this3$state","onLogin","_this4","_this$props","onChange","email_error","InlineError_InlineError","password_error","Forms_InlineMessage","connect","profile","account_details","user_account_errors","dispatch","onUserSignedIN","doDispatchUserSignedIn","onUserSignedOut","doDispatchUserSignedOut","payload","code","doDispatchLoginUser","onLogout","doDispatchLogOutUser","onSignUp","doDispatchCreateUser","onChangePassword","doDispatchChangePassword","SideBar","src","id","alt","onSearch","method","Footer","href","Forget","sendRecoveryEmail","Market","Boolean","window","location","hostname","match","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","mem_store","push","saveMemStore","onSaving","noError","stringify","setItem","date","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","ContactDetailsInitState","user_contacts","contact_details_errors","cell_error","website_error","facebook_error","twitter_error","userContactDetailsReducer","actions","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","USER_BANKING_ACTIONS","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","document","documentURI","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","displayName_error","photoURL_error","phoneNumber_error","userAccountReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","names_error","surname_error","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","contact_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","wallet","inline_message","middleware","applyMiddleware","compose","thunk","store","createStore","ReactDOM","render","es","Header_Header","react_router","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e170c434.chunk.js","sourcesContent":["\r\n\r\nexport const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const profile_page = '/profile';\r\n\r\nexport const blog_page = '/blog';\r\nexport const market_page = '/market';\r\n\r\nexport const admin_page = '/admin/user/'; // + userid\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\n\r\nconst SideBarMenuAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> <strong>Home</strong></Link></li>\r\n\t\t\t<li><Link to={routes.about_page} title=\"About\"><i className=\"fa fa-info\"></i> <strong>About</strong></Link></li>\r\n\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> <strong>Contact</strong></Link></li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-user-md\"></i> <span>Client Area</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i className=\"fa fa-angle-left pull-right\"></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.admin_page} title=\"manage your Account\"><i className=\"fa fa-sign-in\"> </i> <strong> Account</strong> </Link> </li>                    \r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t\t<li><Link to={routes.blog_page} title=\"Bulk Messaging &amp; Contact Management Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t<li><Link to={routes.dashboard_page} title=\"Dashboard\"><i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong></Link></li>\r\n\t\t</ul>        \r\n\t)\r\n}\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n                    <li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t) \r\n}\r\n\r\nexport default function MenuItems (props) {\r\n\tconst [user, setLoggedIn] = useState({user:''})\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tuser.isLoggedIn ? <SideBarMenuAuth /> : <SideBarMenuNonAuth />\r\n\t\t\t}\r\n        \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nMenuItems.propTypes = {\r\n\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\n\r\n\r\nexport default function Home (){\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box-header'>\r\n\t\t\t\t\t<h3 className='box-title'><strong> <i className='fa fa-home'> </i> Weq Trading </strong> </h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\r\n            <button className='btn btn-box-tool'><Link to={routes.market_page}><strong> <i className='fa fa-shopping-bag'> </i> Market Place </strong> </Link></button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n            \r\n\t\t\t</div>  \r\n\t\t</Fragment>    \r\n\t)\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n    <Fragment>\r\n        <div className='box box-body'>\r\n            <div className='box-header'>\r\n                <h3 className='box-title'>About</h3>\r\n            </div>            \r\n                                \r\n        </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\n\r\nexport default function Contact() {\r\n\r\n\r\n    let ResetDefault = e => {\r\n        if (e.target.value === 'Message...') {\r\n            e.target.value = ''\r\n        }\r\n    }\r\n\r\n    let SubmitHandler = e => {\r\n        e.preventDefault();\r\n        console.log('Submitting Contact Form')\r\n    }\r\n    return (\r\n        <Fragment>            \r\n            <div className='box box-body'>\r\n\r\n                <div className='box-header'>\r\n                    <h3 className='box-title'>Contact</h3>\r\n                </div>\r\n\r\n\r\n                <div className='box-footer'>\r\n                    <form className='form-horizontal' onSubmit={e => SubmitHandler(e)}>\r\n                        <div className='form-group'>\r\n\r\n                            <input\r\n                                type='text'\r\n                                className='form-control' \r\n                                name='names' \r\n                                placeholder='Names' \r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n\r\n                            <input \r\n                                type='text' \r\n                                className='form-control' \r\n                                name='surname'\r\n                                placeholder='Surname' \r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                name='cell'\r\n                                placeholder='Cell'\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <input \r\n                                type='email'\r\n                                className='form-control'\r\n                                name='email'\r\n                                placeholder='Email'\r\n                            />                        \r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                name='subject'\r\n                                placeholder='Subject'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n\r\n                            <textarea\r\n                                name='message'\r\n                                placeholder='Message...'\r\n                                className='form-control'\r\n                            ></textarea>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-success btn-block btn-lg'><strong> Send Message</strong></button>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}","import React, { Fragment } from 'react'\r\nimport './Profile.css';\r\n\r\nexport default function Profile (){\r\n  return (\r\n      <Fragment>\r\n          <div className='Profile'>\r\n                <h3>Profile</h3>\r\n\r\n                <div className='box-footer'>\r\n\r\n                  <form className='form-horizontal'>\r\n                    <div className='form-group'>\r\n                      <label>Names </label>\r\n                      <input type='text' className='form-control' name='names' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Surname </label>\r\n                      <input type='text' className='form-control' name='surname' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Cell </label>\r\n                      <input type='text' className='form-control' name='cell' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Email </label>\r\n                      <input type='email' className='form-control' name='email' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <button className='btn btn-success btn-lg' name='update'><strong>Update</strong></button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n          </div>\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\n\r\nexport default function Signup() {\r\n    return (\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 className='box-title'>Signup</h3>   \r\n                </div>\r\n                \r\n                 <form className='form-horizontal' >\r\n                    <div className='form-group'>\r\n                        <label>First Name</label>\r\n                        <input type='text' className='form-control' name='name' value={''}/>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Surname</label>\r\n                        <input type='text' className='form-control' name='surname' value={''}/>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Cell</label>\r\n                        <input type='text' className='form-control' name='cell' value={''}/>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Email</label>\r\n                        <input type='email' className='form-control' name='email' value={''}/>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Password</label>\r\n                        <input type='text' className='form-control' name='password' value={''}/>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <button type='submit' className='btn btn-success btn-lg' name='singup'><strong> Subscribe</strong></button>\r\n                    </div>\r\n                 </form>\r\n                 \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport {auth,\r\n\tfirebase\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","\r\nimport React, { Component } from 'react'\r\n\r\nexport default class InlineError extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {message : this.props.message}\r\n    }\r\n  render() {\r\n    return (\r\n            <div className={'box box-danger'}>\r\n                <div className={'box box-header pull-right'}>\r\n                    <h3 className={'box-title'}><em><small>{this.state.message}</small></em></h3>\r\n                </div>\r\n            </div>\r\n            )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InlineMessage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {message : this.props.message,\r\n\t\t\tmessage_type : this.props.message_type};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box-info'}>\r\n\t\t\t\t<div className={'box box-header'}>\r\n\t\t\t\t\t<h3 className={'box-title btn-outline-info'}><small><strong> <i className={'fa fa-server'}> </i> Response </strong></small></h3>\r\n\t\t\t\t\t<div className={'box-tools pull-left'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={'box-title btn-outline-info btn-lg'}\r\n\t\t\t\t\t\t><em><i className='fa fa-check-circle'> </i> <small> {this.state.message} </small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nInlineMessage.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tmessage_type : PropTypes.string\r\n};\r\n\r\nexport default InlineMessage;","import React, { Component } from 'react';\r\n\r\n\r\nimport Signup  from '../Signup/Signup';\r\nimport * as routes from '../../../constants/routes';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    doDispatchChangePassword,\r\n    doDispatchCreateUser,\r\n    doDispatchLoginUser, doDispatchLogOutUser,\r\n    doDispatchUserSignedIn,\r\n    doDispatchUserSignedOut\r\n} from \"../../../actions/userAccountActions\";\r\nimport { connect } from \"react-redux\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showsignIn: true,\r\n            signupText: 'SignUp',\r\n            showsideScreen: true,\r\n\r\n        };\r\n\r\n        this.showSignUp = this.showSignUp.bind(this);\r\n\r\n    };\r\n\r\n    showSignUp = (e) => {\r\n\r\n        let prevState = this.state.showsignIn;\r\n        switch (prevState) {\r\n            case true: this.setState({\r\n                showsignIn: !prevState,\r\n                signupText: 'Login',\r\n            }); break;\r\n            case false: this.setState({\r\n                showsignIn: !prevState,\r\n                signupText: 'Sign-Up',\r\n            }); break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"sign-in\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"box box-header\">\r\n                            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-sign-in\"> </i> Login </strong></h3>\r\n                        </div>\r\n                        <button className=\"btn btn-success btn-lg\"\r\n                            onClick={e => this.showSignUp(e)}>\r\n                            <strong> <i className=\"fa fa-arrow-right\"> </i> {this.state.signupText}</strong>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        {\r\n                            (this.state.showsignIn) ?\r\n                                <div>\r\n                                    <SignInForm\r\n                                        user={this.props.user}\r\n                                        user_errors={this.props.user_errors}\r\n                                        form_response={this.props.form_response}\r\n                                        response_code={this.props.response_code}\r\n                                    />\r\n                                </div>\r\n                                : <Signup />\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst Initial_State = {\r\n    email: '',\r\n    password: ''\r\n};\r\n\r\nclass SignInForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...Initial_State };\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            email,\r\n            password,\r\n        } = this.state;\r\n\r\n\r\n        // TODO- dispatch signin action here\r\n\r\n        this.props.onLogin(email, password);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            user,\r\n            user_errors,\r\n            form_response,\r\n            response_code\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"box box-primary col-lg-6\">\r\n\r\n                <div className=\"box box-header\">\r\n                    <h3 className=\"box-title\">\r\n                        <strong> <i className=\"fa fa-sign-in\"> </i> SignIn</strong>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className={'box-body'}>\r\n                    <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\"\r\n                                name={'email'}\r\n                                value={user.email}\r\n                                onChange={e => this.onChangeHandler(e)}\r\n                                type=\"text\"\r\n                                placeholder=\"Email Address\"\r\n                            />\r\n                            {(user_errors.email_error) ? <InlineError message={user_errors.email_error} /> : ''}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\"\r\n                                name={'password'}\r\n                                value={user.password}\r\n                                onChange={e => this.onChangeHandler(e)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                            {(user_errors.password_error) ? <InlineError message={user_errors.password_error} /> : ''}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                // disabled={isInvalid}\r\n                                type=\"submit\"\r\n                                className=\"btn btn-success btn-lg\"\r\n                            >\r\n                                <strong> <i className=\"fa fa-sign-in\"> </i> Sign In</strong>\r\n                            </button>\r\n                            <button\r\n                                //disabled={isInvalid}\r\n                                type=\"signup\"\r\n                                className=\"btn btn-primary btn-lg\"\r\n                            >\r\n                                <strong> <i className=\"fa fa-sign-out\"> </i> Sign Up</strong>\r\n                            </button>\r\n                        </div>\r\n                        <div className={'form-group'}>\r\n                            {(form_response) ? <InlineMessage message={form_response} /> : ''}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    SignInForm,\r\n};\r\n\r\nLogin.propTypes = {\r\n    user: PropTypes.shape({\r\n        uid: PropTypes.string.isRequired,\r\n        displayName: PropTypes.string,\r\n        photoURL: PropTypes.string,\r\n        email: PropTypes.string,\r\n        password: PropTypes.string,\r\n        emailVerified: PropTypes.bool,\r\n        phoneNumber: PropTypes.string,\r\n        isAnonymous: PropTypes.bool,\r\n        providerId: PropTypes.string,\r\n\r\n        signing_in: PropTypes.bool.isRequired,\r\n        user_signed_in: PropTypes.bool.isRequired,\r\n        user_deleted: PropTypes.bool.isRequired,\r\n        password_changed: PropTypes.bool.isRequired,\r\n        email_verification_sent: PropTypes.bool.isRequired,\r\n        onetime_pin_sent: PropTypes.bool.isRequired,\r\n\r\n    }),\r\n    user_errors: PropTypes.shape({\r\n        displayName_error: PropTypes.string,\r\n        photoURL_error: PropTypes.string,\r\n        email_error: PropTypes.string,\r\n        password_error: PropTypes.string,\r\n        phoneNumber_error: PropTypes.string\r\n    }),\r\n    form_response: PropTypes.string,\r\n    response_code: PropTypes.number\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.profile.account_details.user_account,\r\n        form_response: state.profile.account_details.form_response,\r\n        response_code: state.profile.account_details.response_code,\r\n        user_errors: state.profile.account_details.user_account_errors,\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onUserSignedIN: (user) => {\r\n            return dispatch(doDispatchUserSignedIn(user))\r\n        },\r\n        onUserSignedOut: (user) => {\r\n            return dispatch(doDispatchUserSignedOut(user))\r\n        },\r\n        onLogin: (username, password) => {\r\n            return dispatch(doDispatchLoginUser(username, password))\r\n        },\r\n        onLogout: (user) => {\r\n            return dispatch(doDispatchLogOutUser(user))\r\n        },\r\n        onSignUp: (username, password) => {\r\n            return dispatch(doDispatchCreateUser(username, password))\r\n        },\r\n        onChangePassword: (user) => {\r\n            return dispatch(doDispatchChangePassword(user))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function SideBar (){\r\n\r\n  let onSearch = e => {\r\n      e.preventDefault();\r\n      console.log('Searching site...');\r\n      // Remember to clear search field      \r\n  }\r\n\r\n  return (\r\n    <Fragment>    \r\n      <aside className=\"main-sidebar\">      \r\n        <section className=\"sidebar\"> \r\n                 \r\n          <div className=\"user-panel\">\r\n              <div className=\"pull-left image\">\r\n                  <img src=\"/static/dist/img/sms.jpeg\" id=\"strSideUserImageID\" className=\"img-circle\" alt=\"Weq-Trading\" />\r\n              </div>\r\n                <div className=\"pull-left info\">\r\n                  <p id=\"strSideUserNameID\"><Link to={routes.login_page}>Please Login</Link></p>\r\n                </div>\r\n              </div>\r\n\r\n              <form onSubmit={e => onSearch(e)} method=\"get\" className=\"sidebar-form\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"text\" name=\"q\" className=\"form-control\" placeholder=\"Search...\" />\r\n                    <span className=\"input-group-btn\">\r\n                      <button type=\"submit\" name=\"search\" id=\"search-btn\" className=\"btn btn-flat\"><i className=\"fa fa-search\"></i></button>\r\n                    </span>\r\n                  </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                      <MenuItems />\r\n              </ul>\r\n        </section>      \r\n      </aside>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\n\r\nexport default function Forget(){\r\n\r\n\r\n  function sendRecoveryEmail  (e) {\r\n      e.preventDefault();\r\n      console.log('Sending Recovery Email');\r\n      \r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='box box-body'>\r\n        <div className='box-header'>\r\n          <h3 className='box-title'> <strong> <i className='fa fa-key'> </i> Forget Password</strong> </h3>        \r\n        </div>\r\n\r\n        <div className='box box-footer'>\r\n\r\n          <form className='form-horizontal' onSubmit={e => sendRecoveryEmail(e)}>\r\n              <div className='form-group'>\r\n                <span>Enter your username so what we can send you a password recovery message</span>\r\n              </div>\r\n              <div className='form-group'>                                    \r\n                  <input type='email' className='form-control' name='username'/>\r\n              </div>\r\n              <div className='form-group'>\r\n                  <button type='submit' className='btn btn-success btn-lg' onClick={e => sendRecoveryEmail(e)}><strong> <i className='fa fa-unlock-alt'> </i> Send Recovery Email</strong></button>\r\n                  <button type='reset' className='btn btn-warning btn-lg'><strong> <i className='fa fa-eraser'> </i> Cancel </strong></button>\r\n              </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {Fragment, Component } from 'react'\r\n\r\nexport default class Market extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className='box box-body'>\r\n\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t<h3 className='box-title'><strong> <i className='fa fa-shopping-basket'> </i> Market Place </strong> </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Fragment>\r\n                \r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import moment from 'moment';\r\nclass Utilities {\r\n\r\n    constructor(today, url) {\r\n        this.today = today;\r\n        this.url = url;\r\n    }\r\n\r\n    isUrl = (url) => {\r\n        let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?' + // port\r\n            '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\r\n            '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return pattern.test(url);\r\n    };\r\n\r\n    isEmpty = (a) => {\r\n        return a !== undefined ? a === null || a === '' : true;\r\n    };\r\n\r\n    isProvince = (province) => {\r\n        let province_list = ['limpopo', 'mpumalanga', 'north west', 'gauteng', 'kwazulu natal', 'eastern cape', 'western cape', 'northern cape', 'orange free state'];\r\n        for (let i = 0; i < province_list.length; i++) {\r\n            if (province === province_list[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    validateEmail = (email) => {\r\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    validatePassword = (password) => {\r\n        let re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n        return re.test(password);\r\n    };\r\n\r\n    validateUsername = (username) => {\r\n        let re = /^\\w+$/;\r\n        return re.test(username);\r\n    };\r\n\r\n    isNumber = (n) => {\r\n        return n !== undefined ? typeof (n) !== \"boolean\" && !isNaN(n) : false;\r\n    };\r\n\r\n    isCell = (n) => {\r\n        return this.isNumber(n) ? ((n.length === 10) || (n.length === 11) || (n.length === 12) || (n.length === 13)) : false;\r\n    };\r\n\r\n    isTel = (n) => {\r\n        return n !== undefined ? this.isCell(n) : false;\r\n    };\r\n\r\n    isFax = (n) => {\r\n        return n !== undefined ? this.isCell(n) : false;\r\n    };\r\n\r\n    getAge = (dateString) => {\r\n        let dates = dateString.split(\"-\");\r\n        let d = new Date();\r\n\r\n        let userday = dates[2];\r\n        let usermonth = dates[1];\r\n        let useryear = dates[0];\r\n\r\n        let curday = d.getDate();\r\n        let curmonth = d.getMonth() + 1;\r\n        let curyear = d.getFullYear();\r\n\r\n        let age = curyear - useryear;\r\n\r\n        if ((curmonth < usermonth) || ((curmonth === usermonth) && curday < userday)) {\r\n            age--;\r\n        }\r\n        return age;\r\n    };\r\n    isIDNumber = (n) => {\r\n        return n !== undefined ? (this.isNumber(n)) && (n.length === 13) : true;\r\n    };\r\n    numDaysBetweenDates = (firstDate, secondDate) => {\r\n\r\n        let f_dates = firstDate.split(\"-\");\r\n        let s_dates = secondDate.split(\"-\");\r\n\r\n        // let d = new Date();\r\n\r\n        let f_day = parseInt(f_dates[2]);\r\n        let f_month = parseInt(f_dates[1]);\r\n        let f_year = parseInt(f_dates[0]);\r\n\r\n        let s_day = parseInt(s_dates[2]);\r\n        let s_month = parseInt(s_dates[1]);\r\n        let s_year = parseInt(s_dates[0]);\r\n\r\n        // TODO- Please revise the number of days algorithm\r\n        // let years = f_year - s_year;\r\n        // let months = f_month - s_month;\r\n        // let days = f_day - s_day;\r\n\r\n        let a = moment([f_year, f_month, f_day]);\r\n        let b = moment([s_year, s_month, s_day]);\r\n\r\n        return a.diff(b, 'days') + 1;\r\n\r\n        //\r\n        // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n        //     return days\r\n        // }else if ((years === 0) && (months > 0)){\r\n        //     return (days + (months * 30))\r\n        // }else{\r\n        //     return 365\r\n        // }\r\n    };\r\n\r\n    countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n        try {\r\n            return (stamp_1 - stamp_2)\r\n        } catch (e) {\r\n            return (parseInt(stamp_1) - parseInt(stamp_2))\r\n        }\r\n    };\r\n\r\n    throttle = (func, limit) => {\r\n        let lastFunc;\r\n        let lastRan;\r\n        return function () {\r\n            const context = this;\r\n            const args = arguments;\r\n            if (!lastRan) {\r\n                func.apply(context, args);\r\n                lastRan = Date.now();\r\n            } else {\r\n                clearTimeout(lastFunc);\r\n                lastFunc = setTimeout(function () {\r\n                    if (Date.now() - lastRan >= limit) {\r\n                        func.apply(context, args);\r\n                        lastRan = Date.now();\r\n                    }\r\n                }, limit - (Date.now() - lastRan))\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    debounce = (func, delay) => {\r\n        let inDebounce;\r\n        return function () {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(inDebounce);\r\n            inDebounce = setTimeout(() => func.apply(context, args), delay)\r\n        }\r\n    };\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nlet UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t// <App />\r\n\t,\r\n    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport {routes} from '../../constants';\n\n\nimport Header from '../Layout/Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Contact from '../Contact/Contact';\nimport Profile from '../Profile/Profile';\nimport Login from '../Auth/Login/Login';\nimport Signup from '../Auth/Signup/Signup';\nimport SideBar from '../Layout/SideBar/SideBar';\nimport Footer from '../Layout/Footer/Footer';\nimport Forget from '../Auth/Forget/Forget';\nimport Market from '../Market/Market';\n\nexport default function App () {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Router>\n\t\t\t\t{/* Header  Component*/}\n\t\t\t\t<Header/>\n\t\t\t\t{/* Sidebar Component */}\n\t\t\t\t<SideBar />\n\t\t\t\t{/* Body and Main Page Routes */}\n\t\t\t\t<div className=\"content-wrapper\">            \n\t\t\t\t\t<section className=\"content-header\">              \n\t\t\t\t\t\t<section className=\"content\">\n\t\t\t\t\t\t\t<Route exact path={routes.home_page} component={Home} />\n\t\t\t\t\t\t\t<Route exact path={routes.about_page} component={About} />\n\t\t\t\t\t\t\t<Route exact path={routes.contact_page} component={Contact} />\n\t\t\t\t\t\t\t<Route path={routes.profile_page} component={Profile} />\n\t\t\t\t\t\t\t<Route path ={routes.login_page} component={Login} />\n\t\t\t\t\t\t\t<Route path={routes.signup_page} component={Signup} />\n\t\t\t\t\t\t\t<Route path={routes.forget_password_page} component={Forget} />\n\t\t\t\t\t\t\t<Route path={routes.market_page} component={Market} />\n\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t{/* Footer Component  */}\n\t\t\t\t<Footer/>  \n\t\t\t</Router>       \n\t\t</Fragment>\n\t)\n};\n"],"sourceRoot":""}