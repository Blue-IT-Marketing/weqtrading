{"version":3,"sources":["constants/routes.js","constants/program_constants.js","firebase/firebase.js","types/profileTypes.js","sms/index.js","firebase/auth.js","encryption/index.js","localstorage/index.js","utilities/index.js","reducers/profileReducers/accountDetailsReducer.js","context/UserAccount/actions.js","context/UserAccount/userAccountContext.js","components/Auth/auth-constants.js","components/Auth/auth-api.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Forms/InlineError.jsx","components/Contact/contact-constants.js","components/Contact/ThisContactForm.jsx","components/Contact/ContactDetails.jsx","components/Contact/Contact.jsx","components/Input/Input.js","components/Forms/InlineMessage.jsx","components/Auth/Login/Login.jsx","components/Auth/Logout/Logout.jsx","components/Auth/Signup/Signup.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/market-constants.js","components/Market/api-requests.js","components/Market/Products/Products.jsx","components/Market/Service/Services.jsx","components/Market/Market.jsx","components/Market/MyMarket.jsx","components/Chat/chat-constants.js","context/socketsio/index.js","context/blog/index.js","components/Dashboard/dashboard-api.js","components/Market/CheckOut/checkout_constants.js","components/Dashboard/Dashboard.jsx","components/Blog/Blog.jsx","components/Chat/Chat.jsx","components/SMS/sms-constants.js","components/SMS/sms-api.js","components/SMS/SMS.jsx","components/Account/Account.jsx","components/Market/CheckOut/CheckOut.jsx","components/Market/StoreManager/StoreManager.jsx","components/Market/StoreManager/ProductsManager.jsx","components/Market/StoreManager/ServiceManager.jsx","components/Market/Transactions/Transactions.jsx","serviceWorker.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","account_page","blog_page","chat_page","sms_page","sms_account","sms_settings","sms_contacts","sms_messages","email_account","email_settings","send_email","inbox_email","email_sent","email_drafts","market_page","market_products_page","market_services_page","check_out_page","admin_page","shopping_basket_page","my_market_products","manage_my_shop","store_manager_products","store_manager_services","transactions_page","dashboard_page","api_products_endpoint","api_services_endpoint","api_categories_endpoint","api_physical_endpoint","api_contact_endpoint","api_cart_endpoint","api_coupons_endpoint","api_dashboard_endpoint","api_user_endpoint","api_store_endpoint","api_transactions_endpoint","api_paypal_checkout_webhook","api_sms_endpoint","app_name","app_long_name","app_descrition","cell","email","fax","localStorageKey","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","auth","storage","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","email_verification_sent","onetime_pin_sent","account_details_type_error","displayName_error","photoURL_error","email_error","password_error","phoneNumber_error","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","result","user","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","myStore","myLocalStore","_this","classCallCheck","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","state","mem_store","push","value","saveMemStore","onSaving","noError","setState","stringify","setItem","date","message","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","Utils","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isMoney","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","isMobile","window","innerWidth","innerHeight","document","documentURI","UserAccountInitState","user_account_errors","form_response","response_code","loginUser","user_account_state","code","dir","logOutUser","SendEmailVerification","UserAccountContext","createContext","UserAccountContextProvider","doLogin","doLogout","onChange","assign","componentWillMount","onAuthStateChanged","react_default","createElement","Provider","props","children","Component","user_init","user_errors_init","username_error","inline_init","message_type","extended_user","names","surname","repeatpassword","is_admin","extended_user_error","names_error","surname_error","cell_error","repeatpassword_error","addUser","sent_user","results","payload","axios","post","routes","data","updateUser","put","fetchUser","get","concat","user_details","SideBarMenuAuth","_useState","useState","_useState2","slicedToArray","setUser","useContext","closeStoreMenu","thisNode","className","removeEventListener","openMessagingMenu","id","preventDefault","getElementById","useEffect","apiRequests","fetchAPI","react_router_dom","to","title","onClick","openClientMenu","stopPropagation","openStoreMenu","target","openMarketMenu","SideBarMenuNonAuth","MenuItems","possibleConstructorReturn","getPrototypeOf","call","user_logged_in","Consumer","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","SidebarCollapse","Home","menu","displayMenu","setMenu","hideDropdownMenu","type","addEventListener","showDropdownMenu","name","About","InlineError","src","string","contact_form_details","contact_id","subject","message_read","date_read","date_sent","contact_form_errors","subject_error","message_error","ThisContactForm","change","contact_form","onSubmitContactForm","self","assertThisInitialized","form_messages","onCheckErrors","form_errors","do_check_errors","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","bind","_this2","placeholder","InlineError_InlineError","ContactDetails","href","height","width","allowfullscreen","frameBorder","Contact","display","setDisplay","_useState3","_useState4","Contact_ThisContactForm","ContactDetails_ContactDetails","forwadedInput","React","forwardRef","ref","InlineMessage","inline","setInline","main","button_type","check_mark","dialogType","setdialogType","Login","values","setValues","errors","setErrors","_useState5","_useState6","usernameRef","useRef","passwordRef","submitRef","_useState7","_useState8","handleChange","defineProperty","checkErrors","check_username","check_password","do_check","current","focus","onSubmit","Input_Input","Forms_InlineMessage","Logout","SignUp","_useContext","createUser","authUser","check_names","check_surname","check_cell","check_email","check_password_two","SideBar","alt","onSearch","method","MenuItems_MenuItems","Footer","Forget","setEmail","sendRecoveryEmail","category_init","category_id","category_name","description","notes","category_type","sub_category","category_art","category_errors_init","category_name_error","description_error","notes_error","category_type_error","sub_category_error","category_art_error","products_init","product_name","seo_link","product_art","price","currency","active","products_errors_init","category_id_error","product_name_error","product_art_error","price_error","currency_error","service_init","service_name","service_art","service_errors_init","service_name_error","service_art_error","physical_address_init","deliver_to","stand","street_name","city","country","postal_code","physical_address_errors_init","deliver_to_error","stand_error","street_name_error","city_error","province_error","country_error","postal_code_error","contact_details_init","tel","website","contact_details_errors_init","tel_error","fax_error","website_error","cart_init","cart_id","total_items","date_created","is_active","sub_total","tax","total","coupon_init","validated","store_init","store_name","company_name","physical_address","store_errors_init","store_name_error","company_name_error","physical_address_error","payment_init","amount","processed","transaction_type","deposit_slip_url","payment_errors_init","amount_error","transaction_type_error","fetchProductsAPI","products","toConsumableArray","fetchProductAPI","product_id","fetchUserProductsAPI","fetchUserServicesAPI","services","fetchServicesAPI","fetchServiceAPI","service_id","fetchCategories","categories","category","saveCategory","saveProduct","_callee9","product","_context9","onDeleteProduct","_ref10","_callee10","_context10","doAddService","_ref11","_callee11","service","_context11","updateService","_ref12","_callee12","_context12","_x10","updateProduct","_ref13","_callee13","_context13","_x11","fetchProductRequests","_ref14","_callee14","_context14","requests","_x12","_x13","onDeleteService","_ref16","_callee16","_context16","_x16","savePhysicalAddress","_ref17","_callee17","_context17","physical","_x17","fetchPhysicalAddress","_ref18","_callee18","_context18","_x18","_x19","saveContactDetails","_ref19","_callee19","contact_details","_context19","contact","_x20","fetchContactDetails","_ref20","_callee20","_context20","_x21","_x22","addToCart","_ref21","_callee21","cart_item","_context21","cart_items","_x23","retrieveCart","_ref22","_callee22","_context22","cart","Response","_x24","deleteCart","_ref23","_callee23","_context23","_x25","applyCouponCode","_ref24","_callee24","coupon","_context24","coupon_code","succeed","_x26","fetchStore","_ref25","_callee25","_context25","store","_x27","addStore","_ref26","_callee26","client_store","_context26","_x28","fetchTransactions","_ref27","_callee27","_context27","transactions","_x29","createTransaction","_ref28","_callee28","client_transaction","_context28","transaction","_x30","removeTransaction","_ref29","_callee29","_context29","_x31","_x32","fetchUserByID","_ref30","_callee30","_context30","_x33","processDeposit","_ref31","_callee31","deposited","_context31","_x34","fetchBankingDetails","_ref33","_callee33","_context33","banking","_x36","Product","addProductToBasket","quantity","setQuantity","addToBasket","Products","_useState9","_useState10","setProducts","_useState11","_useState12","setCategories","_useState13","_useState14","sub_categories","setSubCategories","_useState15","_useState16","show_products","setShowProducts","_useState17","_useState18","setShoppingBasket","_useState19","_useState20","_useState21","_useState22","setTitle","_useContext2","item","createSubCategories","subCategoryList","includes","subs","map","sub","key","cat","expanded_category","find","filtered_products","filter","onCategoryClick","Products_Product","Service","addServiceToBasket","Services","setServices","show_services","setShowServices","filtered_services","Services_Service","Market","Products_Products","Services_Services","AddProduct","setProduct","image","size","filename","progress","uploaded","setUploaded","doUpload","uploadTask","on","snapshot","round","bytesTransferred","totalBytes","child","getDownloadURL","FileArtChange","files","doSaveProduct","product_to_save","RequestsAPI","check_product_name","check_product_description","check_price","check_product_art","check_category_id","AddService","setService","fileArtChange","check_service_name","check_service_description","check_service_art","check_service_category","addService","my_service","AddCategories","_useState23","_useState24","setCategory","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useContext3","doAddCategory","my_category","check_category_name","check_category_type","check_sub_category","check_description","check_notes","check_category_art","CategoryArtFileChange","MyMarket","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","chat_message_init","chat_id","message_id","author","timestamp","attachments","chat_room_init","created_by","messages","users","chat_user_init","feedback_init","SocketContext","server_url","URL","SocketContextProvider","setMessages","chat_constants","setMessage","setFeedBack","writer","setWriter","_useSocket","useSocket","transports","socket","retrieveFeedbackUser","authAPI","updateMessages","new_message","connect","disconnect","emit","populate_message","onPopulate","typing","sendMessage","clearMessages","BlogContext","BlogContextProvider","posts","setPosts","refineSearch","api_routes","format","articles","fetchPayments","approvePayment","processing","payment","rejectPayment","fetchUserContactForm","contacts","fetchUsersAPI","onUpdateUser","manageUser","sendResponse","response_message","route","saveBankAccount","account","deleteBankingDetails","banking_id","action","banking_details","_x14","_x15","banking_details_init","account_holder","bank_name","account_number","branch_code","banking_details_errors_init","account_holder_error","bank_name_error","account_number_error","branch_code_error","ShowPayment","thispayment","setPayment","approve","reject","mypayment","apiCall","PaymentItem","OpenPayment","ManagePayments","payments","setPayments","show_payment","setShowPayment","fetchPaymentsAPI","Dashboard_ShowPayment","Dashboard_PaymentItem","ManageUser","setManageUser","UserItem","onOpenUser","ManageUsers","setUsers","fetchUserlistAPI","Dashboard_ManageUser","Dashboard_UserItem","SendResponse","respond_by","setResponse","_user_account_state$u","ManageContact","manageContact","setManageContact","Dashboard_SendResponse","ContactItem","onOpenContact","ManageContacts","setContacts","_ref15","fetchContactsAPI","Dashboard_ManageContact","Dashboard_ContactItem","NotAuthorized","BankAccountForm","onCancel","_useState39","_useState40","bankAccount","setAccount","_useState41","_useState42","_useState43","_useState44","onSaveBankAccount","check_bank_name","check_account_number","check_branch_code","check_account_holder","BankAccountItem","editAccount","deleteAccount","BankAccountsList","bankAccounts","Dashboard_BankAccountItem","ManageCompanyBankAccounts","_useState45","_useState46","setBankAccounts","_useState47","_useState48","setBankAccount","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","Dashboard_BankAccountForm","Dashboard_BankAccountsList","doDeleteAccount","Dashboard","_useState55","_useState56","_useState57","_useState58","present_user","setPresentUser","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","_callee15","_context15","fetchPresentUser","Dashboard_ManagePayments","Dashboard_ManageUsers","Dashboard_ManageContacts","Dashboard_ManageCompanyBankAccounts","Dashboard_NotAuthorized","BlogPost","post_data","article","urlToImage","source","Blog","toUpperCase","slice","index","DisplayMessage","setAuthor","retrieveAuthor","onOpenAttachment","Chat","Chat_DisplayMessage","onKeyPress","sms_message_init","to_cell","from_cell","scheduled_datetime","date_time_sent","delivered","sms_message_errors_init","to_error","from_error","sms_balance_init","total_sms","free_sms","sms_value","sms_bundle_init","purchase_price","payment_details_init","bundle_id","payment_method","payment_amount","payment_date","payment_time","approved","default_bundles","contact_lists_init","total_contacts","contact_lists_errors_init","name_error","contacts_init","list_id","list_name","relationship","contacts_errors_init","relationship_error","fetchBalancesAPI","fetchSMSBundles","bundles","sendSMS","sms_message","fetchContactLists","contact_lists","saveContactsList","json_contacts_list","prepared_route","contacts_lists","saveContact","json_contact","contact_list","updateContact","fetchContactsByListName","listname","SMSBalances","setBundles","purchaseBundle","setPurchaseBundle","balance","setBalance","smsApiRequests","fetchBundlesFromBackEnd","bundle","handleSelectBundle","DeliveryReports","SendBulkSMS","listNames","setListNames","messagesMenu","SendSMS","sms","setSMS","check_from_error","check_message_field","check_to_error","SMSMessages","SMS_SendSMS","SMS_SendBulkSMS","SMS_DeliveryReports","ContactListItem","DisplayContactList","contacts_list","SMS_ContactListItem","EditContact","contact_detail","setContact","check_tel","check_name","AddContact","addContact","ContactsManager","contact_list_details","setContactsList","contactsManagerMenu","readOnlyError","SMS_DisplayContactList","SMS_AddContact","SMS_EditContact","AddContactList","onAddContactsList","ContactsListItems","onOpenContactList","ContactsLists","SMS_ContactsListItems","SMSContacts","contactLists","setContactLists","listDetail","setListDetail","smsContactsMenu","fetchContactListsAPI","SMS_ContactsLists","SMS_AddContactList","SMS_ContactsManager","SMS","_useState65","_useState66","_useState67","_useState68","SMS_SMSContacts","SMS_SMSMessages","SMS_SMSBalances","Verifications","use_onetime_pin","account_verified","verifications","setVerifications","onAccountVerify","react_switch_default","checked","OnChangeHandler","AccountSettings","account_active","receive_job_offers","receive_sms","receive_email","accountSettings","setAccountSettings","onToggleSettings","PersonalDetails","onChangeHandler","onUpdatePersonalDetails","Account","onSwitchScreen","CheckoutEFTPayMentDetails","bankdetails","setBankingDetails","APIRequests","BasketItem","item_type","id_service_product","ShoppingBasket","basket","setBasket","coupons","setCoupons","coupon_code_error","setCart","SetPaidFor","paypalRef","apiFetch","purchase_units","purchase_item","currency_code","createPurchaseUnits","paypal","Buttons","createOrder","actions","order","create","onApprove","_onApprove","capture","render","CheckOut_BasketItem","v","CheckOut_CheckoutEFTPayMentDetails","PhysicalAddress","setPhysical","check_deliver_to","check_stand","check_street_name","check_city","check_province","check_country","check_postal_code","addPhysicalAddress","settings","loadPhysicalAddress","_useContext4","check_fax","check_website","onAddContactDetails","fetchContacts","CheckOut","_useContext6","CheckOut_PhysicalAddress","CheckOut_ContactDetails","CheckOut_ShoppingBasket","Store","setStore","primary","reset","my_form","setForm","check_store_name","check_company_name","check_physical_address","success","StoreManager","StoreManager_Store","ManageProduct","form_product","onUpdate","RequestItem","request","client","setClient","client_uid","total_requested","date_requested","products_sent","ProductRequests","setRequests","fetchRequestsAPI","ProductsManager_RequestItem","ShowProduct","ProductsManager_ManageProduct","ProductsManager_ProductRequests","ProductItem","onOpenProduct","ProductsManager_ShowProduct","ProductsManager_ProductItem","ManageService","form_service","ServiceRequests","ServiceManager_RequestItem","ShowService","ServiceManager_ManageService","ServiceManager_ServiceRequests","ServiceItem","onOpenService","ServiceManager_ShowService","ServiceManager_ServiceItem","CreatePayment","check_amount","check_transaction_type","Deposit","transaction_id","proof_of_deposit","deposit","setDeposit","onChangeProof","ProcessPayment","Withdrawal","ShowTransaction","Transactions_Withdrawal","Transactions_Deposit","TransactionItem","OpenTransaction","RemoveTransaction","Transactions","setTransactions","setTransaction","found_transaction","fetchTransactionsAPI","Transactions_ShowTransaction","Transactions_TransactionItem","Payments","Transactions_Transactions","Transactions_CreatePayment","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","ReactDOM","userAccountContext_UserAccountContextProvider","socketsio","blog","Header_Header","react_router","exact","path","component","Market_Products","Market_Services","process","origin","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.025bc472.chunk.js","sourcesContent":["export const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const account_page = '/account';\r\n\r\nexport const blog_page = '/blog';\r\n\r\nexport const chat_page = '/chat';\r\n\r\nexport const sms_page = '/sms';\r\nexport const sms_account = '/sms-account';\r\nexport const sms_settings = '/sms-settings';\r\nexport const sms_contacts = '/sms-contacts';\r\nexport const sms_messages = '/sms-messages';\r\n\r\nexport const email_account = '/email-account';\r\nexport const email_settings = '/email-settings';\r\nexport const send_email = '/email-send';\r\nexport const inbox_email = '/email-inbox';\r\nexport const email_sent = '/email-sent';\r\nexport const email_drafts = '/email-drafts';\r\n\r\n\r\nexport const market_page = '/market';\r\nexport const market_products_page = '/market-products';\r\nexport const market_services_page = '/market-services';\r\nexport const check_out_page = \"/market-check-out\";\r\n\r\n\r\nexport const admin_page = '/admin-user'; // + userid\r\nexport const shopping_basket_page = '/admin-user-shopping-basket';\r\nexport const my_market_products = '/admin-user-market';\r\nexport const manage_my_shop = '/admin-store-manager';\r\nexport const store_manager_products = '/admin-store-manager-products';\r\nexport const store_manager_services = '/admin-store-manager-services';\r\nexport const transactions_page = '/admin-store-transactions';\r\n\r\n\r\n\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n\r\n\r\n\r\n/**\r\n * api routes \r\n */\r\n\r\nexport const api_products_endpoint = '/api/products';\r\nexport const api_services_endpoint = '/api/services';\r\nexport const api_categories_endpoint = '/api/categories';\r\nexport const api_physical_endpoint = '/api/physical-address';\r\nexport const api_contact_endpoint = '/api/contact-details';\r\nexport const api_cart_endpoint = '/api/cart';\r\nexport const api_coupons_endpoint = '/api/coupons';\r\nexport const api_dashboard_endpoint = '/api/dashboard';\r\nexport const api_user_endpoint = '/api/user';\r\nexport const api_store_endpoint = '/api/store';\r\nexport const api_transactions_endpoint = '/api/transactions';\r\n\r\nexport const api_paypal_checkout_webhook = \"/api/checkout/paypal/webhook\";\r\n\r\nexport const api_sms_endpoint = '/api/sms';","export const app_name = 'WEQTrading';\r\nexport const app_long_name = 'WEQ Trading Online Store';\r\nexport const app_descrition = 'WEQ Trading Online Store';\r\nexport const cell = '27780111869';\r\nexport const email = 'info@weqtrading.com';\r\nexport const fax = '086****786';\r\nexport const localStorageKey = 'weqtrading-';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {auth,\r\n\tfirebase,\r\n\tstorage\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneVerified:false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\nimport moment from 'moment';\r\nclass Utilities {\r\n  constructor(today, url) {\r\n    this.today = today;\r\n    this.url = url;\r\n  }\r\n\r\n  isUrl = url => {\r\n    let pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name and extension\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?\" + // port\r\n      \"(\\\\/[-a-z\\\\d%@_.~+&:]*)*\" + // path\r\n      \"(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return pattern.test(url);\r\n  };\r\n\r\n  isEmpty = a => {\r\n    return a !== undefined ? a === null || a === \"\" : true;\r\n  };\r\n\r\n  isProvince = province => {\r\n    let province_list = [\r\n      \"limpopo\",\r\n      \"mpumalanga\",\r\n      \"north west\",\r\n      \"gauteng\",\r\n      \"kwazulu natal\",\r\n      \"eastern cape\",\r\n      \"western cape\",\r\n      \"northern cape\",\r\n      \"orange free state\"\r\n    ];\r\n    for (let i = 0; i < province_list.length; i++) {\r\n      if (province === province_list[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateEmail = email => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  validatePassword = password => {\r\n    let re = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n    );\r\n    return re.test(password);\r\n  };\r\n\r\n  validateUsername = username => {\r\n    let re = /^\\w+$/;\r\n    return re.test(username);\r\n  };\r\n\r\n  isNumber = n => {\r\n    return n !== undefined ? typeof n !== \"boolean\" && !isNaN(n) : false;\r\n  };\r\n\r\n  isMoney = n => {\r\n    return this.isNumber(n) ? true : false;\r\n  };\r\n\r\n  isCell = n => {\r\n    return this.isNumber(n)\r\n      ? n.length === 10 || n.length === 11 || n.length === 12 || n.length === 13\r\n      : false;\r\n  };\r\n\r\n  isTel = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  isFax = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  getAge = dateString => {\r\n    let dates = dateString.split(\"-\");\r\n    let d = new Date();\r\n\r\n    let userday = dates[2];\r\n    let usermonth = dates[1];\r\n    let useryear = dates[0];\r\n\r\n    let curday = d.getDate();\r\n    let curmonth = d.getMonth() + 1;\r\n    let curyear = d.getFullYear();\r\n\r\n    let age = curyear - useryear;\r\n\r\n    if (curmonth < usermonth || (curmonth === usermonth && curday < userday)) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n  isIDNumber = n => {\r\n    return n !== undefined ? this.isNumber(n) && n.length === 13 : true;\r\n  };\r\n  numDaysBetweenDates = (firstDate, secondDate) => {\r\n    let f_dates = firstDate.split(\"-\");\r\n    let s_dates = secondDate.split(\"-\");\r\n\r\n    // let d = new Date();\r\n\r\n    let f_day = parseInt(f_dates[2]);\r\n    let f_month = parseInt(f_dates[1]);\r\n    let f_year = parseInt(f_dates[0]);\r\n\r\n    let s_day = parseInt(s_dates[2]);\r\n    let s_month = parseInt(s_dates[1]);\r\n    let s_year = parseInt(s_dates[0]);\r\n\r\n    // TODO- Please revise the number of days algorithm\r\n    // let years = f_year - s_year;\r\n    // let months = f_month - s_month;\r\n    // let days = f_day - s_day;\r\n\r\n    let a = moment([f_year, f_month, f_day]);\r\n    let b = moment([s_year, s_month, s_day]);\r\n\r\n    return a.diff(b, \"days\") + 1;\r\n\r\n    //\r\n    // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n    //     return days\r\n    // }else if ((years === 0) && (months > 0)){\r\n    //     return (days + (months * 30))\r\n    // }else{\r\n    //     return 365\r\n    // }\r\n  };\r\n\r\n  countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n    try {\r\n      return stamp_1 - stamp_2;\r\n    } catch (e) {\r\n      return parseInt(stamp_1) - parseInt(stamp_2);\r\n    }\r\n  };\r\n\r\n  throttle = (func, limit) => {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function() {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  };\r\n\r\n  debounce = (func, delay) => {\r\n    let inDebounce;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(inDebounce);\r\n      inDebounce = setTimeout(() => func.apply(context, args), delay);\r\n    };\r\n  };\r\n\r\n  isMobile = () => {\r\n    if (window.innerWidth <= 800 && window.innerHeight <= 600) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nexport let UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","\r\nimport {\r\n    USER_ACCOUNT_ACTIONS\r\n} from '../../actions';\r\nimport {\r\n    account_details_type,\r\n    account_details_type_error\r\n} from '../../types';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nlet UserAccountInitState = {\r\n    user_account: {...account_details_type},\r\n    user_account_errors: {...account_details_type_error},\r\n    form_response: '',\r\n    response_code: '',\r\n};\r\n    \r\nexport let loginUser = async (username, password) => {\r\n    let user_account_state = {...UserAccountInitState};\r\n    let user_account;\r\n    let form_response;\r\n    let response_code;\r\n\r\n    await auth.doSignInWithEmailAndPassword(username, password).then(result => {\r\n            \r\n\r\n            if (result.status === true){\r\n                user_account = {...result.response};\r\n                form_response = 'User Logged In Successfully';\r\n                response_code = 200;\r\n            }else {\r\n                user_account = {...result.response};\r\n                form_response = result.error.message;\r\n                response_code = result.error.code;\r\n            }\r\n\r\n    });\r\n    \r\n    user_account_state.user_account = {...user_account};    \r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE',user_account_state);\r\n    return {...user_account_state};\r\n}\r\n\r\nexport let logOutUser = async() => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n    await auth.doSignOut().then(result => {\r\n        if (result.status === true){\r\n                user_account = {\r\n                    ...account_details_type\r\n                };\r\n                form_response = 'User Logout Successfully';\r\n                response_code = 200;\r\n                }\r\n                else {\r\n                    user_account = {\r\n                        ...account_details_type\r\n                    };\r\n                    form_response = result.error.message;\r\n                    response_code = result.error.code;\r\n                }\r\n    });\r\n    user_account_state.user_account = {\r\n        ...user_account\r\n    };\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE', user_account_state);\r\n    return {\r\n        ...user_account_state\r\n    };\r\n\r\n}\r\n\r\n\r\nexport let SendEmailVerification = async(user) => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n        console.log('Sending email verifications');\r\n\r\n    await auth.doSendEmailVerification(user).then( result => {\r\n        if (result.status === true){\r\n            user_account={\r\n                ...user,\r\n                email_verification_sent : true\r\n            };\r\n            form_response= 'successfully sent email verifications';\r\n            response_code= 200\r\n        }else{\r\n            user_account = {\r\n                ...user,\r\n                email_verification_sent: false\r\n            };\r\n            form_response= result.error.message;\r\n            response_code= result.error.code\r\n        }\r\n    });\r\n    user_account_state.user_account = {...user_account};\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n\r\n    return user_account_state;\r\n}","import React,{Component,useReducer,createContext} from 'react';\r\nimport {firebase,auth} from '../../firebase';\r\nimport userAccountReducer, {\r\n  UserAccountInitState\r\n} from '../../reducers/profileReducers/accountDetailsReducer';\r\n\r\nimport {\r\n  loginUser, logOutUser, SendEmailVerification\r\n} from './actions';\r\n\r\nexport const UserAccountContext = createContext();\r\nexport default class UserAccountContextProvider extends Component {\r\n    state = {user_account_state: {...UserAccountInitState}};\r\n\r\n    doLogin = async (username,password) => {\r\n      let user_account_state = await loginUser(username,password);\r\n      this.setState({user_account_state})\r\n    }\r\n\r\n    doLogout = async() => {\r\n      let user_account_state = await logOutUser();\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n    doSendEmailVerification = async() => {\r\n      if (this.state.user_account_state.user_account.emailVerified){\r\n      console.log('Cannot send verification email account already verified');\r\n    }else{\r\n      let user_account_state = await SendEmailVerification(this.state.user_account_state.user_account);\r\n      this.setState({\r\n        user_account_state: user_account_state\r\n      });\r\n    }\r\n    }\r\n\r\n    onChange = (user) => {\r\n      let {\r\n        user_account\r\n      } = this.state.user_account_state;\r\n\r\n      let user_account_state = Object.assign({},this.state.user_account_state)\r\n      user_account_state.user_account = {\r\n        ...user\r\n      };\r\n\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n  componentWillMount = () => {\r\n    // const unsubscribe = firebase.auth().onAuthStateChanged(this.onChange);    \r\n    const dounsubscribe = firebase.firebase.auth().onAuthStateChanged(this.onChange)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      < UserAccountContext.Provider value = {\r\n        {\r\n          ...this.state, doLogin: this.doLogin, doLogout: this.doLogout, doSendEmailVerification: this.doSendEmailVerification\r\n        }\r\n      } >\r\n                {this.props.children}\r\n      </UserAccountContext.Provider>              \r\n    )\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const user_init = {\r\n    username : '',\r\n    password : ''\r\n};\r\n\r\nexport const user_errors_init = {\r\n    username_error : '',\r\n    password_error : ''\r\n};\r\n\r\n\r\nexport const inline_init = {\r\n    message: '', \r\n    message_type:'info'\r\n};\r\n\r\n\r\nexport const extended_user = {\r\n    uid : '',\r\n    names: '',\r\n    surname: '',\r\n    cell: '',\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n    is_admin : false\r\n};\r\n\r\nexport const extended_user_error = {\r\n    names_error: \"\",\r\n    surname_error: \"\",\r\n    cell_error: \"\",\r\n    email_error: \"\",\r\n    password_error: \"\",\r\n    repeatpassword_error: \"\"\r\n\r\n};","import axios from 'axios';\r\nimport * as routes from \"../../constants/routes\";\r\n\r\nexport const addUser =async (sent_user) => {\r\n    let results = {status : false,payload:{},error : {}}\r\n\r\n    await axios.post(routes.api_user_endpoint,sent_user).then(results => {\r\n        if (results.status === 200){\r\n            return results.data\r\n        }else{\r\n            throw new Error('there was an error saving user');\r\n        }\r\n    }).then(user => {\r\n        results.status = true;\r\n        results.payload = {...user};\r\n        results.error = {};\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error}\r\n\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const updateUser = async (sent_user) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.put(routes.api_user_endpoint, sent_user).then(results => {\r\n        if (results.status === 200) {\r\n          return results.data;\r\n        } else {\r\n          throw new Error(\"there was an error saving user\");\r\n        }\r\n      }).then(user => {\r\n        results.status = true;\r\n        results.payload = { ...user };\r\n        results.error = {};\r\n      }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = { ...error };\r\n      });\r\n\r\n    return results;    \r\n};\r\n\r\n\r\nexport const fetchUser = async (uid) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.get(routes.api_user_endpoint + `/${uid}`).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('error fetching user');\r\n        }\r\n    }).then(user_details => {\r\n        results.status = true;\r\n        results.payload = {...user_details};\r\n        results.error = {}\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error};\r\n    });\r\n\r\n    return results;\r\n}","import React, {Component, useState,useContext,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\nimport {firebase,auth} from '../../../firebase';\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\nimport { extended_user } from '../../Auth/auth-constants';\r\nimport * as apiRequests from '../../Auth/auth-api';\r\n\r\nconst SideBarMenuAuth = () => {\r\n\tconst[user,setUser] = useState(extended_user);\r\n\t\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst openClientMenu = (e,id) => {    \r\n\t\te.preventDefault();      \r\n\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t}else{\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t} \r\n\r\n\t};\r\n\r\n\tfunction closeStoreMenu(thisNode) {\r\n\t\tthisNode.className = 'treeview';\r\n\t\tdocument.removeEventListener('click',closeStoreMenu);\r\n\t}\r\n\r\n\tconst openStoreMenu = (e, id) => {\r\n\t\te.preventDefault();\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t} else {\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t} \r\n\t};\r\n\r\n\tconst openMarketMenu = (e, id) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t} else {\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t} \r\n\t};\r\n\r\n\tconst openMessagingMenu = (e,id) => {\r\n\t\te.preventDefault();\r\n\t\tlet thisNode = document.getElementById(id);\r\n\t\tif ((thisNode.className === 'treeview')) {\r\n\t\t\tthisNode.className = 'active treeview';\r\n\t\t} else {\r\n\t\t\tthisNode.className = 'treeview';\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\t\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tawait apiRequests.fetchUser(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetUser(results.payload);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error.message);\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetUser(extended_user);\r\n\t\t\ttry{\r\n\t\t\t\tdocument.removeEventListener('click', closeStoreMenu);\r\n\t\t\t}catch(error){\r\n\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n  \r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading </li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.home_page} title=\"weqtrading online store\">\r\n\t\t\t\t\t<i className=\"fa fa-home\" /> <strong>Home</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.about_page} title=\"About\">\r\n\t\t\t\t\t<i className=\"fa fa-info\" /> <strong>About</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.contact_page} title=\"Contact Us\">\r\n\t\t\t\t\t<i className=\"fa fa-envelope\" /> <strong>Contact</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li\r\n\t\t\t\tid=\"clientarea\"\r\n\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet id = 'clientarea';\r\n\t\t\t\t\treturn openClientMenu(e, id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-user-md\" /> <span>Client Area</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i className=\"fa fa-angle-left pull-right\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.admin_page} title=\"manage your Account\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-sign-in\"> </i> <strong> Account</strong>{' '}\r\n\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tid=\"store\"\r\n\t\t\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet id = 'store';\r\n\t\t\t\t\t\t\treturn openStoreMenu(e, id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-user-md\" /> <span>Store</span>\r\n\t\t\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.manage_my_shop} title=\"manage my shop\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Store Manager</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.my_market_products} title=\"Shopping Basket\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong> Add to Store </strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.store_manager_products} title=\"transactions\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Products</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.store_manager_services} title=\"transactions\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Services</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.transactions_page} title=\"transactions\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-credit-card\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t<strong>Transactions</strong>{' '}\r\n\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t\t<li\r\n\t\t\t\tid=\"marketplace\"\r\n\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet id = 'marketplace';\r\n\t\t\t\t\topenMarketMenu(e, id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-shopping-bag\" /> <span>Market Place</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.check_out_page} title=\"Check Out\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i>{' '}\r\n\t\t\t\t\t\t\t<strong> CheckOut</strong>{' '}\r\n\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.market_products_page} title=\"Market\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\" /> Products\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.market_services_page} title=\"Market\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\" /> Services\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li\r\n\t\t\t\tid=\"messaging\"\r\n\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet id = 'messaging';\r\n\t\t\t\t\topenMessagingMenu(e, id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-send-o\" /> <span>Messaging</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\r\n\r\n\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tid=\"sms\"\r\n\t\t\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet id = 'sms';\r\n\t\t\t\t\t\t\topenMessagingMenu(e, id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-send\" /> <span>SMS</span>\r\n\t\t\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_account} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-user'> </i>{' '} Account\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_settings} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-cogs'> </i>{' '} Settings\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_contacts} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-user-md'> </i>{' '} Contacts\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.sms_messages} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-send-o'> </i>{' '} Messages\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tclassName=\"treeview\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet id = 'email';\r\n\t\t\t\t\t\t\topenMessagingMenu(e, id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-envelope\" /> <span>Email</span>\r\n\t\t\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-angle-left pull-right\"\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tif (e.target.className === 'fa fa-angle-left pull-right') {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-right pull-right';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.className = 'fa fa-angle-left pull-right';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<ul className=\"treeview-menu\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_account} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-cogs'> </i> Account\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_settings} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-cogs'> </i> Settings\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.send_email} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-inbox'> </i> Send Email\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.inbox_email} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-inbox'> </i> Inbox\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_sent} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-send-o'> </i> Sent Box\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={routes.email_drafts} title='Realtime Messaging Module'>\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-file'> </i> Drafts\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t</ul>\r\n\r\n\r\n\t\t\t</li>\r\n\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.chat_page} title=\"Online Realtime Chat\">\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t<i className=\"fa fa-comments\"> </i>{' '} Chat\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.blog_page} title=\"Weq Trading Blog\">\r\n\t\t\t\t\t<i className=\"fa fa-book\"> </i> <strong>Blog</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\r\n\r\n\t\t\t{user.is_admin ? (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={routes.dashboard_page} title=\"Dashboard\">\r\n\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.logout_page} title=\"Logout\">\r\n\t\t\t\t\t<i className=\"fa fa-sign-out\"> </i> <strong> Logout </strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t); \r\n};\r\n\r\n\r\n\r\nexport default class MenuItems extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser_logged_in : false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet isUserLoggedIN = () => {\t\t\t\t\t\r\n\t\t\treturn auth.currentUser ? true:false;\r\n\t\t};\r\n\t\tif (isUserLoggedIN()){\r\n\t\t\tthis.setState({user_logged_in : true});\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<UserAccountContext.Consumer>{(context) => {\r\n\t\t\t  const { doLogin, user_account_state } = context;\r\n\t\t\t  console.log('SIDEBAR',user_account_state.user_account);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{user_account_state.user_account.uid ? (\r\n\t\t\t\t\t\t\t<SideBarMenuAuth />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<SideBarMenuNonAuth />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t  }}\r\n\t\t\t</UserAccountContext.Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment,useState,useContext } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function Home (){\r\n\r\n  const {user_account_state} = useContext(UserAccountContext);\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-home\"> </i> Weq Trading{\" \"}\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n              <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li className=\"btn btn-block droplink\" name=\"entertainment\">\r\n                    <Link to={routes.market_services_page}>\r\n                      <i className=\"fa fa-shopping-bag\"> </i> Market Services{\" \"}\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"btn btn-block droplink\">\r\n                    <Link to={routes.market_products_page}>\r\n                      <strong>\r\n                        {\" \"}\r\n                        <i className=\"fa fa-shopping-bag\"> </i> Market Products{\" \"}\r\n                      </strong>{\" \"}\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"btn btn-block droplink\">\r\n                    {user_account_state.user_account.uid ? (\r\n                      <Link to={routes.logout_page}>\r\n                        <strong>\r\n                          {\" \"}\r\n                          <i className=\"fa fa-sign-in\"> </i> Log out{\" \"}\r\n                        </strong>{\" \"}\r\n                      </Link>\r\n                    ) : (\r\n                      <Link to={routes.login_page}>\r\n                        <strong>\r\n                          {\" \"}\r\n                          <i className=\"fa fa-sign-in\"> </i> Log in to Weq\r\n                          Trading{\" \"}\r\n                        </strong>{\" \"}\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-info\"> </i> About\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong> Introduction </strong>\r\n              </h3>\r\n            </div>\r\n            <blockquote>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Whittlesea Experience Quality Computer College &amp;\r\n                  Solutions is a registered company registered as a close\r\n                  corporation\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is a service provider company, which is concerned about\r\n                  its community, because the main aim is to fight\r\n                  unemployment.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is owned by two directors but aims to employing more\r\n                  than twenty employees.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  The books of this company are managed by the accountant\r\n                  Ntombizamfaku Nelisa Sigcau.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  This company has got visions and dreams of the rainbow\r\n                  nation.\r\n                </li>\r\n              </ul>\r\n            </blockquote>\r\n          </div>\r\n\r\n          <div className=\"box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Vision</strong>\r\n              </h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                To be a leading and effective organization that is based on\r\n                its community needs, fulfilment and also that is capable of\r\n                meaningful contribution towards the development of the\r\n                people.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see a well developed community.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see the previously disadvantaged community with the\r\n                skills to fight poverty and unemployment.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see an improved standard of living for every South\r\n                African.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Services</strong>\r\n              </h3>\r\n              <blockquote>\r\n                The company offers the following other services\r\n              </blockquote>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Internet Connections / WIFI access\r\n              </li>\r\n              <li className=\"list-group-item\">Construction</li>\r\n              <li className=\"list-group-item\">Fencing</li>\r\n              <li className=\"list-group-item\">Renovations</li>\r\n              <li className=\"list-group-item\">Rentals Apartments</li>\r\n              <li className=\"list-group-item\">Transportation</li>\r\n              <li className=\"list-group-item\" > Training</li>\r\n              <li className='list-group-item'> Supply of Chairs,Tables, and Tents</li>\r\n              <li className='list-group-item'>Installations of Surveilance Cameras and Alarms</li>\r\n              <li className='list-group-item'>Supply of cleaning Materials</li>\r\n              <li className='list-group-item'>Construction</li>\r\n              <li className='list-group-item'>Tilling</li>\r\n              <li className='list-group-item'>Plumbing</li>\r\n              <li className='list-group-item'>Wiring (Electrical)</li>\r\n              <li className='list-group-item'>Painting</li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport {Capitalize} from 'react-lodash'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{<Capitalize string={this.state.message} /> }</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","export const contact_form_details = {\r\n  contact_id: \"\",\r\n  names: \"\",\r\n  email: \"\",\r\n  cell: \"\",\r\n  subject: \"\",\r\n  message: \"\",\r\n\r\n  message_read: false,\r\n  date_read: \"\",\r\n  date_sent: \"\"\r\n};\r\n\r\nexport const contact_response_message_detail = {\r\n  contact_id: \"\",\r\n  response: \"\",\r\n  date_sent: \"\"\r\n};\r\n\r\nexport const contact_form_errors = {\r\n  names_error: \"\",\r\n  email_error: \"\",\r\n  cell_error: \"\",\r\n  subject_error: \"\",\r\n  message_error: \"\"\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\n\r\nimport {\r\n    contact_form_details,\r\n    contact_response_message_detail,\r\n    contact_form_errors\r\n} from './contact-constants';\r\n\r\n\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact\",data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg margin\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React,{Fragment} from 'react'\r\nimport './Contact.css';\r\nexport default function ContactDetails () {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-info\"> </i> Contact Details\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <div className=\"small-box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-building\"> </i> Business Details\r\n                </strong>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Name : </strong>\r\n                    <em>Weq Trading &amp; Projects</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Registration Number : </strong>\r\n                    <em>2010/158059/23</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Address : </strong>\r\n                    <em>80 Shepstone Street, Whittlesea,5360</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong> Business Fax : </strong>\r\n                    <em>\r\n                      <a href=\"mailto:0408421225\">040-842-1225</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                    <em>\r\n                      <a href=\"mailto:0865182222@faxfx.net\">086-518-2222</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Contact Person : </strong>\r\n                        <em>Nsubuga Charles Heinnrich</em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:O781111869\">O78-111-1869 </a>\r\n                        </em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:0838630886\">083-863-0886 </a>\r\n                        </em>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <iframe\r\n                  src=\"https://www.google.com/maps/embed?pb=!1m22!1m11!1m3!1d1031.541083124503!2d26.82210571473625!3d-32.17379083467601!2m2!1f0!2f0!3m2!1i1024!2i768!4f13.1!4m8!3e0!4m5!1s0x1e62350d78cff7e3%3A0x6d7e84c719fdcd2b!2sWeq+Trading+And+Projects!3m2!1d-32.1735701!2d26.8231617!4m0!5e1!3m2!1sen!2sza!4v1564836874505!5m2!1sen!2sza\"\r\n                  className=\"map-style\"\r\n                  height=\"460\"\r\n                  width=\"600\"\r\n                  allowfullscreen\r\n                  frameBorder=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>      \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\nimport ContactDetails from './ContactDetails';\r\n\r\nexport default function Contact() {\r\n\tconst [display, setDisplay] = useState(\"contact-form\");\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\t\r\n\r\n\r\n\tconst ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t};\r\n\r\n\tconst SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n  };\r\n  \r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"contactform\"\r\n                    onClick={e => setDisplay(\"contact-form\")}\r\n                  >\r\n                    <i className=\"fa fa-envelope\"> </i>\r\n                    Contact Form\r\n                  </li>\r\n                  <li\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool droplink\"\r\n                    name=\"contactdetails\"\r\n                    onClick={e => setDisplay(\"contact-details\")}\r\n                  >\r\n                    <i className=\"fa fa-info\"> </i>\r\n                    Contact Details\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display === \"contact-form\" ? <ThisContactForm /> : \"\"}\r\n        {display === \"contact-details\" ? <ContactDetails /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nfunction Input({\r\n        type,\r\n        placeholder,\r\n        name,\r\n        className,\r\n        onChange\r\n    },ref){\r\n  return (\r\n      <input \r\n        ref={ref}\r\n        type={type} \r\n        className={className} \r\n        name={name} \r\n        placeholder={placeholder}\r\n        onChange = {onChange}        \r\n        />\r\n        )\r\n}\r\n\r\nconst forwadedInput = React.forwardRef(Input);\r\n\r\nexport default forwadedInput;\r\n\r\n","\r\nimport React, {Fragment,useState,useEffect } from 'react';\r\nimport {Capitalize} from 'react-lodash';\r\n\r\n\r\nconst InlineMessage = ({message,message_type}) => {\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst [dialogType,setdialogType] = useState({\r\n\t\tmain: 'box-info',\r\n\t\tbutton_type: 'box-title btn-outline-info btn-lg',\r\n\t\tcheck_mark : 'fa fa-check-circle'\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInline({message:message,message_type:message_type});\r\n\t\tif(message_type === 'error'){\r\n\t\t\tsetdialogType({\r\n\t\t\t\tmain : 'box-danger',\r\n\t\t\t\tbutton_type : 'box-title btn-outline-danger btn-lg',\r\n\t\t\t\tcheck_mark : 'fa fa-close'\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\t\t\t\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className={dialogType.main}>\r\n\t\t\t\t<div className={'box box-header'}>\t\t\t\t\t\r\n\t\t\t\t\t<div className={'box-tools'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={dialogType.button_type}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<em>\r\n\t\t\t\t\t\t\t\t\t<i className={dialogType.check_mark}> </i> <small> \r\n\t\t\t\t\t\t\t\t\t{<Capitalize string={inline.message} />}  \r\n\t\t\t\t\t\t\t\t</small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\n\r\nexport default InlineMessage;","import React, { Fragment, useEffect, useContext, useRef,useState } from \"react\";\r\nimport { Link,Redirect ,navigate} from \"react-router-dom\";\r\nimport { routes } from \"../../../constants\";\r\nimport {user_init,user_errors_init, inline_init} from '../auth-constants';\r\n\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport Input from '../../Input/Input';\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nexport default function Login() {\r\n\r\n  const [values,setValues] = useState(user_init);\r\n  const [errors,setErrors] = useState(user_errors_init);\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const submitRef = useRef(null);\r\n\r\n  const [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n  const showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({ menu: true });\r\n    document.addEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({ menu: false });\r\n    document.removeEventListener(\"click\", hideDropdownMenu);\r\n  };\r\n\r\n\t  \r\n\r\n  \tconst handleChange = e => {\r\n        setValues({...values,[e.target.name]:e.target.value})\r\n    };\r\n    \r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      const check_username = () => {\r\n        if(Utils.validateEmail(values.username) === false){\r\n            setErrors({...errors, username_error: 'invalid username'});\r\n            return true;\r\n        }\r\n          return false;      \r\n      };\r\n\r\n      const check_password = () => {\r\n        if(Utils.isEmpty(values.password)){\r\n          setErrors({...errors,password_error:'password field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_username() ? isError = true : isError = isError;\r\n        check_password() ? isError = true : isError = isError;\r\n\r\n        return isError\r\n      };\r\n      return await do_check()\r\n    };\r\n\r\n  useEffect(() => {\r\n\t  usernameRef.current.focus();  \r\n      \r\n  }, []);\r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      console.log(\"The big loggin context\",context);\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const {\r\n        username,password\r\n      } = values;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login User\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool dropdown-toggle\"\r\n                    onClick={e => showDropdownMenu(e)}\r\n                  >\r\n                    <i className='fa fa-bars'> </i>{\" \"}\r\n                  </button>\r\n                  {displayMenu.menu ? (\r\n                    <ul className=\"dropmenu\">\r\n                      <li\r\n                        className=\"btn btn-block droplink\"\r\n                      >\r\n                      <Link to={routes.forget_password_page}>\r\n                            <i className=\"fa fa-unlock\"> </i> Forget Password\r\n                      </Link>\r\n                      </li>\r\n                      <li\r\n                        className=\"btn btn-block droplink\"\r\n                      ><Link to={routes.signup_page}>\r\n                            <i className=\"fa fa-sign-in\"> </i> Subscribe\r\n                      </Link>\r\n                      </li>\r\n                    </ul>\r\n                  ):null\r\n                  }\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={e => doLogin(username, password)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    placeholder=\"Login Name\"\r\n                    ref={usernameRef}\r\n                    value={values.username}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.username_error ? (\r\n                    <InlineError message={errors.username_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    ref={passwordRef}\r\n                    value={values.password}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.password_error ? (\r\n                    <InlineError message={errors.password_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    ref={submitRef}\r\n                    onClick={e =>\r\n                      checkErrors(e).then(isError => {\r\n                        isError\r\n                          ? setInline({\r\n                              message: \"error processing login \",\r\n                              message_type: \"error\"\r\n                            })\r\n                          : doLogin(username, password);\r\n                      })\r\n                    }\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Login\r\n                    </strong>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning btn-lg\"\r\n                    onClick={e => {\r\n                      setValues(user_init);\r\n                      setErrors(user_errors_init);\r\n                      setInline(inline_init);\r\n                    }}\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-eraser\"> </i> Reset\r\n                    </strong>\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  {inline.message ? (\r\n                    <InlineMessage\r\n                      message={inline.message}\r\n                      message_type={inline.message_type}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Redirect,navigate } from \"react-router-dom\";\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function Logout() {\r\n    return (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n          const {\r\n              doLogout\r\n          } = context;\r\n          return (\r\n            <Fragment>\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-sign-out\"> </i> Logout\r\n                  </h3>\r\n\r\n                  <div className=\"box-tools\">\r\n                    <Link to={routes.home_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-home\"> </i>{' '} Home\r\n                      </button>\r\n                    </Link>\r\n                    <Link to={routes.login_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-sign-in\"> </i>{' '} Login\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      name=\"logout\"\r\n                      onClick={e => {\r\n                        doLogout();\r\n                        //navigate(\"/\", true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-sign-out\"> </i>{\" \"}\r\n                      <strong> Logout </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Fragment>\r\n          );\r\n      }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n}\r\n","\r\nimport React, {Fragment,useState,useContext,useEffect} from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { auth } from '../../../firebase';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { extended_user, extended_user_error, inline_init, user_init, user_errors_init } from '../auth-constants';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\nimport { Utils } from '../../../utilities';\r\nimport * as apiRequests from '../auth-api';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [user,setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState(inline_init);\r\n    const { doLogin, user_account_state} = useContext(UserAccountContext);\r\n\r\n    const createUser = async e => {\r\n            await auth.doCreateUserWithEmailAndPassword(user.email,user.password).then(authUser => {\r\n                console.log(authUser);\r\n                let sent_user = {...user};\r\n                sent_user.uid = user_account_state.user_account.uid;\r\n                sent_user = JSON.stringify(sent_user);\r\n\r\n                apiRequests.addUser(sent_user).then(result => {\r\n                    if (result.status){\r\n                        setInline({message:'user successfully created',message_type:'info'});\r\n                        setUser(result.payload);\r\n                    }else{\r\n                        setInline({message:'user not created successfully try adding user details later',message_type:'error'});\r\n                    }\r\n                }).catch(error => {\r\n                    setInline({message:error.message,message_type:'error'});\r\n                });\r\n\r\n            }).catch(error => {\r\n                setInline({message:error.message,message_type:'error'});\r\n            });\r\n\r\n            return true;\r\n    };\r\n\r\n    // names: \"\",\r\n    // surname: \"\",\r\n    // cell: \"\",\r\n    // email: \"\",\r\n    // password: \"\",\r\n    // repeatpassword: \"\"\r\n\r\n\r\n    const checkErrors = async e => {\r\n        let isError = false;\r\n\r\n        const check_names = () => {\r\n            if(Utils.isEmpty(user.names)){\r\n                setErrors({...errors,names_error : 'names field cannot be empty'});\r\n                return true;\r\n            };\r\n            return false;\r\n        }\r\n        const check_surname = () => {\r\n            if(Utils.isEmpty(user.surname)){\r\n                setErrors({...errors,surname_error: 'surname field cannot be empty'})\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_cell = () => {\r\n            if(Utils.isCell(user.cell) === false){\r\n                setErrors({...errors,cell_error:'cell field is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_email = () => {\r\n            if(Utils.validateEmail(user.email) === false){\r\n                setErrors({...errors,email_error:'email address is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password = () => {\r\n            if(Utils.isEmpty(user.password)){\r\n                setErrors({...errors, password_error : 'password field cannot be empty'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password_two = () => {\r\n            if (user.password !== user.repeatpassword){\r\n                setErrors({...errors, repeatpassword_error:'passwords do not match'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_names() ? isError = true : isError = isError;\r\n            check_surname() ? isError = true : isError = isError;\r\n            check_cell() ? isError = true : isError = isError;\r\n            check_email() ? isError = true : isError = isError;\r\n            check_password() ? isError = true : isError = isError;\r\n            check_password_two() ? isError = true : isError = isError;\r\n\r\n            return isError\r\n        };\r\n\r\n        return await do_check();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-sign-out\"> </i> Sign Up\r\n              </strong>\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <Link to={routes.login_page}>\r\n                <button type=\"button\" className=\"btn btn-box-tool btn-lg\">\r\n                  <strong>\r\n                    <i className=\"fa fa-sign-in\"> </i> Login{\" \"}\r\n                  </strong>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        \r\n        \r\n            <form className='form-horizontal col-md-6'>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='names'\r\n                        placeholder='Names...'\r\n                        value={user.names}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='surname'\r\n                        placeholder='Surname...'\r\n                        value={user.surname}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='cell'\r\n                        placeholder='Cell...'\r\n                        value={user.cell}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='email'\r\n                        placeholder='Email...'\r\n                        value={user.email}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='password'\r\n                        placeholder='Password...'\r\n                        value={user.password}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.password_error ? <InlineError message={errors.password_error} /> : ''}\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='repeatpassword'\r\n                        placeholder='Repeat Password...'\r\n                        value={user.repeatpassword}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.repeatpassword_error ? <InlineError message={errors.repeatpassword_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-success btn-lg'\r\n                        name='signup'\r\n                        onClick={e => checkErrors(e).then(isError => {\r\n                            isError ?\r\n                                setInline({message: 'error processing form',message_type:'error'})\r\n                            :   createUser(e).then(result => {\r\n\r\n                            });\r\n                        })}\r\n                    >\r\n                        <i className='fa fa-sign-in'> </i>{' '}\r\n                        Sign Up\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-warning btn-lg'\r\n                        name='reset'\r\n                        onClick={e => {\r\n                            setUser(extended_user);\r\n                            setErrors(extended_user_error);\r\n                            setInline(inline_init);\r\n                        }}\r\n                    >\r\n                        <i className='fa fa-eraser'> </i>{' '}\r\n                        Reset\r\n                    </button>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default SignUp","import React, { Fragment,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function SideBar (){\r\n\t\r\n\tlet onSearch = e => {    \r\n\t\te.preventDefault();\r\n\t\tconsole.log('Searching site...');\r\n\t\t// Remember to clear search field      \r\n\t};\r\n\t\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const userSignedInText = user_account_state.user_account\r\n        .uid\r\n        ? `<p id=\"strSideUserNameID\"><Link to={routes.logout_page}> Logout</Link></p>`\r\n        : `<p id=\"strSideUserNameID\"><Link to={routes.login_page}> Login</Link></p>`;\r\n\r\n    \r\n      return (\r\n        <Fragment>\r\n          <aside className=\"main-sidebar\">\r\n            <section className=\"sidebar\">\r\n              <div className=\"user-panel\">\r\n                <div className=\"pull-left image\">\r\n                  <img\r\n                    src=\"/static/dist/img/sms.jpeg\"\r\n                    id=\"strSideUserImageID\"\r\n                    className=\"img-circle\"\r\n                    alt=\"Weq-Trading\"\r\n                  />\r\n                </div>\r\n                <div className=\"pull-left info\">\r\n                  {user_account_state.user_account.uid ? (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.logout_page}> Logout</Link>\r\n                    </p>\r\n                  ) : (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.login_page}> Login</Link>\r\n                    </p>\r\n                  )\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <form\r\n                onSubmit={e => onSearch(e)}\r\n                method=\"get\"\r\n                className=\"sidebar-form\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"input-group-btn\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      name=\"search\"\r\n                      id=\"search-btn\"\r\n                      className=\"btn btn-flat\"\r\n                    >\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                <MenuItems />\r\n              </ul>\r\n            </section>\r\n          </aside>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { inline_init } from '../auth-constants';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nexport default function Forget(){\r\n  const [email,setEmail] = useState({email:''});\r\n  const [errors,setErrors] = useState({email_error : ''});\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n\r\n\tfunction sendRecoveryEmail  (e) {\r\n\t\te.preventDefault();\r\n    console.log('Sending Recovery Email');      \r\n    setInline({message:'sending recovery email',message_type:'info'});\r\n    // TODO create a backend firebase function to send recovery email and trigger through https\r\n    // actually call a firebase function that sends a recovery email from firebase\r\n\t}\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            {\" \"}\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-key\"> </i> Forget Password\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <Link to={routes.login_page}>\r\n              <button type=\"button\" className=\"btn btn-box-tool\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login\r\n                </strong>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <form\r\n            className=\"form-horizontal\"\r\n            onSubmit={e => sendRecoveryEmail(e)}\r\n          >\r\n            <div className=\"form-group\">\r\n              <span>\r\n                Enter your username so what we can send you a password recovery\r\n                message\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n\t\t\t  <input \r\n\t\t\t\t  type=\"email\" \r\n\t\t\t\t  className=\"form-control\" \r\n\t\t\t\t  name=\"email\" \r\n\t\t\t\t  value={email.email}\r\n\t\t\t\t  onChange={e => setEmail({[e.target.name]:e.target.value})}\t\t\t\t  \r\n\t\t\t\t  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-lg\"\r\n                onClick={e => sendRecoveryEmail(e)}\r\n              >\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-unlock-alt\"> </i> Recover\r\n                </strong>\r\n              </button>\r\n\t\t\t\t<button \r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\tonClick={e =>{\r\n            setErrors({email_error : ''});\r\n            setEmail({ email: \"\" });\r\n            setInline(inline_init);\r\n          }  }\r\n\t\t\t\t>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-eraser\"> </i> Reset{\" \"}\r\n                  </strong>\r\n                </button>              \r\n            </div>\r\n            <div className='form-group'>\r\n              {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","\r\nexport const category_init = {    \r\n\tcategory_id : '',\r\n\tcategory_name : '',\r\n\tdescription : '',\r\n\tnotes : '',\r\n\tcategory_type : '',\r\n\tsub_category : '',\r\n\tcategory_art : '',\r\n};\r\n\r\nexport const category_errors_init = {\r\n\tcategory_name_error : '',\r\n\tdescription_error : '',\r\n\tnotes_error : '',\r\n\tcategory_type_error : '',\r\n\tsub_category_error : '',\r\n\tcategory_art_error : ''\r\n};\r\n\r\nexport const products_init = {\r\n\tuid : '',\r\n\tid: '',\r\n\tcategory_id : '',\r\n\tproduct_name: '',\r\n\tseo_link : '',\r\n\tdescription: '',\r\n\tproduct_art: '',\r\n\tprice: '',\r\n\tcurrency: 'zar',\r\n\tactive : true\r\n};\r\n\r\nexport const products_errors_init = {\r\n\tcategory_id_error : '',\r\n\tproduct_name_error : '',\r\n\tdescription_error : '',\r\n\tproduct_art_error : '',\r\n\tprice_error : '',\r\n\tcurrency_error : ''\r\n};\r\n\r\nexport const service_init = {\r\n\tuid: '',\r\n\tid: '',\r\n\tcategory_id: '',\r\n\tservice_name: '',\r\n\tseo_link : '',\r\n\tdescription: '',\r\n\tservice_art : '',\r\n\tprice: '',\r\n\tcurrency: 'zar',\r\n    active  : true\r\n};\r\n\r\nexport const service_errors_init = {\r\n\tcategory_id_error : '',\r\n\tservice_name_error: '',\r\n\tdescription_error: '',\r\n\tservice_art_error: '',\r\n\tprice_error: '',\r\n\tcurrency_error: 'zar'\r\n};\r\n\r\n\r\nexport const physical_address_init = {\r\n\tuid: '',\r\n\tdeliver_to : '',\r\n\tstand: '',\r\n\tstreet_name: '',\r\n\tcity: '',\r\n\tprovince: '',\r\n\tcountry : '',\r\n\tpostal_code: '',\r\n};\r\n\r\nexport const physical_address_errors_init = {\r\n\tdeliver_to_error : '',\r\n\tstand_error : '',\r\n\tstreet_name_error : '',\r\n\tcity_error : '',\r\n\tprovince_error : '',\r\n\tcountry_error : '',\r\n\tpostal_code_error : ''\r\n};\r\n\r\n\r\nexport const contact_details_init = {\r\n\tuid: '',\r\n\ttel: '',\r\n\tcell: '',\r\n\temail: '',\r\n\tfax: '',\r\n\twebsite: ''\r\n};\r\n\r\n\r\nexport const contact_details_errors_init = {\r\n\ttel_error : '',\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\tfax_error : '',\r\n\twebsite_error : ''\r\n};\r\n\r\n\r\nexport const cart_init = {\r\n\tcart_id :'',  // # unique id for this cart instance\r\n\tuid :'',\r\n\ttotal_items : '0',\r\n\tdate_created : '',\r\n\tis_active : true,\r\n\tsub_total :'0',\r\n\ttax : '0',\r\n\ttotal : '0'\r\n};\r\n\r\nexport const coupon_init = {\r\n\tuid: '',    \r\n\tcode: '',\r\n\tvalidated : false    \r\n};\r\n\r\n\r\nexport const store_init = {\r\n\tuid: '',\r\n\tstore_name: '',\r\n\tcompany_name: '',\r\n\tdescription: '',\r\n\tphysical_address: '',\r\n\ttel: '',\r\n\tcell: '',\r\n\temail: '',\r\n\twebsite: ''\r\n};\r\n\r\nexport const store_errors_init = {\r\n\tstore_name_error : '',\r\n\tcompany_name_error : '',\r\n\tdescription_error : '',\r\n\tphysical_address_error : '',\r\n\ttel_error : '',\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : ''\r\n};\r\n\r\n\r\nexport const payment_init = {\r\n\tuid: '',\r\n\tid: '',\r\n\tdate: '',\r\n\tamount: '',\r\n\tprocessed: false,\r\n\ttransaction_type: 'deposit',\r\n\tdeposit_slip_url : ''\r\n};\r\n\r\nexport const payment_errors_init = {\r\n\tamount_error  : '',\r\n\ttransaction_type_error : ''\r\n};","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\nexport const fetchProductsAPI = async () => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_products_endpoint)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching products');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(products => {\r\n\t\t\tconsole.log('Fetch Products API', products);\r\n\t\t\tresults = [...products];\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error.message);\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchProductAPI = async product_id => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_products_endpoint + `/${product_id}`)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching products');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(products => {\r\n\t\t\tconsole.log('Fetch Products API', products);\r\n\t\t\tresults = {...products};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error.message);\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUserProductsAPI = async uid => {\r\n\tlet results = [];\r\n\tawait axios.get(routes.api_products_endpoint + `/user/${uid}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching user products');\r\n\t\t}\r\n\t}).then(products => {\r\n\t\tresults = [...products];\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUserServicesAPI = async uid => {\r\n\tlet results = [];\r\n\tawait axios.get(routes.api_services_endpoint + `/user/${uid}`).then(result => {\r\n\t\tif(result.status){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching user services');\r\n\t\t}\r\n\t}).then(services => {\r\n\t\tresults = [...services];\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchServicesAPI = async () => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_services_endpoint)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching services');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(services => {\r\n\t\t\tresults = [...services];\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const fetchServiceAPI = async service_id => {\r\n\tlet results = [];\r\n\tawait axios\r\n\t\t.get(routes.api_services_endpoint + `/${service_id}`)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching products');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(products => {\r\n\t\t\tconsole.log('Fetch Products API', products);\r\n\t\t\tresults = { ...products };\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error.message);\r\n\t\t});\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\n\r\nexport const fetchCategories = async (category_type) => {\r\n\tlet results = [];\r\n\r\n\tawait axios.get(routes.api_categories_endpoint).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching product categories');\r\n\t\t}\r\n\t}).then(categories => {\r\n\t\tcategories.forEach(category => {\r\n\t\t\tif(category.category_type === category_type){\r\n\t\t\t\tresults.push(category);\r\n\t\t\t}\r\n\t\t});\r\n\t}).catch(error => {\r\n\t\tconsole.log('Categories Error : ',error.message);\r\n\t});\r\n    \r\n\treturn results;\r\n};\r\n\r\nexport const saveCategory = async (category) => {\r\n\tlet results = [];\r\n\r\n\tawait axios.post(routes.api_categories_endpoint,category).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new category');\r\n\t\t}\r\n\t}).then(category => {\r\n\t\tresults = category;\r\n\t}).catch(error => {\r\n\t\tconsole.log('Save Caregoty',error.message);\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveProduct = async(product) => {\r\n\tlet results = {status : true,payload:{},error:{}};\r\n   \r\n\r\n\tawait axios.post(routes.api_products_endpoint,product).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new product');\r\n\t\t}\r\n\t}).then(product => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = product;\r\n\r\n\t}).catch(error => {\r\n\t\tconsole.log('Save product error',error.message);\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const onDeleteProduct = async(product) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.delete(routes.api_products_endpoint + `/${product.uid}/${product.id}`).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}\r\n\t}).then(product => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...product};\r\n    \r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};      \r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const doAddService = async(service) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_services_endpoint,service).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new service');\r\n\t\t}\r\n\t}).then(service => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = service;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const updateService = async(service) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_services_endpoint,service).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error updating service');\r\n\t\t}\r\n\t}).then(service => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...service};\r\n\t\tresults.error = {};\r\n\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const updateProduct = async(product) => {\r\n\tlet results = {status : true, payload: {}, error : {}};\r\n\r\n\tawait axios.put(routes.api_products_endpoint,product).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error updating product');\r\n\t\t}\r\n\t}).then(product => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload ={...product};\r\n\t\tresults.error = {};\r\n\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchProductRequests = async(uid,id) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_products_endpoint + `/requests/${uid}/${id}`).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error fetching product requests');\r\n\t\t}\r\n\t}).then(requests => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...requests];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const fetchServiceRequests = async(uid,id) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_services_endpoint + `/requests/${uid}/${id}`).then(result =>{\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error fetching service requests');\r\n\t\t}\r\n\t}).then(requests => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...requests];\r\n\t\tresults.error = {};  \r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const onDeleteService = async(service) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.delete(routes.api_services_endpoint,service).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error deleting service');\r\n\t\t}\r\n\t}).then(service => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...service};\r\n\t\tresults.error ={};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const savePhysicalAddress = async(physical_address) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_physical_endpoint,physical_address).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving new physical address');\r\n\t\t}\r\n\t}).then(physical => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = physical;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const fetchPhysicalAddress =async (seed,stateKey) => {\r\n\tlet response = {};\r\n\tlet request_data = {\r\n\t\tuid: seed\r\n\t};\r\n\r\n\tawait axios.get(routes.api_physical_endpoint + `/${seed}`).then(results => {\r\n\t\tif (results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error loading physical address');\r\n\t\t}\r\n\t}).then(physical => {\r\n\t\tresponse = {...physical};\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\r\n\treturn response;\r\n};\r\n\r\n\r\nexport const saveContactDetails = async(contact_details) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_contact_endpoint, contact_details).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving contact details');\r\n\t\t}\r\n\t}).then(contact => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = contact;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = error;\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchContactDetails = async (seed,stateKey) => {\r\n\tlet response = {};\r\n\tawait axios.get(routes.api_contact_endpoint + `/${seed}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error loading contact details');\r\n\t\t}\r\n\t}).then(contact => {\r\n\t\tresponse = {...contact};\r\n\r\n\t}).catch(error => {\r\n\t\tconsole.log(error.message);\r\n\t});\r\n\r\n\treturn response;\r\n};\r\n\r\n\r\n\r\nexport const addToCart = async cart_item => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_cart_endpoint, cart_item)\r\n\t\t.then(result => {\r\n\t\t\tif (result.status === 200) {\r\n\t\t\t\treturn result.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error adding cart item');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(cart_items => {\r\n\t\t\tresults.status = true;\r\n\t\t\tresults.payload = [...cart_items];\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.error = { ...error };\r\n\t\t});\r\n\tconsole.log('Add to cart results : ', results);\r\n\treturn results;\r\n};\r\n\r\n\r\n\r\nexport const retrieveCart = async uid => {\r\n\tlet results = {status : true, cart_items : [], cart : {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_cart_endpoint + `/${uid}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching cart');\r\n\t\t}\r\n\t}).then(Response => {\r\n\t\tresults.status = true;\r\n\t\tresults.cart = Response.cart;\r\n\t\tresults.cart_items = Response.cart_items;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const deleteCart = async uid => {\r\n\tlet results = { status: true, cart_items: [], cart: {}, error: {} };\r\n\tawait axios.delete(routes.api_cart_endpoint + `/${uid}`).then(response => {\r\n\t\tif (response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error removing cart');\r\n\t\t}\r\n\t}).then(cart => {\r\n\t\tresults.status = true;\r\n\t\tresults.cart_items = [];\r\n\t\tresults.cart = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const applyCouponCode = async coupon => {\r\n\tlet results = { status: true, coupon_code: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_coupons_endpoint,coupon).then(response => {\r\n\t\tif (response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error on server or coupon code not found',response.data);\r\n\t\t}\r\n\t}).then(response => {\r\n\t\tif (response.succeed){\r\n\t\t\tresults.status = response.succeed;\r\n\t\t\tresults.coupon_code = { ...response.coupon };    \r\n\t\t}else{\r\n\t\t\tresults.status = response.succeed;\r\n\t\t\tresults.error.message = response.message;    \r\n\t\t}\r\n\t}).catch(error => {\r\n\t\tconsole.log('coupon code error ',error.message);\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\n\r\nexport const fetchStore = async uid => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_store_endpoint + `/${uid}`).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error fetching store');\r\n\t\t}\r\n\t}).then(store => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...store};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const addStore = async (client_store) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\tawait axios.post(routes.api_store_endpoint,client_store).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error adding store');\r\n\t\t}\r\n\t}).then(store => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...store};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\n\r\nexport const fetchTransactions = async(uid) => {\r\n\tlet results = { status: true, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_transactions_endpoint+`/${uid}`).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching transactions');\r\n\t\t}\r\n\t}).then(transactions => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...transactions];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const createTransaction = async client_transaction => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\tawait axios.post(routes.api_transactions_endpoint,client_transaction).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error creating transaction');\r\n\t\t}\r\n\t}).then(transaction => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...transaction};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const removeTransaction = async (id,uid) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.delete(routes.api_transactions_endpoint+`/${uid}/${id}`).then(result => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error removing transanction');\r\n\t\t}\r\n\t}).then(transactions => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...transactions];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUserByID = async (uid) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n  \r\n\tawait axios.get(routes.api_user_endpoint + `/${uid}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t}\r\n\t}).then(user => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...user};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const processDeposit = async (deposited) => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_transactions_endpoint,deposited).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error processing deposit');\r\n\t\t}\r\n\t}).then(deposited => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...deposited};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload= {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const onSearch = async search_text => {\r\n\tlet results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.get(routes.api_products_endpoint + `/search/${search_text}`).then(result => {\r\n\t\tif (result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error performing search');\r\n\t\t}\r\n\t}).then(products => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...products];\r\n\t\tresults.error = {}  ;\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = { ...error };\r\n\t});\r\n\r\n\r\n\tawait axios.get(routes.api_services_endpoint + `/search/${search_text}`).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error performing seach');\r\n\t\t}\r\n\t}).then(services => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...results.payload,...services];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\n\r\nexport const fetchBankingDetails = async uid => {\r\n\tconst results = { status: true, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_dashboard_endpoint + `/banking/${uid}`).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching banking details');\r\n\t\t}\r\n\t}).then(banking => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...banking];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = {...error};\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t});\r\n\r\n\treturn results;\r\n};","import React ,{useState,useEffect,Fragment,useContext}from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {products_init,category_init} from '../market-constants';\r\nimport { routes,settings } from '../../../constants';\r\nimport * as apiRequests from '../api-requests';\r\nimport * as productStore from '../CheckOut/store-basket';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\n\r\nconst Product = ({product,addProductToBasket}) => {\r\n\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst { user_account_state} = useContext(UserAccountContext);\r\n\tconst [quantity,setQuantity] = useState(1);\r\n\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n\tconst [display,setDisplay] = useState('product-listing');\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst addToBasket = async product => {    \r\n    \r\n\t\tconsole.log('Adding this product to basket',product);\r\n\t\tif (user_account_state.user_account.uid){\r\n\t\t\ttry {\r\n\t\t\t\tawait addProductToBasket(product,quantity)\r\n\t\t\t\t\t.then(Response => {\r\n\t\t\t\t\t\tif (Response.status) {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: ` successfully add ${product.product_name} to basket`\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: Response.error.message,\r\n\t\t\t\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tsetInline({message:'you are presently not logged in please login in order to start buying and selling products in this portal',message_type:'error'});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"box box-info\">\r\n\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t<h3 className=\"box-title\" title={product.description}>\r\n\t\t\t\t\t\t\t<Link to={routes.market_products_page + `/${product.seo_link}`}>\r\n\t\t\t\t\t\t\t\t{product.product_name}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t{/*\r\n                            more details button, and also like button,\r\n                            the share button can be used in more detail window\r\n                        */}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='btn btn-box-tool'\r\n\t\t\t\t\t\t\t\tname='productmenu'\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu align-left\">\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink align-left\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"product-details\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('product-details')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-file\"> </i> Product details{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink align-left\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"product-listing\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('product-listing')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-file\"> </i> Product listing{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t):null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"pola-image\"\r\n\t\t\t\t\t\tsrc={product.product_art}\r\n\t\t\t\t\t\talt={product.product_name}\r\n\t\t\t\t\t\ttitle={`\r\n                          Title : ${product.product_name}  \r\n                          Description : ${product.description}\r\n              \r\n                          ----------------------------------\r\n              \r\n                          Price : R ${product.price}.00\r\n            `}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"polatext\">\r\n\t\t\t\t\t\t<span>{product.description}</span>\r\n\t\t\t\t\t\t<div className=\"box box-tools\">\r\n\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t<div className='input-group'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tclassName='form-control col-sm-1'\r\n\t\t\t\t\t\t\t\t\t\tname='quantity'\r\n\t\t\t\t\t\t\t\t\t\tvalue={quantity}\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setQuantity(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-outline-light\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => addToBasket(product).then(result => {\r\n                                            // eslint-disable-next-line no-console\r\n\t\t\t\t\t\t\t\t\t\t    console.log(result);\r\n\t\t\t\t\t\t\t\t\t\t    setInline({message:`${quantity} products added to shopping basket`,message_type:'inf'});\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\ttitle={`Add ${product.product_name} to Basket `}\r\n\t\t\t\t\t\t\t\t\t>\r\n                                    R {product.price}.00 Add to Basket\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default function Products() {\r\n\tconst [products,setProducts] = useState([]);\r\n\tconst [categories,setCategories] = useState([]);\r\n\tconst [sub_categories,setSubCategories] = useState([]);\r\n\tconst [show_products, setShowProducts] = useState([]);\r\n\r\n\tconst [shoppingBasket,setShoppingBasket] = useState([]);\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\tconst [title,setTitle] = useState('All Categories');\r\n\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\r\n\tconst addProductToBasket = async (product,quantity) => {\r\n\t\tlet results = { status: true, payload: {}, error: {} };     \r\n\t\tlet cart_item = {\r\n\t\t\tuid : user_account_state.user_account.uid,\r\n\t\t\titem : product,\r\n            quantity : quantity\r\n\t\t};\r\n\r\n\t\tawait apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {          \r\n\t\t\tresults = { ...Response };\r\n\t\t\tif(Response.status){                        \r\n\t\t\t\tsetShoppingBasket(Response.payload);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(Response.error.message);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn results;\r\n\t};\r\n\r\n\r\n\tconst createSubCategories = async (response) => {\r\n\t\tlet subCategoryList = [];\r\n\r\n\t\tawait response.forEach(category => {\r\n\t\t\tif (!subCategoryList.includes(category.sub_category)) {\r\n\t\t\t\tsubCategoryList.push(category.sub_category);\r\n\t\t\t}\r\n\t\t});\r\n\t\tconsole.log('Sub Category List : ',subCategoryList);\r\n\t\treturn subCategoryList;\r\n\t};\r\n\r\n\r\n\tconst onCategoryClick = cat => {\r\n\t\tconsole.log('Cliked category', cat);\r\n      \r\n\t\tlet expanded_category = categories.find(expanded_category => expanded_category.sub_category === cat);\r\n\r\n\t\tlet filtered_products = products.filter(product => product.category_id === expanded_category.category_id);\r\n\r\n\t\tconsole.log('Filtered Products ', filtered_products);\r\n\t\tsetShowProducts(filtered_products);\r\n\t\tsetTitle(cat);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n      \r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tlet category_type = 'products';\r\n        \r\n\t\t\tlet response = [];\r\n\r\n\t\t\tawait apiRequests.fetchCategories(category_type).then(categories => {\r\n\t\t\t\tresponse = categories;\r\n\t\t\t\tconsole.log('This Categirues',categories);\r\n\t\t\t\tsetCategories(categories);\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\r\n\t\t\tlet subs = await createSubCategories(response);\r\n\r\n\t\t\tsetSubCategories(subs);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);        \r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetCategories([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tapiRequests.fetchProductsAPI().then(result => {\r\n\t\t\tsetProducts(result);\r\n\t\t\tsetShowProducts(result);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsetProducts([]);\r\n\t\t\tsetShowProducts([]);\r\n\t\t};\r\n\t}, [categories]);\r\n\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-product-hunt\"> </i> Products\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tsub_categories.map(sub => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Sub Categories', sub);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"btn btn-block droplink\" name={sub} key={sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet cat = sub;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCategoryClick(cat);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-folder-open\"> </i> {sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t<h3 className='box-title'>{title}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{show_products.map(product => {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tproduct.product_name &&\r\n                product.product_art &&\r\n                product.description &&\r\n                product.price &&\r\n                product.active\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Product\r\n\t\t\t\t\t\t\t\t\tproduct={product}\r\n\t\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\t\taddProductToBasket={addProductToBasket}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { useState, Fragment,useContext,useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { service_init, category_init } from '../market-constants';\r\nimport { routes, settings } from '../../../constants';\r\nimport * as apiRequests from '../api-requests';\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\n\r\nconst Service = ({ service, addServiceToBasket }) => {\r\n\r\n\tconst [inline, setInline] = useState({ message: '', message_type: 'info' });\r\n\tconst { user_account_state } = useContext(UserAccountContext);\r\n\r\n\tconst addToBasket = async service => {\r\n\t\tconsole.log('Adding this service to basket', service);\r\n\t\tif (user_account_state.user_account.uid) {\r\n\t\t\ttry {\r\n\t\t\t\tawait addServiceToBasket(service)\r\n\t\t\t\t\t.then(Response => {\r\n\t\t\t\t\t\tif (Response.status) {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: ` successfully add ${service.service_name} to basket`\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\tmessage: Response.error.message,\r\n\t\t\t\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetInline({\r\n\t\t\t\tmessage:\r\n          'you are presently not logged in please login in order to start buying and selling services in this portal',\r\n\t\t\t\tmessage_type: 'error'\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"box box-info\">\r\n\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t<h3 className=\"box-title\" title={service.description}>\r\n\t\t\t\t\t\t\t<Link to={routes.market_services_page + `/${service.seo_link}`}>\r\n\t\t\t\t\t\t\t\t{service.service_name}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"pola-image\"\r\n\t\t\t\t\t\tsrc={service.service_art}\r\n\t\t\t\t\t\talt={service.service_name}\r\n\t\t\t\t\t\ttitle={`\r\n              Title : ${service.service_name}  \r\n              Description : \r\n              ${service.description}\r\n              \r\n              ----------------------------------\r\n              \r\n              Price : R ${service.price}.00\r\n            `}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"polatext\">\r\n\t\t\t\t\t\t<span>{service.description}</span>\r\n\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary \"\r\n\t\t\t\t\t\t\t\t\tonClick={e => addToBasket(service).then(result => {\r\n\t\t\t\t\t\t\t\t\t    setInline({message:`${service.service_name} added to basket`, message_type:'inf'});\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\ttitle={`Add ${service.service_name} to Basket `}\r\n\t\t\t\t\t\t\t\t>\r\n                  R {service.price}.00 Add to Basket\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t{inline.message ? (\r\n\t\t\t\t\t\t\t\t\t<InlineMessage\r\n\t\t\t\t\t\t\t\t\t\tmessage={inline.message}\r\n\t\t\t\t\t\t\t\t\t\tmessage_type={inline.message_type}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default function Services() {\r\n\r\n\tconst[services,setServices] = useState([]);\r\n\tconst [categories, setCategories] = useState([]);\r\n\tconst [sub_categories, setSubCategories] = useState([]);\r\n\tconst [show_services, setShowServices] = useState([]);\r\n\r\n\tconst [shoppingBasket, setShoppingBasket] = useState([]);\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst addServiceToBasket = async service => {\r\n\r\n\t\tlet results = { status: true, payload: {}, error: {} };\r\n\t\tlet cart_item = {\r\n\t\t\tuid: user_account_state.user_account.uid,\r\n\t\t\titem: service,\r\n\t\t\tquantity: '1'\r\n\t\t};\r\n\r\n\t\tawait apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {\r\n\t\t\tresults = { ...Response };\r\n\t\t\tif (Response.status) {\r\n\t\t\t\tsetShoppingBasket(Response.payload);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(Response.error.message);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn results;\r\n\t};\r\n\r\n\tconst createSubCategories = response => {\r\n\t\tlet subCategoryList = [];\r\n\r\n\t\tresponse.forEach(category => {\r\n\t\t\tif (!subCategoryList.includes(category.sub_category)) {\r\n\t\t\t\tsubCategoryList.push(category.sub_category);\r\n\t\t\t}\r\n\t\t});\r\n\t\tconsole.log('Sub Category List : ', subCategoryList);\r\n\t\treturn subCategoryList;\r\n\t};\r\n\r\n\tconst onCategoryClick = category => {\r\n\t\tlet expanded_category = categories.find(\r\n\t\t\texpanded_category => expanded_category.sub_category === category\r\n\t\t);\r\n\r\n\t\tlet filtered_services = services.filter(service => {\r\n\t\t\treturn service.category_id === expanded_category.category_id;\r\n\t\t});\r\n\t\tconsole.log('Filtered Service ', filtered_services);\r\n\t\tsetShowServices(filtered_services);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tlet category_type = 'services';\r\n\r\n\t\t\tlet response = [];\r\n\r\n\t\t\tawait apiRequests\r\n\t\t\t\t.fetchCategories(category_type)\r\n\t\t\t\t.then(categories => {\r\n\t\t\t\t\tresponse = categories;\r\n\t\t\t\t\tsetCategories(categories);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\r\n\t\t\tlet subs = await createSubCategories(response);\r\n\r\n\t\t\tsetSubCategories(subs);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetCategories([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tapiRequests.fetchServicesAPI().then(result => {\r\n\t\t\tsetServices(result);\r\n\t\t\tsetShowServices(result);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsetServices([]);\r\n\t\t\tsetShowServices([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n  \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-server\"> </i> Services\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tsub_categories.map(sub => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Sub Categories', sub);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"btn btn-block droplink\" name={sub} key={sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet cat = sub;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCategoryClick(cat);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-folder-open\"> </i> {sub}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{show_services.map(service => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tservice.service_name &&\r\n            service.service_art &&            \r\n            service.price\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Service\r\n\t\t\t\t\t\t\t\tservice={service}\r\n\t\t\t\t\t\t\t\tkey={service.id}\r\n\t\t\t\t\t\t\t\taddServiceToBasket={addServiceToBasket}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from 'react';\r\n\r\nimport Products from './Products/Products';\r\nimport Services from './Service/Services';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { routes } from '../../constants';\r\nimport * as apiRequests from './api-requests';\r\nimport {firebase} from '../../firebase';\r\n\r\nimport {UserAccountContext} from '../../context/UserAccount/userAccountContext';\r\n\r\n\r\nexport default function Market() {\r\n\r\n\tconst [products, setProducts] = useState([]);\r\n\tconst [services, setServices] = useState([]);\r\n\tconst [display,setDisplay] = useState('products');\r\n\tconst [search,setSearch] = useState('');\r\n\tconst [search_results,setSearchResults] = useState([]);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst {user_account_state,doLogin } = useContext(UserAccountContext);\r\n\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n  \r\n\r\n\tconst onSearch = async e => {\r\n\t\te.preventDefault();\r\n    \r\n\t\tlet search_text = search;\r\n\r\n\t\tawait apiRequests.onSearch(search_text).then(results => {\r\n\t\t\tif (results.status){\r\n\t\t\t\tsetSearchResults(results.payload);\r\n\t\t\t}else{\r\n\t\t\t\tsetSearchResults([]);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:'error performing search',message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tapiRequests.fetchProductsAPI().then(result => {\r\n\t\t\tsetProducts(result);\r\n\t\t});\r\n\r\n\t\tapiRequests.fetchServicesAPI().then(result => {\r\n\t\t\tsetServices(result);\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\t\t\tsetProducts([]);\r\n\t\t\tsetServices([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> Market Place{' '}\r\n\t\t\t\t\t\t</strong>{' '}\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-bars\"> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"products\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('products')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-product-hunt\"> </i> Products\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"services\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('services')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-server\"> </i> Services\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t{user_account_state.user_account.uid ? (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"                    \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={routes.check_out_page}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool droplink\"                    \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={routes.login_page}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-sign-in\"> </i> Login                      \r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t):null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n          \r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"box box-footer\">\r\n\r\n\t\t\t\t\t{display === 'products' ? <Products products={products} /> : ''}\r\n\r\n\t\t\t\t\t{display === 'services' ? <Services services={services} /> : ''}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from \"react\";\r\nimport {\r\n  products_init,\r\n  products_errors_init,\r\n  service_init,\r\n  service_errors_init,\r\n  category_init,\r\n  category_errors_init\r\n} from \"./market-constants\";\r\nimport { firebase } from \"../../firebase\";\r\nimport * as RequestsAPI from \"./api-requests\";\r\nimport axios from \"axios\";\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\n\r\nimport {Utils} from '../../utilities';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nfunction AddProduct() {\r\n  const [product, setProduct] = useState(products_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message : '', message_type:'info'});\r\n  const [errors,setErrors] = useState(products_errors_init)\r\n  const [categories, setCategories] = useState([]);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === product.category_id\r\n      );\r\n\r\n      const uploadTask = firebase.storage\r\n        .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setProduct({\r\n                ...product,\r\n                product_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n\r\n  };\r\n\r\n  const FileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doSaveProduct = async e => {\r\n    e.preventDefault();\r\n    let product_to_save = Object.assign({}, product);\r\n    product_to_save.uid = user_account_state.user_account.uid;\r\n    console.log(\"Product to Save\", product_to_save);\r\n    product_to_save = JSON.stringify(product_to_save);\r\n    RequestsAPI.saveProduct(product_to_save)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"successfully saved product\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_product_name = () => {\r\n      if(Utils.isEmpty(product.product_name)){\r\n        setErrors({\r\n          ...errors,\r\n          product_name_error : 'product name field cannot be empty'\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_description = () => {\r\n      if(Utils.isEmpty(product.description)){\r\n        setErrors({...errors,description_error : 'product description cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = () => {\r\n      if(Utils.isMoney(product.price)){\r\n        setErrors({...errors,price_error: 'product price is invalid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_art = () => {\r\n      if(Utils.isEmpty(product.product_art)){\r\n        setErrors({...errors,product_art_error : 'product art is not valid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_category_id = () => {\r\n      if(Utils.isEmpty(product.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select main category type'});\r\n      }\r\n    }\r\n\r\n    const do_check_errors = () => {\r\n        check_product_name() ? isError = true : isError = isError;\r\n        check_product_description() ? (isError = true) : (isError = isError);\r\n        check_price() ? (isError = true) : (isError = isError);\r\n        check_product_art() ? (isError = true) : (isError = isError);\r\n        check_category_id() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n    }\r\n\r\n\r\n    return await do_check_errors();     \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let category_type = 'products';\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log('Category results',results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Product</strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"product_name\"\r\n              value={product.product_name}\r\n              placeholder=\"Product Name...\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.product_name_error ? (\r\n              <InlineError message={errors.product_name_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Product Description...\"\r\n              value={product.description}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? (\r\n              <InlineError message={errors.description_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Product Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Product Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={product.price}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? (\r\n              <InlineError message={errors.price_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Product Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"product_art\"\r\n              onChange={e => FileArtChange(e)}\r\n            />\r\n            {errors.product_art_error ? (\r\n              <InlineError message={errors.product_art_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-product-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Product Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={product.product_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-product\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  if (isError) {\r\n                    doSaveProduct(e).then(result => {\r\n                      console.log(\"Product saved\");\r\n                    });\r\n                  } else {\r\n                    setInline({\r\n                      message: \"there was an error processing form\",\r\n                      message_type: \"error\"\r\n                    });\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Product\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setErrors(products_errors_init);\r\n                setInline({ message: \"\", message_type: \"info\" });\r\n                setProduct(products_init);\r\n              }}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddService() {\r\n  const [service, setService] = useState(service_init);\r\n  const [errors,setErrors] = useState(service_errors_init);\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [categories,setCategories] = useState([]);\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === service.category_id\r\n      );\r\n      const uploadTask = firebase.storage\r\n        .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setService({\r\n                ...service,\r\n                service_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'please fill in the form correctly before you upload service art',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const fileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_service_name = () => {\r\n      if(Utils.isEmpty(service.service_name)){\r\n        setErrors({...errors,service_name_error : 'service name field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_description = e => {\r\n      if(Utils.isEmpty(service.description)){\r\n        setErrors({...errors,description_error : 'service description field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_art = e => {\r\n      if(Utils.isEmpty(service.service_art)){\r\n        setErrors({...errors,service_art_error : 'service art cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = e => {\r\n      \r\n        if(Utils.isMoney(service.price) === false){\r\n          setErrors({...errors,price_error:'invalid service price'});\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const check_service_category = e => {\r\n      if(Utils.isEmpty(service.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select service category'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const do_check =  e => {\r\n      check_service_name() ? isError = true : isError = false;\r\n      check_service_description() ? isError = true : isError = false;\r\n      check_service_art() ? isError = true : isError = false;\r\n      check_price() ? isError = true : isError = false;\r\n      check_service_category() ? isError = true : isError = false;\r\n\r\n      return isError;\r\n      \r\n    } \r\n\r\n\r\n    return await do_check();\r\n    \r\n  }\r\n\r\n\r\n  const addService = async e => {\r\n      let my_service = {...service}; \r\n      my_service.uid = user_account_state.user_account.uid;\r\n      await RequestsAPI.doAddService(JSON.stringify(my_service)).then(results => {\r\n          if(results.status){\r\n            setService(results.payload);\r\n            setInline({message:'successfully saved service',message_type:'info'});\r\n          }else{\r\n            setInline({message:results.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log(\"Category results\", results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Service</strong>\r\n          </h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"service_name\"\r\n              value={service.service_name}\r\n              placeholder=\"Service Name...\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.service_name_error ? <InlineError message={errors.service_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Service Description...\"\r\n              value={service.description}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Service Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={service.price}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? <InlineError message={errors.price_error} />  : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"service_art\"\r\n              onChange={e => fileArtChange(e)}\r\n            />\r\n            {errors.service_art_error ? <InlineError message={errors.service_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              onClick={e => doUpload(e).then(results => {console.log(results)})}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Service Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={\r\n                  service.service_art ||\r\n                  \"https://via.placeholder.com/300/09f/fff.png\"\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button \r\n            type='button'\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={e => checkErrors(e).then(isError => {\r\n              isError ?\r\n                setInline({message:'there was an error processing form'})\r\n              : addService(e).then(results => {\r\n                    console.log(results);\r\n                    setInline({message:''})\r\n                }).catch(error => {\r\n                  setInline({message:error.message,message_type:'error'});\r\n                });\r\n            })}\r\n            \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Service\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setService(service_init);\r\n                setErrors(service_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}>\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddCategories() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(category_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [errors, setErrors] = useState(category_errors_init);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const CategoryArtFileChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n\r\n    const uploadTask = firebase.storage.ref(`categories/${user_account_state.user_account.uid}/${image.name}`).put(image);\r\n        await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n            //progress\r\n            const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setUploaded({\r\n            ...uploaded,\r\n            progress\r\n            });\r\n        },\r\n        error => {\r\n            //error function\r\n            console.log(error.message);\r\n        },\r\n        () => {\r\n            // complete function\r\n            firebase.storage\r\n            .ref(\"categories\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                console.log(url);\r\n                setCategory({\r\n                ...category,\r\n                category_art: url\r\n                });\r\n            });\r\n      }\r\n    );\r\n  };\r\n\r\n  const doAddCategory = async e => {\r\n        // e.preventDefault();\r\n        let my_category = Object.assign({},category);\r\n        my_category.uid = user_account_state.user_account.uid;\r\n        my_category = JSON.stringify(my_category);\r\n        console.log(\"CATEGORY\", my_category);\r\n        RequestsAPI.saveCategory(my_category).then(results => {\r\n            setCategory(results);\r\n            setCategories({ categories: categories.push(results) });\r\n            setInline({ message: \"successfully created new category\" });\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n  };\r\n\r\n  const checkErrors = async e => {\r\n        // e.preventDefault();\r\n        let isError = false;\r\n        const check_category_name = () => {\r\n            if(Utils.isEmpty(category.category_name)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_name_error: 'category name cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_type = () => {    \r\n            if(Utils.isEmpty(category.category_type)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_type_error : 'Please select category type'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_sub_category = () => {\r\n            if(Utils.isEmpty(category.sub_category)){\r\n                setErrors({\r\n                    ...errors,\r\n                    sub_category_error: 'sub category cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_description = () => {\r\n            if(Utils.isEmpty(category.description)){\r\n                setErrors({\r\n                    ...errors,\r\n                    description_error : 'description cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_notes = () => {\r\n            if(Utils.isEmpty(category.notes)){\r\n                setErrors({\r\n                    ...errors,\r\n                    notes_error : 'Notes cannot be empty'\r\n                });\r\n                return true\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_art = () => {\r\n            if(Utils.isEmpty(category.category_art)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_art_error : 'Category Art cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_category_name() ? isError = true : isError = isError;\r\n            check_category_type() ? isError = true : isError = isError;\r\n            check_sub_category() ? isError = true : isError = isError;\r\n            check_description() ? isError = true : isError = isError;\r\n            check_notes() ? isError = true : isError = isError;\r\n            check_category_art() ? isError = true : isError = isError;\r\n\r\n            return isError;\r\n        }\r\n\r\n        return await do_check();\r\n  };\r\n\r\n\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-bookmark-o\"></i> Add Categories\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Category Type </label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_type\"\r\n              value={category.category_type}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }>\r\n                <option value={null}>Select Product or Service Category Type</option>\r\n                <option value=\"products\">Products</option>\r\n                <option value=\"services\">Services</option>\r\n            </select>\r\n            {errors.category_type_error ? <InlineError message={errors.category_type_error} /> : ''}\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <input \r\n                type='text' \r\n                className='form-control'\r\n                name='sub_category'\r\n                placeholder='Sub Category...'\r\n                value={category.sub_category}\r\n                onChange={e =>setCategory({ ...category, [e.target.name]: e.target.value })}\r\n            />\r\n            {errors.sub_category_error ? <InlineError message={errors.sub_category_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_name\"\r\n              placeholder=\"Category Name...\"\r\n              value={category.category_name}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.category_name_error ? <InlineError message={errors.category_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Description...\"\r\n              value={category.description}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"notes\"\r\n              placeholder=\"Notes...\"\r\n              value={category.notes}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.notes_error ? <InlineError message={errors.notes_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Category Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={e => CategoryArtFileChange(e)}\r\n            />\r\n            {errors.category_art_error ? <InlineError message={errors.category_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-category-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Category Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img                \r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={category.category_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-category\"\r\n              onClick={e => checkErrors(e).then(isError => {\r\n                  isError ? setInline({message: 'there was an error processing form ', message_type:'error'}) \r\n                    : doAddCategory(e)\r\n              }) }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Save Category\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              name=\"reset-category\"\r\n              onClick = {e => {\r\n                setCategory(category_init);\r\n                setErrors(category_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}              \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className='form-group'>\r\n              { inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default function MyMarket() {\r\n  const [display, setDisplay] = useState(\"add-categories\");\r\n  const [product, setProduct] = useState(products_init);\r\n  const [service, setService] = useState(service_init);\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n              Services\r\n            </strong>\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className='fa fa-bars'> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-categories\"\r\n                    onClick={e => setDisplay(\"add-categories\")}\r\n                  >\r\n                    <i className=\"fa fa-bookmark\"> </i> Categories\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-products\"\r\n                    onClick={e => setDisplay(\"add-products\")}\r\n                  >\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Products\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-services\"\r\n                    onClick={e => setDisplay(\"add-services\")}\r\n                  >\r\n                    <i className=\"fa fa-shopping-cart\"> </i> Services\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"add-products\" ? <AddProduct /> : \"\"}\r\n        {display === \"add-services\" ? <AddService /> : \"\"}\r\n        {display === \"add-categories\" ? <AddCategories /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","\r\nexport const chat_server = \"http://localhost:5000\";\r\nexport const chat_server_online = \"https://gentle-coast-76722.herokuapp.com/\";\r\n\r\nexport const chat_message_init = {\r\n    chat_id : '',\r\n    message_id : '',\r\n    author:'',\r\n    message:'',\r\n    timestamp:'',\r\n    attachments : ''\r\n};\r\n\r\nexport const chat_room_init = {\r\n    chat_id : 'weqtrading',\r\n    created_by : 'heinrich',\r\n    messages : [],\r\n    users : []\r\n};\r\n\r\nexport const chat_user_init = {\r\n    chat_id : '',\r\n    author : ''\r\n};\r\n\r\nexport const feedback_init = { author: \"\", message: \"\" };\r\n","\r\n\r\n/**\r\n * chat context provider encapsulating all the \r\n * functions of the socket.io and message que management\r\n */\r\nimport React, { Component, useContext, createContext,useState,useEffect, Children } from \"react\";\r\nimport useSocket from \"use-socket.io-client\";\r\nimport { UserAccountContext } from \"../UserAccount/userAccountContext\";\r\nimport * as chat_constants from \"../../components/Chat/chat-constants\";\r\nimport { extended_user } from \"../../components/Auth/auth-constants\";\r\nimport * as authAPI from \"../../components/Auth/auth-api\";\r\nexport const SocketContext = createContext();\r\n\r\nlet server_url = '';\r\n// necessary so i can upload the code without modifying chat servers\r\nif (document.URL.includes('localhost') || document.URL.includes('127.0.0.1')){    \r\n    server_url = chat_constants.chat_server;    \r\n}else{\r\n    server_url = chat_constants.chat_server_online;\r\n}\r\n\r\nexport const SocketContextProvider = (props) => {\r\n\r\n    const [messages,setMessages] = useState([]);  \r\n    const [message,setMessage] = useState(chat_constants.chat_message_init);  \r\n    const [feedback, setFeedBack] = useState(chat_constants.feedback_init);\r\n\r\n\r\n    const [writer,setWriter] = useState(extended_user);\r\n\r\n    // initializing socket to use websockets\r\n    const [socket] = useSocket(server_url, {transports: [\"websocket\"]});\r\n\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n    const uid = user_account_state.user_account.uid;\r\n    \r\n  // if there is a feedback being sent user details for that feedback will be retrieved here\r\n  const retrieveFeedbackUser = async uid => {\r\n    await authAPI\r\n      .fetchUser(uid)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setWriter(results.payload);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // console.log(error);\r\n      });\r\n  };\r\n\r\n  // updating user interface with new messages\r\n  const updateMessages = async new_message => {\r\n    // console.log(\"Returned Message\", new_message);\r\n    await setMessages(new_message);\r\n    // console.log(\"Messages \", new_message);\r\n    return true;\r\n  };\r\n\r\n    useEffect(() => {\r\n        socket.connect();    \r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [])\r\n    \r\n  useEffect(() => {  \r\n\r\n    // reacting to on chat messages\r\n    socket.on(\"chat\", data => {      \r\n      \r\n      const new_message = [...data];\r\n      \r\n      updateMessages(new_message).then(result => {\r\n        setFeedBack({ author: \"\", message: \"\" });\r\n        setWriter(extended_user);\r\n        setMessage({ ...message, message: \"\" });\r\n      });\r\n\r\n    });\r\n\r\n    // reacting to on typing messages\r\n    socket.on(\"typing\", data => {\r\n      const uid = data.author;\r\n      retrieveFeedbackUser(uid).then(result => {\r\n        setFeedBack({\r\n          author: data.author,\r\n          message: data.message\r\n        });\r\n      });\r\n    });\r\n\r\n    // reacting to on populate messages\r\n    socket.on(\"populate\", data => {\r\n      // this allows my app to populate itself with the most recent messages on entry\r\n      // the data field carries an array which includes messages            \r\n      setMessages(data);\r\n    });\r\n\r\n    // initializing message so that when a message \r\n    // is sent it is sent with the user id of the correct user\r\n    setMessage({\r\n      ...message,\r\n      author: uid\r\n    });\r\n\r\n\r\n    return () => {\r\n      setMessage({\r\n        ...message,\r\n        author: \"\"\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  // function used to send a message\r\n  const onSendMessage = e => {\r\n    let data = message;\r\n    data.author = uid;\r\n    data.chat_id = chat_constants.chat_room_init.chat_id;\r\n    socket.emit('chat',data);\r\n  };\r\n\r\n  // function used to indicate that this user is typing\r\n  const onTyping = e => {\r\n    setFeedBack(chat_constants.feedback_init);\r\n    let data = message;\r\n    data.author = uid;\r\n    socket.emit('typing',data);\r\n  };\r\n\r\n  //  try calling this method to let the user join the chat room then call onPopulate\r\n  const userJoinChat = () => {\r\n\r\n  };\r\n\r\n  // this function is called on entry to populate with all the messages\r\n  const onPopulate = () => {    \r\n    \r\n    const populate_message = chat_constants.chat_user_init;\r\n    console.log('UID',uid);\r\n    populate_message.author = uid;\r\n    populate_message.chat_id = chat_constants.chat_room_init.chat_id;\r\n\r\n    return populate_message;\r\n  };\r\n\r\n\r\n  // called in order to clear messages\r\n  const onClearMessages = (e) => {      \r\n    let data = chat_constants.chat_room_init;\r\n    socket.emit('clear', data);      \r\n  };\r\n\r\n  // creating the onPupulate entry message\r\n  useEffect(() => {    \r\n    socket.emit(\"populate\", onPopulate());\r\n    return () => {      \r\n    };\r\n  }, []);\r\n\r\n\r\n    return(\r\n            <SocketContext.Provider value = {{\r\n                messages:messages,\r\n                message:message,\r\n                setMessage:setMessage,\r\n                writer:writer,\r\n                typing:onTyping,\r\n                sendMessage:onSendMessage,\r\n                clearMessages : onClearMessages\r\n            }}>                \r\n                {props.children}\r\n            </SocketContext.Provider>            \r\n    )\r\n\r\n};\r\n\r\n\r\n\r\nexport default SocketContextProvider;","\r\n\r\n\r\nimport React, { Component, useContext, createContext,useState,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport {myStore} from '../../localstorage';\r\nimport {UserAccountContext} from '../../context/UserAccount/userAccountContext';\r\n\r\nconst blog_server = \"https://mobius-articles.herokuapp.com/\";\r\n\r\nexport const BlogContext = createContext();\r\n\r\nconst BlogContextProvider = props => {\r\n    // consider storing articles in localstorage using category as key\r\n    const [category, setCategory] = useState(\"entertainment\");\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n      const refineSearch = async () => {\r\n            const uid = user_account_state.user_account.uid;\r\n            const api_routes = blog_server + `refine/${category}`;\r\n            const today = moment().format(\"YYYY-MM-DD\");\r\n            const stateKey = category + uid + \"weqtrading\" + today;\r\n\r\n            const fetchAPI = async () => {\r\n                    await axios.get(api_routes).then(results => {\r\n                        console.log(\"Results\", results);\r\n                        if (results.status === 200) {\r\n                            return results.data;\r\n                        }\r\n                    }).then(articles => {\r\n                        console.log(\"articles\", articles);\r\n                        setPosts(articles);\r\n                        \r\n                        myStore.setState(uid,stateKey,articles).then(results => {\r\n\r\n                        });\r\n\r\n                    }).catch(error => {\r\n                        console.log('error occured',error);\r\n                        setPosts([]);\r\n                    });\r\n            };\r\n            \r\n\r\n            myStore.getState(uid,stateKey).then(results => {\r\n                if (results === undefined){\r\n                    fetchAPI().then(result => console.log('fetched from back end'));\r\n                }else{\r\n                    setPosts(results);\r\n                }\r\n            });\r\n\r\n\r\n            return true;\r\n      };\r\n\r\n    useEffect(() => {          \r\n        refineSearch().then(result => {\r\n            console.log('Initial search performed ',posts);\r\n        });\r\n\r\n        return () => {\r\n            setPosts([]);\r\n        };\r\n\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n      // here search will be performed everytime category changes  \r\n      refineSearch().then(result => {\r\n        console.log('Search Refined',result);\r\n      });\r\n\r\n      return () => {\r\n        setPosts([]);\r\n      };\r\n    }, [category]);\r\n\r\n    return(\r\n        <BlogContext.Provider value={{\r\n            posts:posts,\r\n            setCategory:setCategory,\r\n            category:category\r\n        }}>\r\n        {props.children}\r\n        </BlogContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport default BlogContextProvider;","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\nimport {fetchBankingDetails } from '../Market/api-requests';\r\n\r\nexport { fetchBankingDetails };\r\n\r\nexport const fetchPayments = async uid => {\r\n\r\n\tlet results = {status:true,payload:{},error:{}};\r\n\r\n\tawait axios.get(routes.api_dashboard_endpoint+`/payments/${uid}`).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching transactions');\r\n\t\t}\r\n\t}).then(transactions => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...transactions];\r\n\t\tresults.error ={};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const approvePayment = async (processing,uid) => {\r\n\tlet results = {status : true,payload:{},error:{}};\r\n\r\n\tawait axios.put(routes.api_dashboard_endpoint + `/payments/approve/${uid}`,processing).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error approving payment');\r\n\t\t}\r\n\t}).then(payment => {\r\n\t\tresults.payload = {...payment};\r\n\t\tresults.error = {};\r\n\t\tresults.status = true;\r\n\t}).catch(error => {\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t\tresults.status  = false;\r\n\t});\r\n\treturn results;\r\n};\r\n\r\nexport const rejectPayment = async (processing,uid) => {\r\n\tlet results = {status : true,payload:{},error:{}};\r\n\r\n\tawait axios.put(routes.api_dashboard_endpoint + `/payments/reject/${uid}`,processing).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error rejecting payment');\r\n\t\t}      \r\n\t}).then(payment => {\r\n\t\tresults.payload = {...payment};\r\n\t\tresults.error = {};\r\n\t\tresults.status = true;\r\n\t}).catch(error => {\r\n\t\tresults.error = {...error};\r\n\t\tresults.payload = {};\r\n\t\tresults.status = false;\r\n\t});\r\n\treturn true;\r\n};\r\n\r\n\r\nexport const fetchUserContactForm = async(uid) => {\r\n\tconst results = {status:true,payload:{},error:{}};\r\n\r\n\tawait axios.get(routes.api_dashboard_endpoint + `/contacts/${uid}`).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching contacts');\r\n\t\t}\r\n\t}).then(contacts => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contacts];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchUsersAPI = async uid => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios\r\n\t\t.get(routes.api_dashboard_endpoint + `/users/${uid}`)\r\n\t\t.then(results => {\r\n\t\t\tif (results.status === 200) {\r\n\t\t\t\treturn results.data;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('there was an error fetching users');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(users => {\r\n\t\t\tresults.status = true;\r\n\t\t\tresults.payload = [...users];\r\n\t\t\tresults.error = {};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.payload = [];\r\n\t\t\tresults.error = { ...error };\r\n\t\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const onUpdateUser = async (manageUser,uid) => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.put(routes.api_dashboard_endpoint + `/user/${uid}`,manageUser).then(result => {\r\n\t\tif(result.status === 200){\r\n\t\t\treturn result.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error updating user');\r\n\t\t}\r\n\t}).then(user => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...user};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const sendResponse = async(uid, response_message) => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\t// fetch admin user details\r\n\r\n\t// compile a response message and send to firebase.com function to send\r\n\t// sms messages\r\n\tlet route = routes.api_dashboard_endpoint + `/contact/respond/${uid}`;\r\n\tawait axios.post(route, response_message).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error sending response');\r\n\t\t}\r\n\t}).then(response => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...response};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status  = true;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveBankAccount = async(uid,account) => {\r\n\tconst results = { status: true, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_dashboard_endpoint + `/banking/${uid}`,account).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error saving banking details');\r\n\t\t}\r\n\t}).then(banking => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload ={...banking};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\n\r\nexport const deleteBankingDetails = async(uid,banking_id) => {\r\n\tconst results = { status: true, payload: [], error: {} };\r\n\r\n\tconst action = routes.api_dashboard_endpoint + `/banking/delete/${uid}/${banking_id}`;\r\n\r\n\tawait axios.delete(action).then(results => {\r\n\t\tif(results.status === 200){\r\n\t\t\treturn results.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('error deleting bank account please advice your adminstrator');\r\n\t\t}\r\n\t}).then(banking_details => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...banking_details];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload =[];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};","\r\nexport const client_id = 'AULnK8eNTwd5pVu8N4sWE_j4fLA4yrhNyJs82ikVjbRXiySyOzuNBWUn59NHL0-V0kBvkpxZrSIB8Tux';\r\n\r\nexport const banking_details_init = {\r\n\tbanking_id : '',\r\n    account_holder : '',\r\n    bank_name : '',\r\n\taccount_number : '',\r\n\tbranch_code : '',\r\n};\r\n\r\nexport const banking_details_errors_init = {\r\n    account_holder_error : '',\r\n    bank_name_error : '',\r\n\taccount_number_error : '',\r\n\tbranch_code_error : '',\r\n\r\n};","\r\n// eslint-disable-next-line no-unused-vars\r\nimport React, { Fragment,useContext,useState,useEffect } from 'react';\r\nimport { UserAccountContext } from '../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../constants';\r\nimport {payment_init, payment_errors_init} from '../Market/market-constants';\r\nimport * as apiRequests from './dashboard-api';\r\n\r\nimport {extended_user, extended_user_error} from '../Auth/auth-constants';\r\n\r\nimport axios from 'axios';\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\nimport { Utils } from '../../utilities';\r\n\r\nimport {contact_form_details} from '../Contact/contact-constants';\r\n\r\nimport {Capitalize} from 'react-lodash';\r\nimport {banking_details_errors_init, banking_details_init} from '../Market/CheckOut/checkout_constants';\r\n\r\nconst ShowPayment = payment => {\r\n\tconst [thispayment, setPayment] = useState(payment_init);\r\n\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst approve = async e => {\r\n\t\tlet processing = {...thispayment};\r\n\t\tprocessing = JSON.stringify(processing);\r\n\t\tlet uid = user_account_state.user_account.uid;\r\n\t\tawait apiRequests.approvePayment(processing,uid).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetPayment(results.payload);\r\n\t\t\t\tsetInline({message:'successfully approved payment',message_type:'inf'});\r\n\t\t\t}else{\r\n\t\t\t\tsetPayment(payment_init);\r\n\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {        \r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst reject = async e => {\r\n    \r\n\t\tlet processing = {...thispayment};\r\n    \r\n\t\tprocessing = JSON.stringify(processing);\r\n    \r\n\t\tlet uid = user_account_state.user_account.uid;\r\n\r\n\t\tawait apiRequests.rejectPayment(processing,uid).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetPayment(results.payload);\r\n\t\t\t\tsetInline({message:'successfully rejected payment'});\r\n\t\t\t}else{        \r\n\t\t\t\tsetInline({ message: results.error.message, message_type: 'error' });\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t});\r\n\r\n\t\treturn true;\r\n    \r\n    \r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst apiCall = async () =>{\r\n\t\t\tlet mypayment = payment.payment;\r\n\t\t\tawait setPayment(mypayment);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tapiCall().then(result => console.log(result));\r\n\r\n\t\treturn () => {setInline({message:'',message_type:'inf'});};\r\n\r\n\t}, [payment]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">Payment</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Date : </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\t\t\tvalue={thispayment.date}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\tvalue={thispayment.amount}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Processed</label>\r\n\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"processed\"\r\n\t\t\t\t\t\t\tvalue={thispayment.processed}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value={true}>Yes</option>\r\n\t\t\t\t\t\t\t<option value={false}>No</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Transaction Type</label>\r\n\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"transaction_type\"\r\n\t\t\t\t\t\t\tvalue={thispayment.transaction_type}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPayment({ ...thispayment, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{thispayment.deposit_slip_url ? \r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t\t\t\t<img src={thispayment.deposit_slip_url} className=\"pola-image\" />\r\n\t\t\t\t\t\t\t\t<div className=\"polatext\">\r\n\t\t\t\t\t\t\t\t\t<label>Proof of Transaction</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>:null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg margin'\r\n\t\t\t\t\t\t\tname='approve'\r\n\t\t\t\t\t\t\tonClick={e => approve(e).then(result => {\r\n\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-rocket'> </i>{' '}\r\n              Approve\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reject'\r\n\t\t\t\t\t\t\tonClick={e => reject(e).then(result => {\r\n\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n              Reject\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst PaymentItem = ({payment,OpenPayment}) => {\r\n\tconst[thispayment,setPayment] = useState(payment_init);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPayment(payment);\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\t}, [payment]);\r\n\r\n\treturn (\r\n\t\t<tr className=\"btn-outline-dark\">\r\n\t\t\t<td\r\n\t\t\t\tclassName='btn'        \r\n\t\t\t\tonClick={e => {\r\n\t\t\t\t\tlet { id } = thispayment;\r\n\t\t\t\t\tOpenPayment(id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{<Capitalize string={thispayment.date} />}\r\n\t\t\t</td>\r\n\t\t\t<td>R {thispayment.amount}.00</td>\r\n\t\t\t<td>{thispayment.processed ? 'Yes' : 'No'}</td>\r\n\t\t\t<td>{<Capitalize string={thispayment.transaction_type} />}</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nconst ManagePayments = () => {\r\n\tconst[payments,setPayments] = useState([]);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst[show_payment,setShowPayment] = useState(payment_init);\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n  \r\n\tconst OpenPayment = id =>{\r\n\t\tlet item = payments.find(payment => payment.id === id);\r\n\t\tconsole.log('fetched item',item);\r\n\r\n\t\tsetShowPayment({...item});\r\n\t};\r\n  \r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchPaymentsAPI =async () => {\r\n\t\t\tlet uid = user_account_state.user_account.uid;\r\n\t\t\tawait apiRequests.fetchPayments(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetPayments(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetPayments([]);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetPayments([]);          \r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchPaymentsAPI().then(result => {\r\n\t\t\tconsole.log('fetch payment api : ', result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetPayments([]);\r\n\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-credit-card\"> </i>\r\n            Payments Manager{' '}\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool btn-success\"\r\n\t\t\t\t\t\t\t\tname=\"transactions\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-bars\"> </i>\r\n                Transactions\r\n\t\t\t\t\t\t\t</button>\r\n              \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{show_payment.id ? (\r\n\t\t\t\t\t<ShowPayment payment={show_payment} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table table-responsive\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Date</td>\r\n\t\t\t\t\t\t\t\t<td>Amount</td>\r\n\t\t\t\t\t\t\t\t<td>Processed</td>\r\n\t\t\t\t\t\t\t\t<td>Transaction Type</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{payments.map(payment => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<PaymentItem\r\n\t\t\t\t\t\t\t\t\t\tOpenPayment={OpenPayment}\r\n\t\t\t\t\t\t\t\t\t\tpayment={payment}\r\n\t\t\t\t\t\t\t\t\t\tkey={payment.id}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageUser = ({user}) => {\r\n\tconst[manageUser,setManageUser] = useState(extended_user);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst[errors,setErrors] = useState(extended_user_error);\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\tconst {uid} = user_account_state.user_account;\r\n\r\n\tconst checkErrors = async () => {\r\n\t\tlet isError = false;\r\n\t\tconst check_names = () => {\r\n\t\t\tif(Utils.isEmpty(manageUser.names)){\r\n\t\t\t\tsetErrors({...errors,names_error:'names field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        \r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_surname = () => {\r\n\t\t\tif(Utils.isEmpty(manageUser.surname)){\r\n\t\t\t\tsetErrors({...errors,surname_error: 'surname field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\tif(!Utils.isCell(manageUser.cell)){\r\n\t\t\t\tsetErrors({...errors,cell_error : 'cell field is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif(!Utils.validateEmail(manageUser.email)){\r\n\t\t\t\tsetErrors({...errors,email_error:'email field is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_names() ? isError = true : isError = isError;\r\n\t\tcheck_surname() ? isError = true : isError = isError;\r\n\t\tcheck_cell() ? isError = true : isError = isError;\r\n\t\tcheck_email() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n  \r\n\tconst onUpdateUser = async(e) => {\r\n\t\tapiRequests.onUpdateUser(manageUser,uid).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetInline({message:'successfully updated user details',message_type:'inf'});          \r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\t\treturn true;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetManageUser(user);  \r\n\t\treturn () => {\r\n\t\t\tsetManageUser(extended_user);\r\n\t\t};\r\n\t}, [user]);\r\n  \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Names</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"names\"\r\n\t\t\t\t\t\tvalue={manageUser.names}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.names_error ? <InlineError message={errors.names_error} /> : null }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Surname</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"surname\"\r\n\t\t\t\t\t\tvalue={manageUser.surname}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.surname_error ? <InlineError message={errors.surname_error} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"cell\"\r\n\t\t\t\t\t\tvalue={manageUser.cell}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={manageUser.email}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label>is Admin</label>\r\n\t\t\t\t\t<select \r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tname='is_admin'\r\n\t\t\t\t\t\tvalue={manageUser.is_admin}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageUser({ ...manageUser, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t}              \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value={true} > True </option>\r\n\t\t\t\t\t\t<option value={false}> False </option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-success btn-lg\"\r\n\t\t\t\t\t\tname=\"updateuser\"\r\n\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\tisError ? \r\n\t\t\t\t\t\t\t\tsetInline({message:'there was an error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t: onUpdateUser(e).then( result => setInline({message:'user successfully updated'})\r\n\t\t\t\t\t\t\t\t);\r\n              \r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-save\"> </i> Save\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\tclassName=\"btn btn-warning btn-lg\" \r\n\t\t\t\t\t\tname=\"reset\"\r\n\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t\t\t\t\t\tsetErrors(extended_user_error);\r\n\t\t\t\t\t\t\tsetManageUser(user);                 \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Reset\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst UserItem = ({ user, onOpenUser }) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td\r\n\t\t\t\tclassName='btn'\r\n\t\t\t\tonClick={() => onOpenUser(user.uid)}\r\n\t\t\t>{user.names}</td>\r\n\t\t\t<td>{user.surname}</td>\r\n\t\t\t<td>{user.email}</td>\r\n\t\t\t<td>{user.cell}</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageUsers = () => {\r\n\tconst [users,setUsers] = useState([]);\r\n\tconst [manageUser,setManageUser] = useState(extended_user);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n  \r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\tconst {uid} = user_account_state.user_account;\r\n\r\n\tfunction onOpenUser (uid) {    \r\n\t\tsetManageUser(users.find(user => user.uid === uid));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUserlistAPI = async () => {\r\n\t\t\tapiRequests.fetchUsersAPI(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetUsers(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchUserlistAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n      \r\n\t\t};\r\n\t}, []);\r\n\r\n  \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-users\"> </i> Manage Users\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{manageUser.uid ? (\r\n\t\t\t\t\t<ManageUser user={manageUser} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table table-responsive\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Names</td>\r\n\t\t\t\t\t\t\t\t<td>Surname</td>\r\n\t\t\t\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t\t\t\t<td>Cell</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{users.map(user => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<UserItem\r\n\t\t\t\t\t\t\t\t\t\tonOpenUser={onOpenUser}\r\n\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\tkey={user.uid}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst SendResponse = ({contact}) => {\r\n\tconst[response,setResponse] = useState({\r\n\t\tcontact_id : '',\r\n\t\tnames : '',\r\n\t\tsubject : '',\r\n\t\tresponse :'',\r\n\t\temail : '',\r\n\t\tcell : '',\r\n\t\trespond_by : 'email',\r\n\r\n\t});\r\n\r\n\tconst [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n  \r\n\r\n\tconst sendResponse = async e => {\r\n\t\tconst {uid,email} = user_account_state.user_account;\r\n\t\tlet response_message = JSON.stringify(response);\r\n\t\tapiRequests.sendResponse(uid, response_message).then(result => {\r\n\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\r\n    \r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetResponse({\r\n\t\t\tcontact_id : contact.contact_id,\r\n\t\t\tnames : contact.names,\r\n\t\t\tsubject : 'response > ' + contact.subject,\r\n\t\t\temail : contact.email,\r\n\t\t\tcell : contact.cell,\r\n\t\t\trespond_by : 'email'\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n      \r\n\t\t};\r\n\t}, [contact]);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Response </label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tname=\"response\"\r\n\t\t\t\t\tvalue={response.response}\r\n\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\tsetResponse({ ...response, [e.target.name]: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Respond By </label>\r\n\t\t\t\t<select \r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\tname='respond_by'\r\n\t\t\t\t\tvalue={response.respond_by} \r\n\t\t\t\t\tonChange={e => setResponse({...response, [e.target.name]:e.target.value})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"email\">Email </option>\r\n\t\t\t\t\t<option value=\"cell\">SMS </option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tclassName='btn btn-primary margin'\r\n\t\t\t\t\tname='send'\r\n\t\t\t\t\tonClick={e => sendResponse(e).then(result => console.log(result))}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className='fa fa-send-o'> </i> {' '}\r\n            Send\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageContact = ({contact}) => {\r\n\tconst [manageContact, setManageContact] = useState(contact_form_details);\r\n\tconst [display,setDisplay] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tsetManageContact(contact);      \r\n\t\treturn () => {\r\n        \r\n\t\t};\r\n\t}, [contact]);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Names</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"names\"\r\n\t\t\t\t\t\tvalue={manageContact.names}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={manageContact.email}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"cell\"\r\n\t\t\t\t\t\tvalue={manageContact.cell}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Subject</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"subject\"\r\n\t\t\t\t\t\tvalue={manageContact.subject}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Message</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\tvalue={manageContact.message}\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetManageContact({\r\n\t\t\t\t\t\t\t\t...manageContact,\r\n\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t</textarea>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{display === 'response' ? <SendResponse contact={manageContact} /> : null}\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-success margin btn-lg\"\r\n\t\t\t\t\t\tname=\"send-response\"\r\n\t\t\t\t\t\tonClick={e => setDisplay('response')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-send\"> </i> Send Response\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-warning margin btn-lg\"\r\n\t\t\t\t\t\tname=\"mark-read\"\r\n\t\t\t\t\t\tonClick={e => setDisplay('read')}              \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<i className=\"fa fa-reddit-square\"> </i>\r\n              Mark as Read\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-danger margin btn-lg\"\r\n\t\t\t\t\t\tname=\"delete-message\"\r\n\t\t\t\t\t\tonClick={e => setDisplay('delete-message')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<i className=\"fa fa-cut\"> </i>\r\n              Delete Message\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ContactItem = ({contact,onOpenContact}) => {\r\n\tconsole.log(contact);\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td className=\"btn\" onClick={() =>{\r\n\t\t\t\tconst contact_id = contact.contact_id;\r\n\t\t\t\tonOpenContact(contact_id);\r\n\t\t\t} }>\r\n\t\t\t\t{contact.names}\r\n\t\t\t</td>\r\n\t\t\t<td>{contact.email}</td>\r\n\t\t\t<td>{contact.subject}</td>\r\n\t\t\t<td>{contact.timestamp}</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageContacts = () => {\r\n\tconst[contacts,setContacts] = useState([]);\r\n\tconst [manageContact, setManageContact] = useState(contact_form_details);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n\tconst{uid} = user_account_state.user_account;\r\n\r\n\r\n\tconst onOpenContact = contact_id => {\r\n\t\tconsole.log(contact_id);\r\n\t\tsetManageContact(\r\n\t\t\tcontacts.find(contact => contact.contact_id === contact_id)\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n    \r\n\t\tconst fetchContactsAPI = async () => {\r\n\t\t\tapiRequests.fetchUserContactForm(uid).then(response => {\r\n\t\t\t\tif(response.status){\r\n\t\t\t\t\tconsole.log(response.payload);\r\n\t\t\t\t\tsetContacts(response.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:'error fetching user contact form details',message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchContactsAPI().then(result => {\r\n\t\t\tconsole.log('Contacts Fetched',result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t\tsetContacts([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-envelope\"> </i> Manage Contact\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n  \r\n\t\t\t\t<div className=\"box-footer\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmanageContact.contact_id ?\r\n\t\t\t\t\t\t\t<ManageContact contact={manageContact}  /> :\r\n\r\n\t\t\t\t\t\t\t<table className='table table-responsive'>\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Names</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Subject</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Time</td>                  \r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>            \r\n\t\t\t\t\t\t\t\t\t{contacts.map(contact => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tonOpenContact={onOpenContact}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={contact.contact_id}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst NotAuthorized = () => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-danger\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i>{' '} Dashboard{' '}\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className=\"box box-warning\">\r\n\t\t\t\t\t\t<span className=\"error-content\">\r\n\t\t\t\t\t\t\t<em>you are not authorized to access our dashboard</em>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\r\n\t);\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst BankAccountForm = ({onCancel,account}) => {\r\n\tconst[bankAccount,setAccount] = useState(banking_details_init);\r\n\tconst[errors,setErrors] = useState(banking_details_errors_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst onSaveBankAccount = async e => {\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst account = JSON.stringify(bankAccount);\r\n\r\n\t\tconst saveBankAccount = async () => {\r\n\t\t\tawait apiRequests.saveBankAccount(uid,account).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetAccount(results.payload);\r\n\t\t\t\t\tsetInline({message:'successfully saved bank account',message_type:'error'});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tawait saveBankAccount().then(result => console.log(result));\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_account_holder = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.account_holder)){\r\n\t\t\t\tsetErrors({...errors,account_holder_error : 'account holder field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_bank_name = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.bank_name)){\r\n\t\t\t\tsetErrors({...errors,bank_name_error : 'bank name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_account_number = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.account_number)){\r\n\t\t\t\tsetErrors({...errors,account_number_error:'account number field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn  false;\r\n\t\t};\r\n\r\n\t\tconst check_branch_code = () => {\r\n\t\t\tif(Utils.isEmpty(bankAccount.branch_code)){\r\n\t\t\t\tsetErrors({...errors,branch_code_error:'branch code field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_account_holder() ? isError = true : isError = isError;\r\n\t\tcheck_bank_name() ? isError = true : isError = isError;\r\n\t\tcheck_account_number() ? isError = true : isError = isError;\r\n\t\tcheck_branch_code() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\r\n\tuseEffect( () => {\r\n\t\tif (account){setAccount(account);}\r\n\t\tsetErrors(banking_details_errors_init);\r\n\t\tsetInline({message:'',message_type:'inf'});\r\n\r\n\t\treturn( () => {\r\n\t\t\tsetAccount(banking_details_init);\r\n\t\t\tsetErrors(banking_details_errors_init);\r\n\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t});\r\n\r\n\t},[account]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'> Bank Account</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Account Holder </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='account_holder'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.account_holder}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.account_holder_error ? <InlineError message={errors.account_holder_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Bank Name</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='bank_name'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.bank_name}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.bank_name_error ? <InlineError message={errors.bank_name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Account Number</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='account_number'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.account_number}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.account_number_error ? <InlineError message={errors.account_number_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Branch Code</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='branch_code'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={bankAccount.branch_code}\r\n\t\t\t\t\t\t\tonChange={e => setAccount({...bankAccount,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.branch_code_error ? <InlineError message={errors.branch_code_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='add-account'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError =>{\r\n\t\t\t\t\t\t\t\tisError ? setInline({message:'error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t\t: onSaveBankAccount(e).then(result => console.log(result));\r\n\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i> {' '} Save\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning  btn-lg'\r\n\t\t\t\t\t\t\tname='add-account'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetAccount(banking_details_init);\r\n\t\t\t\t\t\t\t\tsetErrors(banking_details_errors_init);\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'inf'});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<strong> <i className='fa fa-eraser'> </i> Reset </strong>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-danger  btn-lg'\r\n\t\t\t\t\t\t\tname='cancel'\r\n\t\t\t\t\t\t\tonClick={e => onCancel(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-close'> </i>{' '}\r\n                            Cancel\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null }\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Function to return bank account list items\r\n * @param editAccount\r\n * @param account\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst BankAccountItem = ({editAccount,deleteAccount,account}) => {\r\n\tconst banking_id = account.banking_id;\r\n\treturn(\r\n\t\t<tr>\r\n\t\t\t<td\r\n\t\t\t\tclassName='btn'\r\n\t\t\t\tonClick={() => editAccount(banking_id)}\r\n            ><em>{account.account_holder}</em></td>\r\n            <td><em>{account.bank_name}</em></td>\r\n            <td><em>{account.account_number}</em></td>\r\n            <td><em>{account.branch_code}</em></td>\r\n\t\t\t<td\r\n\t\t\t\tclassName={'btn btn-danger btn-sm'}\r\n\t\t\t\tonClick={() => deleteAccount(banking_id)}\r\n\t\t\t>\r\n\t\t\t\t<i className={'fa fa-close'}> </i> {' '}\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);};\r\n\r\n\r\n/**\r\n * Function to return a list of bank accounts\r\n * @param editAccount\r\n * @param bankAccounts\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst BankAccountsList = ({editAccount,deleteAccount,bankAccounts}) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<table className='table table-responsive table-bordered'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Account Holder</td>\r\n\t\t\t\t\t\t<td>Bank Name</td>\r\n\t\t\t\t\t\t<td>Account Number</td>\r\n\t\t\t\t\t\t<td>Branch Code</td>\r\n\t\t\t\t\t\t<td>{' '}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{bankAccounts.map(account => <BankAccountItem editAccount={editAccount} deleteAccount={deleteAccount} account={account} key={account.banking_id} />)}\r\n\t\t\t\t</tbody>\r\n\t\t\t\t<tfoot>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Account Holder</td>\r\n\t\t\t\t\t\t<td>Bank Name</td>\r\n\t\t\t\t\t\t<td>Account Number</td>\r\n\t\t\t\t\t\t<td>Branch Code</td>\r\n\t\t\t\t\t\t<td>{' '}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tfoot>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/**\r\n * Manage Company Bank Accounts\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst ManageCompanyBankAccounts = () => {\r\n\tconst[bankAccounts, setBankAccounts] = useState([]);\r\n\tconst[bankAccount,setBankAccount] = useState(banking_details_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\tconst [display,setDisplay] = useState('bank-accounts');\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\tconst { user_account_state } = useContext(UserAccountContext);\r\n\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst onCancel = e => {\r\n\t  setBankAccount(banking_details_init);\r\n\t};\r\n\r\n\tconst editAccount = banking_id  => {\r\n\t    console.log('we will be editing this account',banking_id);\r\n\t\tsetBankAccount(bankAccounts.find(account => account.banking_id === banking_id));\r\n\t};\r\n\r\n\r\n\tconst deleteAccount = banking_id => {\r\n\t    console.log('we will be deleting this account',banking_id);\r\n\r\n\t    const uid = user_account_state.user_account.uid;\r\n\t    const doDeleteAccount = async () => {\r\n\t\t\tawait apiRequests.deleteBankingDetails(uid,banking_id).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBankAccounts(results.payload);\r\n\t\t\t\t\tsetInline({message:'successfully deleted account',message_type:'inf'});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:'failed to delete account please contact the administrator',message_type:'inf'});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t    doDeleteAccount().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t};\r\n\r\n\tuseEffect( () =>{\r\n\r\n\t    const fetchBankingDetails = async () => {\r\n\t        let uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tapiRequests.fetchBankingDetails(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBankAccounts(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t    fetchBankingDetails().then(result => console.log(result));\r\n\t    return () => {\r\n\t\t\tsetBankAccounts([]);\r\n\t\t};\r\n\t},[]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-bank'> </i> {' '}\r\n                        Company Bank Accounts\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\t\t\t\t\t\t<div className='dropdown'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='btn btn-box-tool droplink'\r\n\t\t\t\t\t\t\t\tname='dropdown-menu'\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdisplayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"bank-accounts\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('bank-accounts')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bank\"> </i> Bank Accounts{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"bank-accounts\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('add-account')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bank\"> </i> Add Bank Account{' '}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t): null\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tbankAccount.banking_id ?\r\n\t\t\t\t\t// editing bank account details\r\n\t\t\t\t\t\t<BankAccountForm onCancel={onCancel} account={bankAccount} /> :\r\n\t\t\t\t\t// listing bank account details and also enabling\r\n\t\t\t\t\t\t<div className='box-footer'>\r\n\t\t\t\t\t\t\t{display === 'bank-accounts' ? <BankAccountsList editAccount={editAccount} deleteAccount={deleteAccount} bankAccounts={bankAccounts} /> : null}\r\n\t\t\t\t\t\t\t{display === 'add-account' ? <BankAccountForm onCancel={onCancel} account={null} /> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{inline.message ?\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className='box box-footer'>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t\t\tonClick={() => setInline({message:'',message_type:'inf'})}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-close'> </i> {' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<InlineMessage message={inline.message} message_type={inline.message_type} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t: null }\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst Dashboard = () => {\r\n  \r\n\tconst[admins,setAdmins] = useState([]);\r\n\tconst[present_user,setPresentUser] = useState({\r\n\t\tuid : '',\r\n\t\tis_admin: false\r\n\t});\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst [display,setDisplay] = useState('manage-users');\r\n\tconst [displayMenu, setMenu] = useState({ menu: false });\r\n\tconst { user_account_state } = useContext(UserAccountContext);\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\r\n    \r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchPresentUser = async () => {\r\n\t\t\tlet uid = user_account_state.user_account.uid;\r\n\t\t\tawait axios.get(routes.api_user_endpoint + `/${uid}`).then(response => {\r\n\t\t\t\tif (response.status === 200){\r\n\t\t\t\t\treturn response.data;\r\n\t\t\t\t}\r\n\t\t\t}).then(present_user => {\r\n\t\t\t\tsetPresentUser(present_user);          \r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:'you are not authorized to access our dashboard'});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfetchPresentUser().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetPresentUser({uid:'',is_admin:false });\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{present_user.is_admin ? (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i>{' '} Dashboard{' '}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bars\"> </i>{' '}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-payments\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-payments')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-credit-card\"> </i> Manage Payments{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-users\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-users')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-users\"> </i> Manage Users{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-contacts\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-contacts')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-envelope\"> </i> Manage Contact{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"manage-bank-accounts\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('manage-bank-accounts')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bank\"> </i> Bank Accounts{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{display === 'manage-payments' ? <ManagePayments /> : null}\r\n\r\n\t\t\t\t\t\t{display === 'manage-users' ? <ManageUsers /> : null}\r\n\r\n\t\t\t\t\t\t{display === 'manage-contacts' ? <ManageContacts /> : null}\r\n\r\n\t\t\t\t\t\t{display === 'manage-bank-accounts' ? <ManageCompanyBankAccounts/> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<NotAuthorized />\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState, useEffect,useContext } from 'react';\r\nimport './Blog.css';\r\nimport {BlogContext} from '../../context/blog';\r\n\r\n\r\n\r\n\r\nfunction BlogPost({ post_data }) {\r\n\r\n  const [post, setPost] = useState({});\r\n  \r\n\r\n\tlet article = post_data;\r\n\tconsole.log('Articles',article);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body with-border\">\r\n\t\t\t\t<div className=\"box box-header with-border\">\r\n\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t<h2 className=\"box-title\">{article.title}</h2>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t<img src={article.urlToImage} className=\"pola-image\" />\r\n\t\t\t\t\t<div className=\"polatext\">{article.description}</div>\r\n\t\t\t\t\t<div className=\"box box-footer with-border\">\r\n\t\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{article.source.name} - {article.author}{' '}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-primary'\r\n              onClick={e => {}}\r\n              // when clicked display the entire article\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-file-pdf-o'> </i>{' '}\r\n              Read more...\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst Blog = () => {\r\n\r\n  const [displayMenu,setMenu] = useState({menu:false});\t\r\n  const {\r\n    category,\r\n    setCategory,\r\n    posts,\r\n  } = useContext(BlogContext);\r\n  \r\n\r\nconst showDropdownMenu = e => {\r\n    e.preventDefault();\r\n    setMenu({menu:true});\r\n    document.addEventListener('click', hideDropdownMenu);    \r\n  }\r\n\r\n  const hideDropdownMenu = () => {\r\n    setMenu({menu:false});\r\n    document.removeEventListener('click', hideDropdownMenu);    \r\n  }\r\n\r\n  const title = `${category[0].toUpperCase()}${category.slice(1)} News`;\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-file-text\"> </i> Blog{\" \"}\r\n            </strong>\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className='fa fa-bars'> </i>{\" \"}\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"entertainment\"\r\n                    onClick={() => setCategory(\"entertainment\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Entertainment{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"sports\"\r\n                    onClick={() => setCategory(\"sports\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Sports{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"business\"\r\n                    onClick={() => setCategory(\"business\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Business{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"tech\"\r\n                    onClick={() => setCategory(\"tech\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Tech{\" \"}\r\n                  </li>\r\n\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"science\"\r\n                    onClick={() => setCategory(\"science\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Science{\" \"}\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"health\"\r\n                    onClick={() => setCategory(\"health\")}\r\n                  >\r\n                    <i className=\"fa fa-folder-open\"> </i> Health\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-files-o\"> </i> {title}{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          {posts &&\r\n            posts.map((post, index) => {\r\n              return <BlogPost post_data={post} key={index} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Blog;","\r\nimport React, { Fragment,useState,useContext,useEffect } from 'react';\r\nimport {extended_user} from '../Auth/auth-constants';\r\nimport * as authAPI from '../Auth/auth-api';\r\nimport {SocketContext} from '../../context/socketsio';\r\n\r\n\r\nconst DisplayMessage = ({message}) => {\r\n  \r\n  const[author,setAuthor] = useState(extended_user);\r\n  \r\n  const retrieveAuthor = async uid => {\r\n      await authAPI.fetchUser(uid).then(results => {\r\n        if(results.status){\r\n          setAuthor(results.payload);\r\n        }else{\r\n\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n      return true;\r\n  };\r\n\r\n  const onOpenAttachment = async e => {\r\n\r\n  };\r\n\r\n  const returnDate = timestamp => {\r\n    return Date(parseInt(timestamp) * 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    let uid = message.author;\r\n    \r\n    retrieveAuthor(uid).then(result => {});\r\n    \r\n    return () => {      \r\n    };\r\n  }, []);\r\n\r\n  return(\r\n                  \r\n        <div className=\"box-comments\">\r\n              {/* <img src={} alt=\"user image\" className=\"online\" /> */}\r\n\r\n        <p className=\"box-comment\">\r\n        \r\n        <a href=\"#\">\r\n          <small  className=\"text-muted pull-right\" title={ returnDate(message.timestamp)}> <i className=\"fa fa-clock-o\"></i>  </small>\r\n            {author.names}{' '}\r\n        </a>\r\n          {message.message}\r\n        </p>\r\n\r\n          {\r\n            message.attachments ? \r\n              <div className=\"attachment\">\r\n                <h4>Attachments:</h4>\r\n\r\n                <p className=\"filename\">\r\n                    {message.attachments}\r\n                </p>\r\n\r\n                <div className=\"pull-right\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-primary btn-sm btn-flat\"\r\n                  onClick={e => onOpenAttachment(e)}\r\n                  >Open</button>\r\n                </div>\r\n              </div>\r\n            : null\r\n          }        \r\n        </div>\r\n  )\r\n};\r\n\r\nconst Chat = () => {  \r\n  const {\r\n    messages,\r\n    message,\r\n    setMessage,\r\n    writer,\r\n    typing,\r\n    sendMessage,\r\n    clearMessages\r\n  } = useContext(SocketContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-success\">\r\n        <div className=\"box box-header\">\r\n          <i className=\"fa fa-comments-o\"></i>\r\n\r\n          <h3 className=\"box-title\">Chat</h3>\r\n\r\n            <div\r\n              className=\"box-tools pull-right\"\r\n              data-toggle=\"tooltip\"\r\n              title=\"Status\">\r\n\r\n            <div className=\"btn-group\" data-toggle=\"btn-toggle\">\r\n              <button type=\"button\" className=\"btn btn-default btn-sm active\">\r\n                <i className=\"fa fa-square text-green\"></i>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => clearMessages(e)}>\r\n                <i className=\"fa fa-square text-red\"> {' '} </i>\r\n              </button>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-body chat\" id=\"chat-box\">\r\n          {messages.map((message) => {  \r\n            if (message.message_id){\r\n            return <DisplayMessage message={message} key={message.message_id} />;\r\n            }          \r\n          })}\r\n        </div>\r\n\r\n        {/* <!-- /.chat --> */}\r\n        <div className=\"box-footer\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Type message...\"\r\n              name=\"message\"\r\n              value={message.message}\r\n              onKeyPress={e => typing(e)}\r\n              onChange={e =>\r\n                setMessage({ ...message, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n\r\n            <div className=\"input-group-btn\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={e => sendMessage(e)}\r\n              >\r\n                <i className=\"fa fa-plus\"></i> send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"box-tools\">\r\n            {writer.uid ? (\r\n              <a href='#'><small><strong><em> {writer.names} - - is typing a message... </em></strong></small></a>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- /.box (chat box) --> */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Chat;","\r\n\r\n\r\nexport const sms_message_init = {\r\n\tid : '',\r\n\tuid : '',\r\n\tmessage : '',\r\n\tto_cell : '',\r\n\tfrom_cell : '',\r\n\tdate_created : '',\r\n\tscheduled_datetime : '',\r\n\tdate_time_sent : '',\r\n\tdelivered : false\r\n\r\n};\r\n\r\nexport const sms_message_errors_init = {\r\n\tmessage_error : '',\r\n\tto_error : '',\r\n\tfrom_error : '',\r\n};\r\n\r\nexport const sms_balance_init = {\r\n\tuid : '',\r\n\ttotal_sms : '0',\r\n\tfree_sms : '0',\r\n\tsms_value : '0',\r\n};\r\n\r\nexport const sms_bundle_init = {\r\n\tid : '',\r\n\tname : '',\r\n\tdescription : '',\r\n\ttotal_sms : '0',\r\n\tpurchase_price : '0'\r\n};\r\n\r\n\r\nexport const payment_details_init ={\r\n\tuid : '',\r\n\tid : '',\r\n\tbundle_id : '',\r\n\tpayment_method :'',\r\n\tpayment_amount : '',\r\n\tpayment_date : '',\r\n\tpayment_time : '',\r\n\tapproved : false,\r\n};\r\n\r\nexport const default_bundles = [\r\n\t{\r\n\t\tid: '11111111',\r\n\t\tname : 'starter bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '250',\r\n\t\tpurchase_price : '90'\r\n\t},\r\n\t{\r\n\t\tid: '11111112',\r\n\t\tname : 'basic bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '500',\r\n\t\tpurchase_price : '200'\r\n\t},\r\n\t{\r\n\t\tid: '11111113',\r\n\t\tname : 'advanced bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '1000',\r\n\t\tpurchase_price : '400'\r\n\t},\r\n\t{\r\n\t\tid: '11111113',\r\n\t\tname : 'super bundle',\r\n\t\tdescription : 'entry level bundle which you need to start operating',\r\n\t\ttotal_sms : '2500',\r\n\t\tpurchase_price : '800'\r\n\t}\r\n];\r\n\r\n\r\nexport const contact_lists_init = {\r\n\tuid : '',\r\n\tid : '',\r\n\tname : '',\r\n\tdescription : '',\r\n\ttotal_contacts : '',\t\r\n};\r\n\r\nexport const contact_lists_errors_init = {\r\n\tname_error : '',\r\n\tdescription_error : '',\r\n\ttotal_contacts : '0',\t\r\n};\r\n\r\n\r\nexport const contacts_init = {\r\n    id  : '',\r\n\tuid  : '',\r\n\tlist_id : '',\r\n\tlist_name : '',\r\n    name  : '', \r\n    surname  : '',\r\n    relationship  : '',\r\n    tel  : '',\r\n    cell  : '',\r\n    email  : '',\t\r\n};\r\n\r\n\r\nexport const contacts_errors_init = {\r\n\tname_error: \"\",\r\n\tsurname_error: \"\",\r\n\trelationship_error: \"\",\r\n\ttel_error: \"\",\r\n\tcell_error: \"\",\r\n\temail_error: \"\"\r\n};\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\n/**\r\n * this function should fetch balances from sms-crud api\r\n * i could control sms-crud api from justice ndou app\r\n * @param uid\r\n * @returns {Promise<void>}\r\n */\r\nexport const fetchBalancesAPI = async uid => {\r\n\t// TODO- finish this up by writing axios.get api's to access the balances for the user\r\n\t// who is logged in\r\n};\r\n\r\n\r\n/**\r\n * this function will fetch sms bundles from sms-crud api\r\n * i could control sms-crud api from justice ndou app\r\n * @param uid\r\n * @returns {Promise<void>}\r\n */\r\nexport const fetchSMSBundles = async (uid) => {\r\n\t\r\n\t// TODO- fetch available SMS Bundles list from my server UID is used for logging purposes\r\n\t// The internal application server will make the request through python\r\n\t// this method will insure local app record and also that\r\n\tconst  results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/bundles/${uid}`).then(response => {\r\n\t\tif (response.status === 200) {\r\n      \t\treturn response.data;\r\n\t\t} else {\r\n\t\tthrow new Error(\"there was an error fetching SMS Bundles\");\r\n\t\t}\r\n\t}).then(bundles => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...bundles];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\n//TODO payment information must be sent direct to sasms crud app\r\n\r\nexport const sendSMS = async (uid,sms_message) => {\r\n\t// TODO send the message to sasms crud use the uid\r\n\t// to check if the user has some credits\r\n\tconst results = { status: false, payload: {}, error: {} };\r\n\r\n\tawait axios.post(routes.api_sms_endpoint + `/send/${uid}`,sms_message).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error sending sms message');\r\n\t\t}\r\n\t}).then(sms_message => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = {...sms_message};\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = {};\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchContactLists = async uid => {\r\n\t\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/contact-lists/${uid}`).then(response => {\r\n\t\tif (response.status === 200){\r\n\t\t\treturn response.data\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching contact lists');\r\n\t\t}\r\n\t}).then(contact_lists => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contact_lists];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveContactsList = async (uid,json_contacts_list) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tconst prepared_route = routes.api_sms_endpoint + `/contact-lists/${uid}`;\r\n\r\n\tawait axios.post(prepared_route, json_contacts_list).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error creating contact lists');\r\n\t\t}\r\n\t}).then(contacts_lists => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contacts_lists];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const saveContact= async (uid,json_contact) => {\r\n\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\tconst prepared_route = routes.api_sms_endpoint + `/smscontact/${uid}`;\r\n\r\n\tawait axios.post(prepared_route,json_contact).then(response => \r\n\t\t{\r\n\t\t\tif(response.status === 200){\r\n\t\t\t\treturn response.data;\r\n\t\t\t}else{\r\n\t\t\t\tthrow new Error('there was an error adding contact to contact list');\r\n\t\t}\r\n\t\t}).then(contact_list => {\r\n\t\t\tresults.status = true;\r\n\t\t\tresults.payload = [...contact_list];\r\n\t\t\tresults.error = {};\r\n\t\t}).catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.payload = [];\r\n\t\t\tresults.error ={...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const updateContact = async(uid, contact_details) => {\r\n\t\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\t\treturn results;\r\n};\r\n\r\nexport const fetchContactsByListName = async (uid,listname) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/contacts/bylistname/${listname}/${uid}`).then(response => {\r\n\t\tif (response.status === 200) {\r\n      \t\treturn response.data;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"there was an error fetching by listname\");\r\n\t\t}\r\n\t}).then(contact_list => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contact_list];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\r\n\treturn results;\r\n};\r\n\r\nexport const fetchContactListByContactID = async (uid,list_id) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios.get(routes.api_sms_endpoint + `/contacts/bycontactid/${list_id}/${uid}`).then(response => {\r\n\t\tif(response.status === 200){\r\n\t\t\treturn response.data;\r\n\t\t}else{\r\n\t\t\tthrow new Error('there was an error fetching contact list by contact id')\r\n\t\t}\r\n\t}).then(contact_list => {\r\n\t\tresults.status = true;\r\n\t\tresults.payload = [...contact_list];\r\n\t\tresults.error = {};\r\n\t}).catch(error => {\r\n\t\tresults.status = false;\r\n\t\tresults.payload = [];\r\n\t\tresults.error = {...error};\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n\r\nexport const fetchContactListByUserID = async (uid) => {\r\n\tconst results = { status: false, payload: [], error: {} };\r\n\r\n\tawait axios\r\n    .get(routes.api_sms_endpoint + `/contacts/byuid/${uid}`)\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching contact lists by user id\");\r\n      }\r\n    })\r\n    .then(contact_list => {\r\n      results.status = true;\r\n      results.payload = [...contact_list];\r\n      results.error = {};\r\n    })\r\n    .catch(error => {\r\n      results.status = false;\r\n      results.payload = [];\r\n      results.error = { ...error };\r\n    });\r\n  return results;\r\n};","\r\n// eslint-disable-next-line no-unused-vars\r\nimport React, {Fragment, createContext, useReducer, useContext, useState, useEffect} from 'react';\r\nimport {Utils} from '../../utilities';\r\nimport {\r\n  default_bundles,\r\n  payment_details_init,\r\n  sms_balance_init,\r\n  sms_bundle_init,\r\n  sms_message_errors_init,\r\n  sms_message_init,\r\n  contacts_init,\r\n  contacts_errors_init,\r\n  contact_lists_init,\r\n  contact_lists_errors_init\r\n} from \"./sms-constants\";\r\nimport * as smsApiRequests from './sms-api';\r\nimport { UserAccountContext } from '../../context/UserAccount/userAccountContext';\r\nimport InlineError from '../Forms/InlineError';\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport { Add } from 'react-lodash';\r\n\r\n/**\r\n * function module to list balances and allowing balance top-up via\r\n * eft, direct deposit, and or paypal\r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const SMSBalances = () => {\r\n\tconst [bundles,setBundles] = useState([]);\r\n\tconst [purchaseBundle,setPurchaseBundle] = useState(sms_bundle_init);\r\n\r\n\r\n\tconst [balance,setBalance] = useState(sms_balance_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst [payment,setPayment] = useState(payment_details_init);\r\n\r\n\r\n\tconst handleSelectBundle = e => {\r\n\t\tsetPurchaseBundle( bundles.find(bundle => bundle.id === e.target.value));\r\n\t};\r\n\r\n\tconst processPayment = e => {\r\n\t\tconsole.log('processing paymet with the following condistions', purchaseBundle, payment);\r\n\t};\r\n\r\n\tuseEffect( () => {\r\n\r\n\t\tconst fetchBalancesAPI = async() => {\r\n\t\t    const results = {status : true, error:{}};\r\n\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tsmsApiRequests.fetchBalancesAPI(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBalance(results.payload);\r\n\t\t\t\t\tsetInline({message:'successfully loaded sms balances',message_type:'info'});\r\n\t\t\t\t\tresults.status = true;\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\tresults.status = false;\r\n\t\t\t\tresults.error = {...error};\r\n\t\t\t});\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tfetchBalancesAPI().then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tconsole.log('successfully obtained balances',balance);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log('error loading balances',results.error);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.log('error loading balances',error.message);\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn(() => {\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\tsetBalance(sms_balance_init);\r\n\t\t});\r\n\r\n\t},[]);\r\n\r\n\t/***\r\n     * this effect check to see if bundle listing's are available from our sms server\r\n     * if not then it loads the default bundle listings\r\n     */\r\n\tuseEffect( () => {\r\n\t\tconst fetchBundlesFromBackEnd = async () => {\r\n\t\t\tconst results = {status : true,error : {}};\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tawait smsApiRequests.fetchSMSBundles(uid).then(response => {\r\n\t\t\t\tif(response.status){\r\n\t\t\t\t\tsetBundles(response.payload);\r\n\t\t\t\t\tresults.status = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t    console.log(response.error.message);\r\n\t\t\t\t    results.status = false;\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t    console.log(error.message);\r\n\t\t\t    results.status = false;\r\n\t\t\t    results.error = {...error};\r\n\t\t\t});\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tfetchBundlesFromBackEnd().then(response => {\r\n\t\t    if(!response.status){\r\n\t\t        setBundles(default_bundles);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn(() => {\r\n\t\t\tsetBundles([]);\r\n\t\t});\r\n\t},[]);\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-credit-card-alt'> </i>{' '} Balances\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='my-flex-container'>\r\n\t\t\t\t\t<div className='box-footer'>\r\n\t\t\t\t\t\t<ul className='box box-footer'>\r\n\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t<strong>Total SMS : <em><a href={'#'}> {balance.total_sms} </a></em></strong>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t<strong>Free SMS : <em><a href={'#'}> {balance.free_sms} </a></em></strong>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t<strong>SMS Value: <em><a href={'#'}>R {balance.sms_value}.00 </a></em></strong>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='box-footer'>\r\n\t\t\t\t\t\t<div className='box-header'>\r\n\t\t\t\t\t\t\t<h3 className='box-title'><i className={'fa fa-money'}> </i>{' '} Buy Bundles</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label className='label col-sm-3 pull-left'>Select Top Up Bundle</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tvalue={purchaseBundle.id}\r\n\t\t\t\t\t\t\t\t\tonChange={e => handleSelectBundle(e)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{bundles.map(bundle => <option value={bundle.id}>{bundle.name} - {bundle.total_sms} sms's - R {bundle.purchase_price}.00</option> )}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label className='label col-sm-3 pull-left'>Select Payment Method</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tname={'payment_method'}\r\n\t\t\t\t\t\t\t\t\tvalue={payment.payment_method}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setPayment({...payment,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value={'eft'}>EFT</option>\r\n\t\t\t\t\t\t\t\t\t<option value={'direct-deposit'}>Direct Deposit</option>\r\n\t\t\t\t\t\t\t\t\t<option value={'paypal'}> PayPal </option>\r\n\t\t\t\t\t\t\t\t\t<option value={'credit-card'}>Credit Card</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-primary btn-lg'\r\n\t\t\t\t\t\t\t\t\tname={'make-payment'}\r\n\t\t\t\t\t\t\t\t\tonClick={e => processPayment(e)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i className='fa fa-money'> </i>{' '}\r\n                                    Process Payment\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Used to create reports on sms deliveries made by such a user\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst DeliveryReports = () => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-file-excel-o'> </i>{' '}\r\n                        Delivery Reports\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Used to send bulk sms messages to your users contacts and customers\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst SendBulkSMS = () => {\r\n\r\n    const [listNames,setListNames] = useState([]);\r\n\tconst [contacts,setContacts] = useState([]);\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\tconst [display, setDisplay] = useState(\"send-sms\");\r\n  \tconst [messagesMenu, setMenu] = useState({ menu: false });\r\n\r\n\t\r\n\tconst showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n\tconst loadContactsFromListName = async listname => {\r\n\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\t\r\n\t\tawait smsApiRequests.fetchContactsByListName(uid,listname).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\tsetContacts(results.payload);\r\n\t\t\t}else{\r\n\t\t\t\tsetContacts([]);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetContacts([]);\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchContactLists = async () => {\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\t\t\tawait smsApiRequests.fetchContactLists(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetListNames(listNames);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetListNames([]);\r\n\t\t\t\t\tconsole.log(\"error fetching contact lists\", results.error.message);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetListNames([]);\r\n\t\t\t\tconsole.log('error fetching contact lists',error.message);\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchContactLists().then(result => console.log(result));\r\n\r\n\t\treturn () => {\r\n\t\t\t\r\n\t\t};\r\n\t}, [])\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-send-o'> </i>{' '}\r\n                        Send Bulk SMS</h3>\r\n\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown\"\r\n\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{messagesMenu.menu ? (\r\n\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\tname=\"send-sms\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('send-sms')}\r\n\t\t\t\t\t\t\t\t> <i className='fa fa-send'> </i>{' '}\r\n\t\t\t\t\t\t\t\t\tSend SMS\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t) : null }\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\t\t\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/***\r\n * Used to send single SMS Messages to your contacts and customers and users\r\n * @returns {*}\r\n * @constructor\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst SendSMS = () => {\r\n\tconst[sms,setSMS] = useState(sms_message_init);\r\n\tconst[errors,setErrors] = useState(sms_message_errors_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst{user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_to_error = () => {\r\n\t\t\tif (!Utils.isCell(sms.to_cell)){\r\n\t\t\t\tsetErrors({...errors,to_error: 'to field is not a valid cell phone number'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_from_error = () => {\r\n\t\t\tif (!Utils.isCell(sms.from_cell)){\r\n\t\t\t\tsetErrors({...errors,from_error: 'from field is not a valid cell phone number'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_message_field = () => {\r\n\t\t\tif (Utils.isEmpty(sms.message)){\r\n\t\t\t\tsetErrors({...errors,message_error: 'message field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn  false;\r\n\t\t};\r\n\r\n\t\tcheck_to_error() ? isError = true : isError = isError;\r\n\t\tcheck_from_error() ? isError = true : isError = isError;\r\n\t\tcheck_message_field() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\r\n\tconst sendSMS = async e => {\r\n\r\n\t\tconst results = {status:true,error:{}};\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst sms_message = JSON.stringify(sms);\r\n\r\n\t\tawait smsApiRequests.sendSMS(uid,sms_message).then(response => {\r\n\t\t\tif(response.status){\r\n\t\t\t\tresults.status =true;\r\n\t\t\t\tsetSMS(response.payload);\r\n\t\t\t\tsetInline({message:'sms message sent successfully',message_type:'inf'});\r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:response.error.message,message_type:'error'});\r\n\t\t\t\tresults.status = false;\r\n\t\t\t\tresults.error = {...response.error};\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.error = {...error.error};\r\n\t\t});\r\n\r\n\t\treturn results;\r\n\t};\r\n\r\n\tuseEffect(() =>{\r\n        const prepareSMS = async () => {\r\n            const uid = user_account_state.user_account.uid;\r\n            const today = Date();\r\n            today = today.now();\r\n\r\n        };\r\n\r\n    },[]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-send'> </i>{' '}\r\n                        Send SMS</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label col-sm-3'> From  </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='from_cell'\r\n\t\t\t\t\t\t\tvalue={sms.from_cell}\r\n\t\t\t\t\t\t\tonChange={e => setSMS({...sms,[e.target.name]:e.target.value}) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.from_error  ? <InlineError message={errors.from_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label col-sm-3'> To  </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname={'to_cell'}\r\n\t\t\t\t\t\t\tvalue={sms.to_cell}\r\n\t\t\t\t\t\t\tonChange={e => setSMS({...sms,[e.target.name]:e.target.value}) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.to_error ? <InlineError message={errors.to_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label col-sm-3'> SMS </label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={sms.message}\r\n\t\t\t\t\t\t\tonChange={e => setSMS({...sms,[e.target.name]:e.target.value}) }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</textarea>\r\n\t\t\t\t\t\t{errors.message_error ? <InlineError message={errors.message_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid={'send'}\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg margin-r-5'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ? setInline({message:'errors processing form',message_type : 'error'})\r\n\t\t\t\t\t\t\t\t\t: sendSMS(e).then(result => console.log('is sms sent', result));\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-send-o'> </i>{' '}\r\n                            Send\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetErrors(sms_message_errors_init);\r\n\t\t\t\t\t\t\t\tsetSMS(sms_message_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n                            Reset\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : '' }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n/**\r\n * Messages Module will allow user to view sms's they have sent,\r\n * sms's being delivered, sms delivery reports,\r\n * allow user to send sms, to an uploaded contact book or also to customers within\r\n * weq trading\r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const SMSMessages = () => {\r\n\tconst [display,setDisplay] = useState('send-sms');\r\n\tconst [messagesMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-envelope'> </i>{' '}\r\n                        Messages\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className='box-tools mdl-textfield--align-left'>\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{messagesMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"send-sms\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('send-sms')}\r\n\t\t\t\t\t\t\t\t\t> <i className='fa fa-send'> </i>{' '}\r\n                                        Send SMS\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"send-bulk-sms\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('send-bulk-sms')}\r\n\t\t\t\t\t\t\t\t\t> <i className='fa fa-send-o'> </i>{' '}\r\n                                        Send Bulk SMS\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"delivery-reports\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('delivery-reports')}\r\n\t\t\t\t\t\t\t\t\t><i className='fa fa-file-excel-o'> </i>{' '}\r\n                                        Delivery Reports\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t):null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay === 'send-sms' ?\r\n\t\t\t\t\t\t<SendSMS/> : null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay === 'send-bulk-sms'?\r\n\t\t\t\t\t\t<SendBulkSMS /> : null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay === 'delivery-reports' ?\r\n\t\t\t\t\t\t<DeliveryReports/> : null\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n/**\r\n * \r\n * \r\n * \r\n * \r\n * \r\n * @param {*} param0 \r\n */\r\nconst ContactListItem = ({ onOpenContact,contact }) => {\r\n  return (\r\n    <Fragment>\r\n      <tr\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={e => {\r\n          const id = contact.id;\r\n          onOpenContact(id);\r\n        }}\r\n      >\r\n        <td>{contact.name}</td>\r\n        <td>{contact.surname}</td>\r\n        <td>{contact.cell}</td>\r\n        <td>{contact.tel}</td>\r\n        <td>{contact.email}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst DisplayContactList = ({ onOpenContact,contacts_list }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-list\"> </i> Contacts List\r\n          </h3>\r\n        </div>\r\n\r\n        <table className=\"table table-responsive table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Surname</td>\r\n              <td>Cell</td>\r\n              <td>Tel</td>\r\n              <td>Email</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts_list.map(contact => (\r\n              <ContactListItem\r\n                onOpenContact={onOpenContact}\r\n                contact={contact}\r\n              />\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Surname</td>\r\n              <td>Cell</td>\r\n              <td>Tel</td>\r\n              <td>Email</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n */\r\nconst EditContact = ({contact_detail}) => {\r\n\tconst [contact, setContact] = useState(contacts_init);\r\n\tconst [errors,setErrors] = useState(contacts_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'error'});\r\n\t\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst updateContact = async () => {\r\n\t\tconst results = {status:false,payload:{},errors:{}};\r\n\t\t\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\tconst contact_details = JSON.stringify(contact)\r\n\t\tawait smsApiRequests.updateContact(uid,contact_details).then(results => {\r\n\t\t\tif(results.status){\r\n\t\t\t\treturn results.data;\r\n\t\t\t}else{\r\n\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\t\tconst check_name = () => {\r\n\t\t\tif(Utils.isEmpty(contact.name)){\r\n\t\t\t\tsetErrors({...errors,name_error : 'name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_surname = () => {\r\n\t\t\tif(Utils.isEmpty(contact.surname)){\r\n\t\t\t\tsetErrors({...errors,surname_error : 'surname field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\r\n\t\t\tif(!Utils.isCell(contact.cell)){\r\n\t\t\t\tsetErrors({...errors,cell_error : 'cell number is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\r\n\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif (contact.email){\r\n\t\t\tif(!Utils.validateEmail(contact.email)){\r\n\t\t\t\tsetErrors({...errors,email_error : 'email is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\t};\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_tel = () => {\r\n\t\t\tif(contact.tel){\r\n\t\t\t\tif(!Utils.isTel(contact.tel)){\r\n\t\t\t\t\tsetErrors({...errors,tel_error:'telephone number is'});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_name() ? isError = true : isError = isError;\r\n\t\tcheck_surname() ? isError = true : isError = isError;\r\n\t\tcheck_cell() ? isError = true : isError = isError;\r\n\t\tcheck_email() ? isError = true : isError = isError;\r\n\t\tcheck_tel() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetContact(contact_detail);\r\n\t  return () => {\r\n\t\tsetContact(contacts_init);\r\n\t  };\r\n\t}, [contact_detail]);\r\n\r\n\r\n\treturn(\r\n\t\t\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>Edit Contact</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name_error ? <InlineError message={errors.name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Surname</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='surname'\r\n\t\t\t\t\t\t\tvalue={contact.surname}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.surname_error ? <InlineError message={errors.surname_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='cell'\r\n\t\t\t\t\t\t\tvalue={contact.cell}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Tel</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='tel'\r\n\t\t\t\t\t\t\tvalue={contact.tel}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.tel_error ? <InlineError message={errors.tel_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Relationship</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='relationship'\r\n\t\t\t\t\t\t\tvalue={contact.relationship}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='business'>Business</option>\r\n\t\t\t\t\t\t\t<option value='customer'>Customer</option>\r\n\t\t\t\t\t\t\t<option value='marketing-clients'>Marketing Clients</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='addContact'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ? setInline({message:'there was an error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t: updateContact().then(result => {\r\n\t\t\t\t\t\t\t\t\tif (result.status){\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'successfully updated contacts',message_type:'info'});\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'error adding new contact record please try again later',message_type:'error'});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n\t\t\t\t\t\t\tAdd Contact\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetContact(contacts_init);\r\n\t\t\t\t\t\t\t\tsetErrors(contacts_errors_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t\t\r\n\t)\r\n}\r\n\r\n/**\r\n * add contact to backend\r\n * then add contact to contact list via call-back function\r\n * \r\n * @param {*} addContact\r\n */\r\nconst AddContact = ({addContact}) => {\r\n\tconst [contact,setContact] = useState(contacts_init);\r\n\tconst [errors,setErrors] = useState(contacts_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'error'});\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\t\tconst check_name = () => {\r\n\t\t\tif(Utils.isEmpty(contact.name)){\r\n\t\t\t\tsetErrors({...errors,name_error : 'name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_surname = () => {\r\n\t\t\tif(Utils.isEmpty(contact.surname)){\r\n\t\t\t\tsetErrors({...errors,surname_error : 'surname field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\r\n\t\t\tif(!Utils.isCell(contact.cell)){\r\n\t\t\t\tsetErrors({...errors,cell_error : 'cell number is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\r\n\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif (contact.email){\r\n\t\t\tif(!Utils.validateEmail(contact.email)){\r\n\t\t\t\tsetErrors({...errors,email_error : 'email is invalid'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t\t};\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_tel = () => {\r\n\t\t\tif(contact.tel){\r\n\t\t\t\tif(!Utils.isTel(contact.tel)){\r\n\t\t\t\t\tsetErrors({...errors,tel_error:'telephone number is'});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tcheck_name() ? isError = true : isError = isError;\r\n\t\tcheck_surname() ? isError = true : isError = isError;\r\n\t\tcheck_cell() ? isError = true : isError = isError;\r\n\t\tcheck_email() ? isError = true : isError = isError;\r\n\t\tcheck_tel() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>Add Contact</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name_error ? <InlineError message={errors.name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Surname</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='surname'\r\n\t\t\t\t\t\t\tvalue={contact.surname}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.surname_error ? <InlineError message={errors.surname_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Cell</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='cell'\r\n\t\t\t\t\t\t\tvalue={contact.cell}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Tel</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='tel'\r\n\t\t\t\t\t\t\tvalue={contact.tel}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.tel_error ? <InlineError message={errors.tel_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Relationship</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='relationship'\r\n\t\t\t\t\t\t\tvalue={contact.relationship}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='business'>Business</option>\r\n\t\t\t\t\t\t\t<option value='customer'>Customer</option>\r\n\t\t\t\t\t\t\t<option value='marketing-clients'>Marketing Clients</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='addContact'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\r\n\t\t\t\t\t\t\t\tisError ? \r\n\t\t\t\t\t\t\t\tsetInline(\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmessage:'there was an error processing form',\r\n\t\t\t\t\t\t\t\t\t\tmessage_type:'error'\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t: addContact(contact).then(response => {\r\n\t\t\t\t\t\t\t\t\tif (response.status){\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'successfully updated contacts',message_type:'info'});\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tsetInline({message:'error adding new contact record please try again later',message_type:'error'});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n\t\t\t\t\t\t\tAdd Contact\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetContact(contacts_init);\r\n\t\t\t\t\t\t\t\tsetErrors(contacts_errors_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst ContactsManager = ({contacts,contact_list_details}) => {\r\n\tconst [contacts_list,setContactsList] = useState([]);\r\n\tconst [display, setDisplay] = useState(\"contact-lists\");\r\n\tconst [contactsManagerMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst [contact,setContact] = useState(contacts_init);\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst onOpenContact = async id => {\r\n\t\tsetContact(contacts_list.find(contact => contact.id === id));\r\n\t\tsetDisplay('edit-contact');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * contact details will be added to the backend and in turn the results will update contacts_list \r\n\t * @param {*} contact_details containst the details of the contact to be added\r\n\t */\r\n\tconst addContact = async (contact_details) =>{\r\n\t\t\r\n\t\tconst results = {status : false,payload:{},error:{}};\r\n\t\t\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\t\r\n\t\tcontact_details.list_id = contact_list_details.id;\r\n\t\tcontact_details.list_name = contact_list_details.name;\r\n\t\tconst json_contact = JSON.stringify(contact_details)\r\n\t\t// add contact to contact list\r\n\t\tawait smsApiRequests.saveContact(uid,json_contact).then(response => {\r\n\t\t\t\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContactsList(response.payload);\r\n\t\t\t\tresults = {...response};\r\n\t\t\t}\r\n\r\n\t\t}).catch(error => {\r\n\t\t\tresults.status = false;\r\n\t\t\tresults.payload = [];\r\n\t\t\tresults.error = {...error};\r\n\t\t});\r\n\r\n\t\treturn results;\r\n\t};\r\n\r\n\t// setting contacts to contacts_list\r\n\tuseEffect(() => {\r\n\t\tsetContactsList(contacts);\r\n\t  return () => {\r\n\t\tsetContactsList([]);\r\n\t  };\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-user\"></i> Contacts Manager\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {contactsManagerMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"contact-lists\"\r\n                    onClick={() => setDisplay(\"contact-lists\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-users\"> </i> Contact Lists\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-contact\"\r\n                    onClick={() => setDisplay(\"add-contact\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-envelope\"> </i> Add Contact\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"contact-lists\" ? \r\n          <DisplayContactList\r\n            onOpenContact={onOpenContact}\r\n            contacts_list={contacts_list}\r\n          />\r\n        : null}\r\n        {display === \"add-contact\" ? <AddContact addContact={addContact} />:null}\r\n\t\t\r\n\t\t{display === 'edit-contact' ? <EditContact contact_detail={contact} /> : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst AddContactList = () => {\r\n\tconst [contacts_list, setContactsList] = useState(contact_lists_init);\r\n\tconst [errors,setErrors] = useState(contact_lists_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'errir'});\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\r\n\t// function to check contacts list errors before we can add them\r\n\r\n\tconst checkErrors = async e => {\r\n\t\te.preventDefault();\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_name = () => {\r\n\t\t\tif(Utils.isEmpty(contacts_list.name)){\r\n\t\t\t\tsetErrors({...errors,name_error:'name field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_description = () => {\t\t\r\n\t\t\r\n\t\t\tif(Utils.isEmpty(contacts_list.description)){\r\n\t\t\t\tsetErrors({...errors,description_error:'description field cannot be empty'});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\r\n\t\t};\r\n\r\n\t\tcheck_name() ? isError = true : isError =isError;\r\n\t\tcheck_description() ? isError = true : isError = isError;\r\n\r\n\t\treturn isError;\t\t\r\n\t};\r\n\r\n\t// function to add contact lists to the backend database\r\n\tconst onAddContactsList = async e => {\r\n\t\t\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst json_contacts_list = JSON.stringify(contacts_list)\r\n\t\tawait smsApiRequests.saveContactsList(uid, json_contacts_list).then(response =>{\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContactsList(response.payload);\r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:response.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t// initialize contacts list\r\n\tuseEffect(() => {\t\t\r\n\t\t  setContactsList({...contacts_list,uid : user_account_state.user_account.uid});\t\t\t  \r\n\t\treturn () => {\r\n\t\t\tsetContactsList(contact_lists_init);\r\n\t\t};\r\n\t}, [])\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\tCreate Contact List\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-horizontal'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label'> List Name</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={contacts_list.name} \r\n\t\t\t\t\t\t\tonChange={e => setContactsList({...contacts_list,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name_error ? <InlineError message={errors.name_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label className='label'> Description</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\tvalue={contacts_list.description} \r\n\t\t\t\t\t\t\tonChange={e => setContactsList({...contacts_list,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.description_error ? <InlineError message={errors.description_error} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='save'\r\n\t\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcheckErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\t\t\tisError ? setInline({message:'error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t\t\t: onAddContactsList(e).then(results => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n\t\t\t\t\t\t\t\tAdd Contacts List\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t\tsetErrors(contact_lists_errors_init);\r\n\t\t\t\t\t\t\t\tsetContactsList(contact_lists_init);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'></i>{' '}\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst ContactsListItems = ({ onOpenContactList,contact_list }) => {\r\n  return (\r\n    <tr>\r\n      <td\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={e => {\r\n          const id = contact_list.id;\r\n          onOpenContactList(id);\r\n        }}\r\n      >\r\n        {contact_list.name}\r\n      </td>\r\n      <td>{contact_list.description}</td>\r\n      <td>{contact_list.total_contacts}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ContactsLists = ({ onOpenContactList,contact_lists }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Contact Lists</h3>\r\n        </div>\r\n\r\n        <table className=\"table table-responsive table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Description</td>\r\n              <td>Total Contacts</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contact_lists.map(contact_list => (\r\n              <ContactsListItems\r\n                onOpenContactList={onOpenContactList}\r\n                contact_list={contact_list}\r\n              />\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Description</td>\r\n              <td>Total Contacts</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * ability to add and remove contacts, ability to\r\n * organize contacts by named contact lists\r\n * \r\n// \texport const contact_lists_init = {\r\n// \t\tuid : '',\r\n// \t\tid : '',\r\n// \t\tname : '',\r\n// \t\tdescription : '',\r\n// \t\ttotal_contacts : '',\t\r\n// \t};\r\n * \r\n * \r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const SMSContacts = () => {\r\n\r\n\tconst [contactLists,setContactLists] = useState([]);\r\n\tconst [contacts,setContacts] = useState([]);\r\n\tconst [listDetail,setListDetail] = useState(contact_lists_init);\r\n\r\n\tconst [display, setDisplay] = useState(\"contact-lists\");\r\n\tconst [smsContactsMenu,setMenu] = useState({menu:false});\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} id list id used to fetch contact list belonging to the list opened\r\n\t */\r\n\tconst onOpenContactList = id => {\r\n\t\tconst contact_list_details = contactLists.find(contact_list => contact_list.id === id);\r\n\t\tconst uid = user_account_state.user_account.uid;\r\n\t\tconst listname = contact_list_details.list_name;\r\n\t\tsetListDetail(contact_list_details);\r\n\t\tsmsApiRequests.fetchContactsByListName(uid,listname).then(response => {\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContacts(response.payload);\r\n\t\t\t\tsetDisplay('contacts_manager');\r\n\t\t\t}else{\r\n\t\t\t\tsetContacts([]);\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetContacts([]);\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t  \r\n\t\tconst fetchContactListsAPI = async () => {\r\n\t\t\tconst uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tawait smsApiRequests.fetchContactLists(uid).then(results => {\r\n\t\t\t\tif(results.status){ \r\n\t\t\t\t\tsetContactLists(results.payload)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetContactLists([])\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tsetContactLists([])\r\n\t\t\t});\r\n\r\n\t\t\treturn true\r\n\t  };\t\t\r\n\r\n\t  fetchContactListsAPI().then(results => console.log('contacts lists fetched',results));\r\n\r\n\t  return () => {\r\n\t\tsetContactLists([]);\t\r\n\t  };\r\n\t}, []);\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-envelope-square\"> </i> Contacts\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>{\" \"}\r\n              </button>\r\n              {smsContactsMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"contact-lists\"\r\n                    onClick={() => setDisplay(\"contact-lists\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-envelope\"> </i> Contact Lists\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"add-contacts\"\r\n                    onClick={() => setDisplay(\"add-contacts\")}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-envelope\"> </i> Create Contact List\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {display === \"contact-lists\" ? (\r\n          <ContactsLists\r\n            onOpenContactList={onOpenContactList}\r\n            contact_lists={contactLists}\r\n          />\r\n        ) : null}\r\n        {display === \"add-contacts\" ? <AddContactList /> : null}\r\n        {display === \"contacts_manager\" ? (\r\n          <ContactsManager\r\n            contact_list_details={listDetail}\r\n            contacts={contacts}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SMS = () => {\r\n\tconst [display,setDisplay] = useState('contact-details');\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-send-o'> </i> {' '}\r\n                        Bulk SMS\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-bars'> </i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"contact-details\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('contact-details')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-envelope-square'> </i> {' '}\r\n                                        Contacts\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"messages\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('messages')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-envelope'> </i> {' '}\r\n                                        Messages\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"account\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setDisplay('account')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fa fa-credit-card'> </i> {' '}\r\n                                        Balances\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t{display === 'contact-details' ? <SMSContacts/> : ''}\r\n\t\t\t\t{display === 'messages' ? <SMSMessages/> : ''}\r\n\t\t\t\t{display === 'account' ? <SMSBalances /> : ''}\r\n\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default SMS;","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport Switch from 'react-switch';\r\nimport {Utils} from '../../utilities';\r\nimport {extended_user, extended_user_error} from '../Auth/auth-constants';\r\nimport * as apiRequests from '../Auth/auth-api';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport InlineError from '../Forms/InlineError';\r\nimport InlineMessage from '../Forms/InlineMessage';\r\n\r\nfunction Verifications({ user_account, doSendEmailVerification }) {\r\n  const [verifications, setVerifications] = useState({\r\n    use_onetime_pin: false,\r\n    cell: user_account.phoneNumber,\r\n    account_verified: user_account.emailVerified\r\n  });\r\n\r\n  let toggleVerifications = e => {\r\n    setVerifications({\r\n      use_onetime_pin: !verifications.use_onetime_pin,\r\n      cell: verifications.cell,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n\r\n  let OnChangeHandler = e => {\r\n    setVerifications({\r\n      use_onetime_pin: verifications.use_onetime_pin,\r\n      cell: e.target.value,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n  let UpdateVerifications = e => {\r\n    console.log(\"Updating verifications\");\r\n    //TODO- this means that i have to actually send a verification\r\n    //sms to the old number and then to the new number\r\n  };\r\n\r\n  let onAccountVerify = e => {\r\n    console.log(\"on Account verifications\");\r\n    //Send verification email from firebase\r\n    doSendEmailVerification();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <small>\r\n                <i className=\"fa fa-lock\"> </i>\r\n                Verifications &amp; Security Settings\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">Account Verification Status</h3>\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        <Switch\r\n                          name=\"account-verified\"\r\n                          checked={verifications.account_verified}\r\n                          onChange={e => onAccountVerify(e)}\r\n                        />\r\n                        <span className=\"box-title\">\r\n                          {verifications.account_verified\r\n                            ? \"Account is Verified\"\r\n                            : \"Account not verified\"}\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"verification-email\"\r\n                        value={user_account.email}\r\n                      />\r\n                    </div>\r\n                    {verifications.account_verified ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-google\"\r\n                          name=\"sendverificationEmail\"\r\n                          onClick={e => onAccountVerify(e)}\r\n                        >\r\n                          <strong>\r\n                            <i className=\"fa fa-send\"> </i> Send Verification\r\n                            Email\r\n                          </strong>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">One Time Pin</h3>\r\n                </div>\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      <Switch\r\n                        name=\"verifications_active\"\r\n                        onChange={e => toggleVerifications(e)}\r\n                        checked={verifications.use_onetime_pin}\r\n                      />\r\n\r\n                      <span> OTP SMS (ONE TIME PIN) </span>\r\n                      {\"  \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group-addon\">\r\n                      <div className=\"input-group\" />\r\n                      <i className=\"fa fa-mobile-phone\"> </i> Cell\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cell\"\r\n                      onChange={e => OnChangeHandler(e)}\r\n                      value={verifications.cell}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-google btn-lg\"\r\n                      name=\"update-verifications\"\r\n                      onClick={e => UpdateVerifications(e)}\r\n                    >\r\n                      <strong>\r\n                        <i className=\"fa fa-mobile-phone\"> </i> Update\r\n                        Verifications\r\n                      </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AccountSettings(){\r\n\r\n    const[accountSettings,setAccountSettings] = useState({\r\n        account_active: true,\r\n        receive_job_offers:true,\r\n        receive_sms:true,        \r\n        receive_email:true\r\n    });\r\n\r\n    let onToggleSettings = target => {\r\n      console.log(target);\r\n      switch(target){\r\n        case  'account_active':{ \r\n          console.log('Setting account active');\r\n          setAccountSettings(\r\n                {\r\n                  ...accountSettings,\r\n                  account_active: !accountSettings.account_active\r\n                }\r\n              );break;\r\n        }\r\n        \r\n        case 'receive_job_offers':{ \r\n          console.log(\"Setting receive job offers\");\r\n          setAccountSettings({\r\n          ...accountSettings,\r\n          receive_job_offers: !accountSettings.receive_job_offers,\r\n        });break;\r\n        }\r\n        \r\n        case 'receive_sms':{\r\n          console.log('setting receive sms');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_sms: !accountSettings.receive_sms\r\n          });break;\r\n        }\r\n        \r\n        case 'receive_email':{ console.log('setting receive email');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_email: !accountSettings.receive_email\r\n          });break;\r\n        }\r\n    }\r\n    }\r\n\r\n    let UpdateAccountSettings = e => {\r\n      console.log('Updating account settings');\r\n      // store settings in locaStorage\r\n      // save settings in the backend\r\n    }\r\n\r\n    let onLoadAccountSettings = e => {\r\n      console.log('Loading account settings');\r\n      // load settings from backend  -> then\r\n        // save in store\r\n      // if backend load failed the load from store\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <small>\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings{\" \"}\r\n                </small>{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          <div className=\"box-footer\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name='account_active'\r\n                    onChange={e => onToggleSettings(\"account_active\")}\r\n                    checked={accountSettings.account_active}\r\n                  />\r\n\r\n                  <span title={\"Close Account\"}>\r\n                    {\"  \"}\r\n                    <em> Account Status</em>{\" \"}\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_job_offers\"\r\n                    onChange={e => onToggleSettings(\"receive_job_offers\")}\r\n                    checked={accountSettings.receive_job_offers}\r\n                  />\r\n                  <span>Receive Job Offers </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_sms\"\r\n                    onChange={e => onToggleSettings(\"receive_sms\")}\r\n                    checked={accountSettings.receive_sms}\r\n                  />\r\n                  <span>Receive SMS Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_email\"\r\n                    onChange={e => onToggleSettings(\"receive_email\")}\r\n                    checked={accountSettings.receive_email}\r\n                  />\r\n                  <span>Receive Email Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-lg\"\r\n                  name=\"update-account-settings\"\r\n                  onClick={e => UpdateAccountSettings(e)}\r\n                >\r\n                  <strong>\r\n                    <i className=\"fa fa-save\"> </i> Update Account Settings\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nfunction PersonalDetails({user_account}){\r\n    const [user, setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    const onChangeHandler = e => setUser({...user,[e.target.name]:e.target.value});    \r\n\r\n    const onUpdatePersonalDetails = async e => {\r\n        let sent_user = {...user};\r\n        sent_user.uid = user_account_state.user_account.uid;\r\n        sent_user = JSON.stringify(sent_user)\r\n        console.log('Updating User with ', sent_user);\r\n\r\n        await apiRequests.updateUser(sent_user).then(results => {\r\n          if (results.status){\r\n            setUser(results.payload);\r\n            setInline({message:'successfully update personal details'});\r\n          }else{\r\n            setInline({message:'there was an error updating personal details',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n        return true;\r\n    };\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n\r\n      const check_names = () => {\r\n        if (Utils.isEmpty(user.names)) {\r\n          setErrors({ ...errors, names_error: \"names field cannot be empty\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_surname = () => {\r\n        if (Utils.isEmpty(user.surname)) {\r\n          setErrors({\r\n            ...errors,\r\n            surname_error: \"surname field cannot be empty\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_cell = () => {\r\n        if (Utils.isCell(user.cell) === false) {\r\n          setErrors({ ...errors, cell_error: \"cell field is invalid\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_email = () => {\r\n        if (Utils.validateEmail(user.email) === false) {\r\n          setErrors({ ...errors, email_error: \"email address is invalid\" });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_password = () => {\r\n        if (Utils.isEmpty(user.password)) {\r\n          setErrors({\r\n            ...errors,\r\n            password_error: \"password field cannot be empty\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      const check_password_two = () => {\r\n        if (user.password !== user.repeatpassword) {\r\n          setErrors({\r\n            ...errors,\r\n            repeatpassword_error: \"passwords do not match\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_names() ? (isError = true) : (isError = isError);\r\n        check_surname() ? (isError = true) : (isError = isError);\r\n        check_cell() ? (isError = true) : (isError = isError);\r\n        check_email() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n      };\r\n\r\n      return await do_check();\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          let uid = user_account_state.user_account.uid;\r\n          await apiRequests.fetchUser(uid).then(results => {\r\n            if(results.status){\r\n              setUser(results.payload);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error.message);\r\n          });\r\n\r\n          return true;\r\n        };\r\n\r\n        fetchAPI().then(results => {\r\n          console.log('Fetch API exected')\r\n        });\r\n\r\n\r\n      return () => {\r\n        setUser(extended_user);\r\n        setInline({message:'',message_type:'info'});\r\n        setErrors(extended_user_error);\r\n      };\r\n    }, [user_account_state])\r\n    return (\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <small>\r\n                {\" \"}\r\n                <i className=\"fa fa-user\"> </i> Personal Details{\" \"}\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer col-lg-8\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"names\"\r\n                placeholder=\"Names...\"\r\n                value={user.names}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"surname\"\r\n                placeholder=\"Surname...\"\r\n                value={user.surname}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"cell\"\r\n                placeholder=\"Cell...\"\r\n                value={user.cell}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Email...\"\r\n                value={user.email}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n              {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"update\"\r\n                onClick={e => checkErrors(e).then(isError => {\r\n                  isError\r\n                    ? setInline({\r\n                        message: \"there was an error processing form\",\r\n                        message_type: \"error\"\r\n                      })\r\n                    : onUpdatePersonalDetails(e).then(result => {\r\n                      console.log(result);\r\n                    })\r\n                }) }\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cloud-upload\"> </i> Update\r\n                </strong>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"cancel\"\r\n                onClick={e => {\r\n                  setUser(extended_user);\r\n                  setErrors(extended_user_error);\r\n                  setInline({message:'',message_type:'info'});\r\n                }}\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-eraser\"> </i> Reset\r\n                </strong>\r\n              </button>\r\n            </div>\r\n            <div className='form-group'>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default function Account (){\r\n    const [display, setDisplay] = useState(\"personaldetails\");\r\n    const [displayMenu, setMenu] = useState({ menu: false });\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n    \r\n    let onSwitchScreen = (e) => {\r\n        setDisplay(e);\r\n        console.log(display);        \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      console.log(display);\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const { doSendEmailVerification, user_account_state } = context;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Account\r\n                </strong>\r\n              </h3>\r\n              <div className=\"box-tools\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool dropdown-toggle\"\r\n                    onClick={e => showDropdownMenu(e)}\r\n                  >\r\n                    <i className=\"fa fa-bars\"> </i>\r\n                  </button>\r\n                  {displayMenu.menu ? (\r\n                    <ul className=\"dropmenu\">\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"personaldetails\"\r\n                        onClick={e => onSwitchScreen(\"personaldetails\")}\r\n                      >\r\n                        <i className=\"fa fa-user\"> </i> Personal Details\r\n                      </li>\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"verifications\"\r\n                        onClick={e => onSwitchScreen(\"verifications\")}\r\n                      >\r\n                        <i className=\"fa fa-lock\"> </i> Verifications\r\n                      </li>\r\n\r\n                      <li\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool droplink\"\r\n                        name=\"accountsettings\"\r\n                        onClick={e => onSwitchScreen(\"accountsettings\")}\r\n                      >\r\n                        <i className=\"fa fa-cogs\"> </i> Account Settings\r\n                      </li>\r\n                    </ul>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {display === \"personaldetails\" ? (\r\n              <PersonalDetails user_account={user_account_state.user_account} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {display === \"accountsettings\" ? <AccountSettings /> : \"\"}\r\n            {display === \"verifications\" ? (\r\n              <Verifications\r\n                user_account={user_account_state.user_account}\r\n                doSendEmailVerification={doSendEmailVerification}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React,{Fragment,useState,useEffect,useContext,useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\n\r\nimport {\r\n\tphysical_address_init,\r\n\tphysical_address_errors_init,\r\n\tcontact_details_init,\r\n\tcontact_details_errors_init,\r\n\tproducts_init,\r\n\tservice_init,\r\n\tcart_init,\r\n\tcoupon_init\r\n} from '../market-constants';\r\n\r\n\r\nimport * as APIRequests from '../api-requests';\r\nimport {firebase} from '../../../firebase';\r\nimport { Utils } from '../../../utilities';\r\n\r\nimport * as settings from '../../../constants';\r\n\r\nimport { UserAccountContext } from '../../../context/UserAccount/userAccountContext';\r\nimport {Capitalize} from 'react-lodash';\r\nimport { client_id, banking_details_init } from './checkout_constants';\r\n\r\n\r\n\r\nconst CheckoutEFTPayMentDetails = () => {\r\n\r\n\tconst[bankdetails,setBankingDetails] = useState([]);\r\n\r\n\tconst {user_account_state} = useContext(UserAccountContext);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst fetchBankingDetails  = async () => {\r\n\t\t\tconst {uid} = user_account_state.user_account;\r\n\t\t\tawait APIRequests.fetchBankingDetails(uid).then(results => {\r\n\t\t\t\tif(results.status){\r\n\t\t\t\t\tsetBankingDetails(results.payload);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(results.error.message);\r\n\t\t\t\t}\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error.message);\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchBankingDetails().then(result => console.log(result));\r\n\r\n\t},[]);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='bo box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n                      Checkout (EFT)\r\n\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='box-footer'>\r\n\r\n\t\t\t\t\t<span className='content'>\r\n\t\t\t\t\t\t<blockquote>\r\n                        in order to purchase your services or products\r\n                        make payment and then upload your proof of payment here.\r\n\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t\t<blockquote>\r\n                        make sure to make use of the payment reference as indicated\r\n                        together with the payment details.\r\n\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t\t<blockquote>\r\n                        Note in order to guarantee that you receive your services or products\r\n                        as you requested, your funds will be held safely in an escrow account\r\n                        and only portions of the funds released as services are being rendered\r\n                        and or as the products gets received by you.\r\n\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t    <blockquote>\r\n                        or you can alternatively email your proof of payment to\r\n                        payments@weqtrading.com.\r\n\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbankdetails.map(account => {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t<div className='box box-footer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='box-title'>Account Details : </h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<ul className='list-group'>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Account Holder : <em><a href={'#'}> {account.account_holder} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Bank Name : <em><a href={'#'}> {account.bank_name} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Account Number : <em><a href={'#'}> {account.account_number} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Branch Code : <em><a href={'#'}> {account.branch_code} </a> </em></strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst BasketItem = ({item}) => {\r\n  \r\n\tconst[product,setProduct] = useState(products_init);\r\n\tconst[service,setService] = useState(service_init);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {   \r\n\t\t\tif (item.item_type === 'products'){\r\n\t\t\t\tawait APIRequests.fetchProductAPI(item.id_service_product).then(results => {\r\n\t\t\t\t\tsetProduct(results);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tawait APIRequests.fetchServiceAPI(item.id_service_product).then(results => {\r\n\t\t\t\t\tsetService(results);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tfetchAPI().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsetProduct(products_init);\r\n\t\t\tsetService(service_init);\r\n\t\t};\r\n\t}, []);\r\n\tlet description = '';\r\n\tproduct.description\r\n\t\t? (description = product.description)\r\n\t\t: (description = service.description);\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td title={description}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(item.item_type === 'products') ?\r\n\t\t\t\t\t\t<Capitalize string={product.product_name} /> \r\n\t\t\t\t\t\t: <Capitalize string={service.service_name} />\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t\t<td><Capitalize string={item.item_type} /></td>\r\n\t\t\t<td>{item.quantity}</td>\r\n\t\t\t<td>R {item.price}.00</td>\r\n\t\t\t<td>R {item.sub_total}.00</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nconst ShoppingBasket = () => {\r\n\tconst[basket,setBasket] = useState([]);\r\n\tconst[coupons,setCoupons] = useState(coupon_init);\r\n\tconst[errors,setErrors] = useState({\r\n\t\tcoupon_code_error : ''\r\n\t});\r\n\tconst [cart, setCart] = useState(cart_init);\r\n\tconst[inline,setInline] = useState({message:'',message_type:'info'});\r\n    \r\n\tconst[display,setDisplay] = useState('shopping-basket');\r\n\tconst [paidFor,SetPaidFor] = useState(false);\r\n\tconst [loaded,setLoaded] = useState(false);\r\n    \r\n\tlet paypalRef = useRef();\r\n\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n    \r\n    \r\n\tconst applyCouponCode = e => {\r\n\t\t/**\r\n         * compile code information from state\r\n         * send coupon to back end\r\n         * backend server must find out if the code there matches \r\n         * the ones in the database, if it does then apply discounts \r\n         * appropriately\r\n         */\r\n\t\tif (coupons.code){\r\n\t\t\tlet coupon = {...coupons};\r\n\t\t\ttry{\r\n\t\t\t\tcoupon.uid = user_account_state.user_account.uid;\r\n\t\t\t\tcoupon = JSON.stringify(coupon);\r\n\t\t\t\tAPIRequests.applyCouponCode(coupon).then(results => {\r\n\t\t\t\t\tconsole.log('coupon code results : ', results);\r\n\t\t\t\t\tif (results.status){\r\n\t\t\t\t\t\t// activate the discount only on the total amount\r\n\t\t\t\t\t\t// the app will then send the total amount into\r\n\t\t\t\t\t\t// the payment record and then save it back to server\r\n                    \r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetInline({message:results.error.message,message_type:'error'});\r\n\t\t\t\t\t\tconsole.log(results.error.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}catch(error){\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetInline({message:error.message,message_type:'error'});\r\n\t\t\t}              \r\n            \r\n\t\t}else{\r\n\t\t\tsetErrors({...errors, coupon_code_error : 'coupon code cannot be empty'});\r\n\t\t\tsetInline({message:'error applying coupon code'});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst apiFetch = async () => {\r\n\t\t\tlet uid = user_account_state.user_account.uid;\r\n\r\n\t\t\tAPIRequests.retrieveCart(uid).then(Response => {\r\n\t\t\t\tconsole.log('Cart Items :', Response.cart_items);\r\n\t\t\t\tsetBasket(Response.cart_items);\r\n\t\t\t\tsetCart(Response.cart);\r\n\t\t\t}); \r\n\r\n\t\t};\r\n\r\n\t\tapiFetch().then(results => {\r\n\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetBasket([]);\r\n\t\t};\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst createPurchaseUnits = async () => {\r\n\t\t\tlet purchase_units = [];\r\n\t\t\tawait basket.forEach(purchase_item => {\r\n\t\t\t\tconsole.log('Purchase Item',purchase_item);\r\n\t\t\t\tpurchase_units.push({\r\n\t\t\t\t\tid_service_product: purchase_item.id_service_product,\r\n\t\t\t\t\tamount: {\r\n\t\t\t\t\t\tcurrency_code: 'USD',\r\n\t\t\t\t\t\tvalue: purchase_item.price\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn purchase_units;\r\n\t\t};\r\n\r\n\t\tcreatePurchaseUnits().then(purchase_units => {\r\n\t\t\ttry {\r\n\t\t\t\t// i have this try catch here because paypal button is misbehaving\r\n\t\t\t\twindow.paypal.Buttons({\r\n\t\t\t\t\tcreateOrder: (data, actions) => {\r\n\t\t\t\t\t\treturn actions.order.create({purchase_units: purchase_units});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonApprove: async (data, actions) => {\r\n\t\t\t\t\t\tconst order = await actions.order.capture();\r\n\t\t\t\t\t\tSetPaidFor(true);\r\n\t\t\t\t\t\tconsole.log(order);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).render(paypalRef);\r\n\t\t\t}catch(error){\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\r\n\t\t}); // end create purchase units\r\n      \r\n\t\treturn () => {\r\n        \r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{\r\n\t\t\t\tdisplay === 'shopping-basket' ?\r\n\t\t\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"box box-warning\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"box box-footer col-md-8\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i> Shopping Items\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"clear_items\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAPIRequests.deleteCart(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfirebase.auth.currentUser.uid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t).then(results => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (results.status === true) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCart(cart_init);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBasket([]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetInline({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'cart items cleared',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Clear Items\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<table className=\"table table-responsive\">\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><strong><em>Item Name</em></strong></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td><strong><em>Item Type</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Quantity</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Price</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Sub Total</em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{basket.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\tbasket.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <BasketItem item={item} key={index}/>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"box box-warning\">\r\n                            There are not items in your shopping list\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t{inline.message ? (\r\n\t\t\t\t\t\t\t\t\t\t<InlineMessage\r\n\t\t\t\t\t\t\t\t\t\t\tmessage={inline.message}\r\n\t\t\t\t\t\t\t\t\t\t\tmessage_type={inline.message_type}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"box box-footer col-md-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-bag\"> </i> Check Out{' '}\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n                                            Sub Totals : R {cart.sub_total}0\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\"> Tax : R {cart.tax}.00</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\"> Total : R {cart.total}0</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"code\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Coupon Code...\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={coupons.code}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoupons({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...coupons,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{errors.coupon_code_error ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InlineError message={errors.coupon_code_error}/>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger margin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"applycode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => applyCouponCode(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-money\"> </i> Apply Code\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-warning\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"reset\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoupons(coupon_init);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetErrors({coupon_code_error: ''});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetInline({message: '', message_type: 'info'});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Reset Code\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div ref={v => (paypalRef = v)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success margin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"checkout\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Send Invoice and Pay Via EFT or Make a Deposit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('checkout-eft')}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-bag\"> </i> Checkout (EFT)\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tdisplay === 'checkout-eft' ?\r\n\t\t\t\t\t<CheckoutEFTPayMentDetails /> : null\r\n\t\t\t}\r\n\t\t</Fragment>\r\n\r\n\t);\r\n};\r\n\r\nconst PhysicalAddress = () => {\r\n\tconst [physical,setPhysical] = useState(physical_address_init);\r\n\tconst [errors,setErrors] = useState(physical_address_errors_init);\r\n\tconst [inline,setInline] = useState({message: '',message_type:'info'});\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\tconst checkErrors = async e => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_deliver_to = () => {\r\n\t\t\tif(Utils.isEmpty(physical.deliver_to)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tdeliver_to_error : 'Deliver to field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_stand = () => {\r\n\t\t\tif(Utils.isEmpty(physical.stand)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tstand_error : 'stand number field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_street_name = () => {\r\n\t\t\tif(Utils.isEmpty(physical.street_name)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tstreet_name_error : 'street name field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_city = () => {\r\n\t\t\tif(Utils.isEmpty(physical.city)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tcity_error : 'city name field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_province = () => {\r\n\t\t\tif(Utils.isEmpty(physical.province)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tprovince_error : 'province name field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_country = () => {\r\n\t\t\tif(Utils.isEmpty(physical.country)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tcountry_error : 'country field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tconst check_postal_code = () => {\r\n\t\t\tif(Utils.isEmpty(physical.postal_code)){\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tpostal_code_error:'postal code error field cannot be empty'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst do_check = () => {\r\n\t\t\tcheck_deliver_to() ? isError = true : isError = isError;\r\n\t\t\tcheck_stand() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_street_name() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_city() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_province() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_country() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_postal_code() ? (isError = true) : (isError = isError);\r\n\r\n\t\t\treturn isError;\r\n\t\t};\r\n\r\n\t\treturn await do_check();\r\n\r\n\t};\r\n\r\n\tconst addPhysicalAddress = async e => {\r\n      \r\n\t\tlet physical_address = Object.assign({},physical);\r\n\t\tphysical_address.uid = user_account_state.user_account.uid;\r\n\t\tphysical_address = JSON.stringify(physical_address);\r\n\r\n\t\tawait APIRequests.savePhysicalAddress(physical_address).then(response => {\r\n\t\t\tif (response.status) {\r\n\t\t\t\tsetPhysical(response.payload);\r\n\t\t\t\tsetInline({message: 'successfully saved physical address',message_type: 'info'\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetInline({\r\n\t\t\t\t\tmessage: response.error.message,\r\n\t\t\t\t\tmessage_type: 'error'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetInline({ message: error.message, message_type: 'error' });\r\n\t\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\t// load physical address for this user\r\n\t\tconst loadPhysicalAddress = async () => {\r\n\r\n\t\t\tlet seed = user_account_state.user_account.uid;        \r\n\t\t\tlet stateKey = settings.settings.localStorageKey + 'physical-address-' + seed + '-';\r\n\r\n\t\t\tawait APIRequests.fetchPhysicalAddress(seed,stateKey).then(physical => {\r\n\t\t\t\tsetPhysical(physical);\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tloadPhysicalAddress().then(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsetPhysical(physical_address_init);\r\n\t\t\tsetErrors(physical_address_errors_init);\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3\r\n\t\t\t\t\t\tclassName=\"box-title\"\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t'an address where your service should be rendered or where you are located if a service is virtual'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-map-marker\"> </i> Delivery Address\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className=\"form-horizontal\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"deliver_to\"\r\n\t\t\t\t\t\t\tplaceholder=\"Deliver to, or a place where the service will be rendered...\"\r\n\t\t\t\t\t\t\tvalue={physical.deliver_to}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.deliver_to_error ? <InlineError message={errors.deliver_to_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"stand\"\r\n\t\t\t\t\t\t\tplaceholder=\"Stand Number ...\"\r\n\t\t\t\t\t\t\tvalue={physical.stand}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.stand_error ? <InlineError message={errors.stand_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"street_name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Street Name....\"\r\n\t\t\t\t\t\t\tvalue={physical.street_name}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.street_name_error ? <InlineError message={errors.street_name_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tplaceholder=\"City...\"\r\n\t\t\t\t\t\t\tvalue={physical.city}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.city_error ? <InlineError message={errors.city_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\t\t\tplaceholder=\"Province...\"\r\n\t\t\t\t\t\t\tvalue={physical.province}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.province_error ? <InlineError message={errors.province_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\tplaceholder=\"Country...\"\r\n\t\t\t\t\t\t\tvalue={physical.country}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.country_error ? <InlineError message={errors.country_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"postal_code\"\r\n\t\t\t\t\t\t\tplaceholder=\"Postal Code...\"\r\n\t\t\t\t\t\t\tvalue={physical.postal_code}\r\n\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\tsetPhysical({ ...physical, [e.target.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.postal_code_error ? <InlineError message={errors.postal_code_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-lg\"\r\n\t\t\t\t\t\t\tname=\"save_physical\"\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ?\r\n\t\t\t\t\t\t\t\t\tsetInline({message:'there was an error processing form',message_type:'error'})\r\n\t\t\t\t\t\t\t\t\t: addPhysicalAddress(e).then(response => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-save\"> </i> Add Physical Address\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\t\t\tname=\"reset\"\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetErrors(physical_address_errors_init);\r\n\t\t\t\t\t\t\t\tsetPhysical(physical_address_init);\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-eraser\"> </i> Reset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst ContactDetails = () => {\r\n\tconst [contact,setContact] = useState(contact_details_init);\r\n\tconst [errors,setErrors] = useState(contact_details_errors_init);\r\n\tconst [inline,setInline] = useState({message:'',message_type:'info'});\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n\tconst checkErrors = async e  => {\r\n\t\tlet isError = false;\r\n\r\n\t\tconst check_tel = () => {\r\n\t\t\tif(Utils.isEmpty(contact.tel) === false){\r\n\t\t\t\tif(Utils.isTel(contact.tel) === false){\r\n\t\t\t\t\tsetErrors({\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\ttel_error : 'tel field is invalid'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_cell = () => {\r\n\t\t\tif (Utils.isCell(contact.cell === false)) {\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\tcell_error: 'cell field is invalid'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_fax = () => {\r\n\t\t\tif (Utils.isEmpty(contact.fax) === false){\r\n\t\t\t\tif (Utils.isFax(contact.fax === false)) {\r\n\t\t\t\t\tsetErrors({\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\tfax_error: 'fax field is invalid'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_email = () => {\r\n\t\t\tif (Utils.validateEmail(contact.email) === false) {\r\n\t\t\t\tsetErrors({\r\n\t\t\t\t\t...errors,\r\n\t\t\t\t\temail_error: 'email field is invalid'\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst check_website = () => {\r\n\t\t\tif(Utils.isEmpty(contact.website) === false){\r\n\t\t\t\tif(Utils.isUrl(contact.website) === false){\r\n\t\t\t\t\tsetErrors({\r\n\t\t\t\t\t\t...errors,\r\n\t\t\t\t\t\twebsite_error : 'website address is invalid'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tconst do_check = () => {\r\n\t\t\tcheck_tel() ? isError = true : isError = isError;\r\n\t\t\tcheck_cell() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_fax() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_email() ? (isError = true) : (isError = isError);\r\n\t\t\tcheck_website() ? (isError = true) : (isError = isError);\r\n\t\t\treturn isError;\r\n\t\t};\r\n\r\n\t\treturn await do_check();\r\n\t};\r\n\r\n\tconst onAddContactDetails = async e => {\r\n\t\tlet contact_details = Object.assign({},contact);\r\n\t\tcontact_details.uid = user_account_state.user_account.uid;\r\n\t\tcontact_details = JSON.stringify(contact_details);\r\n\r\n\t\tAPIRequests.saveContactDetails(contact_details).then(response => {\r\n\t\t\tif(response.status){\r\n\t\t\t\tsetContact(response.payload);\r\n\t\t\t\tsetInline({message:'successfully saved contact details',message_type:'info'});\r\n\t\t\t}else{\r\n\t\t\t\tsetInline({message:response.error.message,message_type:'error'});\r\n\t\t\t}\r\n\t\t}).catch(error => {\r\n\t\t\tsetInline({message: error.message,message_type:'error'});\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst fetchContacts = async () => {\r\n\t\t\tlet seed = user_account_state.user_account.uid;\r\n\t\t\tlet stateKey = settings.settings.localStorageKey + 'contact-details-' + seed + '-';\r\n\r\n\t\t\tawait APIRequests.fetchContactDetails(seed, stateKey).then(response => {\r\n\t\t\t\tsetContact(response);\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tfetchContacts().then(result => console.log(result));\r\n\r\n\t\treturn () => {\r\n\t\t\tsetContact(contact_details_init);\r\n\t\t\tsetErrors(contact_details_errors_init);\r\n\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'>\r\n\t\t\t\t\t\t<i className='fa fa-mobile-phone'> </i>{' '}\r\n                        Contact Details\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className='form-group'>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='tel'\r\n\t\t\t\t\t\t\tplaceholder='Tel...'\r\n\t\t\t\t\t\t\tvalue={contact.tel}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='cell'\r\n\t\t\t\t\t\t\tplaceholder='Cell...'\r\n\t\t\t\t\t\t\tvalue={contact.cell}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='fax'\r\n\t\t\t\t\t\t\tplaceholder='Fax...'\r\n\t\t\t\t\t\t\tvalue={contact.fax}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.fax_error ? <InlineError message={errors.fax_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tplaceholder='Email...'\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype='url'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='website'\r\n\t\t\t\t\t\t\tplaceholder='Website Address...'\r\n\t\t\t\t\t\t\tvalue={contact.website}\r\n\t\t\t\t\t\t\tonChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-success btn-lg'\r\n\t\t\t\t\t\t\tname='save-contacts'\r\n\t\t\t\t\t\t\tonClick={e => checkErrors(e).then(isError => {\r\n\t\t\t\t\t\t\t\tisError ?\r\n\t\t\t\t\t\t\t\t\tsetInline({message: 'error processing contact form'})\r\n\t\t\t\t\t\t\t\t\t: onAddContactDetails(e).then(result => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-save'> </i>{' '}\r\n                            Save Contacts\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-warning btn-lg'\r\n\t\t\t\t\t\t\tname='reset'\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetContact(contact_details_init);\r\n\t\t\t\t\t\t\t\tsetErrors(contact_details_errors_init);\r\n\t\t\t\t\t\t\t\tsetInline({message:'',message_type:'info'});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-eraser'> </i>{' '}\r\n                            Reset\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst PaymentDetails = () => {\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t<h3 className='box-title'></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\nconst CheckOut = () => {\r\n\tconst [display,setDisplay] = useState('physical_address');\r\n\tconst { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\tconst [displayMenu,setMenu] = useState({menu:false});\r\n\tconst showDropdownMenu = e => {\r\n\t\te.preventDefault();\r\n\t\tsetMenu({ menu: true });\r\n\t\tdocument.addEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\tconst hideDropdownMenu = () => {\r\n\t\tsetMenu({ menu: false });\r\n\t\tdocument.removeEventListener('click', hideDropdownMenu);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body\">\r\n\t\t\t\t<div className=\"box box-header\">\r\n\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t<i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className=\"box-tools\">\r\n\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-box-tool dropdown-toggle\"\r\n\t\t\t\t\t\t\t\tonClick={e => showDropdownMenu(e)}\r\n\t\t\t\t\t\t\t>\r\n                                <i className='fa fa-bars'> </i>{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{displayMenu.menu ? (\r\n\t\t\t\t\t\t\t\t<ul className=\"dropmenu\">\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"physical_address\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('physical_address')}\r\n\t\t\t\t\t\t\t\t\t>\r\n                      Physical Address\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"contact_details\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('contact_details')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block droplink\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"shopping_basket\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => setDisplay('shopping_basket')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{display === 'physical_address' ? <PhysicalAddress /> : ''}\r\n\t\t\t\t{display === 'contact_details' ? <ContactDetails /> : ''}\r\n\t\t\t\t{display === 'shopping_basket' ? <ShoppingBasket /> : ''}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default CheckOut;\r\n","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,\r\n  service_init\r\n} from \"../market-constants\";\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport * as apiRequests from '../api-requests';\r\nimport { Utils } from '../../../utilities';\r\nimport { api_products_endpoint } from '../../../constants/routes';\r\n\r\n\r\n\r\nconst Store = () => {\r\n    const [store, setStore] = useState(store_init);\r\n    const [errors, setErrors] = useState(store_errors_init);\r\n    const [inline, setInline] = useState({ message: \"\", message_type: \"info\" });\r\n    const [my_form,setForm] = useState({primary : 'Add Store',reset:'Reset'});\r\n    const { user_account_state } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      \r\n      const check_store_name = () => {\r\n        if(Utils.isEmpty(store.store_name)){\r\n          setErrors({...errors,store_name_error : 'store name field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_description = () => {\r\n        if(Utils.isEmpty(store.description)){\r\n          setErrors({...errors,description_error : 'desciprition field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_company_name = () => {\r\n        if(Utils.isEmpty(store.company_name)){\r\n          setErrors({...errors,company_name_error: 'company name field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_physical_address = () => {\r\n        if(Utils.isEmpty(store.physical_address)){\r\n          setErrors({...errors,physical_address_error : 'physical address field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_tel = () => {\r\n        if(Utils.isTel(store.tel) === false){\r\n          setErrors({...errors,tel_error : 'telephone field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_cell = () => {\r\n        if(Utils.isCell(store.cell) === false){\r\n          setErrors({...errors,cell_error : 'cell number field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_email = () => {\r\n        if(Utils.validateEmail(store.email) === false){\r\n          setErrors({...errors,email_error : 'email field is invalid'});\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n       const check_website = () => {\r\n         if(!Utils.isEmpty(store.website)){\r\n         if(Utils.isUrl(store.website) === false){\r\n           setErrors({...errors,website_error:\"website field is invalid\"});\r\n           return true;\r\n         }\r\n         return false;\r\n        }\r\n        return false;         \r\n       }\r\n\r\n       const do_check = () => {\r\n         check_store_name() ? isError = true : isError = isError;\r\n         check_description() ? isError = true : isError = isError;\r\n         check_company_name() ? isError = true : isError = isError;\r\n         check_physical_address() ? isError = true : isError = isError;\r\n         check_tel() ? isError = true : isError = isError;\r\n         check_cell() ? isError = true : isError = isError;\r\n         check_email() ? isError = true : isError = isError;\r\n         check_website() ? isError = true : isError = isError;\r\n\r\n         return isError;\r\n       }\r\n\r\n       return do_check();\r\n    };\r\n\r\n    const addStore = async e => {\r\n        let uid = user_account_state.user_account.uid;\r\n        let client_store = {...store};\r\n        client_store.uid = uid;\r\n        client_store = JSON.stringify(client_store);\r\n        apiRequests.addStore(client_store).then(response => {\r\n          if(response.status){\r\n            setStore(response.payload);\r\n            setInline({message:'successfully updated store',message_type:'info'});\r\n          }else{\r\n            setInline({message:'error adding new store',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n\r\n        return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n      const fetchStore = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n        await apiRequests.fetchStore(uid).then(response => {\r\n          if (response.status) {\r\n            setStore(response.payload);\r\n            setForm({...my_form,primary:'Update Store'});\r\n          } else {\r\n            console.log(response.error.message);\r\n          }\r\n        });\r\n        return true;\r\n      };\r\n\r\n      fetchStore().then(success => {console.log('Store fetched')});\r\n\r\n      return () => {\r\n        setStore(store_init);\r\n        setErrors(store_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, []);\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <i className='fa fa-shopping-basket'> </i>  Store Manager</h3>\r\n\r\n            <div className='box-tools'>\r\n            </div>\r\n          </div>\r\n          <div className='box box-footer'>\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>Store Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"store_name\"\r\n                  value={store.store_name}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.store_name_error ? <InlineError message={errors.store_name_error} /> : '' }\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"description\"\r\n                  value={store.description}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Company Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"company_name\"\r\n                  value={store.company_name}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.company_name_error ? <InlineError message={errors.company_name_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Physical Address</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"physical_address\"\r\n                  value={store.physical_address}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.physical_address_error ? <InlineError message={errors.physical_address_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Tel</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"tel\"\r\n                  value={store.tel}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Cell</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"cell\"\r\n                  value={store.cell}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={store.email}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"website\"\r\n                  value={store.website}\r\n                  onChange={e =>\r\n                    setStore({ ...store, [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                {errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n              </div>\r\n              <div className='form-group'>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-success btn-lg'\r\n                    name='save-company'\r\n                    onClick={e => checkErrors(e).then(isError => {\r\n                      isError ? \r\n                        setInline({message:'error processing form', message_type:'error'})\r\n                      : addStore(e).then(response => {\r\n                        console.log(response);\r\n                      })\r\n                    })}\r\n                  >\r\n                    <i className='fa fa-save'> </i> {' '}\r\n                    {my_form.primary}\r\n                    \r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-warning btn-lg'\r\n                    name='reset'\r\n                    onClick={e => {\r\n                      setInline({message:'',message_type:'info'});\r\n                      setErrors(store_errors_init);\r\n                      setStore(store_init);\r\n                    }}\r\n                  >\r\n                    <i className='fa fa-eraser'> </i> {' '}\r\n                    Reset\r\n                  </button>\r\n              </div>\r\n              <div className='form-group'>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StoreManager = () => {\r\n    const[display,setDisplay] = useState('store');\r\n    const{user_account_state} = useContext(UserAccountContext);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-dashboard\"> </i> Store Manager\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool\"\r\n                name=\"store\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-product-hunt\"> </i> Store Manager\r\n              </button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {display === \"store\" ? <Store /> : \"\"}\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default StoreManager;\r\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,  \r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport { api_products_endpoint } from \"../../../constants/routes\";\r\nimport { extended_user } from \"../../Auth/auth-constants\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ManageProduct = ({ product }) => {\r\n  const [form_product, setProduct] = useState(products_init);\r\n  const [categories, setCategories] = useState([]);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const onUpdate = async e => {\r\n    let product = { ...form_product };\r\n    product = JSON.stringify(product);\r\n    await apiRequests\r\n      .updateProduct(product)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"product successfully updated\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  const onDeleteProduct = async e => {\r\n    let product = { ...form_product };\r\n\r\n    await apiRequests\r\n      .onDeleteProduct(product)\r\n      .then(result => {\r\n        if (result.status) {\r\n          setProduct(result.payload);\r\n          setInline({\r\n            message: \"product successfully deleted\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: result.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let category_type = \"products\";\r\n    apiRequests\r\n      .fetchCategories(category_type)\r\n      .then(results => {\r\n        setCategories(results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setProduct(product);\r\n    return () => {\r\n      setProduct(products_init);\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Product Manager</h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-danger\"\r\n              name=\"delete-product\"\r\n              onClick={e => onDeleteProduct(e)}\r\n            >\r\n              <i className=\"fa fa-eraser\"> </i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <label>Product Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"product_name\"\r\n                value={form_product.product_name}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={form_product.description}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={form_product.price}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"category_id\"\r\n                value={form_product.category_id}\r\n                onChange={e =>\r\n                  setProduct({\r\n                    ...form_product,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              >\r\n                {categories.map(category => {\r\n                  return (\r\n                    <option value={category.category_id}>\r\n                      {category.sub_category}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg margin\"\r\n                name=\"update-product\"\r\n                onClick={e => onUpdate(e)}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Update Product\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg margin\"\r\n                name=\"update-product\"\r\n                onClick={e => {\r\n                  setProduct(product);\r\n                  setInline({ message: \"\", message_type: \"info\" });\r\n                }}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Undo Changes\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {inline.message ? (\r\n                <InlineMessage\r\n                  message={inline.message}\r\n                  message_type={inline.message_type}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// id = ndb.StringProperty() # id of this request\r\n// product_id = ndb.StringProperty() # the same as the product id in the product table\r\n// client_uid = ndb.StringProperty() # user id of the client who requested the product\r\n// total_requested = ndb.StringProperty(default='1')\r\n// date_requested = ndb.StringProperty()\r\n// products_sent = ndb.BooleanProperty(default=False)\r\n// date_sent = ndb.StringProperty()\r\n\r\n\r\n{/* <td>Client</td>\r\n<td>Requests</td>\r\n<td>Date Requested</td>\r\n<td>Sent</td>\r\n<td>Sent Date</td> */}\r\n\r\nconst RequestItem = ({request}) => {\r\n    const [client,setClient] = useState(extended_user);\r\n    const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n    const fetchUserByID = async uid => {\r\n        await apiRequests.fetchUserByID(uid).then(results => {\r\n            if(results.status){\r\n                setClient(results.payload);\r\n            }else{\r\n                setInline({message:'there was an error fetching client details',message_type:'error'});\r\n                setClient(extended_user);\r\n            }\r\n        }).catch(error => {\r\n            setInline({message:error.message,message_type:'error'});\r\n            setClient(extended_user);\r\n        });\r\n        return true;\r\n    };\r\n\r\n    return(\r\n        <tr>\r\n            <td>{\r\n                fetchUserByID(request.client_uid).then(result => {\r\n                    if (result){\r\n                        return <span title={client.cell}> {client.name} - {client.surname} </span>;\r\n                    }\r\n                })\r\n            }</td>\r\n            <td>{request.total_requested}</td>\r\n            <td>{request.date_requested}</td>\r\n            <td>{request.products_sent ? 'Yes': 'No'}</td>\r\n            <td>{request.date_sent}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProductRequests = ({product}) => {\r\n    const [requests,setRequests] = useState([])\r\n    const [inline,setInline] = useState({message:'',message_type:'inf'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchRequestsAPI = async () => {\r\n            let uid = user_account_state.user_account.uid;\r\n            let id = product.id;\r\n            apiRequests.fetchProductRequests(uid,id).then(results => {\r\n                if(results.status){\r\n                    setRequests(results.payload);                    \r\n                }else{\r\n                    setRequests([]);\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n            return true;\r\n        };\r\n        \r\n        fetchRequestsAPI().then(result => {\r\n          console.log(result);\r\n        });\r\n\r\n        return () => {\r\n            setInline({message:'',message_type:'inf'});\r\n            setRequests([]);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> Product Requests</h3>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className='row'>\r\n                \r\n                    <ul className='list-group'>\r\n                        <li className='list-group-item'> Product Name : {product.product_name}</li>\r\n                        <li className='list-group-item'> Product Price : R {product.price}.00</li>\r\n                        <li className='list-group-item'> Description : {product.description}</li>                \r\n                    </ul> \r\n                    <hr></hr> \r\n            </div>\r\n            <div className='row'>\r\n                  <table className='table table-responsive'>\r\n                      <thead>\r\n                          <tr>\r\n                              <td>Client</td>\r\n                              <td>Requests</td>\r\n                              <td>Date Requested</td>\r\n                              <td>Sent</td>\r\n                              <td>Sent Date</td>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {requests.map(request => {\r\n                              return <RequestItem request={request} key={request.id} />;\r\n                          })}\r\n                      </tbody>\r\n                  </table>\r\n            </div>\r\n          </div>\r\n        </div>            \r\n      </Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst ShowProduct = ({ product }) => {\r\n  const [display, setDisplay] = useState(\"details\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-primary\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">{product.product_name}</h3>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Product Name : <a href=\"#\"> {product.product_name} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Product Price : <a href=\"#\"> {product.price} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Active : <a href=\"#\">{product.active ? \"True\" : \"False\"}</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"details\"\r\n                  onClick={e => setDisplay(\"details\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"show-sales\"\r\n                  onClick={e => setDisplay(\"show-sales\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Show Sales\r\n                </button>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"product-requests\"\r\n                  onClick={e => setDisplay(\"product-requests\")}\r\n                >\r\n                  <i className=\"fa fa-inbox\"> </i> Product Requests\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"manage-products\"\r\n                  onClick={e => setDisplay(\"manage-products\")}\r\n                >\r\n                  <i className=\"fa fa-dashboard\"> </i> Manage Product\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            {display === \"details\" ? (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    value={product.description}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"polaroid\">\r\n                  <img src={product.product_art} className=\"pola-image\" />\r\n                </div>\r\n              </Fragment>\r\n            ) : null}\r\n            {display === \"manage-products\" ? (\r\n              <ManageProduct product={product} />\r\n            ) : null}\r\n            {display === 'product-requests' ? <ProductRequests product={product} />  : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ProductItem = ({ product, onOpenProduct }) => {\r\n  return (\r\n    <Fragment>\r\n      <tr>\r\n        <td\r\n          className=\"btn btn-block btn-outline-primary margin\"\r\n          onClick={e => {\r\n            let id = product.id;\r\n            onOpenProduct(id);\r\n          }}\r\n        >\r\n          {product.product_name}\r\n        </td>\r\n        <td>{product.description}</td>\r\n        <td>{product.price}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [product, setProduct] = useState(products_init);\r\n\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const onOpenProduct = id => {\r\n    setProduct(products.find(product => product.id === id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchProductsAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests.fetchUserProductsAPI(uid).then(results => {\r\n          console.log(results);\r\n          setProducts(results);\r\n        }).catch(error => {\r\n          setProducts([]);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchProductsAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setProducts([]);\r\n      setProduct(products_init);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Products</h3>\r\n        </div>\r\n        {product.id ? (\r\n          <ShowProduct product={product} />\r\n        ) : (\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <td>Product Name</td>\r\n                <td>Description</td>\r\n                <td>Price</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => {\r\n                return (\r\n                  <ProductItem\r\n                    onOpenProduct={onOpenProduct}\r\n                    product={product}\r\n                    key={product.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Products;","\r\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init,\r\n  products_init,\r\n  products_errors_init,\r\n  category_init,\r\n  service_init\r\n  \r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport { api_products_endpoint } from \"../../../constants/routes\";\r\n\r\nimport { extended_user } from \"../../Auth/auth-constants\";\r\n\r\n\r\nconst ManageService = ({ service }) => {\r\n  const [form_service, setService] = useState(service_init);\r\n  const [categories, setCategories] = useState([]);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const onUpdate = async e => {\r\n    let service = { ...form_service };\r\n    service = JSON.stringify(service);\r\n    await apiRequests\r\n      .updateService(service)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setService(results.payload);\r\n          setInline({\r\n            message: \"service successfully updated\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  const onDeleteService = async e => {\r\n    let service = { ...form_service };\r\n\r\n    await apiRequests\r\n      .onDeleteService(service)\r\n      .then(result => {\r\n        if (result.status) {\r\n          setService(result.payload);\r\n          setInline({\r\n            message: \"service successfully deleted\",\r\n            message_type: \"inf\"\r\n          });\r\n        } else {\r\n          setInline({ message: result.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    apiRequests\r\n      .fetchCategories(category_type)\r\n      .then(results => {\r\n        setCategories(results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setService(service);\r\n    return () => {\r\n      setService(service_init);\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Service Manager</h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-danger\"\r\n              name=\"delete-product\"\r\n              onClick={e => onDeleteService(e)}\r\n            >\r\n              <i className=\"fa fa-eraser\"> </i>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <label>Service Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"service_name\"\r\n                value={form_service.service_name}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={form_service.description}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={form_service.price}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"category_id\"\r\n                value={form_service.category_id}\r\n                onChange={e =>\r\n                  setService({\r\n                    ...form_service,\r\n                    [e.target.name]: e.target.value\r\n                  })\r\n                }\r\n              >\r\n                {categories.map(category => {\r\n                  return (\r\n                    <option value={category.category_id}>\r\n                      {category.sub_category}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg margin\"\r\n                name=\"update-service\"\r\n                onClick={e => onUpdate(e)}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Update Service\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg margin\"\r\n                name=\"reset_service\"\r\n                onClick={e => {\r\n                  setService(service);\r\n                  setInline({ message: \"\", message_type: \"info\" });\r\n                }}\r\n              >\r\n                <i className=\"fa fa-cloud-upload\"> </i> Undo Changes\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {inline.message ? (\r\n                <InlineMessage\r\n                  message={inline.message}\r\n                  message_type={inline.message_type}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst RequestItem = ({ request }) => {\r\n  const [client, setClient] = useState(extended_user);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const fetchUserByID = async uid => {\r\n    console.log('Fetching User',uid);\r\n    await apiRequests\r\n      .fetchUserByID(uid)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setClient(results.payload);\r\n        } else {\r\n          setInline({\r\n            message: \"there was an error fetching client details\",\r\n            message_type: \"error\"\r\n          });\r\n          setClient(extended_user);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n        setClient(extended_user);\r\n      });\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {fetchUserByID(request.client_uid).then(result => {\r\n          if (result) {\r\n            return (\r\n              <span title={client.cell}>\r\n                {\" \"}\r\n                {client.name} - {client.surname}{\" \"}\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </td>\r\n      <td>{request.total_requested}</td>\r\n      <td>{request.date_requested}</td>\r\n      <td>{request.products_sent ? \"Yes\" : \"No\"}</td>\r\n      <td>{request.date_sent}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ServiceRequests =({service}) => {\r\n     const [requests, setRequests] = useState([]);\r\n     const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n     const { user_account_state } = useContext(UserAccountContext);\r\n\r\n     useEffect(() => {\r\n       const fetchRequestsAPI = async () => {\r\n         let uid = user_account_state.user_account.uid;\r\n         let id = service.id;\r\n\r\n         apiRequests\r\n           .fetchProductRequests(uid, id)\r\n           .then(results => {\r\n             if (results.status) {\r\n               setRequests(results.payload);\r\n             } else {\r\n               setRequests([]);\r\n             }\r\n           })\r\n           .catch(error => {\r\n             console.log(error.message);\r\n           });\r\n\r\n         return true;\r\n       };\r\n\r\n       fetchRequestsAPI().then(result => {\r\n         console.log(result);\r\n       });\r\n\r\n       return () => {\r\n         setInline({ message: \"\", message_type: \"inf\" });\r\n         setRequests([]);\r\n       };\r\n     }, []);\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> Service Requests</h3>\r\n          </div>\r\n          <div className=\"box box-footer\">\r\n            <div className=\"row\">\r\n              \r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Service Name : {service.service_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">{\" \"} Service Price : R {service.price}.00</li>\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Description : {service.description}\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <table className=\"table table-responsive\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Client</td>\r\n                      <td>Requests</td>\r\n                      <td>Date Requested</td>\r\n                      <td>Sent</td>\r\n                      <td>Sent Date</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {requests.map(request => {\r\n                      return <RequestItem request={request} key={request.id} />;\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        \r\n      </Fragment>\r\n    );\r\n};\r\n\r\nconst ShowService = ({ service }) => {\r\n  const [display, setDisplay] = useState(\"details\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-primary\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">{service.service_name}</h3>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Service Name : <a href=\"#\"> {service.service_name} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Service Price : <a href=\"#\"> {service.price} </a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                Active : <a href=\"#\">{service.active ? \"True\" : \"False\"}</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"details\"\r\n                  onClick={e => setDisplay(\"details\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"show-sales\"\r\n                  onClick={e => setDisplay(\"show-sales\")}\r\n                >\r\n                  <i className=\"fa fa-line-chart\"> </i> Show Sales\r\n                </button>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"service-requests\"\r\n                  onClick={e => setDisplay(\"service-requests\")}\r\n                >\r\n                  <i className=\"fa fa-inbox\"> </i> Service Requests\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-block btn-flickr\"\r\n                  name=\"manage-services\"\r\n                  onClick={e => setDisplay(\"manage-services\")}\r\n                >\r\n                  <i className=\"fa fa-dashboard\"> </i> Manage service\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            {display === \"details\" ? (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    value={service.description}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"polaroid\">\r\n                  <img src={service.service_art} className=\"pola-image\" />\r\n                </div>\r\n              </Fragment>\r\n            ) : null}\r\n            {display === \"manage-services\" ? (\r\n              <ManageService service={service} />\r\n            ) : null}\r\n            {display === 'service-requests' ? \r\n              <ServiceRequests service={service}/> : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ServiceItem = ({ service, onOpenService }) => {\r\n  return (\r\n    <tr>\r\n      <td\r\n        className=\"btn btn-block btn-outline-primary margin\"\r\n        onClick={e => {\r\n          let id = service.id;\r\n          onOpenService(id);\r\n        }}\r\n      >\r\n        {service.service_name}\r\n      </td>\r\n      <td>{service.description}</td>\r\n      <td>{service.price}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Services = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [service, setService] = useState(service_init);\r\n\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const onOpenService = id => {\r\n    setService(services.find(service => service.id === id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchServicesAPI = async () => {\r\n      let uid = user_account_state.user_account.uid;\r\n      await apiRequests\r\n        .fetchUserServicesAPI(uid)\r\n        .then(results => {\r\n          console.log(results);\r\n          setServices(results);\r\n        })\r\n        .catch(error => {\r\n          setServices([]);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchServicesAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setServices([]);\r\n      setService(service_init);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Services</h3>\r\n        </div>\r\n        {service.id ? (\r\n          <ShowService service={service} />\r\n        ) : (\r\n          <table className=\"table table-responsive\">\r\n            <thead>\r\n              <tr>\r\n                <td>Service Name</td>\r\n                <td>Description</td>\r\n                <td>Price</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {services.map(service => {\r\n                return (\r\n                  <ServiceItem\r\n                    onOpenService={onOpenService}\r\n                    service={service}\r\n                    key={service.id}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default Services;","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nimport {\r\n  store_init,\r\n  store_errors_init,\r\n  payment_init,\r\n  payment_errors_init\r\n} from \"../market-constants\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport {firebase} from '../../../firebase';\r\nimport {Capitalize} from 'react-lodash';\r\n\r\nconst CreatePayment = () => {\r\n  const [payment, setPayment] = useState(payment_init);\r\n  const [errors, setErrors] = useState(payment_errors_init);\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n    const check_amount = () => {\r\n      if (Utils.isMoney(payment.amount) === false) {\r\n        setErrors({ ...errors, amount_error: \"amount field is invalid\" });\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const check_transaction_type = e => {\r\n      if (Utils.isEmpty(payment.transaction_type)) {\r\n        setErrors({\r\n          ...errors,\r\n          transaction_type_error: \"please select transaction type\"\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const do_check = e => {\r\n      check_amount() ? (isError = true) : (isError = isError);\r\n      check_transaction_type() ? (isError = true) : (isError = isError);\r\n\r\n      return isError;\r\n    };\r\n\r\n    return await do_check(e);\r\n  };\r\n\r\n  const createTransaction = async e => {\r\n    let client_transaction = { ...payment };\r\n    client_transaction.uid = user_account_state.user_account.uid;\r\n    client_transaction = JSON.stringify(client_transaction);\r\n    await apiRequests\r\n      .createTransaction(client_transaction)\r\n      .then(Response => {\r\n        if (Response.status) {\r\n          setPayment(Response.payload);\r\n          setInline({\r\n            message: \"successfully created a new transaction\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: Response.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-mastercard\"> </i> Create Transaction\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={payment.amount}\r\n              onChange={e =>\r\n                setPayment({ ...payment, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.amount_error ? (\r\n              <InlineError message={errors.amount_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"transaction_type\"\r\n              value={payment.transaction_type}\r\n              onChange={e =>\r\n                setPayment({ ...payment, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={\"deposit\"}>Deposit</option>\r\n              <option value={\"withdrawal\"}>Withdrawal</option>\r\n            </select>\r\n            {errors.transaction_type_error ? (\r\n              <InlineError message={errors.transaction_type_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"create_transaction\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  isError\r\n                    ? setInline({\r\n                        message: \"there was an error processing form\"\r\n                      })\r\n                    : createTransaction(e).then(result => {\r\n                        console.log(result);\r\n                      });\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-dollar\"> </i> Create Transaction\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst Deposit = ({ transaction }) => {\r\n  const [deposit, setDeposit] = useState({\r\n    uid: '',\r\n    transaction_id : '',\r\n    proof_of_deposit : '',\r\n  });\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const[inline,setInline] = useState({message:'',message_type:'inf'});\r\n\r\n\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      const uploadTask = firebase.storage.ref(`deposits/${user_account_state.user_account.uid}/${transaction.id}/${image.name}`).put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`deposits/${user_account_state.user_account.uid}/${transaction.id}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setDeposit({\r\n                ...deposit,\r\n                proof_of_deposit: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'upload proof of deposit',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeProof = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const ProcessPayment = e => {\r\n      let uid = user_account_state.user_account.uid;\r\n      // rewrite this\r\n      let deposited = {...deposit};\r\n      deposited.uid = uid;\r\n      deposited.transaction_id = transaction.id;\r\n\r\n      apiRequests.processDeposit(deposited).then(result => {\r\n        if(result.status){\r\n          setDeposit(result.payload);\r\n          setInline({message:'successfully sent deposit for processing'});\r\n        }else{\r\n          setInline({message:result.error.message,message_type:'error'});\r\n        }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  };\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-amex\"> </i> Deposit\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button type=\"button\" className=\"btn btn-box-tool\" name=\"eft\">\r\n              <i className=\"fa fa-bank\"> </i> EFT\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-box-tool\" name=\"paypal\">\r\n              <i className=\"fa fa-paypal\"> </i> PayPal / Credit Card\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={transaction.date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Amount </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={transaction.amount}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.processed}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.transaction_type}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Proof of Payment</label>\r\n            <input type=\"file\" className=\"form-control\" name=\"proof\" onChange={e => onChangeProof(e)}  />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-sm\"\r\n              name=\"upload-proof-payment\"\r\n              onClick={e => doUpload(e).then(result => {\r\n                console.log(result)\r\n              })}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-cloud-upload\"> </i> Upload Proof of Payment\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <label>Proof of Payment</label>\r\n              <img\r\n                src={deposit.proof_of_deposit || placeholder}\r\n                className=\"pola-image\"\r\n                width=\"300\"\r\n                height=\"300\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <button\r\n                type='button'\r\n                className='btn btn-success btn-lg'\r\n                name='process-payment'\r\n                onClick={e => ProcessPayment(e)}\r\n              >\r\n                <i className='fa fa-credit-card'> </i>{\" \"}\r\n                Process Payment\r\n\r\n              </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Withdrawal = ({ transaction }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-amex\"> </i> Withdrawal\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Date </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"date\"\r\n              value={transaction.date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Amount </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"amount\"\r\n              value={transaction.amount}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Processed</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.processed}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Transaction Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={transaction.transaction_type}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ShowTransaction = ({ transaction }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-info\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Transaction Details</h3>\r\n        </div>\r\n        {transaction.transaction_type === \"withdrawal\" ? (\r\n          <Withdrawal transaction={transaction} />\r\n        ) : (\r\n          <Deposit transaction={transaction} />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst TransactionItem = ({\r\n  transaction,\r\n  OpenTransaction,\r\n  RemoveTransaction\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{transaction.date}</td>\r\n      <td>R {transaction.amount}.00</td>\r\n      <td>{<Capitalize string={transaction.transaction_type} /> }</td>\r\n      <td>{transaction.processed ? \"Yes\" : \"No\"}</td>      \r\n        {\" \"}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm margin\"\r\n          name={transaction.id}\r\n          onClick={e => {\r\n            let id = transaction.id;\r\n            RemoveTransaction(id);\r\n          }}\r\n          title=\"Delete\"\r\n        >\r\n          <i className=\"fa fa-cut\"> </i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          name={transaction.id}\r\n          onClick={e => {\r\n            let id = transaction.id;\r\n            OpenTransaction(id);\r\n          }}\r\n          title=\"Open\"\r\n        >\r\n          <i className=\"fa fa-folder-open\"> </i>\r\n        </button>\r\n      \r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Transactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [transaction, setTransaction] = useState(payment_init);\r\n  const [display, setDisplay] = useState(\"transaction-list\");\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"inf\" });\r\n  const { user_account_state } = useContext(UserAccountContext);\r\n\r\n  const OpenTransaction = id => {\r\n    let found_transaction = transactions.find(\r\n      transaction => transaction.id === id\r\n    );\r\n    setTransaction(found_transaction);\r\n    //fire a condition to open a transaction\r\n    setDisplay(\"show-transaction\");\r\n  };\r\n\r\n  const RemoveTransaction = id => {\r\n    let uid = user_account_state.user_account.uid;\r\n    apiRequests.removeTransaction(id, uid).then(Response => {\r\n        if (Response.status) {\r\n          setTransactions(Response.payload);\r\n        } else {\r\n          setInline({ message: Response.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTransactionsAPI = async () => {\r\n      const uid = user_account_state.user_account.uid;\r\n      apiRequests\r\n        .fetchTransactions(uid)\r\n        .then(Response => {\r\n          if (Response.status) {\r\n            setTransactions(Response.payload);\r\n            console.log(\"Transactions Fetched\", Response.payload);\r\n          } else {\r\n            console.log(\"Transactions\", Response.error);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Transactions\", error.message);\r\n        });\r\n      return true;\r\n    };\r\n\r\n    fetchTransactionsAPI().then(result => {\r\n      console.log(result);\r\n    });\r\n\r\n    return () => {\r\n      setTransaction(payment_init);\r\n      setTransactions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"box box-body\">\r\n      <div className=\"box box-header\">\r\n        <h3 className=\"box-title\">\r\n          <i className=\"fa fa-cc-diners-club\"> </i> Transactions\r\n        </h3>\r\n\r\n      </div>\r\n\r\n      {display === \"show-transaction\" ? (\r\n        <ShowTransaction transaction={transaction} />\r\n      ) : (\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <td>Date</td>\r\n              <td>Amount</td>\r\n              <td>Transaction Type</td>\r\n              <td>Processed</td>\r\n              <td>Control</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map(transaction => {\r\n              return (\r\n                <TransactionItem\r\n                  RemoveTransaction={RemoveTransaction}\r\n                  OpenTransaction={OpenTransaction}\r\n                  transaction={transaction}\r\n                  key={transaction.id}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>Date</td>\r\n              <td>Amount</td>\r\n              <td>Transaction Type</td>\r\n              <td>Processed</td>\r\n              <td>Control</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Payments = () => {\r\n  const [display, setDisplay] = useState(\"transactions\");\r\n  const [displayMenu,setMenu] = useState({menu:false});\r\n\r\n    const showDropdownMenu = e => {\r\n      e.preventDefault();\r\n      setMenu({ menu: true });\r\n      document.addEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n    const hideDropdownMenu = () => {\r\n      setMenu({ menu: false });\r\n      document.removeEventListener(\"click\", hideDropdownMenu);\r\n    };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-cc-paypal\"> </i> Payments\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool dropdown-toggle\"\r\n                onClick={e => showDropdownMenu(e)}\r\n              >\r\n                <i className=\"fa fa-bars\"> </i>\r\n              </button>\r\n              {displayMenu.menu ? (\r\n                <ul className=\"dropmenu\">\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"transactions\"\r\n                    onClick={e => setDisplay(\"transactions\")}\r\n                  >\r\n                    <i className=\"fa fa-cc-amex\"> </i> Transactions\r\n                  </li>\r\n                  <li\r\n                    className=\"btn btn-block droplink\"\r\n                    name=\"create-payment\"\r\n                    onClick={e => setDisplay(\"create-payment\")}\r\n                  >\r\n                    <i className=\"fa fa-cc-amex\"> </i> Create Transaction\r\n                  </li>\r\n                </ul>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display === \"transactions\" ? <Transactions /> : \"\"}\r\n        {display === \"create-payment\" ? <CreatePayment /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default Payments","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n\t\t<App />\r\n\r\n\t,    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React, { Fragment,createContext,useReducer,useContext } from 'react';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport {routes} from '../../constants';\r\nimport Header from '../Layout/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport About from '../About/About';\r\nimport Contact from '../Contact/Contact';\r\n\r\nimport Login from '../Auth/Login/Login';\r\nimport Logout from '../Auth/Logout/Logout';\r\nimport SignUp from '../Auth/Signup/Signup';\r\nimport SideBar from '../Layout/SideBar/SideBar';\r\nimport Footer from '../Layout/Footer/Footer';\r\nimport Forget from '../Auth/Forget/Forget';\r\nimport Market from '../Market/Market';\r\nimport Market_Products from '../Market/Products/Products';\r\nimport Market_Services from '../Market/Service/Services';\r\n\r\n\r\nimport MyMarket from '../Market/MyMarket';\r\n\r\n\r\n\r\nimport UserAccountContextProvider from '../../context/UserAccount/userAccountContext';\r\nimport SocketContextProvider from '../../context/socketsio';\r\nimport BlogContextProvider from '../../context/blog';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport Blog from '../Blog/Blog';\r\nimport Chat from '../Chat/Chat';\r\n\r\nimport SMS,{SMSBalances,SMSContacts,SMSMessages} from '../SMS/SMS';\r\n\r\nimport Account from '../Account/Account';\r\n\r\nimport CheckOut from '../Market/CheckOut/CheckOut';\r\nimport StoreManager from '../Market/StoreManager/StoreManager';\r\nimport Products from '../Market/StoreManager/ProductsManager';\r\nimport Services from '../Market/StoreManager/ServiceManager';\r\n\r\nimport Payments from '../Market/Transactions/Transactions';\r\n\r\n\r\nexport default function App () {\r\n\t\r\n\t\r\n\treturn (\r\n    <UserAccountContextProvider>\r\n      <SocketContextProvider>\r\n        <BlogContextProvider>\r\n          <Fragment>\r\n            <Router>\r\n              {/* Header  Component*/}\r\n              <Header />\r\n              {/* Sidebar Component */}\r\n              <SideBar />\r\n              {/* Body and Main Page Routes */}\r\n              <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                  <section className=\"content\">\r\n                    <Route exact path={routes.home_page} component={Home} />\r\n                    <Route exact path={routes.about_page} component={About} />\r\n                    <Route\r\n                      exact\r\n                      path={routes.contact_page}\r\n                      component={Contact}\r\n                    />\r\n                    <Route path={routes.login_page} component={Login} />\r\n                    <Route path={routes.logout_page} component={Logout} />\r\n                    <Route path={routes.signup_page} component={SignUp} />\r\n                    <Route\r\n                      path={routes.forget_password_page}\r\n                      component={Forget}\r\n                    />\r\n                    <Route path={routes.market_page} component={Market} />\r\n                    <Route\r\n                      path={routes.market_products_page}\r\n                      component={Market_Products}\r\n                    />\r\n                    <Route\r\n                      path={routes.market_services_page}\r\n                      component={Market_Services}\r\n                    />\r\n\r\n                    <Route path={routes.blog_page} component={Blog} />\r\n                    <Route path={routes.chat_page} component={Chat} />\r\n\r\n                    <Route path={routes.sms_page} component={SMS} />\r\n                    <Route path={routes.sms_account} component={SMSBalances} />\r\n                    <Route path={routes.sms_contacts} component={SMSContacts} />\r\n                    <Route path={routes.sms_messages} component={SMSMessages} />\r\n\r\n                    <Route path={routes.dashboard_page} component={Dashboard} />\r\n                    <Route exact path={routes.admin_page} component={Account} />\r\n\r\n                    <Route\r\n                      exact\r\n                      path={routes.check_out_page}\r\n                      component={CheckOut}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path={routes.manage_my_shop}\r\n                      component={StoreManager}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path={routes.store_manager_products}\r\n                      component={Products}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path={routes.store_manager_services}\r\n                      component={Services}\r\n                    />\r\n                    <Route\r\n                      exact\r\n                      path={routes.transactions_page}\r\n                      component={Payments}\r\n                    />\r\n                    <Route\r\n                      path={routes.my_market_products}\r\n                      component={MyMarket}\r\n                    />\r\n                  </section>\r\n                </section>\r\n              </div>\r\n              {/* Footer Component  */}\r\n              <Footer />\r\n            </Router>\r\n          </Fragment>\r\n        </BlogContextProvider>\r\n      </SocketContextProvider>\r\n    </UserAccountContextProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}