{"version":3,"sources":["constants/routes.js","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","actions/userAccountActions/index.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","utilities/index.js","actions/walletActions/index.js","reducers/profileReducers/accountDetailsReducer.js","context/UserAccount/actions.js","context/UserAccount/userAccountContext.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Forms/InlineError.jsx","components/Contact/ThisContactForm.jsx","components/Contact/Contact.jsx","components/Profile/Profile.jsx","components/Input/Input.js","components/Auth/Login/Login.jsx","components/Auth/Logout/Logout.jsx","components/Auth/Signup/Signup.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/Market.jsx","serviceWorker.js","reducers/profileReducers/userContactDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","profile_page","blog_page","market_page","admin_page","shopping_basket_page","dashboard_page","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","auth","contact_details_type","user_contact_id","cell","email","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","names","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","account_details_type_error","displayName_error","photoURL_error","email_error","password_error","phoneNumber_error","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","result","user","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","USER_ACCOUNT_ACTIONS","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","_this","classCallCheck","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","state","mem_store","push","value","saveMemStore","onSaving","noError","setState","stringify","setItem","date","message","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","Utils","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","document","documentURI","USER_BANKING_ACTIONS","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","user_account_errors","form_response","response_code","userAccountReducer","actions","type","payload","code","loginUser","user_account_state","dir","UserAccountContext","createContext","UserAccountContextProvider","doLogin","onChange","assign","componentWillMount","onAuthStateChanged","react_default","createElement","Provider","props","children","Component","SideBarMenuAuth","className","react_router_dom","to","routes","title","SideBarMenuNonAuth","MenuItems","possibleConstructorReturn","getPrototypeOf","call","user_logged_in","Consumer","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","onClick","SidebarCollapse","Home","About","InlineError","contact_form_details","messageid","subject","message_read","date_read","date_sent","contact_form_errors","names_error","cell_error","subject_error","message_error","ThisContactForm","change","contact_form","target","name","onSubmitContactForm","preventDefault","data","self","assertThisInitialized","axios","post","form_messages","onCheckErrors","form_errors","do_check_errors","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","results","bind","_this2","placeholder","InlineError_InlineError","Contact","Contact_ThisContactForm","Profile","forwadedInput","React","forwardRef","ref","Login","_useState","useState","_useState2","slicedToArray","values","setValues","usernameRef","useRef","passwordRef","submitRef","handleChange","_e$target","defineProperty","useEffect","current","focus","onSubmit","Input_Input","Logout","Initial_State","passwordOne","passwordTwo","byPropKey","propertyName","SignUpForm","event","_this$state","history","authUser","_this$state2","isInvalid","disabled","ShowLogin","SignUpPage","Signup_SignUpForm","SideBar","src","id","alt","onSearch","method","MenuItems_MenuItems","Footer","href","Forget","sendRecoveryEmail","Market","Boolean","window","location","hostname","match","ContactDetailsInitState","user_contacts","contact_details_errors","website_error","facebook_error","twitter_error","userContactDetailsReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","surname_error","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","account_details","contact_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","profile","wallet","inline_message","middleware","applyMiddleware","compose","thunk","store","createStore","ReactDOM","render","react_redux_es","userAccountContext_UserAccountContextProvider","Header_Header","react_router","exact","path","component","Signup","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00c7ab1c.chunk.js","sourcesContent":["\r\n\r\nexport const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const profile_page = '/profile';\r\n\r\nexport const blog_page = '/blog';\r\nexport const market_page = '/market';\r\n\r\nexport const admin_page = '/admin/user/'; // + userid\r\nexport const shopping_basket_page = '/admin/user/shopping-basket';\r\n\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport {auth,\r\n\tfirebase\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tUSER_LOGIN_STATUS : 'USER:USER_LOGIN_STATUS',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\n\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginStatus = () => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGIN_STATUS,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import moment from 'moment';\r\nclass Utilities {\r\n\r\n    constructor(today, url) {\r\n        this.today = today;\r\n        this.url = url;\r\n    }\r\n\r\n    isUrl = (url) => {\r\n        let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?' + // port\r\n            '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\r\n            '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return pattern.test(url);\r\n    };\r\n\r\n    isEmpty = (a) => {\r\n        return a !== undefined ? a === null || a === '' : true;\r\n    };\r\n\r\n    isProvince = (province) => {\r\n        let province_list = ['limpopo', 'mpumalanga', 'north west', 'gauteng', 'kwazulu natal', 'eastern cape', 'western cape', 'northern cape', 'orange free state'];\r\n        for (let i = 0; i < province_list.length; i++) {\r\n            if (province === province_list[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    validateEmail = (email) => {\r\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    validatePassword = (password) => {\r\n        let re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n        return re.test(password);\r\n    };\r\n\r\n    validateUsername = (username) => {\r\n        let re = /^\\w+$/;\r\n        return re.test(username);\r\n    };\r\n\r\n    isNumber = (n) => {\r\n        return n !== undefined ? typeof (n) !== \"boolean\" && !isNaN(n) : false;\r\n    };\r\n\r\n    isCell = (n) => {\r\n        return this.isNumber(n) ? ((n.length === 10) || (n.length === 11) || (n.length === 12) || (n.length === 13)) : false;\r\n    };\r\n\r\n    isTel = (n) => {\r\n        return n !== undefined ? this.isCell(n) : false;\r\n    };\r\n\r\n    isFax = (n) => {\r\n        return n !== undefined ? this.isCell(n) : false;\r\n    };\r\n\r\n    getAge = (dateString) => {\r\n        let dates = dateString.split(\"-\");\r\n        let d = new Date();\r\n\r\n        let userday = dates[2];\r\n        let usermonth = dates[1];\r\n        let useryear = dates[0];\r\n\r\n        let curday = d.getDate();\r\n        let curmonth = d.getMonth() + 1;\r\n        let curyear = d.getFullYear();\r\n\r\n        let age = curyear - useryear;\r\n\r\n        if ((curmonth < usermonth) || ((curmonth === usermonth) && curday < userday)) {\r\n            age--;\r\n        }\r\n        return age;\r\n    };\r\n    isIDNumber = (n) => {\r\n        return n !== undefined ? (this.isNumber(n)) && (n.length === 13) : true;\r\n    };\r\n    numDaysBetweenDates = (firstDate, secondDate) => {\r\n\r\n        let f_dates = firstDate.split(\"-\");\r\n        let s_dates = secondDate.split(\"-\");\r\n\r\n        // let d = new Date();\r\n\r\n        let f_day = parseInt(f_dates[2]);\r\n        let f_month = parseInt(f_dates[1]);\r\n        let f_year = parseInt(f_dates[0]);\r\n\r\n        let s_day = parseInt(s_dates[2]);\r\n        let s_month = parseInt(s_dates[1]);\r\n        let s_year = parseInt(s_dates[0]);\r\n\r\n        // TODO- Please revise the number of days algorithm\r\n        // let years = f_year - s_year;\r\n        // let months = f_month - s_month;\r\n        // let days = f_day - s_day;\r\n\r\n        let a = moment([f_year, f_month, f_day]);\r\n        let b = moment([s_year, s_month, s_day]);\r\n\r\n        return a.diff(b, 'days') + 1;\r\n\r\n        //\r\n        // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n        //     return days\r\n        // }else if ((years === 0) && (months > 0)){\r\n        //     return (days + (months * 30))\r\n        // }else{\r\n        //     return 365\r\n        // }\r\n    };\r\n\r\n    countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n        try {\r\n            return (stamp_1 - stamp_2)\r\n        } catch (e) {\r\n            return (parseInt(stamp_1) - parseInt(stamp_2))\r\n        }\r\n    };\r\n\r\n    throttle = (func, limit) => {\r\n        let lastFunc;\r\n        let lastRan;\r\n        return function () {\r\n            const context = this;\r\n            const args = arguments;\r\n            if (!lastRan) {\r\n                func.apply(context, args);\r\n                lastRan = Date.now();\r\n            } else {\r\n                clearTimeout(lastFunc);\r\n                lastFunc = setTimeout(function () {\r\n                    if (Date.now() - lastRan >= limit) {\r\n                        func.apply(context, args);\r\n                        lastRan = Date.now();\r\n                    }\r\n                }, limit - (Date.now() - lastRan))\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    debounce = (func, delay) => {\r\n        let inDebounce;\r\n        return function () {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(inDebounce);\r\n            inDebounce = setTimeout(() => func.apply(context, args), delay)\r\n        }\r\n    };\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nexport let UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","\r\nimport {\r\n    USER_ACCOUNT_ACTIONS\r\n} from '../../actions';\r\nimport {\r\n    account_details_type,\r\n    account_details_type_error\r\n} from '../../types';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nlet UserAccountInitState = {\r\n    user_account: {...account_details_type},\r\n    user_account_errors: {...account_details_type_error},\r\n    form_response: '',\r\n    response_code: '',\r\n};\r\n    \r\nexport let loginUser = async (username, password) => {\r\n    let user_account_state = {...UserAccountInitState};\r\n    let user_account;\r\n    let form_response;\r\n    let response_code;\r\n\r\n    await auth.doSignInWithEmailAndPassword(username, password).then(result => {\r\n            \r\n\r\n            if (result.status === true){\r\n                user_account = {...result.response};\r\n                form_response = 'User Logged In Successfully';\r\n                response_code = 200;\r\n            }else {\r\n                user_account = {...result.response};\r\n                form_response = result.error.message;\r\n                response_code = result.error.code;\r\n            }\r\n\r\n    });\r\n    \r\n    user_account_state.user_account = {...user_account};    \r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE',user_account_state);\r\n    return {...user_account_state};\r\n}\r\n","import React,{Component,useReducer,createContext} from 'react';\r\nimport {firebase,auth} from '../../firebase';\r\nimport userAccountReducer, {\r\n  UserAccountInitState\r\n} from '../../reducers/profileReducers/accountDetailsReducer';\r\n\r\nimport {\r\n  loginUser\r\n} from './actions';\r\n\r\nexport const UserAccountContext = createContext();\r\nexport default class UserAccountContextProvider extends Component {\r\n    state = {user_account_state: {...UserAccountInitState}};\r\n\r\n    doLogin = async (username,password) => {\r\n      let user_account_state = await loginUser(username,password);\r\n      this.setState({user_account_state})\r\n    }\r\n\r\n    onChange = (user) => {\r\n      let {\r\n        user_account\r\n      } = this.state.user_account_state;\r\n\r\n      let user_account_state = Object.assign({},this.state.user_account_state)\r\n      user_account_state.user_account = {\r\n        ...user\r\n      };\r\n\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n  componentWillMount = () => {\r\n    // const unsubscribe = firebase.auth().onAuthStateChanged(this.onChange);    \r\n    const dounsubscribe = firebase.firebase.auth().onAuthStateChanged(this.onChange)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <UserAccountContext.Provider value = {{...this.state,doLogin:this.doLogin}}>\r\n                {this.props.children}\r\n      </UserAccountContext.Provider>              \r\n    )\r\n  }\r\n}\r\n","import React, {Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\nimport {firebase,auth} from '../../../firebase';\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nconst SideBarMenuAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.home_page} title=\"weqtrading online store\">\r\n\t\t\t\t\t<i className=\"fa fa-home\" /> <strong>Home</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.about_page} title=\"About\">\r\n\t\t\t\t\t<i className=\"fa fa-info\" /> <strong>About</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.contact_page} title=\"Contact Us\">\r\n\t\t\t\t\t<i className=\"fa fa-envelope\" /> <strong>Contact</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-user-md\" /> <span>Client Area</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i className=\"fa fa-angle-left pull-right\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.admin_page} title=\"manage your Account\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-sign-in\"> </i> <strong> Account</strong>{\" \"}\r\n\t\t\t\t\t\t</Link>{\" \"}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={routes.shopping_basket_page} title=\"Shopping Basket\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-shopping-basket\"> </i> <strong> Shopping Basket</strong>{\" \"}\r\n\t\t\t\t\t\t</Link>{\" \"}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={routes.blog_page}\r\n\t\t\t\t\ttitle=\"Weq Trading Blog\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fa fa-book\"> </i> <strong>Blog</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.dashboard_page} title=\"Dashboard\">\r\n\t\t\t\t\t<i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={routes.logout_page} title='Logout'>\r\n\t\t\t\t\t<i className='fa fa-sign-out'> </i> <strong> Logout </strong>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t) \r\n}\r\n\r\n\r\n\r\nexport default class MenuItems extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser_logged_in : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet isUserLoggedIN = () => {\t\t\t\t\t\r\n\t\t\treturn auth.currentUser ? true:false;\r\n\t\t}\r\n\t\tif (isUserLoggedIN()){\r\n\t\t\tthis.setState({user_logged_in : true})\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n\t\t\t  const { doLogin, user_account_state } = context;\r\n\t\t\t  console.log('SIDEBAR',user_account_state.user_account);\r\n\t\t\treturn (\r\n        <div>\r\n          {user_account_state.user_account.uid ? (\r\n            <SideBarMenuAuth />\r\n          ) : (\r\n            <SideBarMenuNonAuth />\r\n          )}\r\n        </div>\r\n      );\r\n\t  }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n\t}\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\n\r\n\r\nexport default function Home (){\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box-header'>\r\n\t\t\t\t\t<h3 className='box-title'><strong> <i className='fa fa-home'> </i> Weq Trading </strong> </h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\r\n            <button className='btn btn-box-tool'><Link to={routes.market_page}><strong> <i className='fa fa-shopping-bag'> </i> Market Place </strong> </Link></button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n            \r\n\t\t\t</div>  \r\n\t\t</Fragment>    \r\n\t)\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong><i className='fa fa-info'> </i> About</strong>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{this.state.message}</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\nexport let contact_form_details  = {\r\n            messageid:\"\",\r\n            names : \"\",\r\n            email : \"\",\r\n            cell: \"\",\r\n            subject: \"\",\r\n            message: \"\",\r\n\r\n            message_read : false,\r\n            date_read : \"\",\r\n            date_sent : \"\"\r\n};\r\n\r\nexport let contact_response_message_detail = {\r\n        messageid:\"\",\r\n        response:\"\",\r\n        date_sent:\"\",\r\n};\r\n\r\nlet contact_form_errors = {\r\n            names_error : '',\r\n            email_error : '',\r\n            cell_error : '',\r\n            subject_error : '',\r\n            message_error : '',\r\n\r\n};\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact\",\"&data=\" + data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React, { Fragment } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\n\r\nexport default function Contact() {\r\n\r\n\r\n\tlet ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\tlet SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n\t}\r\n\treturn (\r\n\t\t<Fragment>            \r\n            <ThisContactForm></ThisContactForm>\r\n\t\t</Fragment>\r\n\r\n\t)\r\n}","import React, { Fragment } from 'react'\r\nimport './Profile.css';\r\n\r\nexport default function Profile (){\r\n  return (\r\n      <Fragment>\r\n          <div className='Profile'>\r\n                <h3>Profile</h3>\r\n\r\n                <div className='box-footer'>\r\n\r\n                  <form className='form-horizontal'>\r\n                    <div className='form-group'>\r\n                      <label>Names </label>\r\n                      <input type='text' className='form-control' name='names' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Surname </label>\r\n                      <input type='text' className='form-control' name='surname' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Cell </label>\r\n                      <input type='text' className='form-control' name='cell' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Email </label>\r\n                      <input type='email' className='form-control' name='email' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <button className='btn btn-success btn-lg' name='update'><strong>Update</strong></button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n          </div>\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Input({\r\n        type,\r\n        placeholder,\r\n        name,\r\n        className,\r\n        onChange\r\n    },ref){\r\n  return (\r\n      <input \r\n        ref={ref}\r\n        type={type} \r\n        className={className} \r\n        name={name} \r\n        placeholder={placeholder}\r\n        onChange = {onChange}        \r\n        />\r\n        )\r\n}\r\n\r\nconst forwadedInput = React.forwardRef(Input);\r\n\r\nexport default forwadedInput;\r\n\r\n","import React, { Fragment, useEffect, useContext, useRef,useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { routes } from \"../../../constants\";\r\n\r\n\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport Input from '../../Input/Input';\r\n\r\nexport default function Login() {\r\n\r\n\tconst [values,setValues] = useState({username:'',password:''})\r\n\r\n  \tconst usernameRef = useRef(null);\r\n  \tconst passwordRef = useRef(null);\r\n  \tconst submitRef = useRef(null);\r\n\r\n  \tlet handleChange = e => {\r\n\t\tconst {name,value} = e.target;\t\r\n\t\tconsole.log('Name : ',name,' Value : ',value)  \r\n\t  \tsetValues({\r\n\t\t  ...values,\r\n\t\t  [name]:value\r\n\t\t  });\r\n\t\t  \r\n\t\t  console.log(values);\r\n  \t};\r\n\r\n  useEffect(() => {\r\n\tusernameRef.current.focus();  \r\n    console.log(\"Login page loaded\");\r\n  }, []);\r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      console.log(\"The big loggin context\",context);\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const {\r\n        username,password\r\n      } = values;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                \r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login User\r\n                </strong>\r\n              </h3>\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={e => doLogin(username,password)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    placeholder=\"Login Name\"\r\n                    ref={usernameRef}\r\n                    value={values.username}\r\n                    onChange={e => handleChange(e)}\r\n                    \r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    ref={passwordRef}\r\n                    value={values.password}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    ref={submitRef}\r\n                    onClick={e => context.doLogin(username,password)}\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Login\r\n                    </strong>\r\n                  </button>\r\n                  <button type=\"reset\" className=\"btn btn-primary btn-lg\">\r\n                    <strong>\r\n                      <i className=\"fa fa-eraser\"> </i> Cancel\r\n                    </strong>\r\n                  </button>\r\n                  <Link to={routes.forget_password_page}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-warning btn-lg\"\r\n                    >\r\n                      <strong>\r\n                        <i className=\"fa fa-unlock\"> </i> Forget Password\r\n                      </strong>\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\n\r\nexport default function Logout() {\r\n    return (\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 className='box-title'>Logout</h3>\r\n                </div>\r\n                \r\n                <form className='form-horizontal'>\r\n                    <div className='form-group'>\r\n                        <button className='btn btn-danger' name='logout'><strong> Logout </strong></button> \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nimport * as routes from '../../../constants/routes';\r\n\r\nimport { auth } from '../../../firebase';\r\n\r\n\r\n\r\nconst SignUpPage = (props) => {\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <div className=\"box box-header\">\r\n                <h3 className=\"box-title\"> <strong> <i className='fa fa-sign-out'> </i> Sign Up</strong></h3>\r\n            </div>\r\n\r\n            <SignUpForm ShowLogin={props.ShowLogin}  />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst Initial_State = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...Initial_State };\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n        } = this.state;\r\n\r\n        const {\r\n            history,\r\n        } = this.props;\r\n\r\n        auth.doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                this.setState({ ...Initial_State });\r\n                //history.push(routes.home_page);\r\n            })\r\n            .catch(error => {\r\n                this.setState(byPropKey('error', error));\r\n            });\r\n\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={username}\r\n                            onChange={event => this.setState(byPropKey('username', event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={email}\r\n                            onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={passwordOne}\r\n                            onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n\r\n                        <input className=\"form-control\"\r\n                            value={passwordTwo}\r\n                            onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n\r\n                        <button \r\n                            disabled={isInvalid} \r\n                            type=\"submit\" \r\n                            className=\"btn btn-success btn-lg\">\r\n                            <strong> <i className=\"fa fa-sign-in\"> </i> Sign Up </strong>\r\n                        </button>\r\n                        <button\r\n                            type='reset'\r\n                            className='btn btn-warning btn-lg'\r\n                        >\r\n                            <strong> <i className='fa fa-eraser'> </i> Reset  </strong>\r\n                        </button>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-primary btn-lg'\r\n                            onClick={e => this.props.ShowLogin(e)}\r\n                        >\r\n                            \r\n                                <strong><i className='fa fa-sign-in'> </i> Login </strong>\r\n                        </button>    \r\n                    </div>\r\n                    {error && <p>{error.message}</p>}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport default SignUpPage;\r\nexport {\r\n    SignUpForm\r\n};","import React, { Fragment,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function SideBar (){\r\n\t\r\n\tlet onSearch = e => {    \r\n\t\te.preventDefault();\r\n\t\tconsole.log('Searching site...');\r\n\t\t// Remember to clear search field      \r\n\t};\r\n\t\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const userSignedInText = user_account_state.user_account\r\n        .uid\r\n        ? `<p id=\"strSideUserNameID\"><Link to={routes.logout_page}> Logout</Link></p>`\r\n        : `<p id=\"strSideUserNameID\"><Link to={routes.login_page}> Login</Link></p>`;\r\n\r\n    \r\n      return (\r\n        <Fragment>\r\n          <aside className=\"main-sidebar\">\r\n            <section className=\"sidebar\">\r\n              <div className=\"user-panel\">\r\n                <div className=\"pull-left image\">\r\n                  <img\r\n                    src=\"/static/dist/img/sms.jpeg\"\r\n                    id=\"strSideUserImageID\"\r\n                    className=\"img-circle\"\r\n                    alt=\"Weq-Trading\"\r\n                  />\r\n                </div>\r\n                <div className=\"pull-left info\">\r\n                  {user_account_state.user_account.uid ? (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.logout_page}> Logout</Link>\r\n                    </p>\r\n                  ) : (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.login_page}> Login</Link>\r\n                    </p>\r\n                  )\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <form\r\n                onSubmit={e => onSearch(e)}\r\n                method=\"get\"\r\n                className=\"sidebar-form\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"input-group-btn\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      name=\"search\"\r\n                      id=\"search-btn\"\r\n                      className=\"btn btn-flat\"\r\n                    >\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                <MenuItems />\r\n              </ul>\r\n            </section>\r\n          </aside>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\n\r\nexport default function Forget(){\r\n\r\n\r\n\tfunction sendRecoveryEmail  (e) {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Sending Recovery Email');\r\n      \r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box-header'>\r\n\t\t\t\t\t<h3 className='box-title'> <strong> <i className='fa fa-key'> </i> Forget Password</strong> </h3>        \r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='box box-footer'>\r\n\r\n\t\t\t\t\t<form className='form-horizontal' onSubmit={e => sendRecoveryEmail(e)}>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<span>Enter your username so what we can send you a password recovery message</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>                                    \r\n\t\t\t\t\t\t\t<input type='email' className='form-control' name='username'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<button type='submit' className='btn btn-success btn-lg' onClick={e => sendRecoveryEmail(e)}><strong> <i className='fa fa-unlock-alt'> </i> Send Recovery Email</strong></button>\r\n              <Link to={routes.login_page}><button type='reset' className='btn btn-warning btn-lg'>\r\n                \r\n                <strong> <i className='fa fa-eraser'> </i> Cancel </strong>\r\n                \r\n              </button></Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n","import React, {Fragment, Component } from 'react'\r\n\r\nexport default class Market extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className='box box-body'>\r\n\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t<h3 className='box-title'><strong> <i className='fa fa-shopping-basket'> </i> Market Place </strong> </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Fragment>\r\n                \r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t// <App />\r\n\t,\r\n    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment,createContext,useReducer,useContext } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport {routes} from '../../constants';\nimport Header from '../Layout/Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Contact from '../Contact/Contact';\nimport Profile from '../Profile/Profile';\nimport Login from '../Auth/Login/Login';\nimport Logout from '../Auth/Logout/Logout';\nimport Signup from '../Auth/Signup/Signup';\nimport SideBar from '../Layout/SideBar/SideBar';\nimport Footer from '../Layout/Footer/Footer';\nimport Forget from '../Auth/Forget/Forget';\nimport Market from '../Market/Market';\n\n\nimport UserAccountContextProvider from '../../context/UserAccount/userAccountContext';\n\nexport default function App () {\n\t\n\t\n\treturn (\n\t\t<UserAccountContextProvider>\n\t\t\tconsole.log(value.)\n\t\t\t<Fragment>\n\t\t\t\t<Router>\n\t\t\t\t\t{/* Header  Component*/}\n\t\t\t\t\t<Header/>\n\t\t\t\t\t{/* Sidebar Component */}\n\t\t\t\t\t<SideBar />\n\t\t\t\t\t{/* Body and Main Page Routes */}\n\t\t\t\t\t<div className=\"content-wrapper\">            \n\t\t\t\t\t\t<section className=\"content-header\">              \n\t\t\t\t\t\t\t<section className=\"content\">\n\t\t\t\t\t\t\t\t<Route exact path={routes.home_page} component={Home} />\n\t\t\t\t\t\t\t\t<Route exact path={routes.about_page} component={About} />\n\t\t\t\t\t\t\t\t<Route exact path={routes.contact_page} component={Contact} />\n\t\t\t\t\t\t\t\t<Route path={routes.profile_page} component={Profile} />\n\t\t\t\t\t\t\t\t<Route path ={routes.login_page} component={Login} />\n\t\t\t\t\t\t\t\t<Route path={routes.logout_page} component={Logout} />\n\t\t\t\t\t\t\t\t<Route path={routes.signup_page} component={Signup} />\n\t\t\t\t\t\t\t\t<Route path={routes.forget_password_page} component={Forget} />\n\t\t\t\t\t\t\t\t<Route path={routes.market_page} component={Market} />\n\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Footer Component  */}\n\t\t\t\t\t<Footer/>  \n\t\t\t\t</Router>       \n\t\t\t</Fragment>\n\t\t</UserAccountContextProvider>\n\t)\n};\n"],"sourceRoot":""}