{"version":3,"sources":["constants/routes.js","constants/program_constants.js","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","actions/userAccountActions/index.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","utilities/index.js","actions/walletActions/index.js","reducers/profileReducers/accountDetailsReducer.js","context/UserAccount/actions.js","context/UserAccount/userAccountContext.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Market/market-constants.js","components/Market/api-requests.js","components/Forms/InlineMessage.jsx","components/Market/Products/Products.jsx","components/Market/Service/Services.jsx","components/Market/Market.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Forms/InlineError.jsx","components/Contact/ThisContactForm.jsx","components/Contact/ContactDetails.jsx","components/Contact/Contact.jsx","components/Auth/auth-constants.js","components/Input/Input.js","components/Auth/Login/Login.jsx","components/Auth/Logout/Logout.jsx","components/Auth/auth-api.js","components/Auth/Signup/Signup.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/MyMarket.jsx","components/Dashboard/Dashboard.jsx","components/Blog/articles.js","components/Blog/Blog.jsx","components/hooks/forceUpdate.js","components/Account/Account.jsx","components/Market/CheckOut/CheckOut.jsx","serviceWorker.js","reducers/profileReducers/userContactDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","account_page","blog_page","market_page","admin_page","shopping_basket_page","my_market_products","manage_my_shop","check_out_page","dashboard_page","api_products_endpoint","api_services_endpoint","api_categories_endpoint","api_physical_endpoint","api_contact_endpoint","api_cart_endpoint","api_coupons_endpoint","api_dashboard_endpoint","api_user_endpoint","app_name","app_long_name","app_descrition","cell","email","fax","localStorageKey","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","auth","storage","contact_details_type","user_contact_id","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","names","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","account_details_type_error","displayName_error","photoURL_error","email_error","password_error","phoneNumber_error","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","result","user","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","USER_ACCOUNT_ACTIONS","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","_this","classCallCheck","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","state","mem_store","push","value","saveMemStore","onSaving","noError","setState","stringify","setItem","date","message","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","Utils","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isMoney","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","isMobile","window","innerWidth","innerHeight","document","documentURI","USER_BANKING_ACTIONS","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","user_account_errors","form_response","response_code","userAccountReducer","actions","type","payload","code","loginUser","user_account_state","dir","logOutUser","SendEmailVerification","UserAccountContext","createContext","UserAccountContextProvider","doLogin","doLogout","onChange","assign","componentWillMount","onAuthStateChanged","react_default","createElement","Provider","props","children","Component","SideBarMenuAuth","className","react_router_dom","to","routes","title","SideBarMenuNonAuth","MenuItems","possibleConstructorReturn","getPrototypeOf","call","user_logged_in","Consumer","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","onClick","SidebarCollapse","category_init","category_id","category_name","description","notes","category_type","sub_category","category_art","category_errors_init","category_name_error","description_error","notes_error","category_type_error","sub_category_error","category_art_error","products_init","id","product_name","product_art","price","currency","products_errors_init","category_id_error","product_name_error","product_art_error","price_error","currency_error","service_init","service_name","service_art","service_errors_init","service_name_error","service_art_error","physical_address_init","deliver_to","stand","street_name","city","country","postal_code","physical_address_errors_init","deliver_to_error","stand_error","street_name_error","city_error","province_error","country_error","postal_code_error","contact_details_init","tel","contact_details_errors_init","tel_error","cell_error","fax_error","website_error","cart_init","cart_id","total_items","date_created","is_active","sub_total","tax","total","coupon_init","validated","fetchProductsAPI","results","axios","get","data","products","toConsumableArray","fetchProductAPI","product_id","concat","fetchServicesAPI","services","fetchServiceAPI","service_id","fetchCategories","categories","category","saveCategory","post","saveProduct","product","doAddService","service","savePhysicalAddress","_callee9","physical_address","_context9","physical","fetchPhysicalAddress","_ref10","_callee10","_context10","saveContactDetails","_ref11","_callee11","contact_details","_context11","contact","_x10","fetchContactDetails","_ref12","_callee12","_context12","_x11","_x12","addToCart","_ref13","_callee13","cart_item","_context13","cart_items","_x13","retrieveCart","_ref14","_callee14","_context14","cart","Response","_x14","deleteCart","_ref15","_callee15","_context15","_x15","applyCouponCode","_ref16","_callee16","coupon","_context16","coupon_code","put","succeed","_x16","InlineMessage","message_type","Product","addProductToBasket","_useState","useState","_useState2","slicedToArray","inline","setInline","_useContext","useContext","addToBasket","src","alt","Forms_InlineMessage","Products","_useState3","_useState4","setCategories","_useState5","_useState6","sub_categories","setSubCategories","_useState7","_useState8","show_products","setShowProducts","_useState9","_useState10","setShoppingBasket","_useContext2","item","apiRequests","createSubCategories","subCategoryList","includes","useEffect","subs","fetchAPI","map","sub","name","expanded_category","find","filtered_products","filter","onCategoryClick","target","Products_Product","key","Service","addServiceToBasket","Services","show_services","setShowServices","filtered_services","Services_Service","Market","setProducts","setServices","display","setDisplay","placeholder","Home","About","InlineError","contact_form_details","messageid","subject","message_read","date_read","date_sent","contact_form_errors","names_error","subject_error","message_error","ThisContactForm","change","contact_form","onSubmitContactForm","preventDefault","self","assertThisInitialized","form_messages","onCheckErrors","form_errors","do_check_errors","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","bind","_this2","InlineError_InlineError","ContactDetails","href","height","width","allowfullscreen","frameBorder","Contact","Contact_ThisContactForm","ContactDetails_ContactDetails","user_init","user_errors_init","username_error","inline_init","extended_user","repeatpassword","is_admin","extended_user_error","surname_error","repeatpassword_error","forwadedInput","React","forwardRef","ref","Login","values","setValues","errors","setErrors","usernameRef","useRef","passwordRef","submitRef","handleChange","defineProperty","checkErrors","check_username","check_password","do_check","current","focus","onSubmit","Input_Input","Logout","addUser","sent_user","updateUser","fetchUser","user_details","SignUp","setUser","createUser","authUser","check_names","check_surname","check_cell","check_email","check_password_two","SideBar","onSearch","method","MenuItems_MenuItems","Footer","Forget","setEmail","sendRecoveryEmail","AddProduct","setProduct","image","size","filename","progress","uploaded","setUploaded","doUpload","uploadTask","on","snapshot","round","bytesTransferred","totalBytes","child","getDownloadURL","FileArtChange","files","doSaveProduct","product_to_save","RequestsAPI","check_product_name","check_product_description","check_price","check_product_art","check_category_id","AddService","_useState11","_useState12","setService","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","fileArtChange","check_service_name","check_service_description","check_service_art","check_service_category","addService","my_service","AddCategories","_useState21","_useState22","_useState23","_useState24","setCategory","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useContext3","doAddCategory","my_category","check_category_name","check_category_type","check_sub_category","check_description","check_notes","check_category_art","CategoryArtFileChange","MyMarket","my_header","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","Dashboard","present_user","setPresentUser","articles_api","this_date","return_date","this_pagesize","entertainment_news","sports_news","business_news","tech_news","science_news","health_news","get_blog_articles","_get_blog_articles","apiRequest","Axios","articles","BlogPost","post_data","article","urlToImage","source","author","Blog","posts","setPosts","forceUpdate","setTick","tick","useForceUpdate","_fetchData","blog_posts","fetchData","toUpperCase","slice","index","Verifications","use_onetime_pin","account_verified","verifications","setVerifications","onAccountVerify","react_switch_default","checked","OnChangeHandler","AccountSettings","account_active","receive_job_offers","receive_sms","receive_email","accountSettings","setAccountSettings","onToggleSettings","PersonalDetails","onChangeHandler","onUpdatePersonalDetails","Account","onSwitchScreen","BasketItem","item_type","APIRequests","id_service_product","quantity","ShoppingBasket","basket","setBasket","coupons","setCoupons","coupon_code_error","setCart","apiFetch","CheckOut_BasketItem","PhysicalAddress","setPhysical","check_deliver_to","check_stand","check_street_name","check_city","check_province","check_country","check_postal_code","addPhysicalAddress","settings","loadPhysicalAddress","setContact","check_tel","check_fax","check_website","onAddContactDetails","fetchContacts","CheckOut","_useContext5","CheckOut_PhysicalAddress","CheckOut_ContactDetails","CheckOut_ShoppingBasket","Boolean","location","hostname","match","ContactDetailsInitState","user_contacts","contact_details_errors","facebook_error","twitter_error","userContactDetailsReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","account_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","profile","wallet","inline_message","middleware","applyMiddleware","compose","thunk","store","createStore","ReactDOM","render","react_redux_es","userAccountContext_UserAccountContextProvider","Header_Header","react_router","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd90b2b9.chunk.js","sourcesContent":["\r\n\r\nexport const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const account_page = '/account';\r\n\r\nexport const blog_page = '/blog';\r\nexport const market_page = '/market';\r\n\r\nexport const admin_page = '/admin-user'; // + userid\r\nexport const shopping_basket_page = '/admin-user-shopping-basket';\r\nexport const my_market_products = '/admin-user-market';\r\nexport const manage_my_shop = '/admin-store-manager';\r\n\r\nexport const check_out_page = '/market-check-out';\r\n\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n\r\n\r\n\r\n/**\r\n * api routes \r\n */\r\n\r\n export const api_products_endpoint = '/api/products';\r\n export const api_services_endpoint = '/api/services';\r\n\r\n\r\n export const api_categories_endpoint = '/api/categories';\r\n\r\n export const api_physical_endpoint = '/api/physical-address';\r\n\r\n export const api_contact_endpoint = '/api/contact-details';\r\n\r\n\r\n export const api_cart_endpoint = '/api/cart';\r\n\r\n export const api_coupons_endpoint = '/api/coupons';\r\n\r\n export const api_dashboard_endpoint = '/api/dashboard';\r\n\r\n export const api_user_endpoint = '/api/user'","export const app_name = 'WEQTrading';\r\nexport const app_long_name = 'WEQ Trading Online Store';\r\nexport const app_descrition = 'WEQ Trading Online Store';\r\nexport const cell = '27780111869';\r\nexport const email = 'info@weqtrading.com';\r\nexport const fax = '086****786';\r\nexport const localStorageKey = 'weqtrading-';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {auth,\r\n\tfirebase,\r\n\tstorage\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneVerified:false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tUSER_LOGIN_STATUS : 'USER:USER_LOGIN_STATUS',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\n\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginStatus = () => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGIN_STATUS,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import moment from 'moment';\r\nclass Utilities {\r\n  constructor(today, url) {\r\n    this.today = today;\r\n    this.url = url;\r\n  }\r\n\r\n  isUrl = url => {\r\n    let pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name and extension\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?\" + // port\r\n      \"(\\\\/[-a-z\\\\d%@_.~+&:]*)*\" + // path\r\n      \"(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return pattern.test(url);\r\n  };\r\n\r\n  isEmpty = a => {\r\n    return a !== undefined ? a === null || a === \"\" : true;\r\n  };\r\n\r\n  isProvince = province => {\r\n    let province_list = [\r\n      \"limpopo\",\r\n      \"mpumalanga\",\r\n      \"north west\",\r\n      \"gauteng\",\r\n      \"kwazulu natal\",\r\n      \"eastern cape\",\r\n      \"western cape\",\r\n      \"northern cape\",\r\n      \"orange free state\"\r\n    ];\r\n    for (let i = 0; i < province_list.length; i++) {\r\n      if (province === province_list[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateEmail = email => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  validatePassword = password => {\r\n    let re = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n    );\r\n    return re.test(password);\r\n  };\r\n\r\n  validateUsername = username => {\r\n    let re = /^\\w+$/;\r\n    return re.test(username);\r\n  };\r\n\r\n  isNumber = n => {\r\n    return n !== undefined ? typeof n !== \"boolean\" && !isNaN(n) : false;\r\n  };\r\n\r\n  isMoney = n => {\r\n    return this.isNumber(n) ? true : false;\r\n  };\r\n\r\n  isCell = n => {\r\n    return this.isNumber(n)\r\n      ? n.length === 10 || n.length === 11 || n.length === 12 || n.length === 13\r\n      : false;\r\n  };\r\n\r\n  isTel = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  isFax = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  getAge = dateString => {\r\n    let dates = dateString.split(\"-\");\r\n    let d = new Date();\r\n\r\n    let userday = dates[2];\r\n    let usermonth = dates[1];\r\n    let useryear = dates[0];\r\n\r\n    let curday = d.getDate();\r\n    let curmonth = d.getMonth() + 1;\r\n    let curyear = d.getFullYear();\r\n\r\n    let age = curyear - useryear;\r\n\r\n    if (curmonth < usermonth || (curmonth === usermonth && curday < userday)) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n  isIDNumber = n => {\r\n    return n !== undefined ? this.isNumber(n) && n.length === 13 : true;\r\n  };\r\n  numDaysBetweenDates = (firstDate, secondDate) => {\r\n    let f_dates = firstDate.split(\"-\");\r\n    let s_dates = secondDate.split(\"-\");\r\n\r\n    // let d = new Date();\r\n\r\n    let f_day = parseInt(f_dates[2]);\r\n    let f_month = parseInt(f_dates[1]);\r\n    let f_year = parseInt(f_dates[0]);\r\n\r\n    let s_day = parseInt(s_dates[2]);\r\n    let s_month = parseInt(s_dates[1]);\r\n    let s_year = parseInt(s_dates[0]);\r\n\r\n    // TODO- Please revise the number of days algorithm\r\n    // let years = f_year - s_year;\r\n    // let months = f_month - s_month;\r\n    // let days = f_day - s_day;\r\n\r\n    let a = moment([f_year, f_month, f_day]);\r\n    let b = moment([s_year, s_month, s_day]);\r\n\r\n    return a.diff(b, \"days\") + 1;\r\n\r\n    //\r\n    // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n    //     return days\r\n    // }else if ((years === 0) && (months > 0)){\r\n    //     return (days + (months * 30))\r\n    // }else{\r\n    //     return 365\r\n    // }\r\n  };\r\n\r\n  countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n    try {\r\n      return stamp_1 - stamp_2;\r\n    } catch (e) {\r\n      return parseInt(stamp_1) - parseInt(stamp_2);\r\n    }\r\n  };\r\n\r\n  throttle = (func, limit) => {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function() {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  };\r\n\r\n  debounce = (func, delay) => {\r\n    let inDebounce;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(inDebounce);\r\n      inDebounce = setTimeout(() => func.apply(context, args), delay);\r\n    };\r\n  };\r\n\r\n  isMobile = () => {\r\n    if (window.innerWidth <= 800 && window.innerHeight <= 600) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nexport let UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","\r\nimport {\r\n    USER_ACCOUNT_ACTIONS\r\n} from '../../actions';\r\nimport {\r\n    account_details_type,\r\n    account_details_type_error\r\n} from '../../types';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nlet UserAccountInitState = {\r\n    user_account: {...account_details_type},\r\n    user_account_errors: {...account_details_type_error},\r\n    form_response: '',\r\n    response_code: '',\r\n};\r\n    \r\nexport let loginUser = async (username, password) => {\r\n    let user_account_state = {...UserAccountInitState};\r\n    let user_account;\r\n    let form_response;\r\n    let response_code;\r\n\r\n    await auth.doSignInWithEmailAndPassword(username, password).then(result => {\r\n            \r\n\r\n            if (result.status === true){\r\n                user_account = {...result.response};\r\n                form_response = 'User Logged In Successfully';\r\n                response_code = 200;\r\n            }else {\r\n                user_account = {...result.response};\r\n                form_response = result.error.message;\r\n                response_code = result.error.code;\r\n            }\r\n\r\n    });\r\n    \r\n    user_account_state.user_account = {...user_account};    \r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE',user_account_state);\r\n    return {...user_account_state};\r\n}\r\n\r\nexport let logOutUser = async() => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n    await auth.doSignOut().then(result => {\r\n        if (result.status === true){\r\n                user_account = {\r\n                    ...account_details_type\r\n                };\r\n                form_response = 'User Logout Successfully';\r\n                response_code = 200;\r\n                }\r\n                else {\r\n                    user_account = {\r\n                        ...account_details_type\r\n                    };\r\n                    form_response = result.error.message;\r\n                    response_code = result.error.code;\r\n                }\r\n    });\r\n    user_account_state.user_account = {\r\n        ...user_account\r\n    };\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE', user_account_state);\r\n    return {\r\n        ...user_account_state\r\n    };\r\n\r\n}\r\n\r\n\r\nexport let SendEmailVerification = async(user) => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n        console.log('Sending email verifications');\r\n\r\n    await auth.doSendEmailVerification(user).then( result => {\r\n        if (result.status === true){\r\n            user_account={\r\n                ...user,\r\n                email_verification_sent : true\r\n            };\r\n            form_response= 'successfully sent email verifications';\r\n            response_code= 200\r\n        }else{\r\n            user_account = {\r\n                ...user,\r\n                email_verification_sent: false\r\n            };\r\n            form_response= result.error.message;\r\n            response_code= result.error.code\r\n        }\r\n    });\r\n    user_account_state.user_account = {...user_account};\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n\r\n    return user_account_state;\r\n}","import React,{Component,useReducer,createContext} from 'react';\r\nimport {firebase,auth} from '../../firebase';\r\nimport userAccountReducer, {\r\n  UserAccountInitState\r\n} from '../../reducers/profileReducers/accountDetailsReducer';\r\n\r\nimport {\r\n  loginUser, logOutUser, SendEmailVerification\r\n} from './actions';\r\n\r\nexport const UserAccountContext = createContext();\r\nexport default class UserAccountContextProvider extends Component {\r\n    state = {user_account_state: {...UserAccountInitState}};\r\n\r\n    doLogin = async (username,password) => {\r\n      let user_account_state = await loginUser(username,password);\r\n      this.setState({user_account_state})\r\n    }\r\n\r\n    doLogout = async() => {\r\n      let user_account_state = await logOutUser();\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n    doSendEmailVerification = async() => {\r\n      if (this.state.user_account_state.user_account.emailVerified){\r\n      console.log('Cannot send verification email account already verified');\r\n    }else{\r\n      let user_account_state = await SendEmailVerification(this.state.user_account_state.user_account);\r\n      this.setState({\r\n        user_account_state: user_account_state\r\n      });\r\n    }\r\n    }\r\n\r\n    onChange = (user) => {\r\n      let {\r\n        user_account\r\n      } = this.state.user_account_state;\r\n\r\n      let user_account_state = Object.assign({},this.state.user_account_state)\r\n      user_account_state.user_account = {\r\n        ...user\r\n      };\r\n\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n  componentWillMount = () => {\r\n    // const unsubscribe = firebase.auth().onAuthStateChanged(this.onChange);    \r\n    const dounsubscribe = firebase.firebase.auth().onAuthStateChanged(this.onChange)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      < UserAccountContext.Provider value = {\r\n        {\r\n          ...this.state, doLogin: this.doLogin, doLogout: this.doLogout, doSendEmailVerification: this.doSendEmailVerification\r\n        }\r\n      } >\r\n                {this.props.children}\r\n      </UserAccountContext.Provider>              \r\n    )\r\n  }\r\n}\r\n","import React, {Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\nimport {firebase,auth} from '../../../firebase';\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nconst SideBarMenuAuth = () => {\r\n\treturn (\r\n    <ul className=\"sidebar-menu\">\r\n      <li className=\"header\">W-Trading</li>\r\n      <li>\r\n        <Link to={routes.home_page} title=\"weqtrading online store\">\r\n          <i className=\"fa fa-home\" /> <strong>Home</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.about_page} title=\"About\">\r\n          <i className=\"fa fa-info\" /> <strong>About</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.contact_page} title=\"Contact Us\">\r\n          <i className=\"fa fa-envelope\" /> <strong>Contact</strong>\r\n        </Link>\r\n      </li>\r\n      <li className=\"active treeview\">\r\n        <Link to=\"#\">\r\n          <i className=\"fa fa-user-md\" /> <span>Client Area</span>\r\n          <span className=\"pull-right-container\">\r\n            <i className=\"fa fa-angle-left pull-right\" />\r\n          </span>\r\n        </Link>\r\n        <ul className=\"treeview-menu\">\r\n          <li>\r\n            <Link to={routes.admin_page} title=\"manage your Account\">\r\n              <i className=\"fa fa-sign-in\"> </i> <strong> Account</strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li>\r\n            <Link to={routes.check_out_page} title=\"Check Out\">\r\n              <i className=\"fa fa-shopping-cart\"> </i>{\" \"}\r\n              <strong> CheckOut</strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li>\r\n            <Link to={routes.my_market_products} title=\"Shopping Basket\">\r\n              <i className=\"fa fa-shopping-basket\"> </i>{\" \"}\r\n              <strong> My Products &amp; Services </strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li>\r\n            <Link to={routes.manage_my_shop} title=\"manage my shop\">\r\n              <i className=\"fa fa-stethoscope\"> </i>{\" \"}\r\n              <strong>My Store Manager</strong> { \" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.market_page} title=\"Market\">\r\n          <i className=\"fa fa-shopping-basket\" /> Market Place\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.blog_page} title=\"Weq Trading Blog\">\r\n          <i className=\"fa fa-book\"> </i> <strong>Blog</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.dashboard_page} title=\"Dashboard\">\r\n          <i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.logout_page} title=\"Logout\">\r\n          <i className=\"fa fa-sign-out\"> </i> <strong> Logout </strong>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t) \r\n}\r\n\r\n\r\n\r\nexport default class MenuItems extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser_logged_in : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet isUserLoggedIN = () => {\t\t\t\t\t\r\n\t\t\treturn auth.currentUser ? true:false;\r\n\t\t}\r\n\t\tif (isUserLoggedIN()){\r\n\t\t\tthis.setState({user_logged_in : true})\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n\t\t\t  const { doLogin, user_account_state } = context;\r\n\t\t\t  console.log('SIDEBAR',user_account_state.user_account);\r\n\t\t\treturn (\r\n        <div>\r\n          {user_account_state.user_account.uid ? (\r\n            <SideBarMenuAuth />\r\n          ) : (\r\n            <SideBarMenuNonAuth />\r\n          )}\r\n        </div>\r\n      );\r\n\t  }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n\t}\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","\r\nexport const category_init = {    \r\n    category_id : '',\r\n    category_name : '',\r\n    description : '',\r\n    notes : '',\r\n    category_type : '',\r\n    sub_category : '',\r\n    category_art : '',\r\n};\r\n\r\nexport const category_errors_init = {\r\n    category_name_error : '',\r\n    description_error : '',\r\n    notes_error : '',\r\n    category_type_error : '',\r\n    sub_category_error : '',\r\n    category_art_error : ''\r\n};\r\n\r\nexport const products_init = {\r\n         uid : '',\r\n         id: '',\r\n         category_id : '',\r\n         product_name: '',\r\n         description: '',\r\n         product_art: '',\r\n         price: '',\r\n         currency: 'zar'\r\n};\r\n\r\nexport const products_errors_init = {\r\n    category_id_error : '',\r\n    product_name_error : '',\r\n    description_error : '',\r\n    product_art_error : '',\r\n    price_error : '',\r\n    currency_error : ''\r\n};\r\n\r\nexport const service_init = {\r\n    uid: '',\r\n    id: '',\r\n    category_id: '',\r\n    service_name: '',\r\n    description: '',\r\n    service_art : '',\r\n    price: '',\r\n    currency: 'zar'\r\n};\r\n\r\nexport const service_errors_init = {\r\n    category_id_error : '',\r\n    service_name_error: '',\r\n    description_error: '',\r\n    service_art_error: '',\r\n    price_error: '',\r\n    currency_error: 'zar'\r\n};\r\n\r\n\r\nexport const physical_address_init = {\r\n    uid: '',\r\n    deliver_to : '',\r\n    stand: '',\r\n    street_name: '',\r\n    city: '',\r\n    province: '',\r\n    country : '',\r\n    postal_code: '',\r\n};\r\n\r\nexport const physical_address_errors_init = {\r\n    deliver_to_error : '',\r\n    stand_error : '',\r\n    street_name_error : '',\r\n    city_error : '',\r\n    province_error : '',\r\n    country_error : '',\r\n    postal_code_error : ''\r\n};\r\n\r\n\r\nexport const contact_details_init = {\r\n    uid: \"\",\r\n    tel: \"\",\r\n    cell: \"\",\r\n    email: \"\",\r\n    fax: \"\",\r\n    website: \"\"\r\n};\r\n\r\n\r\nexport const contact_details_errors_init = {\r\n    tel_error : '',\r\n    cell_error : '',\r\n    email_error : '',\r\n    fax_error : '',\r\n    website_error : ''\r\n};\r\n\r\n\r\nexport const cart_init = {\r\n    cart_id :'',  // # unique id for this cart instance\r\n    uid :'',\r\n    total_items : '0',\r\n    date_created : '',\r\n    is_active : true,\r\n    sub_total :'0',\r\n    tax : '0',\r\n    total : '0'\r\n};\r\n\r\nexport const coupon_init = {\r\n    uid: '',    \r\n    code: '',\r\n    validated : false    \r\n};","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\nexport const fetchProductsAPI = async () => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_products_endpoint)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      console.log('Fetch Products API', products);\r\n      results = [...products];\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchProductAPI = async product_id => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_products_endpoint + `/${product_id}`)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      console.log(\"Fetch Products API\", products);\r\n      results = {...products};\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchServicesAPI = async () => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_services_endpoint)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching services\");\r\n      }\r\n    })\r\n    .then(services => {\r\n      results = [...services];\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchServiceAPI = async service_id => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_services_endpoint + `/${service_id}`)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      console.log(\"Fetch Products API\", products);\r\n      results = { ...products };\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n\r\n};\r\n\r\n\r\nexport const fetchCategories = async (category_type) => {\r\n    let results = [];\r\n\r\n    await axios.get(routes.api_categories_endpoint).then(result => {\r\n        if (result.status === 200){\r\n            return result.data;\r\n        }else{\r\n            throw new Error('there was an error fetching product categories');\r\n        }\r\n    }).then(categories => {\r\n        categories.forEach(category => {\r\n          if(category.category_type === category_type){\r\n            results.push(category)\r\n          }\r\n        })\r\n    }).catch(error => {\r\n        console.log('Categories Error : ',error.message);\r\n    })\r\n    \r\n    return results;\r\n};\r\n\r\nexport const saveCategory = async (category) => {\r\n    let results = [];\r\n\r\n    await axios.post(routes.api_categories_endpoint,category).then(result => {\r\n        if (result.status === 200){\r\n            return result.data;\r\n        }else{\r\n            throw new Error('there was an error saving new category');\r\n        }\r\n    }).then(category => {\r\n        results = category;\r\n    }).catch(error => {\r\n        console.log('Save Caregoty',error.message);\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const saveProduct = async(product) => {\r\n  let results = {status : true,payload:{},error:{}};\r\n   \r\n\r\n  await axios.post(routes.api_products_endpoint,product).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error saving new product');\r\n      }\r\n  }).then(product => {\r\n    results.status = true;\r\n    results.payload = product;\r\n\r\n  }).catch(error => {\r\n    console.log('Save product error',error.message);\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const doAddService = async(service) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_services_endpoint,service).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving new service');\r\n    }\r\n  }).then(service => {\r\n    results.status = true;\r\n    results.payload = service;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const savePhysicalAddress = async(physical_address) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_physical_endpoint,physical_address).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving new physical address');\r\n    }\r\n  }).then(physical => {\r\n    results.status = true;\r\n    results.payload = physical;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchPhysicalAddress =async (seed,stateKey) => {\r\n    let response = {};\r\n    let request_data = {\r\n      uid: seed\r\n    };\r\n\r\n    await axios.get(routes.api_physical_endpoint + `/${seed}`).then(results => {\r\n      if (results.status === 200){\r\n        return results.data;\r\n      }else{\r\n        throw new Error('there was an error loading physical address');\r\n      }\r\n    }).then(physical => {\r\n      response = {...physical};\r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\n\r\nexport const saveContactDetails = async(contact_details) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_contact_endpoint, contact_details).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving contact details')\r\n    }\r\n  }).then(contact => {\r\n    results.status = true;\r\n    results.payload = contact;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n  return results;\r\n};\r\n\r\n\r\nexport const fetchContactDetails = async (seed,stateKey) => {\r\n    let response = {};\r\n    await axios.get(routes.api_contact_endpoint + `/${seed}`).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error loading contact details');\r\n      }\r\n    }).then(contact => {\r\n      response = {...contact};\r\n\r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\n\r\n\r\nexport const addToCart = async cart_item => {\r\n    let results = { status: true, payload: {}, error: {} };\r\n\r\n    await axios.post(routes.api_cart_endpoint, cart_item)\r\n      .then(result => {\r\n        if (result.status === 200) {\r\n          return result.data;\r\n        } else {\r\n          throw new Error(\"there was an error adding cart item\");\r\n        }\r\n      })\r\n      .then(cart_items => {\r\n        results.status = true;\r\n        results.payload = [...cart_items];\r\n      })\r\n      .catch(error => {\r\n        results.status = false;\r\n        results.error = { ...error };\r\n      });\r\n    console.log(\"Add to cart results : \", results);\r\n    return results;\r\n};\r\n\r\n\r\n\r\nexport const retrieveCart = async uid => {\r\n  let results = {status : true, cart_items : [], cart : {}, error: {} };\r\n\r\n  await axios.get(routes.api_cart_endpoint + `/${uid}`).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error fetching cart');\r\n      }\r\n  }).then(Response => {\r\n      results.status = true;\r\n      results.cart = Response.cart;\r\n      results.cart_items = Response.cart_items;\r\n  }).catch(error => {\r\n      results.status = false;\r\n      results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const deleteCart = async uid => {\r\n  let results = { status: true, cart_items: [], cart: {}, error: {} };\r\n  await axios.delete(routes.api_cart_endpoint + `/${uid}`).then(response => {\r\n      if (response.status === 200){\r\n        return response.data\r\n      }else{\r\n        throw new Error('there was an error removing cart');\r\n      }\r\n  }).then(cart => {\r\n    results.status = true;\r\n    results.cart_items = [];\r\n    results.cart = {};\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const applyCouponCode = async coupon => {\r\n  let results = { status: true, coupon_code: {}, error: {} };\r\n\r\n  await axios.put(routes.api_coupons_endpoint,coupon).then(response => {\r\n    if (response.status === 200){\r\n      return response.data;\r\n    }else{\r\n      throw new Error('error on server or coupon code not found',response.data);\r\n    }\r\n  }).then(response => {\r\n    if (response.succeed){\r\n      results.status = response.succeed;\r\n      results.coupon_code = { ...response.coupon };    \r\n    }else{\r\n      results.status = response.succeed;\r\n      results.error.message = response.message;    \r\n    }\r\n  }).catch(error => {\r\n    console.log('coupon code error ',error.message);\r\n    results.status = false;\r\n    results.error = {...error};\r\n  });\r\n\r\n  return results;\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InlineMessage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {message : this.props.message,\r\n\t\t\tmessage_type : this.props.message_type};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box-info'}>\r\n\t\t\t\t<div className={'box box-header'}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={'box-tools'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={'box-title btn-outline-info btn-lg'}\r\n\t\t\t\t\t\t><em><i className='fa fa-check-circle'> </i> <small> {this.state.message} </small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nInlineMessage.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tmessage_type : PropTypes.string\r\n};\r\n\r\nexport default InlineMessage;","import React ,{useState,useEffect,Fragment,useContext}from 'react';\r\nimport {products_init,category_init} from '../market-constants';\r\nimport { routes,settings } from '../../../constants';\r\nimport * as apiRequests from '../api-requests';\r\nimport * as productStore from '../CheckOut/store-basket';\r\n\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nconst Product = ({product,addProductToBasket}) => {\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const addToBasket = async product => {    \r\n    \r\n    console.log('Adding this product to basket',product);\r\n    if (user_account_state.user_account.uid){\r\n    try {\r\n      await addProductToBasket(product)\r\n        .then(Response => {\r\n          if (Response.status) {\r\n            setInline({\r\n              message: ` successfully add ${product.product_name} to basket`\r\n            });\r\n          } else {\r\n            setInline({\r\n              message: Response.error.message,\r\n              message_type: \"error\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setInline({ message: error.message, message_type: \"error\" });\r\n        });\r\n    } catch (error) {\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n  }else{\r\n    setInline({message:'you are presently not logged in please login in order to start buying and selling products in this portal',message_type:'error'});\r\n  }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"box box-info\">\r\n      <div className=\"polaroid\">\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\" title={product.description}>\r\n              {product.product_name}\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-light\"\r\n                onClick={e => addToBasket(product)}\r\n                title={`Add ${product.product_name} to Basket`}\r\n              >\r\n                R {product.price}.00 Add to Basket\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"pola-image\"\r\n            src={product.product_art}\r\n            alt={product.product_name}\r\n            title={\r\n              `\r\n              Title : ${product.product_name}  \r\n              Description : \r\n              ${product.description}\r\n              \r\n              ----------------------------------\r\n              \r\n              Price : R ${product.price}.00\r\n            `}\r\n          />\r\n          <div className=\"polatext\">\r\n            <span>{product.description}</span>\r\n            <div className=\"box-tools\">\r\n              <div className=\"box-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning btn-outline-light\"\r\n                  onClick={e => addToBasket(product)}\r\n                  title={`Add ${product.product_name} to Basket `}\r\n                >\r\n                  R {product.price}.00 Add to Basket\r\n                </button>\r\n                {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default function Products({products}) {\r\n\r\n    const [categories,setCategories] = useState([]);\r\n    const [sub_categories,setSubCategories] = useState([]);\r\n    const [show_products, setShowProducts] = useState([]);\r\n\r\n    const [shoppingBasket,setShoppingBasket] = useState([]);\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n    const addProductToBasket = async product => {   \r\n        let results = { status: true, payload: {}, error: {} };     \r\n        let cart_item = {\r\n          uid : user_account_state.user_account.uid,\r\n          item : product,\r\n        };\r\n\r\n        await apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {          \r\n          results = { ...Response };\r\n          if(Response.status){                        \r\n            setShoppingBasket(Response.payload)\r\n          }else{\r\n             console.log(Response.error.message);\r\n          }            \r\n        });\r\n        return results;\r\n    };\r\n\r\n\r\n    const createSubCategories = (response) => {\r\n        let subCategoryList = [];\r\n\r\n        response.forEach(category => {\r\n          if (!subCategoryList.includes(category.sub_category)) {\r\n            subCategoryList.push(category.sub_category);\r\n          }\r\n        });\r\n        console.log('Sub Category List : ',subCategoryList);\r\n        return subCategoryList;\r\n    };\r\n\r\n\r\n    const onCategoryClick = (category) => {\r\n\r\n      let expanded_category = categories.find(expanded_category => expanded_category.sub_category === category);\r\n\r\n      let filtered_products = products.filter(product => {\r\n        return product.category_id === expanded_category.category_id;\r\n      });\r\n      console.log('Filtered Products ', filtered_products);\r\n      setShowProducts(filtered_products);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n      const fetchAPI = async () => {\r\n        let category_type = \"products\";\r\n        \r\n        let response = [];\r\n\r\n        await apiRequests.fetchCategories(category_type).then(categories => {\r\n            response = categories;\r\n            setCategories(categories);\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n\r\n        let subs = await createSubCategories(response);\r\n\r\n        setSubCategories(subs);\r\n        return true;\r\n      };\r\n\r\n      fetchAPI().then(result => {\r\n        console.log(result);        \r\n      });\r\n\r\n      return () => {\r\n        setCategories([]);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      console.log('All Products',products);\r\n      setShowProducts(products);\r\n      return () => {\r\n        setShowProducts([]);\r\n      };\r\n    }, [products]);\r\n\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className='fa fa-product-hunt'> </i>{' '}\r\n                Products\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              {sub_categories.map(sub => {\r\n                return (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool btn-outline-dark\"\r\n                    name={sub}\r\n                    onClick={e => onCategoryClick(e.target.name)}\r\n                    >\r\n                    {sub}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n              {\r\n                show_products.map(product => {\r\n                  if(product.product_name && product.product_art && product.description && product.price){\r\n                    return (\r\n                      <Product\r\n                        product={product}\r\n                        key={product.id}\r\n                        addProductToBasket={addProductToBasket}\r\n                      />\r\n                    )}                  \r\n                })\r\n              }\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","import React, { useState, Fragment,useContext,useEffect } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { service_init, category_init } from \"../market-constants\";\r\nimport { routes, settings } from \"../../../constants\";\r\nimport * as apiRequests from \"../api-requests\";\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\n\r\nconst Service = ({ service, addServiceToBasket }) => {\r\n  const [inline, setInline] = useState({ message: \"\", message_type: \"info\" });\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const addToBasket = async service => {\r\n    console.log(\"Adding this service to basket\", service);\r\n    if (user_account_state.user_account.uid) {\r\n      try {\r\n        await addServiceToBasket(service)\r\n          .then(Response => {\r\n            if (Response.status) {\r\n              setInline({\r\n                message: ` successfully add ${service.service_name} to basket`\r\n              });\r\n            } else {\r\n              setInline({\r\n                message: Response.error.message,\r\n                message_type: \"error\"\r\n              });\r\n            }\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n      } catch (error) {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      }\r\n    } else {\r\n      setInline({\r\n        message:\r\n          \"you are presently not logged in please login in order to start buying and selling services in this portal\",\r\n        message_type: \"error\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box box-info\">\r\n      <div className=\"polaroid\">\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\" title={service.description}>\r\n              {service.service_name}\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-light\"\r\n                onClick={e => addToBasket(service)}\r\n                title={`Add ${service.service_name} to Basket`}\r\n              >\r\n                R {service.price}.00 Add to Basket\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"pola-image\"\r\n            src={service.service_art}\r\n            alt={service.service_name}\r\n            title={`\r\n              Title : ${service.service_name}  \r\n              Description : \r\n              ${service.description}\r\n              \r\n              ----------------------------------\r\n              \r\n              Price : R ${service.price}.00\r\n            `}\r\n          />\r\n          <div className=\"polatext\">\r\n            <span>{service.description}</span>\r\n            <div className=\"box-tools\">\r\n              <div className=\"box-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning btn-outline-light\"\r\n                  onClick={e => addToBasket(service)}\r\n                  title={`Add ${service.service_name} to Basket `}\r\n                >\r\n                  R {service.price}.00 Add to Basket\r\n                </button>\r\n                {inline.message ? (\r\n                  <InlineMessage\r\n                    message={inline.message}\r\n                    message_type={inline.message_type}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default function Services({services}) {\r\n    const [categories, setCategories] = useState([]);\r\n    const [sub_categories, setSubCategories] = useState([]);\r\n    const [show_services, setShowServices] = useState([]);\r\n\r\n    const [shoppingBasket, setShoppingBasket] = useState([]);\r\n\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  \r\n    const addServiceToBasket = async service => {\r\n      let results = { status: true, payload: {}, error: {} };\r\n      let cart_item = {\r\n        uid: user_account_state.user_account.uid,\r\n        item: service\r\n      };\r\n\r\n      await apiRequests.addToCart(JSON.stringify(cart_item)).then(Response => {\r\n        results = { ...Response };\r\n        if (Response.status) {\r\n          setShoppingBasket(Response.payload);\r\n        } else {\r\n          console.log(Response.error.message);\r\n        }\r\n      });\r\n      return results;\r\n    };\r\n\r\n    const createSubCategories = response => {\r\n      let subCategoryList = [];\r\n\r\n      response.forEach(category => {\r\n        if (!subCategoryList.includes(category.sub_category)) {\r\n          subCategoryList.push(category.sub_category);\r\n        }\r\n      });\r\n      console.log(\"Sub Category List : \", subCategoryList);\r\n      return subCategoryList;\r\n    };\r\n\r\n    const onCategoryClick = category => {\r\n      let expanded_category = categories.find(\r\n        expanded_category => expanded_category.sub_category === category\r\n      );\r\n\r\n      let filtered_services = services.filter(service => {\r\n        return service.category_id === expanded_category.category_id;\r\n      });\r\n      console.log(\"Filtered Service \", filtered_services);\r\n      setShowServices(filtered_services);\r\n    };\r\n\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        let category_type = \"services\";\r\n\r\n        let response = [];\r\n\r\n        await apiRequests\r\n          .fetchCategories(category_type)\r\n          .then(categories => {\r\n            response = categories;\r\n            setCategories(categories);\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n\r\n        let subs = await createSubCategories(response);\r\n\r\n        setSubCategories(subs);\r\n        return true;\r\n      };\r\n\r\n      fetchAPI().then(result => {\r\n        console.log(result);\r\n      });\r\n\r\n      return () => {\r\n        setCategories([]);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      console.log(\"All Services\", services);\r\n      setShowServices(services);\r\n      return () => {\r\n        setShowServices([]);\r\n      };\r\n    }, [services]);\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-server\"> </i> Services\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            {sub_categories.map(sub => {\r\n              return (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool btn-outline-dark\"\r\n                  name={sub}\r\n                  onClick={e => onCategoryClick(e.target.name)}\r\n                >\r\n                  {sub}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {show_services.map(service => {\r\n          if (\r\n            service.service_name &&\r\n            service.service_art &&\r\n            service.description &&\r\n            service.price\r\n          ) {\r\n            return (\r\n              <Service\r\n                service={service}\r\n                key={service.id}\r\n                addServiceToBasket={addServiceToBasket}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from \"react\";\r\n\r\nimport Products from \"./Products/Products\";\r\nimport Services from \"./Service/Services\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { routes } from \"../../constants\";\r\nimport * as apiRequests from './api-requests';\r\nimport {firebase} from '../../firebase';\r\n\r\nimport {UserAccountContext} from '../../context/UserAccount/userAccountContext';\r\n\r\n\r\nexport default function Market() {\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [display,setDisplay] = useState('products');\r\n  const {user_account_state,doLogin } = useContext(UserAccountContext);\r\n  \r\n  useEffect(() => {\r\n    apiRequests.fetchProductsAPI().then(result => {\r\n      setProducts(result);\r\n    });\r\n\r\n    apiRequests.fetchServicesAPI().then(result => {\r\n      setServices(result);\r\n    });\r\n\r\n\r\n    return () => {\r\n      setProducts([]);\r\n      setServices([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-shopping-basket\"> </i> Market Place{\" \"}\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"q\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search Market...\"\r\n              />\r\n              <span className=\"input-group-btn\">\r\n                <button\r\n                  type=\"submit\"\r\n                  name=\"search\"\r\n                  id=\"search-btn\"\r\n                  className=\"btn btn-flat\"\r\n                >\r\n                  <i className=\"fa fa-search\" />\r\n                </button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-bookmark-o\"> </i> Weq Trading &amp; Projects\r\n              </strong>\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"products\"\r\n                onClick={e => setDisplay(\"products\")}\r\n              >\r\n                <i className=\"fa fa-product-hunt\"> </i> Products\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"services\"\r\n                onClick={e => setDisplay(\"services\")}\r\n              >\r\n                <i className=\"fa fa-server\"> </i> Services\r\n              </button>\r\n              {user_account_state.user_account.uid ? (\r\n                <Link to={routes.check_out_page}>\r\n                  {\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool btn-outline-dark\"\r\n                    name=\"check_out\"\r\n                  >\r\n                    <i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n                  </button>\r\n                </Link>\r\n              ) : (\r\n                <Link to={routes.login_page}>\r\n                  {\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-box-tool btn-outline-dark\"\r\n                    name=\"check_out\"\r\n                  >\r\n                    <i className=\"fa fa-sign-in\"> </i> Login\r\n                  </button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {display === \"products\" ? <Products products={products} /> : \"\"}\r\n\r\n          {display === \"services\" ? <Services services={services} /> : \"\"}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport Market from '../Market/Market';\r\n\r\nexport default function Home (){\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) =>{\r\n\t\tconst { user_account_state } = context;\r\n\t\treturn (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-home\"> </i> Weq Trading{\" \"}\r\n              </strong>{\" \"}\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <button className=\"btn btn-box-tool\">\r\n                <Link to={routes.market_page}>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Market Place{\" \"}\r\n                  </strong>{\" \"}\r\n                </Link>\r\n              </button>\r\n              {user_account_state.user_account.uid ? (\r\n                <button className=\"btn btn-box-tool\">\r\n                  <Link to={routes.logout_page}>\r\n                    <strong>\r\n                      {\" \"}\r\n                      <i className=\"fa fa-sign-in\"> </i> Log out{\" \"}\r\n                    </strong>{\" \"}\r\n                  </Link>\r\n                </button>\r\n              ) : (\r\n                <button className=\"btn btn-box-tool\">\r\n                  <Link to={routes.login_page}>\r\n                    <strong>\r\n                      {\" \"}\r\n                      <i className=\"fa fa-sign-in\"> </i> Log in to Weq Trading{\" \"}\r\n                    </strong>{\" \"}\r\n                  </Link>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Market />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n\t}}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-info\"> </i> About\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong> Introduction </strong>\r\n              </h3>\r\n            </div>\r\n            <blockquote>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Whittlesea Experience Quality Computer College &amp;\r\n                  Solutions is a registered company registered as a close\r\n                  corporation\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is a service provider company, which is concerned about\r\n                  its community, because the main aim is to fight\r\n                  unemployment.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is owned by two directors but aims to employing more\r\n                  than twenty employees.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  The books of this company are managed by the accountant\r\n                  Ntombizamfaku Nelisa Sigcau.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  This company has got visions and dreams of the rainbow\r\n                  nation.\r\n                </li>\r\n              </ul>\r\n            </blockquote>\r\n          </div>\r\n\r\n          <div className=\"box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Vision</strong>\r\n              </h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                To be a leading and effective organization that is based on\r\n                its community needs, fulfilment and also that is capable of\r\n                meaningful contribution towards the development of the\r\n                people.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see a well developed community.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see the previously disadvantaged community with the\r\n                skills to fight poverty and unemployment.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see an improved standard of living for every South\r\n                African.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Services</strong>\r\n              </h3>\r\n              <blockquote>\r\n                The company offers the following other services\r\n              </blockquote>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Internet Connections / WIFI access\r\n              </li>\r\n              <li className=\"list-group-item\">Construction</li>\r\n              <li className=\"list-group-item\">Fencing</li>\r\n              <li className=\"list-group-item\">Renovations</li>\r\n              <li className=\"list-group-item\">Rentals Apartments</li>\r\n              <li className=\"list-group-item\">Transportation</li>\r\n              <li className=\"list-group-item\" > Training</li>\r\n              <li className='list-group-item'> Supply of Chairs,Tables, and Tents</li>\r\n              <li className='list-group-item'>Installations of Surveilance Cameras and Alarms</li>\r\n              <li className='list-group-item'>Supply of cleaning Materials</li>\r\n              <li className='list-group-item'>Construction</li>\r\n              <li className='list-group-item'>Tilling</li>\r\n              <li className='list-group-item'>Plumbing</li>\r\n              <li className='list-group-item'>Wiring (Electrical)</li>\r\n              <li className='list-group-item'>Painting</li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{this.state.message}</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\nexport let contact_form_details  = {\r\n            messageid:\"\",\r\n            names : \"\",\r\n            email : \"\",\r\n            cell: \"\",\r\n            subject: \"\",\r\n            message: \"\",\r\n\r\n            message_read : false,\r\n            date_read : \"\",\r\n            date_sent : \"\"\r\n};\r\n\r\nexport let contact_response_message_detail = {\r\n        messageid:\"\",\r\n        response:\"\",\r\n        date_sent:\"\",\r\n};\r\n\r\nlet contact_form_errors = {\r\n            names_error : '',\r\n            email_error : '',\r\n            cell_error : '',\r\n            subject_error : '',\r\n            message_error : '',\r\n\r\n};\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact\",data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React,{Fragment} from 'react'\r\nimport './Contact.css';\r\nexport default function ContactDetails () {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-info\"> </i> Contact Details\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <div className=\"small-box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-building\"> </i> Business Details\r\n                </strong>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Name : </strong>\r\n                    <em>Weq Trading &amp; Projects</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Registration Number : </strong>\r\n                    <em>2010/158059/23</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Address : </strong>\r\n                    <em>80 Shepstone Street, Whittlesea,5360</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong> Business Fax : </strong>\r\n                    <em>\r\n                      <a href=\"mailto:0408421225\">040-842-1225</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                    <em>\r\n                      <a href=\"mailto:0865182222@faxfx.net\">086-518-2222</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Contact Person : </strong>\r\n                        <em>Nsubuga Charles Heinnrich</em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:O781111869\">O78-111-1869 </a>\r\n                        </em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:0838630886\">083-863-0886 </a>\r\n                        </em>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <iframe\r\n                  src=\"https://www.google.com/maps/embed?pb=!1m22!1m11!1m3!1d1031.541083124503!2d26.82210571473625!3d-32.17379083467601!2m2!1f0!2f0!3m2!1i1024!2i768!4f13.1!4m8!3e0!4m5!1s0x1e62350d78cff7e3%3A0x6d7e84c719fdcd2b!2sWeq+Trading+And+Projects!3m2!1d-32.1735701!2d26.8231617!4m0!5e1!3m2!1sen!2sza!4v1564836874505!5m2!1sen!2sza\"\r\n                  className=\"map-style\"\r\n                  height=\"460\"\r\n                  width=\"600\"\r\n                  allowfullscreen\r\n                  frameBorder=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>      \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\nimport ContactDetails from './ContactDetails';\r\n\r\nexport default function Contact() {\r\n\tconst[display,setDisplay] = useState('contact-details');\r\n\r\n\t\r\n\r\n\r\n\tlet ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\tlet SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n\t}\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"contactform\"\r\n              onClick={e => setDisplay(\"contact-form\")}\r\n            >\r\n              <i className=\"fa fa-envelope\"> </i>\r\n              Contact Form\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"contactdetails\"\r\n              onClick={e => setDisplay(\"contact-details\")}\r\n            >\r\n              <i className=\"fa fa-info\"> </i>\r\n              Contact Details\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {display === \"contact-form\" ? <ThisContactForm /> : \"\"}\r\n        {display === \"contact-details\" ? <ContactDetails /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","\r\n\r\n\r\nexport const user_init = {\r\n    username : '',\r\n    password : ''\r\n};\r\n\r\nexport const user_errors_init = {\r\n    username_error : '',\r\n    password_error : ''\r\n};\r\n\r\n\r\nexport const inline_init = {\r\n    message: '', \r\n    message_type:'info'\r\n};\r\n\r\n\r\nexport const extended_user = {\r\n    uid : '',\r\n    names: '',\r\n    surname: '',\r\n    cell: '',\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n    is_admin : false\r\n};\r\n\r\nexport const extended_user_error = {\r\n    names_error: \"\",\r\n    surname_error: \"\",\r\n    cell_error: \"\",\r\n    email_error: \"\",\r\n    password_error: \"\",\r\n    repeatpassword_error: \"\"\r\n\r\n};","import React from 'react'\r\n\r\nfunction Input({\r\n        type,\r\n        placeholder,\r\n        name,\r\n        className,\r\n        onChange\r\n    },ref){\r\n  return (\r\n      <input \r\n        ref={ref}\r\n        type={type} \r\n        className={className} \r\n        name={name} \r\n        placeholder={placeholder}\r\n        onChange = {onChange}        \r\n        />\r\n        )\r\n}\r\n\r\nconst forwadedInput = React.forwardRef(Input);\r\n\r\nexport default forwadedInput;\r\n\r\n","import React, { Fragment, useEffect, useContext, useRef,useState } from \"react\";\r\nimport { Link,Redirect ,navigate} from \"react-router-dom\";\r\nimport { routes } from \"../../../constants\";\r\nimport {user_init,user_errors_init, inline_init} from '../auth-constants';\r\n\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport Input from '../../Input/Input';\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport { Utils } from \"../../../utilities\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nexport default function Login() {\r\n\r\n  const [values,setValues] = useState(user_init);\r\n  const [errors,setErrors] = useState(user_errors_init);\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n  \tconst usernameRef = useRef(null);\r\n  \tconst passwordRef = useRef(null);\r\n  \tconst submitRef = useRef(null);\r\n\r\n  \tconst handleChange = e => {\r\n        setValues({...values,[e.target.name]:e.target.value})\r\n    };\r\n    \r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n      const check_username = () => {\r\n        if(Utils.validateEmail(values.username) === false){\r\n            setErrors({...errors, username_error: 'invalid username'});\r\n            return true;\r\n        }\r\n          return false;      \r\n      };\r\n\r\n      const check_password = () => {\r\n        if(Utils.isEmpty(values.password)){\r\n          setErrors({...errors,password_error:'password field cannot be empty'});\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const do_check = () => {\r\n        check_username() ? isError = true : isError = isError;\r\n        check_password() ? isError = true : isError = isError;\r\n\r\n        return isError\r\n      };\r\n      return await do_check()\r\n    };\r\n\r\n  useEffect(() => {\r\n\t  usernameRef.current.focus();  \r\n      \r\n  }, []);\r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      console.log(\"The big loggin context\",context);\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const {\r\n        username,password\r\n      } = values;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login User\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <Link to={routes.forget_password_page}>\r\n                  <button type=\"button\" className=\"btn btn-box-tool\">\r\n                    <strong>\r\n                      <i className=\"fa fa-unlock\"> </i> Forget Password\r\n                    </strong>\r\n                  </button>\r\n                </Link>\r\n                <Link to={routes.signup_page}>\r\n                  <button type=\"button\" className=\"btn btn-box-tool\">\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Subscribe\r\n                    </strong>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={e => doLogin(username, password)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    placeholder=\"Login Name\"\r\n                    ref={usernameRef}\r\n                    value={values.username}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.username_error ? (\r\n                    <InlineError message={errors.username_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    ref={passwordRef}\r\n                    value={values.password}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                  {errors.password_error ? (\r\n                    <InlineError message={errors.password_error} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    ref={submitRef}\r\n                    onClick={e =>\r\n                      checkErrors(e).then(isError => {\r\n                        isError\r\n                          ? setInline({\r\n                              message: \"error processing login \",\r\n                              message_type: \"error\"\r\n                            })\r\n                          : doLogin(username, password);\r\n                      })\r\n                    }\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Login\r\n                    </strong>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning btn-lg\"\r\n                    onClick={e => {\r\n                      setValues(user_init);\r\n                      setErrors(user_errors_init);\r\n                      setInline(inline_init);\r\n                    }}\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-eraser\"> </i> Reset\r\n                    </strong>\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  {inline.message ? (\r\n                    <InlineMessage\r\n                      message={inline.message}\r\n                      message_type={inline.message_type}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Redirect,navigate } from \"react-router-dom\";\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function Logout() {\r\n    return (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n          const {\r\n              doLogout\r\n          } = context;\r\n          return (\r\n            <Fragment>\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-sign-out\"> </i> Logout\r\n                  </h3>\r\n\r\n                  <div className=\"box-tools\">\r\n                    <Link to={routes.home_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-home\"> </i>{' '} Home\r\n                      </button>\r\n                    </Link>\r\n                    <Link to={routes.login_page}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-box-tool btn-outline-dark\"\r\n                      >\r\n                        <i className=\"fa fa-sign-in\"> </i>{' '} Login\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      name=\"logout\"\r\n                      onClick={e => {\r\n                        doLogout();\r\n                        //navigate(\"/\", true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-sign-out\"> </i>{\" \"}\r\n                      <strong> Logout </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Fragment>\r\n          );\r\n      }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport * as routes from \"../../constants/routes\";\r\n\r\nexport const addUser =async (sent_user) => {\r\n    let results = {status : false,payload:{},error : {}}\r\n\r\n    await axios.post(routes.api_user_endpoint,sent_user).then(results => {\r\n        if (results.status === 200){\r\n            return results.data\r\n        }else{\r\n            throw new Error('there was an error saving user');\r\n        }\r\n    }).then(user => {\r\n        results.status = true;\r\n        results.payload = {...user};\r\n        results.error = {};\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error}\r\n\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const updateUser = async (sent_user) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.put(routes.api_user_endpoint, sent_user).then(results => {\r\n        if (results.status === 200) {\r\n          return results.data;\r\n        } else {\r\n          throw new Error(\"there was an error saving user\");\r\n        }\r\n      }).then(user => {\r\n        results.status = true;\r\n        results.payload = { ...user };\r\n        results.error = {};\r\n      }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = { ...error };\r\n      });\r\n\r\n    return results;    \r\n};\r\n\r\n\r\nexport const fetchUser = async (uid) => {\r\n    let results = { status: false, payload: {}, error: {} };\r\n\r\n    await axios.get(routes.api_user_endpoint + `/${uid}`).then(results => {\r\n        if(results.status === 200){\r\n            return results.data;\r\n        }else{\r\n            throw new Error('error fetching user');\r\n        }\r\n    }).then(user_details => {\r\n        results.status = true;\r\n        results.payload = {...user_details};\r\n        results.error = {}\r\n    }).catch(error => {\r\n        results.status = false;\r\n        results.payload = {};\r\n        results.error = {...error};\r\n    });\r\n\r\n    return results;\r\n}","\r\nimport React, {Fragment,useState,useContext,useEffect} from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { auth } from '../../../firebase';\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { extended_user, extended_user_error, inline_init, user_init, user_errors_init } from '../auth-constants';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\nimport { Utils } from '../../../utilities';\r\nimport * as apiRequests from '../auth-api';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [user,setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState(inline_init);\r\n    const { doLogin, user_account_state} = useContext(UserAccountContext);\r\n\r\n    const createUser = async e => {\r\n            await auth.doCreateUserWithEmailAndPassword(user.email,user.password).then(authUser => {\r\n                console.log(authUser);\r\n                let sent_user = {...user};\r\n                sent_user.uid = user_account_state.user_account.uid;\r\n                sent_user = JSON.stringify(sent_user);\r\n\r\n                apiRequests.addUser(sent_user).then(result => {\r\n                    if (result.status){\r\n                        setInline({message:'user successfully created',message_type:'info'});\r\n                        setUser(result.payload);\r\n                    }else{\r\n                        setInline({message:'user not created successfully try adding user details later',message_type:'error'});\r\n                    }\r\n                }).catch(error => {\r\n                    setInline({message:error.message,message_type:'error'});\r\n                });\r\n\r\n            }).catch(error => {\r\n                setInline({message:error.message,message_type:'error'});\r\n            });\r\n\r\n            return true;\r\n    };\r\n\r\n    // names: \"\",\r\n    // surname: \"\",\r\n    // cell: \"\",\r\n    // email: \"\",\r\n    // password: \"\",\r\n    // repeatpassword: \"\"\r\n\r\n\r\n    const checkErrors = async e => {\r\n        let isError = false;\r\n\r\n        const check_names = () => {\r\n            if(Utils.isEmpty(user.names)){\r\n                setErrors({...errors,names_error : 'names field cannot be empty'});\r\n                return true;\r\n            };\r\n            return false;\r\n        }\r\n        const check_surname = () => {\r\n            if(Utils.isEmpty(user.surname)){\r\n                setErrors({...errors,surname_error: 'surname field cannot be empty'})\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_cell = () => {\r\n            if(Utils.isCell(user.cell) === false){\r\n                setErrors({...errors,cell_error:'cell field is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_email = () => {\r\n            if(Utils.validateEmail(user.email) === false){\r\n                setErrors({...errors,email_error:'email address is invalid'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password = () => {\r\n            if(Utils.isEmpty(user.password)){\r\n                setErrors({...errors, password_error : 'password field cannot be empty'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_password_two = () => {\r\n            if (user.password !== user.repeatpassword){\r\n                setErrors({...errors, repeatpassword_error:'passwords do not match'});\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_names() ? isError = true : isError = isError;\r\n            check_surname() ? isError = true : isError = isError;\r\n            check_cell() ? isError = true : isError = isError;\r\n            check_email() ? isError = true : isError = isError;\r\n            check_password() ? isError = true : isError = isError;\r\n            check_password_two() ? isError = true : isError = isError;\r\n\r\n            return isError\r\n        };\r\n\r\n        return await do_check();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-warning\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-sign-out\"> </i> Sign Up\r\n              </strong>\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <Link to={routes.login_page}>\r\n                <button type=\"button\" className=\"btn btn-box-tool btn-lg\">\r\n                  <strong>\r\n                    <i className=\"fa fa-sign-in\"> </i> Login{\" \"}\r\n                  </strong>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        \r\n        \r\n            <form className='form-horizontal col-md-6'>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='names'\r\n                        placeholder='Names...'\r\n                        value={user.names}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.names_error ? <InlineError message={errors.names_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='surname'\r\n                        placeholder='Surname...'\r\n                        value={user.surname}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.surname_error ? <InlineError message={errors.surname_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='cell'\r\n                        placeholder='Cell...'\r\n                        value={user.cell}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='email'\r\n                        placeholder='Email...'\r\n                        value={user.email}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n\r\n                    />\r\n                    {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='password'\r\n                        placeholder='Password...'\r\n                        value={user.password}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.password_error ? <InlineError message={errors.password_error} /> : ''}\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        name='repeatpassword'\r\n                        placeholder='Repeat Password...'\r\n                        value={user.repeatpassword}\r\n                        onChange={e => setUser({...user,[e.target.name]:e.target.value})}\r\n                    />\r\n                    {errors.repeatpassword_error ? <InlineError message={errors.repeatpassword_error} /> : ''}\r\n                </div>\r\n                <div className='form-group'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-success btn-lg'\r\n                        name='signup'\r\n                        onClick={e => checkErrors(e).then(isError => {\r\n                            isError ?\r\n                                setInline({message: 'error processing form',message_type:'error'})\r\n                            :   createUser(e).then(result => {\r\n\r\n                            });\r\n                        })}\r\n                    >\r\n                        <i className='fa fa-sign-in'> </i>{' '}\r\n                        Sign Up\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-warning btn-lg'\r\n                        name='reset'\r\n                        onClick={e => {\r\n                            setUser(extended_user);\r\n                            setErrors(extended_user_error);\r\n                            setInline(inline_init);\r\n                        }}\r\n                    >\r\n                        <i className='fa fa-eraser'> </i>{' '}\r\n                        Reset\r\n                    </button>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default SignUp","import React, { Fragment,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function SideBar (){\r\n\t\r\n\tlet onSearch = e => {    \r\n\t\te.preventDefault();\r\n\t\tconsole.log('Searching site...');\r\n\t\t// Remember to clear search field      \r\n\t};\r\n\t\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const userSignedInText = user_account_state.user_account\r\n        .uid\r\n        ? `<p id=\"strSideUserNameID\"><Link to={routes.logout_page}> Logout</Link></p>`\r\n        : `<p id=\"strSideUserNameID\"><Link to={routes.login_page}> Login</Link></p>`;\r\n\r\n    \r\n      return (\r\n        <Fragment>\r\n          <aside className=\"main-sidebar\">\r\n            <section className=\"sidebar\">\r\n              <div className=\"user-panel\">\r\n                <div className=\"pull-left image\">\r\n                  <img\r\n                    src=\"/static/dist/img/sms.jpeg\"\r\n                    id=\"strSideUserImageID\"\r\n                    className=\"img-circle\"\r\n                    alt=\"Weq-Trading\"\r\n                  />\r\n                </div>\r\n                <div className=\"pull-left info\">\r\n                  {user_account_state.user_account.uid ? (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.logout_page}> Logout</Link>\r\n                    </p>\r\n                  ) : (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.login_page}> Login</Link>\r\n                    </p>\r\n                  )\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <form\r\n                onSubmit={e => onSearch(e)}\r\n                method=\"get\"\r\n                className=\"sidebar-form\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"input-group-btn\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      name=\"search\"\r\n                      id=\"search-btn\"\r\n                      className=\"btn btn-flat\"\r\n                    >\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                <MenuItems />\r\n              </ul>\r\n            </section>\r\n          </aside>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\nimport { inline_init } from '../auth-constants';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\nexport default function Forget(){\r\n  const [email,setEmail] = useState({email:''});\r\n  const [errors,setErrors] = useState({email_error : ''});\r\n  const [inline,setInline] = useState(inline_init);\r\n\r\n\r\n\tfunction sendRecoveryEmail  (e) {\r\n\t\te.preventDefault();\r\n    console.log('Sending Recovery Email');      \r\n    setInline({message:'sending recovery email',message_type:'info'});\r\n    // TODO create a backend firebase function to send recovery email and trigger through https\r\n    // actually call a firebase function that sends a recovery email from firebase\r\n\t}\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            {\" \"}\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-key\"> </i> Forget Password\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <Link to={routes.login_page}>\r\n              <button type=\"button\" className=\"btn btn-box-tool\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login\r\n                </strong>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <form\r\n            className=\"form-horizontal\"\r\n            onSubmit={e => sendRecoveryEmail(e)}\r\n          >\r\n            <div className=\"form-group\">\r\n              <span>\r\n                Enter your username so what we can send you a password recovery\r\n                message\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n\t\t\t  <input \r\n\t\t\t\t  type=\"email\" \r\n\t\t\t\t  className=\"form-control\" \r\n\t\t\t\t  name=\"email\" \r\n\t\t\t\t  value={email.email}\r\n\t\t\t\t  onChange={e => setEmail({[e.target.name]:e.target.value})}\t\t\t\t  \r\n\t\t\t\t  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-lg\"\r\n                onClick={e => sendRecoveryEmail(e)}\r\n              >\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-unlock-alt\"> </i> Recover\r\n                </strong>\r\n              </button>\r\n\t\t\t\t<button \r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\tonClick={e =>{\r\n            setErrors({email_error : ''});\r\n            setEmail({ email: \"\" });\r\n            setInline(inline_init);\r\n          }  }\r\n\t\t\t\t>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-eraser\"> </i> Reset{\" \"}\r\n                  </strong>\r\n                </button>              \r\n            </div>\r\n            <div className='form-group'>\r\n              {inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect,useContext } from \"react\";\r\nimport {\r\n  products_init,\r\n  products_errors_init,\r\n  service_init,\r\n  service_errors_init,\r\n  category_init,\r\n  category_errors_init\r\n} from \"./market-constants\";\r\nimport { firebase } from \"../../firebase\";\r\nimport * as RequestsAPI from \"./api-requests\";\r\nimport axios from \"axios\";\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\n\r\nimport {Utils} from '../../utilities';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nfunction AddProduct() {\r\n  const [product, setProduct] = useState(products_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message : '', message_type:'info'});\r\n  const [errors,setErrors] = useState(products_errors_init)\r\n  const [categories, setCategories] = useState([]);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === product.category_id\r\n      );\r\n\r\n      const uploadTask = firebase.storage\r\n        .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`products/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setProduct({\r\n                ...product,\r\n                product_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n\r\n  };\r\n\r\n  const FileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doSaveProduct = async e => {\r\n    e.preventDefault();\r\n    let product_to_save = Object.assign({}, product);\r\n    product_to_save.uid = user_account_state.user_account.uid;\r\n    console.log(\"Product to Save\", product_to_save);\r\n    product_to_save = JSON.stringify(product_to_save);\r\n    RequestsAPI.saveProduct(product_to_save)\r\n      .then(results => {\r\n        if (results.status) {\r\n          setProduct(results.payload);\r\n          setInline({\r\n            message: \"successfully saved product\",\r\n            message_type: \"info\"\r\n          });\r\n        } else {\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_product_name = () => {\r\n      if(Utils.isEmpty(product.product_name)){\r\n        setErrors({\r\n          ...errors,\r\n          product_name_error : 'product name field cannot be empty'\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_description = () => {\r\n      if(Utils.isEmpty(product.description)){\r\n        setErrors({...errors,description_error : 'product description cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = () => {\r\n      if(Utils.isMoney(product.price)){\r\n        setErrors({...errors,price_error: 'product price is invalid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_art = () => {\r\n      if(Utils.isEmpty(product.product_art)){\r\n        setErrors({...errors,product_art_error : 'product art is not valid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_category_id = () => {\r\n      if(Utils.isEmpty(product.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select main category type'});\r\n      }\r\n    }\r\n\r\n    const do_check_errors = () => {\r\n        check_product_name() ? isError = true : isError = isError;\r\n        check_product_description() ? (isError = true) : (isError = isError);\r\n        check_price() ? (isError = true) : (isError = isError);\r\n        check_product_art() ? (isError = true) : (isError = isError);\r\n        check_category_id() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n    }\r\n\r\n\r\n    return await do_check_errors();     \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let category_type = 'products';\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log('Category results',results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Product</strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"product_name\"\r\n              value={product.product_name}\r\n              placeholder=\"Product Name...\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.product_name_error ? (\r\n              <InlineError message={errors.product_name_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Product Description...\"\r\n              value={product.description}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? (\r\n              <InlineError message={errors.description_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Product Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Product Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={product.price}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? (\r\n              <InlineError message={errors.price_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Product Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"product_art\"\r\n              onChange={e => FileArtChange(e)}\r\n            />\r\n            {errors.product_art_error ? (\r\n              <InlineError message={errors.product_art_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-product-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Product Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={product.product_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-product\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  if (isError) {\r\n                    doSaveProduct(e).then(result => {\r\n                      console.log(\"Product saved\");\r\n                    });\r\n                  } else {\r\n                    setInline({\r\n                      message: \"there was an error processing form\",\r\n                      message_type: \"error\"\r\n                    });\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Product\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setErrors(products_errors_init);\r\n                setInline({ message: \"\", message_type: \"info\" });\r\n                setProduct(products_init);\r\n              }}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddService() {\r\n  const [service, setService] = useState(service_init);\r\n  const [errors,setErrors] = useState(service_errors_init);\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [categories,setCategories] = useState([]);\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === service.category_id\r\n      );\r\n      const uploadTask = firebase.storage\r\n        .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`services/${user_account_state.user_account.uid}/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setService({\r\n                ...service,\r\n                service_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'please fill in the form correctly before you upload service art',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const fileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_service_name = () => {\r\n      if(Utils.isEmpty(service.service_name)){\r\n        setErrors({...errors,service_name_error : 'service name field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_description = e => {\r\n      if(Utils.isEmpty(service.description)){\r\n        setErrors({...errors,description_error : 'service description field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_art = e => {\r\n      if(Utils.isEmpty(service.service_art)){\r\n        setErrors({...errors,service_art_error : 'service art cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = e => {\r\n      \r\n        if(Utils.isMoney(service.price) === false){\r\n          setErrors({...errors,price_error:'invalid service price'});\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const check_service_category = e => {\r\n      if(Utils.isEmpty(service.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select service category'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const do_check =  e => {\r\n      check_service_name() ? isError = true : isError = false;\r\n      check_service_description() ? isError = true : isError = false;\r\n      check_service_art() ? isError = true : isError = false;\r\n      check_price() ? isError = true : isError = false;\r\n      check_service_category() ? isError = true : isError = false;\r\n\r\n      return isError;\r\n      \r\n    } \r\n\r\n\r\n    return await do_check();\r\n    \r\n  }\r\n\r\n\r\n  const addService = async e => {\r\n      let my_service = Object.assign({},service);\r\n      my_service.uid = user_account_state.user_account.uid;\r\n      await RequestsAPI.doAddService(JSON.stringify(my_service)).then(results => {\r\n          if(results.status){\r\n            setService(results.payload);\r\n            setInline({message:'successfully saved service',message_type:'info'});\r\n          }else{\r\n            setInline({message:results.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log(\"Category results\", results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Service</strong>\r\n          </h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"service_name\"\r\n              value={service.service_name}\r\n              placeholder=\"Service Name...\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.service_name_error ? <InlineError message={errors.service_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Service Description...\"\r\n              value={service.description}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Service Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={service.price}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? <InlineError message={errors.price_error} />  : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"service_art\"\r\n              onChange={e => fileArtChange(e)}\r\n            />\r\n            {errors.service_art_error ? <InlineError message={errors.service_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              onClick={e => doUpload(e).then(results => {console.log(results)})}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Service Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={\r\n                  service.service_art ||\r\n                  \"https://via.placeholder.com/300/09f/fff.png\"\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button \r\n            type='button'\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={e => checkErrors(e).then(isError => {\r\n              isError ?\r\n                setInline({message:'there was an error processing form'})\r\n              : addService(e).then(results => {\r\n                    console.log(results);\r\n                    setInline({message:''})\r\n                }).catch(error => {\r\n                  setInline({message:error.message,message_type:'error'});\r\n                });\r\n            })}\r\n            \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Service\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setService(service_init);\r\n                setErrors(service_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}>\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddCategories() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(category_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [errors, setErrors] = useState(category_errors_init);\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n  const CategoryArtFileChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n\r\n    const uploadTask = firebase.storage.ref(`categories/${user_account_state.user_account.uid}/${image.name}`).put(image);\r\n        await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n            //progress\r\n            const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setUploaded({\r\n            ...uploaded,\r\n            progress\r\n            });\r\n        },\r\n        error => {\r\n            //error function\r\n            console.log(error.message);\r\n        },\r\n        () => {\r\n            // complete function\r\n            firebase.storage\r\n            .ref(\"categories\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                console.log(url);\r\n                setCategory({\r\n                ...category,\r\n                category_art: url\r\n                });\r\n            });\r\n      }\r\n    );\r\n  };\r\n\r\n  const doAddCategory = async e => {\r\n        // e.preventDefault();\r\n        let my_category = Object.assign({},category);\r\n        my_category.uid = user_account_state.user_account.uid;\r\n        my_category = JSON.stringify(my_category);\r\n        console.log(\"CATEGORY\", my_category);\r\n        RequestsAPI.saveCategory(my_category).then(results => {\r\n            setCategory(results);\r\n            setCategories({ categories: categories.push(results) });\r\n            setInline({ message: \"successfully created new category\" });\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n  };\r\n\r\n  const checkErrors = async e => {\r\n        // e.preventDefault();\r\n        let isError = false;\r\n        const check_category_name = () => {\r\n            if(Utils.isEmpty(category.category_name)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_name_error: 'category name cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_type = () => {    \r\n            if(Utils.isEmpty(category.category_type)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_type_error : 'Please select category type'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_sub_category = () => {\r\n            if(Utils.isEmpty(category.sub_category)){\r\n                setErrors({\r\n                    ...errors,\r\n                    sub_category_error: 'sub category cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_description = () => {\r\n            if(Utils.isEmpty(category.description)){\r\n                setErrors({\r\n                    ...errors,\r\n                    description_error : 'description cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_notes = () => {\r\n            if(Utils.isEmpty(category.notes)){\r\n                setErrors({\r\n                    ...errors,\r\n                    notes_error : 'Notes cannot be empty'\r\n                });\r\n                return true\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_art = () => {\r\n            if(Utils.isEmpty(category.category_art)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_art_error : 'Category Art cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_category_name() ? isError = true : isError = isError;\r\n            check_category_type() ? isError = true : isError = isError;\r\n            check_sub_category() ? isError = true : isError = isError;\r\n            check_description() ? isError = true : isError = isError;\r\n            check_notes() ? isError = true : isError = isError;\r\n            check_category_art() ? isError = true : isError = isError;\r\n\r\n            return isError;\r\n        }\r\n\r\n        return await do_check();\r\n  };\r\n\r\n\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-bookmark-o\"></i> Add Categories\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Category Type </label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_type\"\r\n              value={category.category_type}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }>\r\n                <option value={null}>Select Product or Service Category Type</option>\r\n                <option value=\"products\">Products</option>\r\n                <option value=\"services\">Services</option>\r\n            </select>\r\n            {errors.category_type_error ? <InlineError message={errors.category_type_error} /> : ''}\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <input \r\n                type='text' \r\n                className='form-control'\r\n                name='sub_category'\r\n                placeholder='Sub Category...'\r\n                value={category.sub_category}\r\n                onChange={e =>setCategory({ ...category, [e.target.name]: e.target.value })}\r\n            />\r\n            {errors.sub_category_error ? <InlineError message={errors.sub_category_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_name\"\r\n              placeholder=\"Category Name...\"\r\n              value={category.category_name}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.category_name_error ? <InlineError message={errors.category_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Description...\"\r\n              value={category.description}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"notes\"\r\n              placeholder=\"Notes...\"\r\n              value={category.notes}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.notes_error ? <InlineError message={errors.notes_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Category Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={e => CategoryArtFileChange(e)}\r\n            />\r\n            {errors.category_art_error ? <InlineError message={errors.category_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-category-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Category Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img                \r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={category.category_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-category\"\r\n              onClick={e => checkErrors(e).then(isError => {\r\n                  isError ? setInline({message: 'there was an error processing form ', message_type:'error'}) \r\n                    : doAddCategory(e)\r\n              }) }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Save Category\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              name=\"reset-category\"\r\n              onClick = {e => {\r\n                setCategory(category_init);\r\n                setErrors(category_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}              \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className='form-group'>\r\n              { inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default function MyMarket() {\r\n  const [display, setDisplay] = useState(\"add-categories\");\r\n  const [product, setProduct] = useState(products_init);\r\n  const [service, setService] = useState(service_init);\r\n  \r\n  let my_header;\r\n  Utils.isMobile()\r\n    ? (my_header = () => (\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n              Services\r\n            </strong>\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-dark\"\r\n              name=\"add-categories\"\r\n              onClick={e => setDisplay(e.target.name)}\r\n            >\r\n              <i className=\"fa fa-bookmark\"> </i> Categories\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-dark\"\r\n              name=\"add-products\"\r\n              onClick={e => setDisplay(e.target.name)}\r\n            >\r\n              <i className=\"fa fa-shopping-bag\"> </i> Products\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-dark\"\r\n              name=\"add-services\"\r\n              onClick={e => setDisplay(e.target.name)}\r\n            >\r\n              <i className=\"fa fa-shopping-cart\"> </i> Services\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))\r\n    : (my_header = () => (\r\n        <Fragment>\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n                Services\r\n              </strong>\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"add-categories\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-bookmark\"> </i> Add Categories\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"add-products\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-shopping-bag\"> </i> Add Products\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"add-services\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-shopping-cart\"> </i> Add Services\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ));\r\n   \r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        {my_header()}  \r\n        {display === \"add-products\" ? <AddProduct /> : \"\"}\r\n        {display === \"add-services\" ? <AddService /> : \"\"}\r\n        {display === \"add-categories\" ? <AddCategories /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment,useContext,useState,useEffect } from 'react'\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport { routes } from \"../../constants\";\r\nimport axios from 'axios';\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n  \r\n    const[admins,setAdmins] = useState([]);\r\n    const[present_user,setPresentUser] = useState({\r\n      uid : '',\r\n      is_admin: false\r\n    })\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n\r\n    const{user_account_state} = useContext(UserAccountContext);\r\n\r\n    useEffect(() => {\r\n      const fetchPresentUser = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n        await axios.get(routes.api_user_endpoint + `/${uid}`).then(response => {\r\n          if (response.status === 200){\r\n            return response.data\r\n          }\r\n        }).then(present_user => {\r\n          setPresentUser(present_user);          \r\n        }).catch(error => {\r\n          setInline({message:'you are not authorized to access our dashboard'});\r\n        });\r\n      }\r\n      return () => {\r\n        setPresentUser({uid:'',is_admin:false });\r\n      };\r\n    }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {present_user.is_admin ? (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-dashboard\"> </i> Dashboard{\" \"}\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <button className=\"btn btn-box-tool\">\r\n                  {\" \"}\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-callout-info\"> </i> Add Folder{\" \"}\r\n                  </strong>{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"box box-danger\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-dashboard\"> </i> Dashboard{\" \"}\r\n                </strong>\r\n                <hr />\r\n              </h3>\r\n              <div className=\"box box-warning\">\r\n                <span className=\"error-content\">\r\n                  <em>you are not authorized to access our dashboard</em>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","import Axios from 'axios';\r\n\r\nfunction return_date(){\r\n\tconst now = new Date();\r\n\tconst this_year = now.getFullYear();\r\n\tconst this_month = now.getMonth();\r\n\tconst this_day = now.getDate();\r\n\treturn this_year + '-' + this_month + '-' + this_day;\r\n}\r\n\r\nfunction return_page_size(){\r\n\t// consider checking the backend for page size\r\n\treturn 20;\r\n}\r\n\r\nlet articles_api = {\r\n\tapiKey : '41e896a0a1c94b61903408fae1a49471',\r\n\tthis_date : return_date(),\r\n\tthis_pagesize :return_page_size(),\r\n\tentertainment_news: 'https://newsapi.org/v2/top-headlines?country=za&category=entertainment&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n\tsports_news: 'https://newsapi.org/v2/top-headlines?country=za&category=sports&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    business_news: 'https://newsapi.org/v2/top-headlines?country=za&category=business&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    tech_news: 'https://newsapi.org/v2/top-headlines?country=za&category=technology&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    science_news: 'https://newsapi.org/v2/top-headlines?country=za&category=science&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    health_news: 'https://newsapi.org/v2/top-headlines?country=za&category=health&apiKey=41e896a0a1c94b61903408fae1a49471'\r\n};\r\nexport async function get_blog_articles(category) {\t\r\n\tlet results = '';\r\n\tlet apiRequest = '';\r\n    console.log('CATEGORY',category);\t\r\n\t\tswitch(category){\r\n            case 'entertainment': apiRequest = articles_api.entertainment_news;break;\r\n            case 'sports' : apiRequest = articles_api.sports_news;break;\r\n            case 'business' : apiRequest = articles_api.business_news;break;\r\n            case 'tech' : apiRequest = articles_api.tech_news;break;\r\n            case 'science': apiRequest = articles_api.science_news;break;\r\n            case 'health' : apiRequest = articles_api.health_news;break;\r\n            default: apiRequest = articles_api.entertainment_news;break;        \r\n        }\r\n        \r\n\tawait Axios.get(apiRequest).then(result => {\r\n\t\tif (result.status === 200) {\r\n\t\t\treturn result.data;\r\n\t\t} else {\r\n\t\t\tthrow new Error('There was an error fetching articles');\r\n\t\t}\r\n\t}).then(articles => {\r\n\t\tresults = articles;\r\n\t}).catch(error => {\r\n\t\tconsole.log(error);\r\n\t});\r\n\tconsole.log('RESULTS : ', results);\r\n\treturn results.articles;\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport './Blog.css';\r\nimport {useForceUpdate} from '../hooks/forceUpdate';\r\nimport {get_blog_articles} from './articles';\r\nlet blog_posts = '';\r\n\r\n\r\nfunction BlogPost({ post_data }) {\r\n\tconst [post, setPost] = useState({});\r\n\r\n\tlet article = post_data;\r\n\tconsole.log('Articles',article);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body with-border\">\r\n\t\t\t\t<div className=\"box box-header with-border\">\r\n\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t<h2 className=\"box-title\">{article.title}</h2>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t<img src={article.urlToImage} className=\"pola-image\" />\r\n\t\t\t\t\t<div className=\"polatext\">{article.description}</div>\r\n\t\t\t\t\t<div className=\"box box-footer with-border\">\r\n\t\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{article.source.name} - {article.author}{' '}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-primary'\r\n\t\t\t\t\t\t\tonClick={e => {}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-file-pdf-o'> </i>{' '}\r\n              Read more...\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default function Blog() {\r\n\tconst[category,setCategory] = useState('entertainment');\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst forceUpdate = useForceUpdate();\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tlet blog_posts = await get_blog_articles(category);\t\t\t\r\n\t\t\tsetPosts(blog_posts);\r\n\t\t}\r\n\t\tfetchData();    \r\n\t\tforceUpdate();\r\n\t\tconsole.log('Force update called');\r\n\r\n\t}, [category]);\r\n  \r\n  const title = `${category[0].toUpperCase()}${category.slice(1)} News`;\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-file-text\"> </i> Blog{\" \"}\r\n            </strong>\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"pages\"\r\n              onClick={() => setCategory(\"entertainment\")}\r\n            >\r\n              <i className=\"fa fa-folder\"> </i> Entertainment{\" \"}\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"posts\"\r\n              onClick={() => setCategory(\"sports\")}\r\n            >\r\n              <i className=\"fa fa-folder\"> </i> Sports{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"categories\"\r\n              onClick={() => setCategory(\"business\")}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-folder\"> </i> Business{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"categories\"\r\n              onClick={() => setCategory(\"tech\")}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-folder\"> </i> Tech{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"categories\"\r\n              onClick={() => setCategory(\"science\")}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-folder\"> </i> Science{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className='btn btn-box-tool'\r\n              name='categories'\r\n              onClick={() => setCategory(\"health\")}\r\n            >{\" \"} <i className='fa fa-folder'> </i> Health\r\n\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-files-o\"> </i> {title}{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          {posts.map((post, index) => {\r\n            return <BlogPost post_data={post} key={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport function useForceUpdate() {\r\n  const [, setTick] = useState(0);\r\n  const update = () => {\r\n    setTick(tick => tick + 1);\r\n  };\r\n  return update;\r\n}\r\n","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport Switch from 'react-switch';\r\nimport {extended_user, extended_user_error} from '../Auth/auth-constants';\r\nimport * as apiRequests from '../Auth/auth-api';\r\n\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nfunction Verifications({ user_account, doSendEmailVerification }) {\r\n  const [verifications, setVerifications] = useState({\r\n    use_onetime_pin: false,\r\n    cell: user_account.phoneNumber,\r\n    account_verified: user_account.emailVerified\r\n  });\r\n\r\n  let toggleVerifications = e => {\r\n    setVerifications({\r\n      use_onetime_pin: !verifications.use_onetime_pin,\r\n      cell: verifications.cell,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n\r\n  let OnChangeHandler = e => {\r\n    setVerifications({\r\n      use_onetime_pin: verifications.use_onetime_pin,\r\n      cell: e.target.value,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n  let UpdateVerifications = e => {\r\n    console.log(\"Updating verifications\");\r\n    //TODO- this means that i have to actually send a verification\r\n    //sms to the old number and then to the new number\r\n  };\r\n\r\n  let onAccountVerify = e => {\r\n    console.log(\"on Account verifications\");\r\n    //Send verification email from firebase\r\n    doSendEmailVerification();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <small>\r\n                <i className=\"fa fa-lock\"> </i>\r\n                Verifications &amp; Security Settings\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">Account Verification Status</h3>\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        <Switch\r\n                          name=\"account-verified\"\r\n                          checked={verifications.account_verified}\r\n                          onChange={e => onAccountVerify(e)}\r\n                        />\r\n                        <span className=\"box-title\">\r\n                          {verifications.account_verified\r\n                            ? \"Account is Verified\"\r\n                            : \"Account not verified\"}\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"verification-email\"\r\n                        value={user_account.email}\r\n                      />\r\n                    </div>\r\n                    {verifications.account_verified ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-google\"\r\n                          name=\"sendverificationEmail\"\r\n                          onClick={e => onAccountVerify(e)}\r\n                        >\r\n                          <strong>\r\n                            <i className=\"fa fa-send\"> </i> Send Verification\r\n                            Email\r\n                          </strong>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">One Time Pin</h3>\r\n                </div>\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      <Switch\r\n                        name=\"verifications_active\"\r\n                        onChange={e => toggleVerifications(e)}\r\n                        checked={verifications.use_onetime_pin}\r\n                      />\r\n\r\n                      <span> OTP SMS (ONE TIME PIN) </span>\r\n                      {\"  \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group-addon\">\r\n                      <div className=\"input-group\" />\r\n                      <i className=\"fa fa-mobile-phone\"> </i> Cell\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cell\"\r\n                      onChange={e => OnChangeHandler(e)}\r\n                      value={verifications.cell}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-google btn-lg\"\r\n                      name=\"update-verifications\"\r\n                      onClick={e => UpdateVerifications(e)}\r\n                    >\r\n                      <strong>\r\n                        <i className=\"fa fa-mobile-phone\"> </i> Update\r\n                        Verifications\r\n                      </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AccountSettings(){\r\n\r\n    const[accountSettings,setAccountSettings] = useState({\r\n        account_active: true,\r\n        receive_job_offers:true,\r\n        receive_sms:true,        \r\n        receive_email:true\r\n    });\r\n\r\n    let onToggleSettings = target => {\r\n      console.log(target);\r\n      switch(target){\r\n        case  'account_active':{ \r\n          console.log('Setting account active');\r\n          setAccountSettings(\r\n                {\r\n                  ...accountSettings,\r\n                  account_active: !accountSettings.account_active\r\n                }\r\n              );break;\r\n        }\r\n        \r\n        case 'receive_job_offers':{ \r\n          console.log(\"Setting receive job offers\");\r\n          setAccountSettings({\r\n          ...accountSettings,\r\n          receive_job_offers: !accountSettings.receive_job_offers,\r\n        });break;\r\n        }\r\n        \r\n        case 'receive_sms':{\r\n          console.log('setting receive sms');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_sms: !accountSettings.receive_sms\r\n          });break;\r\n        }\r\n        \r\n        case 'receive_email':{ console.log('setting receive email');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_email: !accountSettings.receive_email\r\n          });break;\r\n        }\r\n    }\r\n    }\r\n\r\n    let UpdateAccountSettings = e => {\r\n      console.log('Updating account settings');\r\n      // store settings in locaStorage\r\n      // save settings in the backend\r\n    }\r\n\r\n    let onLoadAccountSettings = e => {\r\n      console.log('Loading account settings');\r\n      // load settings from backend  -> then\r\n        // save in store\r\n      // if backend load failed the load from store\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <small>\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings{\" \"}\r\n                </small>{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          <div className=\"box-footer\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name='account_active'\r\n                    onChange={e => onToggleSettings(\"account_active\")}\r\n                    checked={accountSettings.account_active}\r\n                  />\r\n\r\n                  <span title={\"Close Account\"}>\r\n                    {\"  \"}\r\n                    <em> Account Status</em>{\" \"}\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_job_offers\"\r\n                    onChange={e => onToggleSettings(\"receive_job_offers\")}\r\n                    checked={accountSettings.receive_job_offers}\r\n                  />\r\n                  <span>Receive Job Offers </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_sms\"\r\n                    onChange={e => onToggleSettings(\"receive_sms\")}\r\n                    checked={accountSettings.receive_sms}\r\n                  />\r\n                  <span>Receive SMS Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_email\"\r\n                    onChange={e => onToggleSettings(\"receive_email\")}\r\n                    checked={accountSettings.receive_email}\r\n                  />\r\n                  <span>Receive Email Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-lg\"\r\n                  name=\"update-account-settings\"\r\n                  onClick={e => UpdateAccountSettings(e)}\r\n                >\r\n                  <strong>\r\n                    <i className=\"fa fa-save\"> </i> Update Account Settings\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nfunction PersonalDetails({user_account}){\r\n    const [user, setUser] = useState(extended_user);\r\n    const [errors,setErrors] = useState(extended_user_error);\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n    const {user_account_state} = useContext(UserAccountContext);\r\n\r\n    let onChangeHandler = e => setUser({...user,[e.target.name]:e.target.value});    \r\n\r\n    let onUpdatePersonalDetails = async e => {\r\n        let sent_user = {...user};\r\n        sent_user.uid = user_account_state.user_account.uid;\r\n        sent_user = JSON.stringify(sent_user)\r\n        console.log('Updating User with ', sent_user);\r\n\r\n        await apiRequests.updateUser(sent_user).then(results => {\r\n          if (results.status){\r\n            setUser(results.payload);\r\n            setInline({message:'successfully update personal details'});\r\n          }else{\r\n            setInline({message:'there was an error updating personal details',message_type:'error'});\r\n          }\r\n        }).catch(error => {\r\n          setInline({message:error.message,message_type:'error'});\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          let uid = user_account_state.user_account.uid;\r\n          await apiRequests.fetchUser(uid).then(results => {\r\n            if(results.status){\r\n              setUser(results.payload);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error.message);\r\n          });\r\n\r\n          return true;\r\n        };\r\n\r\n        fetchAPI().then(results => {\r\n          console.log('Fetch API exected')\r\n        });\r\n\r\n\r\n      return () => {\r\n        setUser(extended_user);\r\n        setInline({message:'',message_type:'info'});\r\n        setErrors(extended_user_error);\r\n      };\r\n    }, [user_account_state])\r\n    return (\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <small>\r\n                {\" \"}\r\n                <i className=\"fa fa-user\"> </i> Personal Details{\" \"}\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer col-lg-8\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"names\"\r\n                placeholder=\"Names...\"\r\n                value={user.names}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"surname\"\r\n                placeholder=\"Surname...\"\r\n                value={user.surname}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"cell\"\r\n                placeholder=\"Cell...\"\r\n                value={user.cell}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Email...\"\r\n                value={user.email}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"update\"\r\n                onClick={e => onUpdatePersonalDetails(e)}\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cloud-upload\"> </i> Update\r\n                </strong>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"cancel\"\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cut\"> </i> Cancel\r\n                </strong>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default function Account (){\r\n    const [display, setDisplay] = useState(\"personaldetails\");\r\n    \r\n    let onSwitchScreen = (e) => {\r\n        setDisplay(e.target.name);\r\n        console.log(display);        \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      console.log(display);\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const { doSendEmailVerification, user_account_state } = context;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Account\r\n                </strong>\r\n              </h3>\r\n              <div className=\"box-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name=\"personaldetails\"\r\n                  onClick={e => onSwitchScreen(e)}\r\n                >\r\n                  <i className=\"fa fa-user\"> </i> Personal Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name=\"verifications\"\r\n                  onClick={e => onSwitchScreen(e)}\r\n                >\r\n                  <i className=\"fa fa-lock\"> </i> Verifications\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name=\"accountsettings\"\r\n                  onClick={e => onSwitchScreen(e)}\r\n                >\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {display === \"personaldetails\" ? (\r\n              <PersonalDetails\r\n                user_account={user_account_state.user_account}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {display === \"accountsettings\" ? <AccountSettings /> : \"\"}\r\n            {display === \"verifications\" ? (\r\n              <Verifications\r\n                user_account={user_account_state.user_account}\r\n                doSendEmailVerification={doSendEmailVerification}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport InlineError from '../../Forms/InlineError';\r\nimport InlineMessage from '../../Forms/InlineMessage';\r\n\r\n\r\nimport {\r\n  physical_address_init,\r\n  physical_address_errors_init,\r\n  contact_details_init,\r\n  contact_details_errors_init,\r\n  products_init,\r\n  service_init,\r\n  cart_init,\r\n  coupon_init\r\n} from \"../market-constants\";\r\n\r\n\r\nimport * as APIRequests from '../api-requests';\r\nimport {firebase} from '../../../firebase';\r\nimport { Utils } from '../../../utilities';\r\n\r\nimport * as settings from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\n\r\nconst BasketItem = ({item}) => {\r\n  console.log('Returning Items',item);\r\n  const[product,setProduct] = useState(products_init);\r\n  const[service,setService] = useState(service_init);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {   \r\n        if (item.item_type === 'products'){\r\n          await APIRequests.fetchProductAPI(item.id_service_product).then(results => {\r\n              setProduct(results);\r\n          });\r\n        }else{\r\n          await APIRequests.fetchServiceAPI(item.id_service_product).then(results => {\r\n              setService(results);\r\n          });\r\n        }\r\n        return true;\r\n    };\r\n    fetchAPI().then(result => {\r\n      console.log(result);\r\n    })\r\n    return () => {\r\n      setProduct(products_init);\r\n      setService(service_init);\r\n    };\r\n  }, [])\r\n    let description = '';\r\n    product.description\r\n      ? (description = product.description)\r\n      : (description = service.description);\r\n    return (\r\n      <tr>\r\n        <td title={description}>\r\n          {\r\n            item.item_type === 'products' ?\r\n              product.product_name : service.service_name\r\n          }\r\n        </td>\r\n        <td>{item.item_type}</td>\r\n        <td>{item.quantity}</td>\r\n        <td>{item.price}</td>\r\n        <td>{item.sub_total}</td>\r\n      </tr>\r\n    );\r\n}\r\n\r\nconst ShoppingBasket = () => {\r\n    const[basket,setBasket] = useState([]);\r\n    const[coupons,setCoupons] = useState(coupon_init);\r\n    const[errors,setErrors] = useState({\r\n      coupon_code_error : ''\r\n    });\r\n    const [cart, setCart] = useState(cart_init);\r\n    const[inline,setInline] = useState({message:'',message_type:'info'});\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n    \r\n    const applyCouponCode = e => {\r\n        /**\r\n         * compile code information from state\r\n         * send coupon to back end\r\n         * backend server must find out if the code there matches \r\n         * the ones in the database, if it does then apply discounts \r\n         * appropriately\r\n         */\r\n        if (coupons.code){\r\n            let coupon = {...coupons};\r\n            try{\r\n                coupon.uid = user_account_state.user_account.uid;\r\n                coupon = JSON.stringify(coupon);\r\n                APIRequests.applyCouponCode(coupon).then(results => {\r\n                  console.log('coupon code results : ', results);\r\n                  if (results.status){\r\n                    // activate the discount only on the total amount\r\n                    // the app will then send the total amount into\r\n                    // the payment record and then save it back to server\r\n                    \r\n                  }else{\r\n                    setInline({message:results.error.message,message_type:'error'});\r\n                    console.log(results.error.message);\r\n                  }\r\n                });\r\n\r\n              }catch(error){\r\n                console.log(error);\r\n                setInline({message:error.message,message_type:'error'});\r\n              }              \r\n            \r\n        }else{\r\n          setErrors({...errors, coupon_code_error : 'coupon code cannot be empty'});\r\n          setInline({message:'error applying coupon code'});\r\n        }\r\n            \r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n      const apiFetch = async () => {\r\n        let uid = user_account_state.user_account.uid;\r\n\r\n        APIRequests.retrieveCart(uid).then(Response => {\r\n          console.log(\"Cart Items :\", Response.cart_items);\r\n          setBasket(Response.cart_items);\r\n          setCart(Response.cart);\r\n        }); \r\n\r\n      };\r\n\r\n      apiFetch().then(results => {\r\n\r\n      });\r\n\r\n      return () => {\r\n        setBasket([]);\r\n      };\r\n    }, []);\r\n\r\n  \r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <i className=\"fa fa-shopping-basket\"> </i> Shopping Basket\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-warning\">\r\n            <div className=\"row\">\r\n              <div className=\"box box-footer col-md-8\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-shopping-cart\"> </i> Shopping Items\r\n                  </h3>\r\n\r\n                  <div className=\"box-tools\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-box-tool btn-outline-danger\"\r\n                      name=\"clear_items\"\r\n                      onClick={e =>\r\n                        APIRequests.deleteCart(\r\n                          firebase.auth.currentUser.uid\r\n                        ).then(results => {\r\n                          console.log(results);\r\n                          if (results.status === true) {\r\n                            setCart(cart_init);\r\n                            setBasket([]);\r\n                            setInline({\r\n                              message: \"cart items cleared\",\r\n                              message_type: \"error\"\r\n                            });\r\n                          }\r\n                        })\r\n                      }\r\n                    >\r\n                      <i className=\"fa fa-eraser\"> </i> Clear Items\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <table className=\"table table-responsive\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Item Name</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Item Type</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Quantity</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Price</em>\r\n                        </strong>\r\n                      </td>\r\n                      <td>\r\n                        <strong>\r\n                          <em>Sub Total</em>\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {basket.length > 0 ? (\r\n                      basket.map((item, index) => {\r\n                        return (<BasketItem item={item} key={index} />: \"\");\r\n                      })\r\n                    ) : (\r\n                      <span className=\"box box-warning\">\r\n                        There are not items in your shopping list\r\n                      </span>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                {inline.message ? (\r\n                  <InlineMessage\r\n                    message={inline.message}\r\n                    message_type={inline.message_type}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <div className=\"box box-footer col-md-4\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Check Out{\" \"}\r\n                  </h3>\r\n                </div>\r\n\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Sub Totals : R {cart.sub_total}0\r\n                  </li>\r\n                  <li className=\"list-group-item\"> Tax : R {cart.tax}.00</li>\r\n                  <li className=\"list-group-item\"> Total : R {cart.total}0</li>\r\n                  <li className=\"list-group-item\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"code\"\r\n                      placeholder=\"Coupon Code...\"\r\n                      value={coupons.code}\r\n                      onChange={e =>\r\n                        setCoupons({\r\n                          ...coupons,\r\n                          [e.target.name]: e.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                    {errors.coupon_code_error ? (\r\n                      <InlineError message={errors.coupon_code_error} />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger margin\"\r\n                      name=\"applycode\"\r\n                      onClick={e => applyCouponCode(e)}\r\n                    >\r\n                      <i className=\"fa fa-money\"> </i> Apply Code\r\n                    </button>\r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-warning'\r\n                      name='reset'\r\n                      onClick={ e => {\r\n                        setCoupons(coupon_init);\r\n                        setErrors({ coupon_code_error: \"\" });\r\n                        setInline({message:'',message_type:'info'});\r\n                        }}\r\n                    ><i className='fa fa-eraser'> </i>{' '}\r\n                    Reset Code\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success margin\"\r\n                      name=\"checkout\"\r\n                      title='Send Invoice and Pay Via EFT or Make a Deposit'\r\n                    >\r\n                      <i className=\"fa fa-shopping-bag\"> </i> Checkout\r\n                    </button>\r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-success'\r\n                      name='paypal'\r\n                      title='Pay Online via your PayPal Account or Credit Card'\r\n                    >\r\n                      <i className='fa fa-paypal'> </i> PayPal\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\nconst PhysicalAddress = () => {\r\n    const [physical,setPhysical] = useState(physical_address_init);\r\n    const [errors,setErrors] = useState(physical_address_errors_init);\r\n    const [inline,setInline] = useState({message: '',message_type:'info'});\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e => {\r\n      let isError = false;\r\n\r\n      const check_deliver_to = () => {\r\n        if(Utils.isEmpty(physical.deliver_to)){\r\n          setErrors({\r\n            ...errors,\r\n            deliver_to_error : 'Deliver to field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_stand = () => {\r\n        if(Utils.isEmpty(physical.stand)){\r\n          setErrors({\r\n            ...errors,\r\n            stand_error : 'stand number field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_street_name = () => {\r\n        if(Utils.isEmpty(physical.street_name)){\r\n          setErrors({\r\n            ...errors,\r\n            street_name_error : 'street name field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_city = () => {\r\n        if(Utils.isEmpty(physical.city)){\r\n          setErrors({\r\n            ...errors,\r\n            city_error : 'city name field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_province = () => {\r\n        if(Utils.isEmpty(physical.province)){\r\n          setErrors({\r\n            ...errors,\r\n            province_error : 'province name field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      const check_country = () => {\r\n        if(Utils.isEmpty(physical.country)){\r\n          setErrors({\r\n            ...errors,\r\n            country_error : 'country field cannot be empty'\r\n          });\r\n          return true;\r\n        };\r\n        return false;\r\n      }\r\n      const check_postal_code = () => {\r\n        if(Utils.isEmpty(physical.postal_code)){\r\n          setErrors({\r\n            ...errors,\r\n            postal_code_error:'postal code error field cannot be empty'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const do_check = () => {\r\n          check_deliver_to() ? isError = true : isError = isError;\r\n          check_stand() ? (isError = true) : (isError = isError);\r\n          check_street_name() ? (isError = true) : (isError = isError);\r\n          check_city() ? (isError = true) : (isError = isError);\r\n          check_province() ? (isError = true) : (isError = isError);\r\n          check_country() ? (isError = true) : (isError = isError);\r\n          check_postal_code() ? (isError = true) : (isError = isError);\r\n\r\n          return isError;\r\n      };\r\n\r\n      return await do_check();\r\n\r\n    };\r\n\r\n    const addPhysicalAddress = async e => {\r\n      \r\n      let physical_address = Object.assign({},physical);\r\n      physical_address.uid = user_account_state.user_account.uid;\r\n      physical_address = JSON.stringify(physical_address);\r\n\r\n      await APIRequests.savePhysicalAddress(physical_address).then(response => {\r\n          if (response.status) {\r\n            setPhysical(response.payload);\r\n            setInline({message: \"successfully saved physical address\",message_type: \"info\"\r\n            });\r\n          } else {\r\n            setInline({\r\n              message: response.error.message,\r\n              message_type: \"error\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setInline({ message: error.message, message_type: \"error\" });\r\n      });\r\n\r\n      return true;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      // load physical address for this user\r\n      const loadPhysicalAddress = async () => {\r\n\r\n        let seed = user_account_state.user_account.uid;        \r\n        let stateKey = settings.settings.localStorageKey + 'physical-address-' + seed + '-';\r\n\r\n        await APIRequests.fetchPhysicalAddress(seed,stateKey).then(physical => {\r\n          setPhysical(physical);\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n        return true;\r\n      };\r\n\r\n      loadPhysicalAddress().then(result => {\r\n        console.log(result);\r\n      });\r\n\r\n      return () => {\r\n        setPhysical(physical_address_init);\r\n        setErrors(physical_address_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, [])\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3\r\n              className=\"box-title\"\r\n              title={\r\n                \"an address where your service should be rendered or where you are located if a service is virtual\"\r\n              }\r\n            >\r\n              <i className=\"fa fa-map-marker\"> </i> Delivery Address\r\n            </h3>\r\n          </div>\r\n\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"deliver_to\"\r\n                placeholder=\"Deliver to, or a place where the service will be rendered...\"\r\n                value={physical.deliver_to}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.deliver_to_error ? <InlineError message={errors.deliver_to_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"stand\"\r\n                placeholder=\"Stand Number ...\"\r\n                value={physical.stand}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.stand_error ? <InlineError message={errors.stand_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"street_name\"\r\n                placeholder=\"Street Name....\"\r\n                value={physical.street_name}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.street_name_error ? <InlineError message={errors.street_name_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"city\"\r\n                placeholder=\"City...\"\r\n                value={physical.city}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.city_error ? <InlineError message={errors.city_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"province\"\r\n                placeholder=\"Province...\"\r\n                value={physical.province}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.province_error ? <InlineError message={errors.province_error} /> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"country\"\r\n                placeholder=\"Country...\"\r\n                value={physical.country}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.country_error ? <InlineError message={errors.country_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"postal_code\"\r\n                placeholder=\"Postal Code...\"\r\n                value={physical.postal_code}\r\n                onChange={e =>\r\n                  setPhysical({ ...physical, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              {errors.postal_code_error ? <InlineError message={errors.postal_code_error} /> : ''}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"save_physical\"\r\n                onClick={e => checkErrors(e).then(isError => {\r\n                  isError ?\r\n                    setInline({message:'there was an error processing form',message_type:'error'})\r\n                  : addPhysicalAddress(e).then(response => {\r\n                    console.log(response);\r\n                  })\r\n                })}\r\n              >\r\n                <i className=\"fa fa-save\"> </i> Add Physical Address\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"reset\"\r\n                onClick={e => {\r\n                  setErrors(physical_address_errors_init);\r\n                  setPhysical(physical_address_init);\r\n                  setInline({message:'',message_type:'info'});\r\n                }}\r\n              >\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </button>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                {\r\n                  inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n                }\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst ContactDetails = () => {\r\n    const [contact,setContact] = useState(contact_details_init);\r\n    const [errors,setErrors] = useState(contact_details_errors_init);\r\n    const [inline,setInline] = useState({message:'',message_type:'info'});\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n\r\n    const checkErrors = async e  => {\r\n      let isError = false;\r\n\r\n      const check_tel = () => {\r\n        if(Utils.isEmpty(contact.tel) === false){\r\n        if(Utils.isTel(contact.tel) === false){\r\n          setErrors({\r\n            ...errors,\r\n            tel_error : 'tel field is invalid'\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      return false;\r\n      }\r\n\r\n      const check_cell = () => {\r\n        if (Utils.isCell(contact.cell === false)) {\r\n          setErrors({\r\n            ...errors,\r\n            cell_error: \"cell field is invalid\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_fax = () => {\r\n        if (Utils.isEmpty(contact.fax) === false){\r\n          if (Utils.isFax(contact.fax === false)) {\r\n            setErrors({\r\n              ...errors,\r\n              fax_error: \"fax field is invalid\"\r\n            });\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_email = () => {\r\n        if (Utils.validateEmail(contact.email) === false) {\r\n          setErrors({\r\n            ...errors,\r\n            email_error: \"email field is invalid\"\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const check_website = () => {\r\n        if(Utils.isEmpty(contact.website) === false){\r\n          if(Utils.isUrl(contact.website) === false){\r\n            setErrors({\r\n              ...errors,\r\n              website_error : 'website address is invalid'\r\n            });\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      const do_check = () => {\r\n        check_tel() ? isError = true : isError = isError;\r\n        check_cell() ? (isError = true) : (isError = isError);\r\n        check_fax() ? (isError = true) : (isError = isError);\r\n        check_email() ? (isError = true) : (isError = isError);\r\n        check_website() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n      }\r\n\r\n      return await do_check();\r\n    }\r\n\r\n    const onAddContactDetails = async e => {\r\n      let contact_details = Object.assign({},contact);\r\n      contact_details.uid = user_account_state.user_account.uid;\r\n      contact_details = JSON.stringify(contact_details);\r\n\r\n      APIRequests.saveContactDetails(contact_details).then(response => {\r\n          if(response.status){\r\n            setContact(response.payload);\r\n            setInline({message:'successfully saved contact details',message_type:'info'});\r\n          }else{\r\n            setInline({message:response.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n          setInline({message: error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n      const fetchContacts = async () => {\r\n        let seed = user_account_state.user_account.uid;\r\n        let stateKey = settings.settings.localStorageKey + 'contact-details-' + seed + '-';\r\n\r\n        await APIRequests.fetchContactDetails(seed, stateKey).then(response => {\r\n          setContact(response);\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n\r\n        return true;\r\n      };\r\n\r\n      fetchContacts().then(result => console.log(result));\r\n\r\n      return () => {\r\n        setContact(contact_details_init);\r\n        setErrors(contact_details_errors_init);\r\n        setInline({message:'',message_type:'info'});\r\n      };\r\n    }, []);\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 className='box-title'>\r\n                        <i className='fa fa-mobile-phone'> </i>{' '}\r\n                        Contact Details\r\n                    </h3>\r\n                </div>\r\n\r\n                <form className='form-group'>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='tel'\r\n                            className='form-control'\r\n                            name='tel'\r\n                            placeholder='Tel...'\r\n                            value={contact.tel}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.tel_error ? <InlineError message={errors.tel_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='tel'\r\n                            className='form-control'\r\n                            name='cell'\r\n                            placeholder='Cell...'\r\n                            value={contact.cell}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.cell_error ? <InlineError message={errors.cell_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='tel'\r\n                            className='form-control'\r\n                            name='fax'\r\n                            placeholder='Fax...'\r\n                            value={contact.fax}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.fax_error ? <InlineError message={errors.fax_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='email'\r\n                            className='form-control'\r\n                            name='email'\r\n                            placeholder='Email...'\r\n                            value={contact.email}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.email_error ? <InlineError message={errors.email_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='url'\r\n                            className='form-control'\r\n                            name='website'\r\n                            placeholder='Website Address...'\r\n                            value={contact.website}\r\n                            onChange={e => setContact({...contact,[e.target.name]:e.target.value})}\r\n                        />\r\n                        {errors.website_error ? <InlineError message={errors.website_error} /> : ''}\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-success btn-lg'\r\n                            name='save-contacts'\r\n                            onClick={e => checkErrors(e).then(isError => {\r\n                              isError ?\r\n                                setInline({message: 'error processing contact form'})\r\n                              : onAddContactDetails(e).then(result => {\r\n                                console.log(result);\r\n                              });\r\n                            })}\r\n                        >\r\n                            <i className='fa fa-save'> </i>{' '}\r\n                            Save Contacts\r\n                        </button>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-warning btn-lg'\r\n                            name='reset'\r\n                            onClick={e => {\r\n                              setContact(contact_details_init);\r\n                              setErrors(contact_details_errors_init);\r\n                              setInline({message:'',message_type:'info'});\r\n                            }}\r\n                        >\r\n                            <i className='fa fa-eraser'> </i>{' '}\r\n                            Reset\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                        {\r\n                          inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n  const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n  return(\r\n    <Fragment>\r\n      <div className='box box-body'>\r\n          <div className='box box-header'>\r\n              <h3 className='box-title'></h3>\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\n\r\nconst CheckOut = () => {\r\n    const [display,setDisplay] = useState('physical_address');\r\n    const { user_account_state, doLogin } = useContext(UserAccountContext);\r\n    return (\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 className='box-title'>\r\n                        <i className='fa fa-shopping-cart'> </i>{' '}\r\n                        Check Out\r\n                    </h3>\r\n                    <div className='box-tools'>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-box-tool btn-outline-dark'\r\n                            name='physical_address'\r\n                            onClick={e => setDisplay(e.target.name)}\r\n                        >\r\n                            <i className='fa fa-map-pin'> </i> {' '}\r\n                            Physical Address\r\n                        </button>\r\n\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-box-tool btn-outline-dark'\r\n                            name='contact_details'\r\n                            onClick={e => setDisplay(e.target.name)}\r\n                        >\r\n                            <i className='fa fa-mobile-phone'> </i> {' '}\r\n                            Contact Details\r\n                        </button>\r\n\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-box-tool btn-outline-dark'\r\n                            name='shopping_basket'\r\n                            onClick={e => setDisplay(e.target.name)}\r\n                        >\r\n                            <i className='fa fa-shopping-basket'> </i> {' '}\r\n                            Shopping Basket\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    display === 'physical_address' ? \r\n                        <PhysicalAddress /> :''\r\n                }\r\n                {\r\n                    display === 'contact_details' ? \r\n                        <ContactDetails /> : ''\r\n                }\r\n                {\r\n                    display === 'shopping_basket' ? \r\n                        <ShoppingBasket /> : ''\r\n                }\r\n            </div>\r\n        </Fragment>                    \r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t// <App />\r\n\t,\r\n    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment,createContext,useReducer,useContext } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport {routes} from '../../constants';\nimport Header from '../Layout/Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Contact from '../Contact/Contact';\nimport Profile from '../Profile/Profile';\nimport Login from '../Auth/Login/Login';\nimport Logout from '../Auth/Logout/Logout';\nimport SignUp from \"../Auth/Signup/Signup\";\nimport SideBar from '../Layout/SideBar/SideBar';\nimport Footer from '../Layout/Footer/Footer';\nimport Forget from '../Auth/Forget/Forget';\nimport Market from '../Market/Market';\nimport MyMarket from '../Market/MyMarket';\n\n\nimport UserAccountContextProvider from '../../context/UserAccount/userAccountContext';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Blog from '../Blog/Blog';\nimport Account from '../Account/Account';\n\nimport CheckOut from '../Market/CheckOut/CheckOut';\n\nexport default function App () {\n\t\n\t\n\treturn (\n    <UserAccountContextProvider>\n      \n      <Fragment>\n        <Router>\n          {/* Header  Component*/}\n          <Header />\n          {/* Sidebar Component */}\n          <SideBar />\n          {/* Body and Main Page Routes */}\n          <div className=\"content-wrapper\">\n            <section className=\"content-header\">\n              <section className=\"content\">\n                <Route exact path={routes.home_page} component={Home} />\n                <Route exact path={routes.about_page} component={About} />\n                <Route exact path={routes.contact_page} component={Contact} />\n                <Route path={routes.login_page} component={Login} />\n                <Route path={routes.logout_page} component={Logout} />\n                <Route path={routes.signup_page} component={SignUp} />\n                <Route\n                  path={routes.forget_password_page}\n                  component={Forget}\n                />\n                <Route path={routes.market_page} component={Market} />\n                <Route path={routes.blog_page} component={Blog} />\n                <Route path={routes.dashboard_page} component={Dashboard} />\n                <Route exact path={routes.admin_page} component={Account} />\n\n                <Route exact path={routes.check_out_page} component={CheckOut} />\n                <Route\n                  path={routes.my_market_products}\n                  component={MyMarket}\n                />\n              </section>\n            </section>\n          </div>\n          {/* Footer Component  */}\n          <Footer />\n        </Router>\n      </Fragment>\n    </UserAccountContextProvider>\n  );\n};\n"],"sourceRoot":""}