{"version":3,"sources":["constants/routes.js","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","actions/userAccountActions/index.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","utilities/index.js","actions/walletActions/index.js","reducers/profileReducers/accountDetailsReducer.js","context/UserAccount/actions.js","context/UserAccount/userAccountContext.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Forms/InlineError.jsx","components/Contact/ThisContactForm.jsx","components/Contact/ContactDetails.jsx","components/Contact/Contact.jsx","components/Input/Input.js","components/Auth/Login/Login.jsx","components/Auth/Logout/Logout.jsx","components/Auth/Signup/Signup.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/market-constants.js","components/Market/Products/Products.jsx","components/Market/Service/Services.jsx","components/Market/api-requests.js","components/Market/Market.jsx","components/Forms/InlineMessage.jsx","components/Market/MyMarket.jsx","components/Dashboard/Dashboard.jsx","components/Blog/articles.js","components/Blog/Blog.jsx","components/hooks/forceUpdate.js","components/Account/Account.jsx","components/Market/CheckOut/CheckOut.jsx","serviceWorker.js","reducers/profileReducers/userContactDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","account_page","blog_page","market_page","admin_page","shopping_basket_page","my_market_products","check_out_page","dashboard_page","api_products_endpoint","api_services_endpoint","api_categories_endpoint","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","auth","storage","contact_details_type","user_contact_id","cell","email","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","names","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","password","emailVerified","phoneVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","account_details_type_error","displayName_error","photoURL_error","email_error","password_error","phoneNumber_error","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","result","user","user_account","wrap","_context","prev","next","createUserWithEmailAndPassword","objectSpread","status","response","error","abrupt","stop","_x","_x2","apply","this","arguments","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","then","catch","err","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","USER_ACCOUNT_ACTIONS","random_seed","now","Date","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","_this","classCallCheck","loadTomemStore","isError","doLoadStateKeys","onLoading","JSON","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","state","mem_store","push","value","saveMemStore","onSaving","noError","setState","stringify","setItem","date","message","getState","seed","stateKey","serializedState","undefined","Error","use_mem_store","stale_period","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","Utils","Utilities","today","url","isUrl","RegExp","test","isEmpty","isProvince","province","province_list","i","validateEmail","validatePassword","validateUsername","isNumber","n","isNaN","isMoney","isCell","isTel","isFax","getAge","dateString","dates","split","d","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","throttle","func","limit","lastFunc","lastRan","context","args","clearTimeout","setTimeout","debounce","delay","inDebounce","isMobile","window","innerWidth","innerHeight","document","documentURI","USER_BANKING_ACTIONS","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","user_account_errors","form_response","response_code","userAccountReducer","actions","type","payload","code","loginUser","user_account_state","dir","logOutUser","SendEmailVerification","UserAccountContext","createContext","UserAccountContextProvider","doLogin","doLogout","onChange","assign","componentWillMount","onAuthStateChanged","react_default","createElement","Provider","props","children","Component","SideBarMenuAuth","className","react_router_dom","to","routes","title","SideBarMenuNonAuth","MenuItems","possibleConstructorReturn","getPrototypeOf","call","user_logged_in","Consumer","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","onClick","SidebarCollapse","Home","About","InlineError","contact_form_details","messageid","subject","message_read","date_read","date_sent","contact_form_errors","names_error","cell_error","subject_error","message_error","ThisContactForm","change","contact_form","target","name","onSubmitContactForm","preventDefault","data","self","assertThisInitialized","axios","post","form_messages","onCheckErrors","form_errors","do_check_errors","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","results","bind","_this2","placeholder","InlineError_InlineError","ContactDetails","href","src","height","width","allowfullscreen","frameBorder","Contact","_useState","useState","_useState2","slicedToArray","display","setDisplay","Contact_ThisContactForm","forwadedInput","React","forwardRef","ref","Login","values","setValues","usernameRef","useRef","passwordRef","submitRef","handleChange","_e$target","defineProperty","useEffect","current","focus","onSubmit","Input_Input","Logout","Initial_State","passwordOne","passwordTwo","byPropKey","propertyName","SignUpForm","event","_this$state","history","authUser","_this$state2","isInvalid","disabled","SignUpPage","Signup_SignUpForm","ShowLogin","SideBar","id","alt","onSearch","method","MenuItems_MenuItems","Footer","Forget","setEmail","sendRecoveryEmail","category_init","category_id","category_name","description","notes","category_type","sub_category","category_art","category_errors_init","category_name_error","description_error","notes_error","category_type_error","sub_category_error","category_art_error","products_init","product_name","product_art","price","currency","products_errors_init","category_id_error","product_name_error","product_art_error","price_error","currency_error","service_init","service_name","service_art","service_errors_init","service_name_error","service_art_error","Products","products","Services","services","fetchProductsAPI","get","toConsumableArray","fetchServicesAPI","fetchCategories","categories","category","saveCategory","saveProduct","product","Market","setProducts","_useState3","_useState4","setServices","_useState5","_useState6","apiRequests","Products_Products","InlineMessage","message_type","AddProduct","setProduct","image","size","filename","progress","uploaded","setUploaded","inline","setInline","_useState7","_useState8","errors","setErrors","_useState9","_useState10","setCategories","doUpload","uploadTask","find","concat","put","on","snapshot","round","bytesTransferred","totalBytes","child","getDownloadURL","FileArtChange","files","doSaveProduct","product_to_save","RequestsAPI","checkErrors","check_product_name","check_product_description","check_price","check_product_art","check_category_id","map","Forms_InlineMessage","AddService","_useState11","_useState12","service","setService","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","fileArtChange","check_service_name","check_service_description","check_service_art","check_service_category","do_check","typoe","AddCategories","_useState21","_useState22","_useState23","_useState24","setCategory","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_callee9","_context9","doAddCategory","_ref10","_callee10","my_category","_context10","_x10","_ref11","_callee11","check_category_name","check_category_type","check_sub_category","check_description","check_notes","check_category_art","_context11","_x11","CategoryArtFileChange","MyMarket","my_header","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","Dashboard","dashboard_user","articles_api","this_date","return_date","this_pagesize","entertainment_news","sports_news","business_news","tech_news","science_news","health_news","get_blog_articles","_get_blog_articles","apiRequest","Axios","articles","BlogPost","post_data","article","urlToImage","source","author","Blog","posts","setPosts","forceUpdate","setTick","tick","useForceUpdate","_fetchData","blog_posts","fetchData","toUpperCase","slice","index","key","Verifications","use_onetime_pin","account_verified","verifications","setVerifications","onAccountVerify","react_switch_default","checked","OnChangeHandler","AccountSettings","account_active","receive_job_offers","receive_sms","receive_email","accountSettings","setAccountSettings","onToggleSettings","PersonalDetails","userid","personalDetails","setPersonalDetails","onChangeHandler","Account","onSwitchScreen","CheckOut","Boolean","location","hostname","match","ContactDetailsInitState","user_contacts","contact_details_errors","website_error","facebook_error","twitter_error","userContactDetailsReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","surname_error","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","account_details","contact_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","profile","wallet","inline_message","middleware","applyMiddleware","compose","thunk","store","createStore","ReactDOM","render","react_redux_es","userAccountContext_UserAccountContextProvider","Header_Header","react_router","exact","path","component","Signup","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d154092.chunk.js","sourcesContent":["\r\n\r\nexport const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const account_page = '/account';\r\n\r\nexport const blog_page = '/blog';\r\nexport const market_page = '/market';\r\n\r\nexport const admin_page = '/admin-user/'; // + userid\r\nexport const shopping_basket_page = '/admin-user-shopping-basket';\r\nexport const my_market_products = '/admin-user-market';\r\n\r\nexport const check_out_page = '/market-check-out';\r\n\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n\r\n\r\n\r\n/**\r\n * api routes \r\n */\r\n\r\n export const api_products_endpoint = '/api/products';\r\n export const api_services_endpoint = '/api/services';\r\n\r\n\r\n export const api_categories_endpoint = '/api/categories';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {auth,\r\n\tfirebase,\r\n\tstorage\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneVerified:false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tUSER_LOGIN_STATUS : 'USER:USER_LOGIN_STATUS',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\n\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginStatus = () => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGIN_STATUS,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import moment from 'moment';\r\nclass Utilities {\r\n  constructor(today, url) {\r\n    this.today = today;\r\n    this.url = url;\r\n  }\r\n\r\n  isUrl = url => {\r\n    let pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name and extension\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?\" + // port\r\n      \"(\\\\/[-a-z\\\\d%@_.~+&:]*)*\" + // path\r\n      \"(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return pattern.test(url);\r\n  };\r\n\r\n  isEmpty = a => {\r\n    return a !== undefined ? a === null || a === \"\" : true;\r\n  };\r\n\r\n  isProvince = province => {\r\n    let province_list = [\r\n      \"limpopo\",\r\n      \"mpumalanga\",\r\n      \"north west\",\r\n      \"gauteng\",\r\n      \"kwazulu natal\",\r\n      \"eastern cape\",\r\n      \"western cape\",\r\n      \"northern cape\",\r\n      \"orange free state\"\r\n    ];\r\n    for (let i = 0; i < province_list.length; i++) {\r\n      if (province === province_list[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  validateEmail = email => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  validatePassword = password => {\r\n    let re = new RegExp(\r\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n    );\r\n    return re.test(password);\r\n  };\r\n\r\n  validateUsername = username => {\r\n    let re = /^\\w+$/;\r\n    return re.test(username);\r\n  };\r\n\r\n  isNumber = n => {\r\n    return n !== undefined ? typeof n !== \"boolean\" && !isNaN(n) : false;\r\n  };\r\n\r\n  isMoney = n => {\r\n    return this.isNumber(n) ? true : false;\r\n  };\r\n\r\n  isCell = n => {\r\n    return this.isNumber(n)\r\n      ? n.length === 10 || n.length === 11 || n.length === 12 || n.length === 13\r\n      : false;\r\n  };\r\n\r\n  isTel = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  isFax = n => {\r\n    return n !== undefined ? this.isCell(n) : false;\r\n  };\r\n\r\n  getAge = dateString => {\r\n    let dates = dateString.split(\"-\");\r\n    let d = new Date();\r\n\r\n    let userday = dates[2];\r\n    let usermonth = dates[1];\r\n    let useryear = dates[0];\r\n\r\n    let curday = d.getDate();\r\n    let curmonth = d.getMonth() + 1;\r\n    let curyear = d.getFullYear();\r\n\r\n    let age = curyear - useryear;\r\n\r\n    if (curmonth < usermonth || (curmonth === usermonth && curday < userday)) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n  isIDNumber = n => {\r\n    return n !== undefined ? this.isNumber(n) && n.length === 13 : true;\r\n  };\r\n  numDaysBetweenDates = (firstDate, secondDate) => {\r\n    let f_dates = firstDate.split(\"-\");\r\n    let s_dates = secondDate.split(\"-\");\r\n\r\n    // let d = new Date();\r\n\r\n    let f_day = parseInt(f_dates[2]);\r\n    let f_month = parseInt(f_dates[1]);\r\n    let f_year = parseInt(f_dates[0]);\r\n\r\n    let s_day = parseInt(s_dates[2]);\r\n    let s_month = parseInt(s_dates[1]);\r\n    let s_year = parseInt(s_dates[0]);\r\n\r\n    // TODO- Please revise the number of days algorithm\r\n    // let years = f_year - s_year;\r\n    // let months = f_month - s_month;\r\n    // let days = f_day - s_day;\r\n\r\n    let a = moment([f_year, f_month, f_day]);\r\n    let b = moment([s_year, s_month, s_day]);\r\n\r\n    return a.diff(b, \"days\") + 1;\r\n\r\n    //\r\n    // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n    //     return days\r\n    // }else if ((years === 0) && (months > 0)){\r\n    //     return (days + (months * 30))\r\n    // }else{\r\n    //     return 365\r\n    // }\r\n  };\r\n\r\n  countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n    try {\r\n      return stamp_1 - stamp_2;\r\n    } catch (e) {\r\n      return parseInt(stamp_1) - parseInt(stamp_2);\r\n    }\r\n  };\r\n\r\n  throttle = (func, limit) => {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function() {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  };\r\n\r\n  debounce = (func, delay) => {\r\n    let inDebounce;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(inDebounce);\r\n      inDebounce = setTimeout(() => func.apply(context, args), delay);\r\n    };\r\n  };\r\n\r\n  isMobile = () => {\r\n    if (window.innerWidth <= 800 && window.innerHeight <= 600) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nexport let UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","\r\nimport {\r\n    USER_ACCOUNT_ACTIONS\r\n} from '../../actions';\r\nimport {\r\n    account_details_type,\r\n    account_details_type_error\r\n} from '../../types';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nlet UserAccountInitState = {\r\n    user_account: {...account_details_type},\r\n    user_account_errors: {...account_details_type_error},\r\n    form_response: '',\r\n    response_code: '',\r\n};\r\n    \r\nexport let loginUser = async (username, password) => {\r\n    let user_account_state = {...UserAccountInitState};\r\n    let user_account;\r\n    let form_response;\r\n    let response_code;\r\n\r\n    await auth.doSignInWithEmailAndPassword(username, password).then(result => {\r\n            \r\n\r\n            if (result.status === true){\r\n                user_account = {...result.response};\r\n                form_response = 'User Logged In Successfully';\r\n                response_code = 200;\r\n            }else {\r\n                user_account = {...result.response};\r\n                form_response = result.error.message;\r\n                response_code = result.error.code;\r\n            }\r\n\r\n    });\r\n    \r\n    user_account_state.user_account = {...user_account};    \r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE',user_account_state);\r\n    return {...user_account_state};\r\n}\r\n\r\nexport let logOutUser = async() => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n    await auth.doSignOut().then(result => {\r\n        if (result.status === true){\r\n                user_account = {\r\n                    ...account_details_type\r\n                };\r\n                form_response = 'User Logout Successfully';\r\n                response_code = 200;\r\n                }\r\n                else {\r\n                    user_account = {\r\n                        ...account_details_type\r\n                    };\r\n                    form_response = result.error.message;\r\n                    response_code = result.error.code;\r\n                }\r\n    });\r\n    user_account_state.user_account = {\r\n        ...user_account\r\n    };\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n    console.dir('USER ACCOUNT STATE', user_account_state);\r\n    return {\r\n        ...user_account_state\r\n    };\r\n\r\n}\r\n\r\n\r\nexport let SendEmailVerification = async(user) => {\r\n        let user_account_state = {\r\n            ...UserAccountInitState\r\n        };\r\n        let user_account;\r\n        let form_response;\r\n        let response_code;\r\n\r\n        console.log('Sending email verifications');\r\n\r\n    await auth.doSendEmailVerification(user).then( result => {\r\n        if (result.status === true){\r\n            user_account={\r\n                ...user,\r\n                email_verification_sent : true\r\n            };\r\n            form_response= 'successfully sent email verifications';\r\n            response_code= 200\r\n        }else{\r\n            user_account = {\r\n                ...user,\r\n                email_verification_sent: false\r\n            };\r\n            form_response= result.error.message;\r\n            response_code= result.error.code\r\n        }\r\n    });\r\n    user_account_state.user_account = {...user_account};\r\n    user_account_state.form_response = form_response;\r\n    user_account_state.response_code = response_code;\r\n\r\n    return user_account_state;\r\n}","import React,{Component,useReducer,createContext} from 'react';\r\nimport {firebase,auth} from '../../firebase';\r\nimport userAccountReducer, {\r\n  UserAccountInitState\r\n} from '../../reducers/profileReducers/accountDetailsReducer';\r\n\r\nimport {\r\n  loginUser, logOutUser, SendEmailVerification\r\n} from './actions';\r\n\r\nexport const UserAccountContext = createContext();\r\nexport default class UserAccountContextProvider extends Component {\r\n    state = {user_account_state: {...UserAccountInitState}};\r\n\r\n    doLogin = async (username,password) => {\r\n      let user_account_state = await loginUser(username,password);\r\n      this.setState({user_account_state})\r\n    }\r\n\r\n    doLogout = async() => {\r\n      let user_account_state = await logOutUser();\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n    doSendEmailVerification = async() => {\r\n      if (this.state.user_account_state.user_account.emailVerified){\r\n      console.log('Cannot send verification email account already verified');\r\n    }else{\r\n      let user_account_state = await SendEmailVerification(this.state.user_account_state.user_account);\r\n      this.setState({\r\n        user_account_state: user_account_state\r\n      });\r\n    }\r\n    }\r\n\r\n    onChange = (user) => {\r\n      let {\r\n        user_account\r\n      } = this.state.user_account_state;\r\n\r\n      let user_account_state = Object.assign({},this.state.user_account_state)\r\n      user_account_state.user_account = {\r\n        ...user\r\n      };\r\n\r\n      this.setState({\r\n        user_account_state\r\n      })\r\n    }\r\n\r\n  componentWillMount = () => {\r\n    // const unsubscribe = firebase.auth().onAuthStateChanged(this.onChange);    \r\n    const dounsubscribe = firebase.firebase.auth().onAuthStateChanged(this.onChange)\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      < UserAccountContext.Provider value = {\r\n        {\r\n          ...this.state, doLogin: this.doLogin, doLogout: this.doLogout, doSendEmailVerification: this.doSendEmailVerification\r\n        }\r\n      } >\r\n                {this.props.children}\r\n      </UserAccountContext.Provider>              \r\n    )\r\n  }\r\n}\r\n","import React, {Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\nimport {firebase,auth} from '../../../firebase';\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\nconst SideBarMenuAuth = () => {\r\n\treturn (\r\n    <ul className=\"sidebar-menu\">\r\n      <li className=\"header\">W-Trading</li>\r\n      <li>\r\n        <Link to={routes.home_page} title=\"weqtrading online store\">\r\n          <i className=\"fa fa-home\" /> <strong>Home</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.about_page} title=\"About\">\r\n          <i className=\"fa fa-info\" /> <strong>About</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.contact_page} title=\"Contact Us\">\r\n          <i className=\"fa fa-envelope\" /> <strong>Contact</strong>\r\n        </Link>\r\n      </li>\r\n      <li className=\"active treeview\">\r\n        <Link to=\"#\">\r\n          <i className=\"fa fa-user-md\" /> <span>Client Area</span>\r\n          <span className=\"pull-right-container\">\r\n            <i className=\"fa fa-angle-left pull-right\" />\r\n          </span>\r\n        </Link>\r\n        <ul className=\"treeview-menu\">\r\n          <li>\r\n            <Link to={routes.admin_page} title=\"manage your Account\">\r\n              <i className=\"fa fa-sign-in\"> </i> <strong> Account</strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li>\r\n            <Link to={routes.shopping_basket_page} title=\"Shopping Basket\">\r\n              <i className=\"fa fa-shopping-cart\"> </i>{\" \"}\r\n              <strong> Shopping Cart</strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n          <li>\r\n            <Link to={routes.my_market_products} title=\"Shopping Basket\">\r\n              <i className=\"fa fa-shopping-basket\"> </i>{\" \"}\r\n              <strong> My Products / Services </strong>{\" \"}\r\n            </Link>{\" \"}\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.market_page} title=\"Market\">\r\n          <i className=\"fa fa-shopping-basket\" /> Market Place\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.blog_page} title=\"Weq Trading Blog\">\r\n          <i className=\"fa fa-book\"> </i> <strong>Blog</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.dashboard_page} title=\"Dashboard\">\r\n          <i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to={routes.logout_page} title=\"Logout\">\r\n          <i className=\"fa fa-sign-out\"> </i> <strong> Logout </strong>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t) \r\n}\r\n\r\n\r\n\r\nexport default class MenuItems extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuser_logged_in : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet isUserLoggedIN = () => {\t\t\t\t\t\r\n\t\t\treturn auth.currentUser ? true:false;\r\n\t\t}\r\n\t\tif (isUserLoggedIN()){\r\n\t\t\tthis.setState({user_logged_in : true})\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n\t\t\t  const { doLogin, user_account_state } = context;\r\n\t\t\t  console.log('SIDEBAR',user_account_state.user_account);\r\n\t\t\treturn (\r\n        <div>\r\n          {user_account_state.user_account.uid ? (\r\n            <SideBarMenuAuth />\r\n          ) : (\r\n            <SideBarMenuNonAuth />\r\n          )}\r\n        </div>\r\n      );\r\n\t  }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n\t}\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function Home (){\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) =>{\r\n\t\tconst { user_account_state } = context;\r\n\t\treturn (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-home\"> </i> Weq Trading{\" \"}\r\n              </strong>{\" \"}\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <button className=\"btn btn-box-tool\">\r\n                <Link to={routes.market_page}>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-shopping-bag\"> </i> Market Place{\" \"}\r\n                  </strong>{\" \"}\r\n                </Link>\r\n              </button>\r\n              {user_account_state.user_account.uid === \"\" ? (\r\n                <button className=\"btn btn-box-tool\">\r\n                  <Link to={routes.login_page}>\r\n                    <strong>\r\n                      {\" \"}\r\n                      <i className=\"fa fa-sign-in\"> </i> Log in to Weq Trading{\" \"}\r\n                    </strong>{\" \"}\r\n                  </Link>\r\n                </button>\r\n              ) : (\r\n                <button className=\"btn btn-box-tool\">\r\n                  <Link to={routes.logout_page}>\r\n                    <strong>\r\n                      {\" \"}\r\n                      <i className=\"fa fa-sign-in\"> </i> Log out{\" \"}\r\n                    </strong>{\" \"}\r\n                  </Link>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n\t}}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-info\"> </i> About\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong> Introduction </strong>\r\n              </h3>\r\n            </div>\r\n            <blockquote>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Whittlesea Experience Quality Computer College &amp;\r\n                  Solutions is a registered company registered as a close\r\n                  corporation\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is a service provider company, which is concerned about\r\n                  its community, because the main aim is to fight\r\n                  unemployment.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  It is owned by two directors but aims to employing more\r\n                  than twenty employees.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  The books of this company are managed by the accountant\r\n                  Ntombizamfaku Nelisa Sigcau.\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  This company has got visions and dreams of the rainbow\r\n                  nation.\r\n                </li>\r\n              </ul>\r\n            </blockquote>\r\n          </div>\r\n\r\n          <div className=\"box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Vision</strong>\r\n              </h3>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                To be a leading and effective organization that is based on\r\n                its community needs, fulfilment and also that is capable of\r\n                meaningful contribution towards the development of the\r\n                people.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see a well developed community.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see the previously disadvantaged community with the\r\n                skills to fight poverty and unemployment.\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                To see an improved standard of living for every South\r\n                African.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"box box-footer\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>Services</strong>\r\n              </h3>\r\n              <blockquote>\r\n                The company offers the following other services\r\n              </blockquote>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                Internet Connections / WIFI access\r\n              </li>\r\n              <li className=\"list-group-item\">Construction</li>\r\n              <li className=\"list-group-item\">Fencing</li>\r\n              <li className=\"list-group-item\">Renovations</li>\r\n              <li className=\"list-group-item\">Rentals Apartments</li>\r\n              <li className=\"list-group-item\">Transportation</li>\r\n              <li className=\"list-group-item\" > Training</li>\r\n              <li className='list-group-item'> Supply of Chairs,Tables, and Tents</li>\r\n              <li className='list-group-item'>Installations of Surveilance Cameras and Alarms</li>\r\n              <li className='list-group-item'>Supply of cleaning Materials</li>\r\n              <li className='list-group-item'>Construction</li>\r\n              <li className='list-group-item'>Tilling</li>\r\n              <li className='list-group-item'>Plumbing</li>\r\n              <li className='list-group-item'>Wiring (Electrical)</li>\r\n              <li className='list-group-item'>Painting</li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{this.state.message}</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\nexport let contact_form_details  = {\r\n            messageid:\"\",\r\n            names : \"\",\r\n            email : \"\",\r\n            cell: \"\",\r\n            subject: \"\",\r\n            message: \"\",\r\n\r\n            message_read : false,\r\n            date_read : \"\",\r\n            date_sent : \"\"\r\n};\r\n\r\nexport let contact_response_message_detail = {\r\n        messageid:\"\",\r\n        response:\"\",\r\n        date_sent:\"\",\r\n};\r\n\r\nlet contact_form_errors = {\r\n            names_error : '',\r\n            email_error : '',\r\n            cell_error : '',\r\n            subject_error : '',\r\n            message_error : '',\r\n\r\n};\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact\",\"&data=\" + data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React,{Fragment} from 'react'\r\nimport './Contact.css';\r\nexport default function ContactDetails () {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-info\"> </i> Contact Details\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <div className=\"small-box-footer\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-building\"> </i> Business Details\r\n                </strong>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Name : </strong>\r\n                    <em>Weq Trading &amp; Projects</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Registration Number : </strong>\r\n                    <em>2010/158059/23</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong>Business Address : </strong>\r\n                    <em>80 Shepstone Street, Whittlesea,5360</em>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <strong> Business Fax : </strong>\r\n                    <em>\r\n                      <a href=\"mailto:0408421225\">040-842-1225</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                    <em>\r\n                      <a href=\"mailto:0865182222@faxfx.net\">086-518-2222</a>\r\n                    </em>{\" \"}\r\n                    |\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Contact Person : </strong>\r\n                        <em>Nsubuga Charles Heinnrich</em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:O781111869\">O78-111-1869 </a>\r\n                        </em>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <strong>Cell : </strong>\r\n                        <em>\r\n                          <a href=\"tel:0838630886\">083-863-0886 </a>\r\n                        </em>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <iframe\r\n                  src=\"https://www.google.com/maps/embed?pb=!1m22!1m11!1m3!1d1031.541083124503!2d26.82210571473625!3d-32.17379083467601!2m2!1f0!2f0!3m2!1i1024!2i768!4f13.1!4m8!3e0!4m5!1s0x1e62350d78cff7e3%3A0x6d7e84c719fdcd2b!2sWeq+Trading+And+Projects!3m2!1d-32.1735701!2d26.8231617!4m0!5e1!3m2!1sen!2sza!4v1564836874505!5m2!1sen!2sza\"\r\n                  className=\"map-style\"\r\n                  height=\"460\"\r\n                  width=\"600\"\r\n                  allowfullscreen\r\n                  frameBorder=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>      \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\nimport ContactDetails from './ContactDetails';\r\n\r\nexport default function Contact() {\r\n\tconst[display,setDisplay] = useState('contact-details');\r\n\r\n\t\r\n\r\n\r\n\tlet ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\tlet SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n\t}\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <i className=\"fa fa-mobile-phone\"> </i> Contact Details\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"contactform\"\r\n              onClick={e => setDisplay(\"contact-form\")}\r\n            >\r\n              <i className=\"fa fa-envelope\"> </i>\r\n              Contact Form\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"contactdetails\"\r\n              onClick={e => setDisplay(\"contact-details\")}\r\n            >\r\n              <i className=\"fa fa-info\"> </i>\r\n              Contact Details\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {display === \"contact-form\" ? <ThisContactForm /> : \"\"}\r\n        {display === \"contact-details\" ? <ContactDetails /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nfunction Input({\r\n        type,\r\n        placeholder,\r\n        name,\r\n        className,\r\n        onChange\r\n    },ref){\r\n  return (\r\n      <input \r\n        ref={ref}\r\n        type={type} \r\n        className={className} \r\n        name={name} \r\n        placeholder={placeholder}\r\n        onChange = {onChange}        \r\n        />\r\n        )\r\n}\r\n\r\nconst forwadedInput = React.forwardRef(Input);\r\n\r\nexport default forwadedInput;\r\n\r\n","import React, { Fragment, useEffect, useContext, useRef,useState } from \"react\";\r\nimport { Link,Redirect ,navigate} from \"react-router-dom\";\r\nimport { routes } from \"../../../constants\";\r\n\r\n\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\n\r\nimport Input from '../../Input/Input';\r\n\r\nexport default function Login() {\r\n\r\n\tconst [values,setValues] = useState({username:'',password:''})\r\n\r\n  \tconst usernameRef = useRef(null);\r\n  \tconst passwordRef = useRef(null);\r\n  \tconst submitRef = useRef(null);\r\n\r\n  \tlet handleChange = e => {\r\n\t\tconst {name,value} = e.target;\t\r\n\t\tconsole.log('Name : ',name,' Value : ',value)  \r\n\t  \tsetValues({\r\n\t\t  ...values,\r\n\t\t  [name]:value\r\n\t\t  });\r\n\t\t  \r\n\t\t  console.log(values);\r\n  \t};\r\n\r\n  useEffect(() => {\r\n\tusernameRef.current.focus();  \r\n    console.log(\"Login page loaded\");\r\n  }, []);\r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      console.log(\"The big loggin context\",context);\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const {\r\n        username,password\r\n      } = values;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login User\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <Link to={routes.forget_password_page}>\r\n                  <button type=\"button\" className=\"btn btn-box-tool\">\r\n                    <strong>\r\n                      <i className=\"fa fa-unlock\"> </i> Forget Password\r\n                    </strong>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={e => doLogin(username, password)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    placeholder=\"Login Name\"\r\n                    ref={usernameRef}\r\n                    value={values.username}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    ref={passwordRef}\r\n                    value={values.password}\r\n                    onChange={e => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    ref={submitRef}\r\n                    onClick={e => {\r\n                      doLogin(username, password);\r\n                      //navigate(\"/\", true);\r\n                    }}\r\n                  >\r\n                    <strong>\r\n                      <i className=\"fa fa-sign-in\"> </i> Login\r\n                    </strong>\r\n                  </button>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-warning btn-lg\"\r\n                    onClick={e => {return setValues({username:'',password:''})}}\r\n                    >\r\n                    <strong>\r\n                      <i className=\"fa fa-eraser\"> </i> Reset\r\n                    </strong>\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Redirect,navigate } from \"react-router-dom\";\r\nimport {UserAccountContext} from '../../../context/UserAccount/userAccountContext';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function Logout() {\r\n    return (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n          const {\r\n              doLogout\r\n          } = context;\r\n          return (\r\n            <Fragment>\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">\r\n                    <i className=\"fa fa-sign-out\"> </i> Logout\r\n                  </h3>\r\n                </div>\r\n\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      name=\"logout\"\r\n                      onClick={e => {\r\n                        doLogout();\r\n                        //navigate(\"/\", true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-sign-out\"> </i>{\" \"}\r\n                      <strong> Logout </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Fragment>\r\n          );\r\n      }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nimport * as routes from '../../../constants/routes';\r\n\r\nimport { auth } from '../../../firebase';\r\n\r\n\r\n\r\nconst SignUpPage = (props) => {\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <div className=\"box box-header\">\r\n                <h3 className=\"box-title\"> <strong> <i className='fa fa-sign-out'> </i> Sign Up</strong></h3>\r\n                <div className='box-tools'>\r\n                    <Link to={routes.login_page}>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-box-tool btn-lg'                            \r\n                        ><strong><i className='fa fa-sign-in'> </i> Login </strong>\r\n                        </button>    \r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <SignUpForm ShowLogin={props.ShowLogin}  />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst Initial_State = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...Initial_State };\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n        } = this.state;\r\n\r\n        const {\r\n            history,\r\n        } = this.props;\r\n\r\n        auth.doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                this.setState({ ...Initial_State });\r\n                //history.push(routes.home_page);\r\n            })\r\n            .catch(error => {\r\n                this.setState(byPropKey('error', error));\r\n            });\r\n\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={username}\r\n                            onChange={event => this.setState(byPropKey('username', event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={email}\r\n                            onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={passwordOne}\r\n                            onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n\r\n                        <input className=\"form-control\"\r\n                            value={passwordTwo}\r\n                            onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                        />2\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n\r\n                        <button \r\n                            disabled={isInvalid} \r\n                            type=\"submit\" \r\n                            className=\"btn btn-success btn-lg\">\r\n                            <strong> <i className=\"fa fa-sign-in\"> </i> Sign Up </strong>\r\n                        </button>\r\n                        <button\r\n                            type='reset'\r\n                            className='btn btn-warning btn-lg'\r\n                        >\r\n                            <strong> <i className='fa fa-eraser'> </i> Cancel  </strong>\r\n                        </button>\r\n                    </div>\r\n                    {error && <p>{error.message}</p>}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport default SignUpPage;\r\nexport {\r\n    SignUpForm\r\n};","import React, { Fragment,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nimport { UserAccountContext } from \"../../../context/UserAccount/userAccountContext\";\r\n\r\nexport default function SideBar (){\r\n\t\r\n\tlet onSearch = e => {    \r\n\t\te.preventDefault();\r\n\t\tconsole.log('Searching site...');\r\n\t\t// Remember to clear search field      \r\n\t};\r\n\t\r\n\treturn (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const {\r\n        doLogin,\r\n        user_account_state\r\n      } = context;\r\n      const userSignedInText = user_account_state.user_account\r\n        .uid\r\n        ? `<p id=\"strSideUserNameID\"><Link to={routes.logout_page}> Logout</Link></p>`\r\n        : `<p id=\"strSideUserNameID\"><Link to={routes.login_page}> Login</Link></p>`;\r\n\r\n    \r\n      return (\r\n        <Fragment>\r\n          <aside className=\"main-sidebar\">\r\n            <section className=\"sidebar\">\r\n              <div className=\"user-panel\">\r\n                <div className=\"pull-left image\">\r\n                  <img\r\n                    src=\"/static/dist/img/sms.jpeg\"\r\n                    id=\"strSideUserImageID\"\r\n                    className=\"img-circle\"\r\n                    alt=\"Weq-Trading\"\r\n                  />\r\n                </div>\r\n                <div className=\"pull-left info\">\r\n                  {user_account_state.user_account.uid ? (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.logout_page}> Logout</Link>\r\n                    </p>\r\n                  ) : (\r\n                    <p id=\"strSideUserNameID\">\r\n                      <Link to={routes.login_page}> Login</Link>\r\n                    </p>\r\n                  )\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <form\r\n                onSubmit={e => onSearch(e)}\r\n                method=\"get\"\r\n                className=\"sidebar-form\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"input-group-btn\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      name=\"search\"\r\n                      id=\"search-btn\"\r\n                      className=\"btn btn-flat\"\r\n                    >\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                <MenuItems />\r\n              </ul>\r\n            </section>\r\n          </aside>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport * as routes from '../../../constants/routes';\r\n\r\nexport default function Forget(){\r\n\tconst [email,setEmail] = useState({email:''});\r\n\r\n\tfunction sendRecoveryEmail  (e) {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Sending Recovery Email');      \r\n\r\n\t}\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            {\" \"}\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-key\"> </i> Forget Password\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <Link to={routes.login_page}>\r\n              <button type=\"button\" className=\"btn btn-box-tool\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Login\r\n                </strong>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <form\r\n            className=\"form-horizontal\"\r\n            onSubmit={e => sendRecoveryEmail(e)}\r\n          >\r\n            <div className=\"form-group\">\r\n              <span>\r\n                Enter your username so what we can send you a password recovery\r\n                message\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n\t\t\t  <input \r\n\t\t\t\t  type=\"email\" \r\n\t\t\t\t  className=\"form-control\" \r\n\t\t\t\t  name=\"email\" \r\n\t\t\t\t  value={email.email}\r\n\t\t\t\t  onChange={e => setEmail({[e.target.name]:e.target.value})}\t\t\t\t  \r\n\t\t\t\t  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-lg\"\r\n                onClick={e => sendRecoveryEmail(e)}\r\n              >\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-unlock-alt\"> </i> Recover\r\n                </strong>\r\n              </button>\r\n\t\t\t\t<button \r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tclassName=\"btn btn-warning btn-lg\"\r\n\t\t\t\t\tonClick={e => setEmail({email:''})}\r\n\t\t\t\t>\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-eraser\"> </i> Reset{\" \"}\r\n                  </strong>\r\n                </button>              \r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","\r\nexport const category_init = {    \r\n    category_id : '',\r\n    category_name : '',\r\n    description : '',\r\n    notes : '',\r\n    category_type : '',\r\n    sub_category : '',\r\n    category_art : '',\r\n};\r\n\r\nexport const category_errors_init = {\r\n    category_name_error : '',\r\n    description_error : '',\r\n    notes_error : '',\r\n    category_type_error : '',\r\n    sub_category_error : '',\r\n    category_art_error : ''\r\n};\r\n\r\nexport const products_init = {\r\n         uid : '',\r\n         id: '',\r\n         category_id : '',\r\n         product_name: '',\r\n         description: '',\r\n         product_art: '',\r\n         price: '',\r\n         currency: 'zar'\r\n};\r\n\r\nexport const products_errors_init = {\r\n    category_id_error : '',\r\n    product_name_error : '',\r\n    description_error : '',\r\n    product_art_error : '',\r\n    price_error : '',\r\n    currency_error : ''\r\n};\r\n\r\nexport const service_init = {\r\n    uid: '',\r\n    id: '',\r\n    category_id: '',\r\n    service_name: '',\r\n    description: '',\r\n    service_art : '',\r\n    price: '',\r\n    currency: 'zar'\r\n};\r\n\r\nexport const service_errors_init = {\r\n    category_id_error : '',\r\n    service_name_error: '',\r\n    description_error: '',\r\n    service_art_error: '',\r\n    price_error: '',\r\n    currency_error: 'zar'\r\n};\r\n\r\n\r\nexport const physical_address_init = {\r\n    uid: '',\r\n    stand: '',\r\n    street_name: '',\r\n    city: '',\r\n    province: '',\r\n    country : '',\r\n    postal_code: '',\r\n};\r\n\r\nexport const physical_address_errors_init = {\r\n    stand_error : '',\r\n    street_name_error : '',\r\n    city_error : '',\r\n    province_error : '',\r\n    country_error : '',\r\n    postal_code_errror : ''\r\n};","import React ,{useState, Fragment}from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {products_init} from '../market-constants';\r\nimport './Products.css';\r\nimport { routes } from '../../../constants';\r\n\r\n\r\nexport default function Products({products}) {\r\n\r\n    console.log('products.....',products);\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">Products</h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <Link to={routes.check_out_page}>\r\n                {\" \"}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool btn-outline-dark\"\r\n                  name=\"check_out\"\r\n                >\r\n                  <i className='fa fa-shopping-cart'> </i> {' '}\r\n                  Check Out\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {service_init} from '../market-constants';\r\nimport {routes} from '../../../constants';\r\n\r\n\r\nconst Service = ({service}) => {\r\n  return(\r\n    <Fragment>\r\n        Service...\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default function Services({services}) {\r\n\r\n  console.log('services.....',services);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">Services</h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <Link to={routes.check_out_page}>\r\n              {\" \"}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"check_out\"\r\n              >\r\n                <i className=\"fa fa-shopping-cart\"> </i> Check Out\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {routes} from '../../constants';\r\n\r\n\r\nexport const fetchProductsAPI = async () => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_products_endpoint)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching products\");\r\n      }\r\n    })\r\n    .then(products => {\r\n      results = [...products];\r\n    })\r\n    .catch(error => {\r\n      console.log(error.message);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchServicesAPI = async () => {\r\n  let results = [];\r\n  await axios\r\n    .get(routes.api_services_endpoint)\r\n    .then(result => {\r\n      if (result.status === 200) {\r\n        return result.data;\r\n      } else {\r\n        throw new Error(\"there was an error fetching services\");\r\n      }\r\n    })\r\n    .then(services => {\r\n      results = [...services];\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n\r\n  return results;\r\n};\r\n\r\nexport const fetchCategories = async (category_type) => {\r\n    let results = [];\r\n\r\n    await axios.get(routes.api_categories_endpoint).then(result => {\r\n        if (result.status === 200){\r\n            return result.data;\r\n        }else{\r\n            throw new Error('there was an error fetching product categories');\r\n        }\r\n    }).then(categories => {\r\n        categories.forEach(category => {\r\n          if(category.category_type === category_type){\r\n            results.push(category)\r\n          }\r\n        })\r\n    }).catch(error => {\r\n        console.log('Categories Error : ',error.message);\r\n    })\r\n    \r\n    return results;\r\n};\r\n\r\nexport const saveCategory = async (category) => {\r\n    let results = [];\r\n\r\n    await axios.post(routes.api_categories_endpoint,category).then(result => {\r\n        if (result.status === 200){\r\n            return result.data;\r\n        }else{\r\n            throw new Error('there was an error saving new category');\r\n        }\r\n    }).then(category => {\r\n        results = category;\r\n    }).catch(error => {\r\n        console.log('Save Caregoty',error.message);\r\n    });\r\n\r\n    return results;\r\n};\r\n\r\n\r\nexport const saveProduct = async(product) => {\r\n  let results = {status : true,payload:{},error:{}};\r\n   \r\n\r\n  await axios.post(routes.api_products_endpoint,product).then(result => {\r\n      if(result.status === 200){\r\n        return result.data;\r\n      }else{\r\n        throw new Error('there was an error saving new product');\r\n      }\r\n  }).then(product => {\r\n    results.status = true;\r\n    results.payload = product;\r\n\r\n  }).catch(error => {\r\n    console.log('Save product error',error.message);\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\n\r\nexport const doAddService = async(service) => {\r\n  let results = { status: true, payload: {}, error: {} };\r\n\r\n  await axios.post(routes.api_services_endpoint,service).then(result => {\r\n    if(result.status === 200){\r\n      return result.data;\r\n    }else{\r\n      throw new Error('there was an error saving new service');\r\n    }\r\n  }).then(service => {\r\n    results.status = true;\r\n    results.payload = service;\r\n  }).catch(error => {\r\n    results.status = false;\r\n    results.error = error;\r\n  });\r\n\r\n  return results;\r\n}","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Products from \"./Products/Products\";\r\nimport Services from \"./Service/Services\";\r\nimport axios from \"axios\";\r\nimport { routes } from \"../../constants\";\r\nimport * as apiRequests from './api-requests';\r\n\r\n\r\nexport default function Market() {\r\n  const [products, setProducts] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const[display,setDisplay] = useState('products');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    apiRequests.fetchProductsAPI().then(result => {\r\n      setProducts(result);\r\n    });\r\n\r\n    apiRequests.fetchServicesAPI().then(result => {\r\n      setServices(result);\r\n    });\r\n\r\n    return () => {\r\n      setProducts([]);\r\n      setServices([]);\r\n    };\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-shopping-basket\"> </i> Market Place{\" \"}\r\n            </strong>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"q\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search Market...\"\r\n              />\r\n              <span className=\"input-group-btn\">\r\n                <button\r\n                  type=\"submit\"\r\n                  name=\"search\"\r\n                  id=\"search-btn\"\r\n                  className=\"btn btn-flat\"\r\n                >\r\n                  <i className=\"fa fa-search\" />\r\n                </button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-bookmark-o\"> </i> Weq Trading &amp; Projects\r\n              </strong>\r\n            </h3>\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"products\"\r\n                onClick={e => setDisplay(\"products\")}\r\n              >\r\n                Products\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"services\"\r\n                onClick={e => setDisplay(\"services\")}\r\n              >\r\n                Services\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {display === \"products\" ? <Products products={products} /> : \"\"}\r\n\r\n          {display === \"services\" ? <Services services={services} /> : \"\"}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InlineMessage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {message : this.props.message,\r\n\t\t\tmessage_type : this.props.message_type};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box-info'}>\r\n\t\t\t\t<div className={'box box-header'}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={'box-tools'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={'box-title btn-outline-info btn-lg'}\r\n\t\t\t\t\t\t><em><i className='fa fa-check-circle'> </i> <small> {this.state.message} </small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nInlineMessage.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tmessage_type : PropTypes.string\r\n};\r\n\r\nexport default InlineMessage;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  products_init,\r\n  products_errors_init,\r\n  service_init,\r\n  service_errors_init,\r\n  category_init,\r\n  category_errors_init\r\n} from \"./market-constants\";\r\nimport { firebase } from \"../../firebase\";\r\nimport * as RequestsAPI from \"./api-requests\";\r\nimport axios from \"axios\";\r\n\r\nimport InlineMessage from '../Forms/InlineMessage';\r\nimport InlineError from '../Forms/InlineError';\r\n\r\n\r\nimport {Utils} from '../../utilities';\r\n\r\nfunction AddProduct() {\r\n  const [product, setProduct] = useState(products_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message : '', message_type:'info'});\r\n  const [errors,setErrors] = useState(products_errors_init)\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === product.category_id\r\n      );\r\n\r\n      const uploadTask = firebase.storage\r\n        .ref(`products/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`products/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setProduct({\r\n                ...product,\r\n                product_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      setInline({ message: error.message, message_type: \"error\" });\r\n    }\r\n\r\n  };\r\n\r\n  const FileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doSaveProduct = async e => {\r\n    e.preventDefault();\r\n    let product_to_save = Object.assign({}, product);\r\n    product_to_save.uid = firebase.auth.currentUser.uid;\r\n    console.log(\"Product to Save\", product_to_save);\r\n    const product_data = JSON.stringify(product);\r\n    RequestsAPI.saveProduct(product).then(results => {\r\n        if(results.status){\r\n          setProduct(results.payload);\r\n          setInline({ message: 'successfully saved product', message_type: \"info\" });\r\n        }else{\r\n          setInline({ message: results.error.message, message_type: \"error\" });\r\n        }              \r\n    }).catch(error => {\r\n        setInline({ message: error.message, message_type: \"error\" });\r\n    });\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_product_name = () => {\r\n      if(Utils.isEmpty(product.product_name)){\r\n        setErrors({\r\n          ...errors,\r\n          product_name_error : 'product name field cannot be empty'\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_description = () => {\r\n      if(Utils.isEmpty(product.description)){\r\n        setErrors({...errors,description_error : 'product description cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = () => {\r\n      if(Utils.isMoney(product.price)){\r\n        setErrors({...errors,price_error: 'product price is invalid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_product_art = () => {\r\n      if(Utils.isEmpty(product.product_art)){\r\n        setErrors({...errors,product_art_error : 'product art is not valid'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_category_id = () => {\r\n      if(Utils.isEmpty(product.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select main category type'});\r\n      }\r\n    }\r\n\r\n    const do_check_errors = () => {\r\n        check_product_name() ? isError = true : isError = isError;\r\n        check_product_description() ? (isError = true) : (isError = isError);\r\n        check_price() ? (isError = true) : (isError = isError);\r\n        check_product_art() ? (isError = true) : (isError = isError);\r\n        check_category_id() ? (isError = true) : (isError = isError);\r\n        return isError;\r\n    }\r\n\r\n\r\n    return await do_check_errors();     \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let category_type = 'products';\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log('Category results',results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Product</strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"product_name\"\r\n              value={product.product_name}\r\n              placeholder=\"Product Name...\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.product_name_error ? (\r\n              <InlineError message={errors.product_name_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Product Description...\"\r\n              value={product.description}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? (\r\n              <InlineError message={errors.description_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Product Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Product Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={product.price}\r\n              onChange={e =>\r\n                setProduct({ ...product, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? (\r\n              <InlineError message={errors.price_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Product Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"product_art\"\r\n              onChange={e => FileArtChange(e)}\r\n            />\r\n            {errors.product_art_error ? (\r\n              <InlineError message={errors.product_art_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-product-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Product Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={product.product_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-product\"\r\n              onClick={e =>\r\n                checkErrors(e).then(isError => {\r\n                  if (isError) {\r\n                    doSaveProduct(e).then(result => {\r\n                      console.log(\"Product saved\");\r\n                    });\r\n                  } else {\r\n                    setInline({\r\n                      message: \"there was an error processing form\",\r\n                      message_type: \"error\"\r\n                    });\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Product\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setErrors(products_errors_init);\r\n                setInline({ message: \"\", message_type: \"info\" });\r\n                setProduct(products_init);\r\n              }}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {inline.message ? (\r\n              <InlineMessage\r\n                message={inline.message}\r\n                message_type={inline.message_type}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddService() {\r\n  const [service, setService] = useState(service_init);\r\n  const [errors,setErrors] = useState(service_errors_init);\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [categories,setCategories] = useState([]);\r\n  const [uploaded, setUploaded] = useState({\r\n    image: \"\",\r\n    url: \"\",\r\n    size: 0,\r\n    filename: \"\",\r\n    progress: 0\r\n  });\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n    try {\r\n      let category = categories.find(\r\n        category => category.category_id === service.category_id\r\n      );\r\n      const uploadTask = firebase.storage\r\n        .ref(`services/${category.sub_category}/${image.name}`)\r\n        .put(image);\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          //progress\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setUploaded({ ...uploaded, progress });\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        },\r\n        () => {\r\n          // complete function\r\n          firebase.storage\r\n            .ref(`services/${category.sub_category}`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              console.log(url);\r\n              setService({\r\n                ...service,\r\n                service_art: url\r\n              });\r\n            });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error)\r\n      setInline({message:'please fill in the form correctly before you upload service art',message_type:'error'});\r\n    }\r\n\r\n  };\r\n\r\n  const fileArtChange = async e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  const checkErrors = async e => {\r\n    let isError = false;\r\n\r\n    const check_service_name = () => {\r\n      if(Utils.isEmpty(service.service_name)){\r\n        setErrors({...errors,service_name_error : 'service name field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_description = e => {\r\n      if(Utils.isEmpty(service.description)){\r\n        setErrors({...errors,description_error : 'service description field cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_service_art = e => {\r\n      if(Utils.isEmpty(service.service_art)){\r\n        setErrors({...errors,service_art_error : 'service art cannot be empty'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const check_price = e => {\r\n      \r\n        if(Utils.isMoney(service.price)){\r\n          setErrors({...errors,price_error:'invalid service price'});\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const check_service_category = e => {\r\n      if(Utils.isEmpty(service.category_id)){\r\n        setErrors({...errors,category_id_error : 'please select service category'});\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const do_check =  e => {\r\n      check_service_name() ? isError = true : isError = false;\r\n      check_service_description() ? isError = true : isError = false;\r\n      check_service_art() ? isError = true : isError = false;\r\n      check_price() ? isError = true : isError = false;\r\n      check_service_category() ? isError = true : isError = false;\r\n\r\n      return isError;\r\n      \r\n    } \r\n\r\n\r\n    return await do_check();\r\n    \r\n  }\r\n\r\n\r\n  const addService = async e => {\r\n      let my_service = Object.assign({},service);\r\n      my_service.uid = firebase.auth.currentUser.uid;\r\n      RequestsAPI.doAddService(JSON.stringify(my_service)).then(results => {\r\n          if(results.status){\r\n            setService(results.payload);\r\n            setInline({message:'successfully saved service',message_type:'info'});\r\n          }else{\r\n            setInline({message:results.error.message,message_type:'error'});\r\n          }\r\n      }).catch(error => {\r\n        setInline({message:error.message,message_type:'error'});\r\n      });\r\n\r\n      return true;\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    let category_type = \"services\";\r\n    RequestsAPI.fetchCategories(category_type).then(results => {\r\n      console.log(\"Category results\", results);\r\n      setCategories(results);\r\n    });\r\n    return () => {\r\n      setCategories([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>Add Service</strong>\r\n          </h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"service_name\"\r\n              value={service.service_name}\r\n              placeholder=\"Service Name...\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.service_name_error ? <InlineError message={errors.service_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Service Description...\"\r\n              value={service.description}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Categories</label>\r\n            <select\r\n              name=\"category_id\"\r\n              className=\"form-control\"\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            >\r\n              <option value={null}>Select Service Category</option>\r\n              {categories.map(category => {\r\n                console.log(\"What the hell\", category);\r\n                return (\r\n                  <option value={category.category_id}>\r\n                    {\" \"}\r\n                    {category.sub_category} - {category.category_name}{\" \"}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.category_id_error ? (\r\n              <InlineError message={errors.category_id_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"price\"\r\n              placeholder=\"Price in ZAR...\"\r\n              value={service.price}\r\n              onChange={e =>\r\n                setService({ ...service, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.price_error ? <InlineError message={errors.price_error} />  : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Service Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              name=\"service_art\"\r\n              onChange={e => fileArtChange(e)}\r\n            />\r\n            {errors.service_art_error ? <InlineError message={errors.service_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              onClick={e => doUpload(e).then(results => {console.log(results)})}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Service Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img\r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={\r\n                  service.service_art ||\r\n                  \"https://via.placeholder.com/300/09f/fff.png\"\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button \r\n            typoe='button'\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={e => checkErrors(e).then(isError => {\r\n              isError ?\r\n                setInline({message:'there was an error processing form'})\r\n              : AddService(e).then(results => {\r\n                    console.log(results);\r\n              })\r\n            })}\r\n            \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Add Service\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={e => {\r\n                setService(service_init);\r\n                setErrors(service_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}>\r\n              <strong>\r\n                <i className=\"fa fa-eraser\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction AddCategories() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(category_init);\r\n  const [uploaded, setUploaded] = useState({image: \"\",url: \"\",size: 0,filename: \"\",progress: 0});\r\n  const [inline,setInline] = useState({message:'',message_type:'info'});\r\n  const [errors, setErrors] = useState(category_errors_init);\r\n\r\n  const CategoryArtFileChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      console.log(image);\r\n      setUploaded({\r\n        ...uploaded,\r\n        image: image\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const doUpload = async e => {\r\n    const { image } = uploaded;\r\n\r\n    const uploadTask = firebase.storage.ref(`categories/${image.name}`).put(image);\r\n        await uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n            //progress\r\n            const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setUploaded({\r\n            ...uploaded,\r\n            progress\r\n            });\r\n        },\r\n        error => {\r\n            //error function\r\n            console.log(error.message);\r\n        },\r\n        () => {\r\n            // complete function\r\n            firebase.storage\r\n            .ref(\"categories\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                console.log(url);\r\n                setCategory({\r\n                ...category,\r\n                category_art: url\r\n                });\r\n            });\r\n      }\r\n    );\r\n  };\r\n\r\n  const doAddCategory = async e => {\r\n        // e.preventDefault();\r\n        let my_category = Object.assign({},category);\r\n        my_category.uid = firebase.auth.currentUser.uid;\r\n        my_category = JSON.stringify(my_category);\r\n        console.log(\"CATEGORY\", my_category);\r\n        RequestsAPI.saveCategory(my_category).then(results => {\r\n            setCategory(results);\r\n            setCategories({ categories: categories.push(results) });\r\n            setInline({ message: \"successfully created new category\" });\r\n          })\r\n          .catch(error => {\r\n            setInline({ message: error.message, message_type: \"error\" });\r\n          });\r\n  };\r\n\r\n  const checkErrors = async e => {\r\n        // e.preventDefault();\r\n        let isError = false;\r\n        const check_category_name = () => {\r\n            if(Utils.isEmpty(category.category_name)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_name_error: 'category name cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_type = () => {    \r\n            if(Utils.isEmpty(category.category_type)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_type_error : 'Please select category type'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_sub_category = () => {\r\n            if(Utils.isEmpty(category.sub_category)){\r\n                setErrors({\r\n                    ...errors,\r\n                    sub_category_error: 'sub category cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_description = () => {\r\n            if(Utils.isEmpty(category.description)){\r\n                setErrors({\r\n                    ...errors,\r\n                    description_error : 'description cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const check_notes = () => {\r\n            if(Utils.isEmpty(category.notes)){\r\n                setErrors({\r\n                    ...errors,\r\n                    notes_error : 'Notes cannot be empty'\r\n                });\r\n                return true\r\n            }\r\n            return false;\r\n        }\r\n        const check_category_art = () => {\r\n            if(Utils.isEmpty(category.category_art)){\r\n                setErrors({\r\n                    ...errors,\r\n                    category_art_error : 'Category Art cannot be empty'\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        const do_check = () => {\r\n            check_category_name() ? isError = true : isError = isError;\r\n            check_category_type() ? isError = true : isError = isError;\r\n            check_sub_category() ? isError = true : isError = isError;\r\n            check_description() ? isError = true : isError = isError;\r\n            check_notes() ? isError = true : isError = isError;\r\n            check_category_art() ? isError = true : isError = isError;\r\n\r\n            return isError;\r\n        }\r\n\r\n        return await do_check();\r\n  };\r\n\r\n\r\n\r\n  const placeholder = \"https://via.placeholder.com/300/09f/fff.png\";\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-bookmark-o\"></i> Add Categories\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <form className=\"form-horizontal\">\r\n          <div className=\"form-group\">\r\n            <label>Category Type </label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_type\"\r\n              value={category.category_type}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }>\r\n                <option value={null}>Select Product or Service Category Type</option>\r\n                <option value=\"products\">Products</option>\r\n                <option value=\"services\">Services</option>\r\n            </select>\r\n            {errors.category_type_error ? <InlineError message={errors.category_type_error} /> : ''}\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n              <input \r\n                type='text' \r\n                className='form-control'\r\n                name='sub_category'\r\n                placeholder='Sub Category...'\r\n                value={category.sub_category}\r\n                onChange={e =>setCategory({ ...category, [e.target.name]: e.target.value })}\r\n            />\r\n            {errors.sub_category_error ? <InlineError message={errors.sub_category_error} /> : ''}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"category_name\"\r\n              placeholder=\"Category Name...\"\r\n              value={category.category_name}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n            />\r\n            {errors.category_name_error ? <InlineError message={errors.category_name_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              \r\n              className=\"form-control\"\r\n              name=\"description\"\r\n              placeholder=\"Description...\"\r\n              value={category.description}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.description_error ? <InlineError message={errors.description_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"notes\"\r\n              placeholder=\"Notes...\"\r\n              value={category.notes}\r\n              onChange={e =>\r\n                setCategory({ ...category, [e.target.name]: e.target.value })\r\n              }\r\n\r\n            />\r\n            {errors.notes_error ? <InlineError message={errors.notes_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Category Art</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={e => CategoryArtFileChange(e)}\r\n            />\r\n            {errors.category_art_error ? <InlineError message={errors.category_art_error} /> : ''}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-bitbucket btn-lg\"\r\n              name=\"upload-category-art\"\r\n              onClick={e => doUpload(e)}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-cloud-upload\"> </i> Upload Category Art\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"polaroid\">\r\n              <img                \r\n                height=\"300\"\r\n                width=\"300\"\r\n                src={category.category_art || placeholder}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-lg\"\r\n              name=\"save-category\"\r\n              onClick={e => checkErrors(e).then(isError => {\r\n                  isError ? setInline({message: 'there was an error processing form ', message_type:'error'}) \r\n                    : doAddCategory(e)\r\n              }) }\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Save Category\r\n              </strong>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-lg\"\r\n              name=\"reset-category\"\r\n              onClick = {e => {\r\n                setCategory(category_init);\r\n                setErrors(category_errors_init);\r\n                setInline({message:'',message_type:'info'});\r\n              }}              \r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-save\"> </i> Reset\r\n              </strong>\r\n            </button>\r\n          </div>\r\n          <div className='form-group'>\r\n              { inline.message ? <InlineMessage message={inline.message} message_type={inline.message_type} /> : ''}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default function MyMarket() {\r\n  const [display, setDisplay] = useState(\"add-categories\");\r\n  const [product, setProduct] = useState(products_init);\r\n  const [service, setService] = useState(service_init);\r\n  \r\n  let my_header;\r\n  Utils.isMobile()\r\n    ? (my_header = () => (\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n              Services\r\n            </strong>\r\n          </h3>\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-dark\"\r\n              name=\"add-categories\"\r\n              onClick={e => setDisplay(e.target.name)}\r\n            >\r\n              <i className=\"fa fa-bookmark\"> </i> Categories\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-dark\"\r\n              name=\"add-products\"\r\n              onClick={e => setDisplay(e.target.name)}\r\n            >\r\n              <i className=\"fa fa-shopping-bag\"> </i> Products\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool btn-outline-dark\"\r\n              name=\"add-services\"\r\n              onClick={e => setDisplay(e.target.name)}\r\n            >\r\n              <i className=\"fa fa-shopping-cart\"> </i> Services\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))\r\n    : (my_header = () => (\r\n        <Fragment>\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <i className=\"fa fa-shopping-basket\"> </i> My Products &amp;\r\n                Services\r\n              </strong>\r\n            </h3>\r\n\r\n            <div className=\"box-tools\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"add-categories\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-bookmark\"> </i> Add Categories\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"add-products\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-shopping-bag\"> </i> Add Products\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-box-tool btn-outline-dark\"\r\n                name=\"add-services\"\r\n                onClick={e => setDisplay(e.target.name)}\r\n              >\r\n                <i className=\"fa fa-shopping-cart\"> </i> Add Services\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ));\r\n   \r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        {my_header()}  \r\n        {display === \"add-products\" ? <AddProduct /> : \"\"}\r\n        {display === \"add-services\" ? <AddService /> : \"\"}\r\n        {display === \"add-categories\" ? <AddCategories /> : \"\"}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\nimport { routes } from \"../../constants\";\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n\tstate = {\r\n\t\tdashboard_user : {}\r\n\t}\r\n\r\n\tcomponentWillMount = e => {\r\n\t\tconsole.log('Console log ', e);\r\n\t\t// request from backend the uid of user allowed to access dashboard\r\n\t\t// if user uid is the same as the loggedin user please proceed otherwise \r\n\t\t// display message indicating that the user is not authorized to access dashboard\r\n\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n      <UserAccountContext.Consumer>{(context) => {\r\n\t\t  const {\r\n\t\t\t  user_account_state\r\n\t\t  } = context;\r\n\r\n\t\t  if (user_account_state.user_account.uid === this.state.dashboard_user.uid){\r\n\t\t  return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-dashboard\"> </i> Dashboard{\" \"}\r\n                </strong>\r\n              </h3>\r\n\r\n              <div className=\"box-tools\">\r\n                <button className=\"btn btn-box-tool\">\r\n                  {\" \"}\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-callout-info\"> </i> Add Folder{\" \"}\r\n                  </strong>{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}else{\r\n\t\t\t  return (\r\n          <Fragment>\r\n            <div className=\"box box-danger\">\r\n              <div className=\"box box-header\">\r\n                <h3 className=\"box-title\">\r\n                  <strong>\r\n                    {\" \"}\r\n                    <i className=\"fa fa-dashboard\"> </i> Dashboard{\" \"}\r\n                  </strong>\r\n                  <hr />\r\n                </h3>\r\n                <div className=\"box box-warning\">\r\n                  <span className=\"error-content\">\r\n                    <em>\r\n                      Unfortunately you are not authorized to access\r\n                      dashboard page\r\n                    </em>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        );}\r\n\t  }}\r\n      </UserAccountContext.Consumer>\r\n    );\r\n\t}\r\n}\r\n","import Axios from 'axios';\r\n\r\nfunction return_date(){\r\n\tconst now = new Date();\r\n\tconst this_year = now.getFullYear();\r\n\tconst this_month = now.getMonth();\r\n\tconst this_day = now.getDate();\r\n\treturn this_year + '-' + this_month + '-' + this_day;\r\n}\r\n\r\nfunction return_page_size(){\r\n\t// consider checking the backend for page size\r\n\treturn 20;\r\n}\r\n\r\nlet articles_api = {\r\n\tapiKey : '41e896a0a1c94b61903408fae1a49471',\r\n\tthis_date : return_date(),\r\n\tthis_pagesize :return_page_size(),\r\n\tentertainment_news: 'https://newsapi.org/v2/top-headlines?country=za&category=entertainment&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n\tsports_news: 'https://newsapi.org/v2/top-headlines?country=za&category=sports&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    business_news: 'https://newsapi.org/v2/top-headlines?country=za&category=business&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    tech_news: 'https://newsapi.org/v2/top-headlines?country=za&category=technology&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    science_news: 'https://newsapi.org/v2/top-headlines?country=za&category=science&apiKey=41e896a0a1c94b61903408fae1a49471',\r\n    health_news: 'https://newsapi.org/v2/top-headlines?country=za&category=health&apiKey=41e896a0a1c94b61903408fae1a49471'\r\n};\r\nexport async function get_blog_articles(category) {\t\r\n\tlet results = '';\r\n\tlet apiRequest = '';\r\n    console.log('CATEGORY',category);\t\r\n\t\tswitch(category){\r\n            case 'entertainment': apiRequest = articles_api.entertainment_news;break;\r\n            case 'sports' : apiRequest = articles_api.sports_news;break;\r\n            case 'business' : apiRequest = articles_api.business_news;break;\r\n            case 'tech' : apiRequest = articles_api.tech_news;break;\r\n            case 'science': apiRequest = articles_api.science_news;break;\r\n            case 'health' : apiRequest = articles_api.health_news;break;\r\n            default: apiRequest = articles_api.entertainment_news;break;        \r\n        }\r\n        \r\n\tawait Axios.get(apiRequest).then(result => {\r\n\t\tif (result.status === 200) {\r\n\t\t\treturn result.data;\r\n\t\t} else {\r\n\t\t\tthrow new Error('There was an error fetching articles');\r\n\t\t}\r\n\t}).then(articles => {\r\n\t\tresults = articles;\r\n\t}).catch(error => {\r\n\t\tconsole.log(error);\r\n\t});\r\n\tconsole.log('RESULTS : ', results);\r\n\treturn results.articles;\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport './Blog.css';\r\nimport {useForceUpdate} from '../hooks/forceUpdate';\r\nimport {get_blog_articles} from './articles';\r\nlet blog_posts = '';\r\n\r\n\r\nfunction BlogPost({ post_data }) {\r\n\tconst [post, setPost] = useState({});\r\n\r\n\tlet article = post_data;\r\n\tconsole.log('Articles',article);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"box box-body with-border\">\r\n\t\t\t\t<div className=\"box box-header with-border\">\r\n\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t<h2 className=\"box-title\">{article.title}</h2>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"polaroid\">\r\n\t\t\t\t\t<img src={article.urlToImage} className=\"pola-image\" />\r\n\t\t\t\t\t<div className=\"polatext\">{article.description}</div>\r\n\t\t\t\t\t<div className=\"box box-footer with-border\">\r\n\t\t\t\t\t\t<a href={article.url} target=\"_blank\">\r\n\t\t\t\t\t\t\t<h3 className=\"box-title\">\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{article.source.name} - {article.author}{' '}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-primary'\r\n\t\t\t\t\t\t\tonClick={e => {}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fa fa-file-pdf-o'> </i>{' '}\r\n              Read more...\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default function Blog() {\r\n\tconst[category,setCategory] = useState('entertainment');\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst forceUpdate = useForceUpdate();\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tlet blog_posts = await get_blog_articles(category);\t\t\t\r\n\t\t\tsetPosts(blog_posts);\r\n\t\t}\r\n\t\tfetchData();    \r\n\t\tforceUpdate();\r\n\t\tconsole.log('Force update called');\r\n\r\n\t}, [category]);\r\n  \r\n  const title = `${category[0].toUpperCase()}${category.slice(1)} News`;\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <i className=\"fa fa-file-text\"> </i> Blog{\" \"}\r\n            </strong>\r\n          </h3>\r\n\r\n          <div className=\"box-tools\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"pages\"\r\n              onClick={() => setCategory(\"entertainment\")}\r\n            >\r\n              <i className=\"fa fa-folder\"> </i> Entertainment{\" \"}\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"posts\"\r\n              onClick={() => setCategory(\"sports\")}\r\n            >\r\n              <i className=\"fa fa-folder\"> </i> Sports{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"categories\"\r\n              onClick={() => setCategory(\"business\")}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-folder\"> </i> Business{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"categories\"\r\n              onClick={() => setCategory(\"tech\")}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-folder\"> </i> Tech{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-box-tool\"\r\n              name=\"categories\"\r\n              onClick={() => setCategory(\"science\")}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-folder\"> </i> Science{\" \"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className='btn btn-box-tool'\r\n              name='categories'\r\n              onClick={() => setCategory(\"health\")}\r\n            >{\" \"} <i className='fa fa-folder'> </i> Health\r\n\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box box-footer\">\r\n          <div className=\"box box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                {\" \"}\r\n                <i className=\"fa fa-files-o\"> </i> {title}{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          {posts.map((post, index) => {\r\n            return <BlogPost post_data={post} key={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport function useForceUpdate() {\r\n  const [, setTick] = useState(0);\r\n  const update = () => {\r\n    setTick(tick => tick + 1);\r\n  };\r\n  return update;\r\n}\r\n","import React,{Fragment,useState,useEffect,useContext} from 'react';\r\nimport Switch from 'react-switch';\r\n\r\n\r\nimport { UserAccountContext } from \"../../context/UserAccount/userAccountContext\";\r\n\r\nfunction Verifications({ user_account, doSendEmailVerification }) {\r\n  const [verifications, setVerifications] = useState({\r\n    use_onetime_pin: false,\r\n    cell: user_account.phoneNumber,\r\n    account_verified: user_account.emailVerified\r\n  });\r\n\r\n  let toggleVerifications = e => {\r\n    setVerifications({\r\n      use_onetime_pin: !verifications.use_onetime_pin,\r\n      cell: verifications.cell,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n\r\n  let OnChangeHandler = e => {\r\n    setVerifications({\r\n      use_onetime_pin: verifications.use_onetime_pin,\r\n      cell: e.target.value,\r\n      account_verified: verifications.account_verified\r\n    });\r\n  };\r\n  let UpdateVerifications = e => {\r\n    console.log(\"Updating verifications\");\r\n    //TODO- this means that i have to actually send a verification\r\n    //sms to the old number and then to the new number\r\n  };\r\n\r\n  let onAccountVerify = e => {\r\n    console.log(\"on Account verifications\");\r\n    //Send verification email from firebase\r\n    doSendEmailVerification();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              {\" \"}\r\n              <small>\r\n                <i className=\"fa fa-lock\"> </i>\r\n                Verifications &amp; Security Settings\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n        <div className=\"box-footer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">Account Verification Status</h3>\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        <Switch\r\n                          name=\"account-verified\"\r\n                          checked={verifications.account_verified}\r\n                          onChange={e => onAccountVerify(e)}\r\n                        />\r\n                        <span className=\"box-title\">\r\n                          {verifications.account_verified\r\n                            ? \"Account is Verified\"\r\n                            : \"Account not verified\"}\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"verification-email\"\r\n                        value={user_account.email}\r\n                      />\r\n                    </div>\r\n                    {verifications.account_verified ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-google\"\r\n                          name=\"sendverificationEmail\"\r\n                          onClick={e => onAccountVerify(e)}\r\n                        >\r\n                          <strong>\r\n                            <i className=\"fa fa-send\"> </i> Send Verification\r\n                            Email\r\n                          </strong>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"box box-body\">\r\n                <div className=\"box box-header\">\r\n                  <h3 className=\"box-title\">One Time Pin</h3>\r\n                </div>\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      <Switch\r\n                        name=\"verifications_active\"\r\n                        onChange={e => toggleVerifications(e)}\r\n                        checked={verifications.use_onetime_pin}\r\n                      />\r\n\r\n                      <span> OTP SMS (ONE TIME PIN) </span>\r\n                      {\"  \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group-addon\">\r\n                      <div className=\"input-group\" />\r\n                      <i className=\"fa fa-mobile-phone\"> </i> Cell\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"cell\"\r\n                      onChange={e => OnChangeHandler(e)}\r\n                      value={verifications.cell}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-google btn-lg\"\r\n                      name=\"update-verifications\"\r\n                      onClick={e => UpdateVerifications(e)}\r\n                    >\r\n                      <strong>\r\n                        <i className=\"fa fa-mobile-phone\"> </i> Update\r\n                        Verifications\r\n                      </strong>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nfunction AccountSettings(){\r\n\r\n    const[accountSettings,setAccountSettings] = useState({\r\n        account_active: true,\r\n        receive_job_offers:true,\r\n        receive_sms:true,        \r\n        receive_email:true\r\n    });\r\n\r\n    let onToggleSettings = target => {\r\n      console.log(target);\r\n      switch(target){\r\n        case  'account_active':{ \r\n          console.log('Setting account active');\r\n          setAccountSettings(\r\n                {\r\n                  ...accountSettings,\r\n                  account_active: !accountSettings.account_active\r\n                }\r\n              );break;\r\n        }\r\n        \r\n        case 'receive_job_offers':{ \r\n          console.log(\"Setting receive job offers\");\r\n          setAccountSettings({\r\n          ...accountSettings,\r\n          receive_job_offers: !accountSettings.receive_job_offers,\r\n        });break;\r\n        }\r\n        \r\n        case 'receive_sms':{\r\n          console.log('setting receive sms');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_sms: !accountSettings.receive_sms\r\n          });break;\r\n        }\r\n        \r\n        case 'receive_email':{ console.log('setting receive email');\r\n          setAccountSettings({\r\n            ...accountSettings,\r\n            receive_email: !accountSettings.receive_email\r\n          });break;\r\n        }\r\n    }\r\n    }\r\n\r\n    let UpdateAccountSettings = e => {\r\n      console.log('Updating account settings');\r\n      // store settings in locaStorage\r\n      // save settings in the backend\r\n    }\r\n\r\n    let onLoadAccountSettings = e => {\r\n      console.log('Loading account settings');\r\n      // load settings from backend  -> then\r\n        // save in store\r\n      // if backend load failed the load from store\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"box box-body\">\r\n          <div className=\"box-header\">\r\n            <h3 className=\"box-title\">\r\n              <strong>\r\n                <small>\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings{\" \"}\r\n                </small>{\" \"}\r\n              </strong>\r\n            </h3>\r\n          </div>\r\n          <div className=\"box-footer\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name='account_active'\r\n                    onChange={e => onToggleSettings(\"account_active\")}\r\n                    checked={accountSettings.account_active}\r\n                  />\r\n\r\n                  <span title={\"Close Account\"}>\r\n                    {\"  \"}\r\n                    <em> Account Status</em>{\" \"}\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_job_offers\"\r\n                    onChange={e => onToggleSettings(\"receive_job_offers\")}\r\n                    checked={accountSettings.receive_job_offers}\r\n                  />\r\n                  <span>Receive Job Offers </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_sms\"\r\n                    onChange={e => onToggleSettings(\"receive_sms\")}\r\n                    checked={accountSettings.receive_sms}\r\n                  />\r\n                  <span>Receive SMS Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <Switch\r\n                    name=\"receive_email\"\r\n                    onChange={e => onToggleSettings(\"receive_email\")}\r\n                    checked={accountSettings.receive_email}\r\n                  />\r\n                  <span>Receive Email Notifications </span>\r\n                  {\"  \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-lg\"\r\n                  name=\"update-account-settings\"\r\n                  onClick={e => UpdateAccountSettings(e)}\r\n                >\r\n                  <strong>\r\n                    <i className=\"fa fa-save\"> </i> Update Account Settings\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\n\r\n\t// uid : '',\r\n\t// displayName : '',\r\n\t// photoURL : '',\r\n\t// email : '',\r\n\t// password : '',\r\n\t// emailVerified : false,\r\n\t// phoneNumber : '',\r\n\t// isAnonymous : false,\r\n\t// providerId : 'password',\r\n\r\nfunction PersonalDetails({user_account}){\r\n    const [personalDetails, setPersonalDetails] = useState({\r\n      userid: user_account.uid,\r\n      names: \"\",\r\n      surname: \"\",\r\n      cell: user_account.phoneNumber,\r\n      email: user_account.email\r\n    });\r\n\r\n    const{\r\n      userid,\r\n      names,\r\n      surname,\r\n      cell,\r\n      email\r\n    } = personalDetails;\r\n\r\n    let onChangeHandler = e => {\r\n      setPersonalDetails({\r\n        ...personalDetails,\r\n        [e.target.name]:e.target.value\r\n      });\r\n    };\r\n\r\n    let onUpdatePersonalDetails = e => {\r\n        console.log('Updating personal details');\r\n        // check for errors if found indicate the errors and exit\r\n        // save personal details on localStorage. then save on backend\r\n    };\r\n\r\n    console.log('USER ACCOUNT',userid);\r\n\r\n    return (\r\n      <div className=\"box box-body\">\r\n        <div className=\"box-header\">\r\n          <h3 className=\"box-title\">\r\n            <strong>\r\n              <small>\r\n                {\" \"}\r\n                <i className=\"fa fa-user\"> </i> Personal Details{\" \"}\r\n              </small>\r\n            </strong>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"box-footer col-lg-8\">\r\n          <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"names\"\r\n                placeholder=\"Names...\"\r\n                value={names}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"surname\"\r\n                placeholder=\"Surname...\"\r\n                value={surname}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"cell\"\r\n                placeholder=\"Cell...\"\r\n                value={cell}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Email...\"\r\n                value={email}\r\n                onChange={e => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success btn-lg\"\r\n                name=\"update\"\r\n                onClick={e => onUpdatePersonalDetails(e)}\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cloud-upload\"> </i> Update\r\n                </strong>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning btn-lg\"\r\n                name=\"cancel\"\r\n              >\r\n                <strong>\r\n                  <i className=\"fa fa-cut\"> </i> Cancel\r\n                </strong>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default function Account (){\r\n    const [display, setDisplay] = useState(\"personaldetails\");\r\n    \r\n    let onSwitchScreen = (e) => {\r\n        setDisplay(e.target.name);\r\n        console.log(display);        \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      console.log(display);\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <UserAccountContext.Consumer>{(context) => {\r\n      const { doSendEmailVerification, user_account_state } = context;\r\n      return (\r\n        <Fragment>\r\n          <div className=\"box box-body\">\r\n            <div className=\"box-header\">\r\n              <h3 className=\"box-title\">\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"> </i> Account\r\n                </strong>\r\n              </h3>\r\n              <div className=\"box-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name=\"personaldetails\"\r\n                  onClick={e => onSwitchScreen(e)}\r\n                >\r\n                  <i className=\"fa fa-user\"> </i> Personal Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name=\"verifications\"\r\n                  onClick={e => onSwitchScreen(e)}\r\n                >\r\n                  <i className=\"fa fa-lock\"> </i> Verifications\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-box-tool\"\r\n                  name=\"accountsettings\"\r\n                  onClick={e => onSwitchScreen(e)}\r\n                >\r\n                  <i className=\"fa fa-cogs\"> </i> Account Settings\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {display === \"personaldetails\" ? (\r\n              <PersonalDetails\r\n                user_account={user_account_state.user_account}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {display === \"accountsettings\" ? <AccountSettings /> : \"\"}\r\n            {display === \"verifications\" ? (\r\n              <Verifications\r\n                user_account={user_account_state.user_account}\r\n                doSendEmailVerification={doSendEmailVerification}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }}\r\n    </UserAccountContext.Consumer>\r\n  );\r\n}\r\n","import React,{Fragment,useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  physical_address_init,\r\n  physical_address_errors_init\r\n} from \"../market-constants\";\r\n\r\nconst PhysicalAddress = () => {\r\n    const [physical,setPhysical] = useState(physical_address_init);\r\n    const [errors,setErrors] = useState(physical_address_errors_init);\r\n    const [inline,setInline] = useState({message: '',message_type:'info'});\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 \r\n                        className='box-title' \r\n                        title={'an address where your service should be rendered or where you are located if a service is virtual'}\r\n                    >\r\n                        <i className='fa fa-map-marker'> </i> {' '}\r\n                        Delivery Address\r\n                    </h3>\r\n                </div>\r\n\r\n                <form className='form-horizontal'>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            type='text'\r\n                            className='form-control'\r\n                            name='stand'\r\n                            value={physical.stand}\r\n                            onChange={e => setPhysical({...physical,[e.target.name]:e.target.value})}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst PaymentDetails = () => {\r\n\r\n};\r\n\r\n\r\nconst CheckOut = () => {\r\n    const [display,setDisplay] = useState('physical_address');\r\n    return (\r\n        <Fragment>\r\n            <div className='box box-body'>\r\n                <div className='box box-header'>\r\n                    <h3 className='box-title'>\r\n                        <i className='fa fa-shopping-cart'> </i>{' '}\r\n                        Check Out\r\n                    </h3>\r\n                    <div className='box-tools'>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-box-tool btn-outline-dark'\r\n                            name='physical_address'\r\n                            onClick={e => setDisplay(e.target.name)}\r\n                        >\r\n                            <i className='fa fa-map-pin'> </i> {' '}\r\n                            Physical Address\r\n\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>                    \r\n    );\r\n}\r\n\r\nexport default CheckOut;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t// <App />\r\n\t,\r\n    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment,createContext,useReducer,useContext } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport {routes} from '../../constants';\nimport Header from '../Layout/Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Contact from '../Contact/Contact';\nimport Profile from '../Profile/Profile';\nimport Login from '../Auth/Login/Login';\nimport Logout from '../Auth/Logout/Logout';\nimport Signup from '../Auth/Signup/Signup';\nimport SideBar from '../Layout/SideBar/SideBar';\nimport Footer from '../Layout/Footer/Footer';\nimport Forget from '../Auth/Forget/Forget';\nimport Market from '../Market/Market';\nimport MyMarket from '../Market/MyMarket';\n\n\nimport UserAccountContextProvider from '../../context/UserAccount/userAccountContext';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Blog from '../Blog/Blog';\nimport Account from '../Account/Account';\n\nimport CheckOut from '../Market/CheckOut/CheckOut';\n\nexport default function App () {\n\t\n\t\n\treturn (\n    <UserAccountContextProvider>\n      \n      <Fragment>\n        <Router>\n          {/* Header  Component*/}\n          <Header />\n          {/* Sidebar Component */}\n          <SideBar />\n          {/* Body and Main Page Routes */}\n          <div className=\"content-wrapper\">\n            <section className=\"content-header\">\n              <section className=\"content\">\n                <Route exact path={routes.home_page} component={Home} />\n                <Route exact path={routes.about_page} component={About} />\n                <Route exact path={routes.contact_page} component={Contact} />\n                <Route path={routes.login_page} component={Login} />\n                <Route path={routes.logout_page} component={Logout} />\n                <Route path={routes.signup_page} component={Signup} />\n                <Route\n                  path={routes.forget_password_page}\n                  component={Forget}\n                />\n                <Route path={routes.market_page} component={Market} />\n                <Route path={routes.blog_page} component={Blog} />\n                <Route path={routes.dashboard_page} component={Dashboard} />\n                <Route exact path={routes.admin_page} component={Account} />\n\n                <Route exact path={routes.check_out_page} component={CheckOut} />\n                <Route\n                  path={routes.my_market_products}\n                  component={MyMarket}\n                />\n              </section>\n            </section>\n          </div>\n          {/* Footer Component  */}\n          <Footer />\n        </Router>\n      </Fragment>\n    </UserAccountContextProvider>\n  );\n};\n"],"sourceRoot":""}