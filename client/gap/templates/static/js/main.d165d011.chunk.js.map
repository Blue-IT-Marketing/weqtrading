{"version":3,"sources":["constants/routes.js","components/Layout/MenuItems/MenuItems.jsx","components/Layout/Header/Header.jsx","components/Home/Home.jsx","components/About/About.jsx","utilities/index.js","components/Forms/InlineError.jsx","components/Contact/ThisContactForm.jsx","components/Contact/Contact.jsx","components/Profile/Profile.jsx","firebase/firebase.js","types/profileTypes.js","types/walletTypes.js","sms/index.js","firebase/auth.js","components/Auth/Signup/Signup.jsx","actions/userAccountActions/index.js","components/Forms/InlineMessage.jsx","components/Auth/Login/Login.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Footer/Footer.jsx","components/Auth/Forget/Forget.jsx","components/Market/Market.jsx","serviceWorker.js","encryption/index.js","actions/contactDetailsActions/index.js","localstorage/index.js","reducers/profileReducers/userContactDetailsReducer.js","actions/personalDetailsActions/index.js","actions/InlineMessagesActions/index.js","actions/walletActions/index.js","reducers/profileReducers/accountDetailsReducer.js","reducers/profileReducers/personalDetailsReducer.js","reducers/profileReducers/index.js","reducers/walletReducers/accountDetailsReducer.js","reducers/walletReducers/index.js","reducers/inlineMessagesReducer/index.js","reducers/index.js","redux-store/store.js","index.js","components/App/MyApp.jsx"],"names":["home_page","contact_page","about_page","login_page","logout_page","signup_page","forget_password_page","download_page","profile_page","blog_page","market_page","admin_page","dashboard_page","SideBarMenuAuth","react_default","a","createElement","className","react_router_dom","to","routes","title","SideBarMenuNonAuth","MenuItems","props","_useState","useState","user","_useState2","Object","slicedToArray","isLoggedIn","MenuItems_SideBarMenuAuth","MenuItems_SideBarMenuNonAuth","Header","react","data-toggle","data-target","role","onClick","SidebarCollapse","Home","About","Utils","Utilities","today","url","_this","this","classCallCheck","isUrl","RegExp","test","isEmpty","undefined","isProvince","province","province_list","i","length","validateEmail","email","validatePassword","password","validateUsername","username","isNumber","n","isNaN","isCell","isTel","isFax","getAge","dateString","dates","split","d","Date","userday","usermonth","useryear","curday","getDate","curmonth","getMonth","age","getFullYear","isIDNumber","numDaysBetweenDates","firstDate","secondDate","f_dates","s_dates","f_day","parseInt","f_month","f_year","s_day","s_month","s_year","moment","b","diff","countTimeBetweenTwoTimeStamps","stamp_1","stamp_2","e","throttle","func","limit","lastFunc","lastRan","context","args","arguments","clearTimeout","setTimeout","now","apply","debounce","delay","inDebounce","document","documentURI","InlineError","possibleConstructorReturn","getPrototypeOf","call","state","message","Component","contact_form_details","messageid","names","cell","subject","message_read","date_read","date_sent","contact_form_errors","names_error","email_error","cell_error","subject_error","message_error","ThisContactForm","change","contact_form","assign","target","name","value","setState","onSubmitContactForm","preventDefault","console","log","data","JSON","stringify","self","assertThisInitialized","axios","post","then","response","status","form_messages","catch","err","form_response","onCheckErrors","isError","form_errors","do_check_errors","asyncToGenerator","regenerator_default","mark","_callee","check_names_errors","check_email_errors","check_cell_errors","check_subject_errors","check_message_errors","wrap","_context","prev","next","abrupt","stop","results","objectSpread","bind","_this2","placeholder","onChange","InlineError_InlineError","type","Contact","Contact_ThisContactForm","Profile","firebase","apps","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","contact_details_type","user_contact_id","website","facebook","twitter","contact_details_loaded","contact_details_saved","contact_details_updated","contact_details_deleted","verification_sms_sent","sms_verification_code","cell_verified","email_verification_sent","email_verification_link","email_verified","personal_details_type","user_personal_id","surname","nickname","tagline","account_details_type","uid","displayName","photoURL","emailVerified","phoneNumber","isAnonymous","providerId","signing_in","user_signed_in","user_deleted","password_changed","onetime_pin_sent","bank_account_details","bank_id","account_holder","bank_name","branch_code","account_number","account_type","bank_account_errors_details","account_holder_error","bank_name_error","branch_code_error","account_number_error","account_type_error","paypal_account_details","paypal_id","paypal_email","ewallet_account_details","ewallet_id","ewallet_number","ewallet_system","sendOneTimePin","cell_number","doCreateUserWithEmailAndPassword","_ref","result","user_account","createUserWithEmailAndPassword","error","_x","_x2","doSignInWithEmailAndPassword","_ref2","_callee2","_ref3","_context2","signInWithEmailAndPassword","sent","t0","_x3","_x4","doSignOut","_ref4","_callee3","_context3","signOut","doPasswordReset","_ref5","_callee4","email_address","_context4","sendPasswordResetEmail","_x5","doPasswordUpdate","_ref6","_callee5","_context5","currentUser","updatePassword","_x6","doDeleteUser","_ref7","_callee6","_context6","delete","_x7","doSendEmailVerification","_ref8","_callee7","_context7","sendEmailVerification","_x8","doSendOneTimePin","_ref9","_callee8","_context8","_x9","Initial_State","passwordOne","passwordTwo","byPropKey","propertyName","defineProperty","SignUpForm","onSubmit","event","_this$state","history","authUser","_this$state2","isInvalid","disabled","SignUpPage","Signup_SignUpForm","USER_ACCOUNT_ACTIONS","InlineMessage","message_type","Login","showSignUp","prevState","showsignIn","signupText","showsideScreen","Login_SignInForm","user_errors","response_code","onLogin","Signup","SignInForm","_this3","onChangeHandler","_this3$state","_this4","_this$props","password_error","Forms_InlineMessage","connect","profile","account_details","user_account_errors","dispatch","onUserSignedIN","doDispatchUserSignedIn","onUserSignedOut","doDispatchUserSignedOut","payload","code","doDispatchLoginUser","onLogout","doDispatchLogOutUser","onSignUp","doDispatchCreateUser","onChangePassword","doDispatchChangePassword","SideBar","src","id","alt","onSearch","method","Footer","href","Forget","sendRecoveryEmail","Market","Boolean","window","location","hostname","match","random_seed","getTime","Math","floor","random","toString","abs","getRandomString","crypto","SimpleCrypto","encrypt","text","cipher_seed","setSecret","decrypt","CONTACT_DETAILS_ACTIONS","myLocalStore","loadTomemStore","doLoadStateKeys","onLoading","parse","localStorage","getItem","memStoreStateKey","state_keys","forEach","state_key","mem_store_value","mem_store","push","saveMemStore","onSaving","noError","setItem","date","getState","seed","stateKey","serializedState","Error","use_mem_store","stale_period","ContactDetailsInitState","user_contacts","contact_details_errors","website_error","facebook_error","twitter_error","userContactDetailsReducer","actions","PERSONAL_DETAILS_ACTIONS","INLINE_MESSAGES_ACTIONS","USER_BANKING_ACTIONS","USER_PAYPAL_ACTIONS","USER_EWALLET_ACTIONS","UserAccountInitState","displayName_error","photoURL_error","phoneNumber_error","userAccountReducer","PersonalDetailsInitState","user_personal_info","personal_details_errors","surname_error","nickname_error","tagline_error","userPersonalDetailsReducer","profileReducers","combineReducers","contact_details","personal_details","bankAccountInitState","user_bank_account_details","bank_account_errors","paypalAccountInitState","user_paypal_account_details","paypal_errors","paypal_email_error","ewalletAccountInitState","user_ewallet_account_details","ewallet_errors","ewallet_number_error","walletAccountsDetailsReducers","bank_account_info","paypal_account_info","ewallet_account_info","walletReducer","InlineMessageInitState","display_message","display_message_type","rootReducer","wallet","inline_message","middleware","applyMiddleware","compose","thunk","store","createStore","ReactDOM","render","es","Header_Header","react_router","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wuCAEaA,EAAY,IACZC,EAAe,WACfC,EAAa,SACbC,EAAa,SACbC,EAAc,UACdC,EAAc,UACdC,EAAsB,UACtBC,EAAgB,YAChBC,EAAe,WAEfC,EAAY,QACZC,EAAc,UAEdC,EAAa,eACbC,EAAiB,sBCXxBC,EAAkB,WACvB,OACCC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,aACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOpB,UAAWqB,MAAM,2BAA0BP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAzE,IAA2FH,EAAAC,EAAAC,cAAA,wBAC/FF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOlB,WAAYmB,MAAM,SAAQP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAxD,IAA0EH,EAAAC,EAAAC,cAAA,yBAC9EF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOnB,aAAcoB,MAAM,cAAaP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAA/D,IAAqFH,EAAAC,EAAAC,cAAA,2BACzFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACRL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBADd,IACmCH,EAAAC,EAAAC,cAAA,2BAClCF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAGfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOT,WAAYU,MAAM,uBAAsBP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,KAAzD,IAA4FH,EAAAC,EAAAC,cAAA,0BAA5F,KAAJ,OAGFF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOX,UAAWY,MAAM,4CAA+CP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,KAAjF,IAAiHH,EAAAC,EAAAC,cAAA,wBACrHF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOR,eAAgBS,MAAM,aAAYP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,KAAnD,IAAwFH,EAAAC,EAAAC,cAAA,+BAKzFM,EAAqB,WAC1B,OACCR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOpB,UAAWqB,MAAM,2BAA0BP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAzE,UACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOlB,WAAYmB,MAAM,cAAaP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAA7D,WACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOnB,aAAcoB,MAAM,cAAaP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAA/D,aACWH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOV,YAAaW,MAAM,UAASP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA1D,kBACnBH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOX,UAAWY,MAAM,QAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,KAAzC,IAAyEH,EAAAC,EAAAC,cAAA,wBAC7EF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOjB,WAAYkB,MAAM,SAAQP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,KAA3C,gBAOM,SAASM,EAAWC,GAAO,IAAAC,EACbC,mBAAS,CAACC,KAAK,KADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClCE,EADkCC,EAAA,GAAAA,EAAA,GAEzC,OACCd,EAAAC,EAAAC,cAAA,WAEEW,EAAKI,WAAajB,EAAAC,EAAAC,cAACgB,EAAD,MAAsBlB,EAAAC,EAAAC,cAACiB,EAAD,OCd7BC,MAhCf,SAAgBV,GAMf,OAECV,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACCrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eACjBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOpB,UAAWiB,UAAU,QACrCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,cAA5B,MACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,gBAA1B,aAEDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,KAAGG,GAAG,IAAIF,UAAU,iBAAiBmB,cAAY,YAAYC,cAAY,eAAeC,KAAK,SAASC,aAASC,GAC9G1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,aACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBCpBP,SAASwB,IACvB,OACC3B,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,KAAT,iBAA1B,KAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAERH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAmBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOV,aAAaI,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAb,KAAT,kBAA9B,iBCXlC,SAASyB,IAEpB,OACA5B,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,iIC6JL0B,EAAQ,IAnKf,SAAAC,EAAYC,EAAOC,GAAK,IAAAC,EAAAC,KAAAnB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAJ,GAAAI,KAKxBE,MAAQ,SAACJ,GAQL,OAPc,IAAIK,OAAO,+KAMC,KACXC,KAAKN,IAbAE,KAgBxBK,QAAU,SAACtC,GACP,YAAauC,IAANvC,GAAwB,OAANA,GAAoB,KAANA,GAjBnBiC,KAoBxBO,WAAa,SAACC,GAEV,IADA,IAAIC,EAAgB,CAAC,UAAW,aAAc,aAAc,UAAW,gBAAiB,eAAgB,eAAgB,gBAAiB,qBAChIC,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IACtC,GAAIF,IAAaC,EAAcC,GAC3B,OAAO,EAGf,OAAO,GA3BaV,KA8BxBY,cAAgB,SAACC,GAEb,MADS,yJACCT,KAAKS,IAhCKb,KAmCxBc,iBAAmB,SAACC,GAEhB,OADS,IAAIZ,OAAO,+DACVC,KAAKW,IArCKf,KAwCxBgB,iBAAmB,SAACC,GAEhB,MADS,QACCb,KAAKa,IA1CKjB,KA6CxBkB,SAAW,SAACC,GACR,YAAab,IAANa,GAAiC,mBAAPA,IAAqBC,MAAMD,IA9CxCnB,KAiDxBqB,OAAS,SAACF,GACN,QAAOpB,EAAKmB,SAASC,KAAoB,KAAbA,EAAER,QAAgC,KAAbQ,EAAER,QAAgC,KAAbQ,EAAER,QAAgC,KAAbQ,EAAER,SAlDzEX,KAqDxBsB,MAAQ,SAACH,GACL,YAAab,IAANa,GAAkBpB,EAAKsB,OAAOF,IAtDjBnB,KAyDxBuB,MAAQ,SAACJ,GACL,YAAab,IAANa,GAAkBpB,EAAKsB,OAAOF,IA1DjBnB,KA6DxBwB,OAAS,SAACC,GACN,IAAIC,EAAQD,EAAWE,MAAM,KACzBC,EAAI,IAAIC,KAERC,EAAUJ,EAAM,GAChBK,EAAYL,EAAM,GAClBM,EAAWN,EAAM,GAEjBO,EAASL,EAAEM,UACXC,EAAWP,EAAEQ,WAAa,EAG1BC,EAFUT,EAAEU,cAEIN,EAKpB,OAHKG,EAAWJ,GAAgBI,IAAaJ,GAAcE,EAASH,IAChEO,IAEGA,GA9EarC,KAgFxBuC,WAAa,SAACpB,GACV,YAAab,IAANa,GAAmBpB,EAAKmB,SAASC,IAAqB,KAAbA,EAAER,QAjF9BX,KAmFxBwC,oBAAsB,SAACC,EAAWC,GAE9B,IAAIC,EAAUF,EAAUd,MAAM,KAC1BiB,EAAUF,EAAWf,MAAM,KAI3BkB,EAAQC,SAASH,EAAQ,IACzBI,EAAUD,SAASH,EAAQ,IAC3BK,EAASF,SAASH,EAAQ,IAE1BM,EAAQH,SAASF,EAAQ,IACzBM,EAAUJ,SAASF,EAAQ,IAC3BO,EAASL,SAASF,EAAQ,IAO1B7E,EAAIqF,IAAO,CAACJ,EAAQD,EAASF,IAC7BQ,EAAID,IAAO,CAACD,EAAQD,EAASD,IAEjC,OAAOlF,EAAEuF,KAAKD,EAAG,QAAU,GA1GPrD,KAsHxBuD,8BAAgC,SAACC,EAASC,GACtC,IACI,OAAQD,EAAUC,EACpB,MAAOC,GACL,OAAQZ,SAASU,GAAWV,SAASW,KA1HrBzD,KA8HxB2D,SAAW,SAACC,EAAMC,GACd,IAAIC,EACAC,EACJ,OAAO,WACH,IAAMC,EAAUhE,KACViE,EAAOC,UACRH,GAIDI,aAAaL,GACbA,EAAWM,WAAW,WACdvC,KAAKwC,MAAQN,GAAWF,IACxBD,EAAKU,MAAMN,EAASC,GACpBF,EAAUlC,KAAKwC,QAEpBR,GAAShC,KAAKwC,MAAQN,MATzBH,EAAKU,MAAMN,EAASC,GACpBF,EAAUlC,KAAKwC,SAtIHrE,KAoJxBuE,SAAW,SAACX,EAAMY,GACd,IAAIC,EACJ,OAAO,WACH,IAAMT,EAAUhE,KACViE,EAAOC,UACbC,aAAaM,GACbA,EAAaL,WAAW,kBAAMR,EAAKU,MAAMN,EAASC,IAAOO,KAzJ7DxE,KAAKH,MAAQA,EACbG,KAAKF,IAAMA,EAiKA,CAHP,IAAI+B,KACN6C,SAASC,aCjKEC,cACpB,SAAAA,EAAYpG,GAAM,IAAAuB,EAAA,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAA4E,IACjB7E,EAAAlB,OAAAgG,EAAA,EAAAhG,CAAAmB,KAAAnB,OAAAiG,EAAA,EAAAjG,CAAA+F,GAAAG,KAAA/E,KAAMxB,KACDwG,MAAO,CAACC,QAAUlF,EAAKvB,MAAMyG,SAFjBlF,wEAKjB,OACCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,6BACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,aAAaH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,aAAQgC,KAAKgF,MAAMC,oBATfC,aCC9BC,EAAwB,CACvBC,UAAU,GACVC,MAAQ,GACRxE,MAAQ,GACRyE,KAAM,GACNC,QAAS,GACTN,QAAS,GAETO,cAAe,EACfC,UAAY,GACZC,UAAY,IASpBC,EAAsB,CACdC,YAAc,GACdC,YAAc,GACdC,WAAa,GACbC,cAAgB,GAChBC,cAAgB,IAuObC,cAlOX,SAAAA,IAAc,IAAAlG,EAAA,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAiG,IACVlG,EAAAlB,OAAAgG,EAAA,EAAAhG,CAAAmB,KAAAnB,OAAAiG,EAAA,EAAAjG,CAAAoH,GAAAlB,KAAA/E,QAaJkG,OAAQ,SAACxC,GAEL,IAAIyC,EAAetH,OAAOuH,OAAO,GAAGrG,EAAKiF,MAAMmB,cAC/CA,EAAazC,EAAE2C,OAAOC,MAAQ5C,EAAE2C,OAAOE,MAEvCxG,EAAKyG,SAAS,CACVL,aAAaA,KApBPpG,EAwBd0G,oBAAqB,SAAC/C,GAClBA,EAAEgD,iBACFC,QAAQC,IAAI7G,EAAKiF,MAAMmB,cACvB,IAAIU,EAAOC,KAAKC,UAAUhH,EAAKiF,MAAMmB,cACrCQ,QAAQC,IAAIC,GACZ,IAAIG,EAAInI,OAAAoI,EAAA,EAAApI,CAAAkB,GAERmH,IAAMC,KAAK,mCAAmC,QAAUN,GAAMO,KAAM,SAASC,GACzE,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASR,OAErBO,KAAK,SAASP,GACb,IAAI5B,EAAU4B,EAAK5B,QACnB+B,EAAKR,SAAS,CACVe,cAAetC,MAGpBuC,MAAM,SAASC,GACd,IAAIxC,EAAUwC,EAAIxC,QAClB+B,EAAKR,SAAS,CACVkB,cAAgBzC,OA5CdlF,EAiDd4H,cAAgB,WACZ5H,EAAK6H,SAAU,EACf7H,EAAK8H,YAAehJ,OAAOuH,OAAO,GAAGrG,EAAKiF,MAAM6C,aAChD,IAAIb,EAAInI,OAAAoI,EAAA,EAAApI,CAAAkB,GAERA,EAAK+H,gBAALjJ,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAuB,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAjK,EAAAyK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfR,EAAqB,WAKrB,OAJqD,IAAjDxI,EAAMU,QAAQN,EAAKiF,MAAMmB,aAAad,SACtC2B,EAAKa,YAAYjC,YAAc,8BAC/BoB,EAAKY,SAAU,GAEZ/I,OAAAoI,EAAA,EAAApI,CAAAkB,IAGPqI,EAAqB,WAKvB,OAJ2D,IAAvDzI,EAAMiB,cAAcb,EAAKiF,MAAMmB,aAAatF,SAC5CmG,EAAKa,YAAYhC,YAAc,yBAC/BmB,EAAKY,SAAU,GAEZ/I,OAAAoI,EAAA,EAAApI,CAAAkB,IAGLsI,EAAoB,WAKpB,OAJmD,IAA/C1I,EAAM0B,OAAOtB,EAAKiF,MAAMmB,aAAab,QACrC0B,EAAKa,YAAY/B,WAAa,wBAC9BkB,EAAKY,SAAU,GAEZ/I,OAAAoI,EAAA,EAAApI,CAAAkB,IAGPuI,EAAuB,WAKvB,OAJuD,IAAnD3I,EAAMU,QAAQN,EAAKiF,MAAMmB,aAAaZ,WACtCyB,EAAKa,YAAY9B,cAAgB,2BACjCiB,EAAKY,SAAU,GAEZ/I,OAAAoI,EAAA,EAAApI,CAAAkB,IAGPwI,EAAuB,WAKvB,OAJuD,IAAnD5I,EAAMU,QAAQN,EAAKiF,MAAMmB,aAAalB,WACtC+B,EAAKa,YAAY7B,cAAgB,2BACjCgB,EAAKY,SAAU,GAEZ/I,OAAAoI,EAAA,EAAApI,CAAAkB,IAtCQ0I,EAAAE,KAAA,EAyCbR,IAzCa,cAAAM,EAAAE,KAAA,EA0CbP,IA1Ca,cAAAK,EAAAE,KAAA,GA2CbN,IA3Ca,eAAAI,EAAAE,KAAA,GA4CbL,IA5Ca,eAAAG,EAAAE,KAAA,GA6CbJ,IA7Ca,eAAAE,EAAAG,OAAA,SAiDZ5B,EAAKY,SAjDO,yBAAAa,EAAAI,SAAAX,MAoDvB,IAAIY,EAAU/I,EAAK+H,kBAKnB,OAHA/H,EAAKyG,SAAS,CACVqB,YAAc9H,EAAK8H,cAEhBiB,GA5GP/I,EAAKiF,MAAQ,CACTmB,aAAYtH,OAAAkK,EAAA,EAAAlK,CAAA,GAAOsG,GACnB0C,YAAYhJ,OAAAkK,EAAA,EAAAlK,CAAA,GAAK8G,GACjB4B,cAAgB,IAEpBxH,EAAKmG,OAASnG,EAAKmG,OAAO8C,KAAZnK,OAAAoI,EAAA,EAAApI,CAAAkB,IACdA,EAAK0G,oBAAsB1G,EAAK0G,oBAAoBuC,KAAzBnK,OAAAoI,EAAA,EAAApI,CAAAkB,IAC3BA,EAAK4H,cAAgB5H,EAAK4H,cAAcqB,KAAnBnK,OAAAoI,EAAA,EAAApI,CAAAkB,IAVXA,wEAkHL,IAAAkJ,EAAAjJ,KAEL,OACAlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,IAA2BH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,KAAT,mBAE/BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVqI,KAAK,QACL4C,YAAY,QACZ3C,MAAOvG,KAAKgF,MAAMmB,aAAad,MAC/B8D,SAAU,SAAAzF,GAAC,OAAIuF,EAAK/C,OAAOxC,MAE7B1D,KAAKgF,MAAM6C,YAAYjC,YAAe9H,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAASjF,KAAKgF,MAAM6C,YAAYjC,cAAiB,IAE1G9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVqI,KAAK,QACL4C,YAAY,QACZ3C,MAAOvG,KAAKgF,MAAMmB,aAAatF,MAAOsI,SAAU,SAAAzF,GAAC,OAAIuF,EAAK/C,OAAOxC,MAEnE1D,KAAKgF,MAAM6C,YAAYhC,YAAe/H,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAASjF,KAAKgF,MAAM6C,YAAYhC,cAAiB,IAE1G/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVqI,KAAK,OACL4C,YAAY,OACZ3C,MAAOvG,KAAKgF,MAAMmB,aAAab,KAC/B6D,SAAU,SAAAzF,GAAC,OAAIuF,EAAK/C,OAAOxC,MAE7B1D,KAAKgF,MAAM6C,YAAY/B,WAAchI,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAASjF,KAAKgF,MAAM6C,YAAY/B,aAAgB,IAExGhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVqI,KAAK,UACL4C,YAAY,UACZ3C,MAAOvG,KAAKgF,MAAMmB,aAAaZ,QAC/B4D,SAAU,SAAAzF,GAAC,OAAIuF,EAAK/C,OAAOxC,MAE7B1D,KAAKgF,MAAM6C,YAAY9B,cAAiBjI,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAASjF,KAAKgF,MAAM6C,YAAY9B,gBAAmB,IAE9GjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,YACIC,UAAU,eACVqI,KAAK,UACL4C,YAAY,UACZ3C,MAAOvG,KAAKgF,MAAMmB,aAAalB,QAC/BkE,SAAU,SAAAzF,GAAC,OAAIuF,EAAK/C,OAAOxC,MAE7B1D,KAAKgF,MAAM6C,YAAY7B,cAAiBlI,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAASjF,KAAKgF,MAAM6C,YAAY7B,gBAAkB,IAE7GlI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAAA,UACIqL,KAAK,SACLpL,UAAU,yBACVsB,QAAS,SAAAmE,GACL,IAAIsD,EAAOiC,EACXA,EAAKtB,gBAAgBP,KAAK,SAAS0B,GAC1BA,GAID9B,EAAKR,SAAS,CACVkB,cAAe,8BAGnBf,QAAQC,IAAI,sCAPZI,EAAKP,oBAAoB/C,KAS9B8D,MAAM,SAASC,GACdT,EAAKR,SAAS,CACVkB,cAAeD,EAAIxC,UAEvB0B,QAAQC,IAAI,8CAIpB9I,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,KAAT,oBAEJH,EAAAC,EAAAC,cAAA,UACIqL,KAAM,SACNpL,UAAW,yBACXqI,KAAM,QACN/G,QAAS,SAAAmE,GACLuF,EAAKzC,SAAS,CACVL,aAAYtH,OAAAkK,EAAA,EAAAlK,CAAA,GAAOsG,GACnB0C,YAAYhJ,OAAAkK,EAAA,EAAAlK,CAAA,GAAK8G,GACjB4B,cAAgB,OAIxBzJ,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAW,gBAAd,KAAR,aAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACHH,EAAAC,EAAAC,cAAA,SAAIgC,KAAKgF,MAAMuC,yBA1NTrC,aC7Bf,SAASoE,IAavB,OACCxL,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACUrB,EAAAC,EAAAC,cAACuL,EAAD,cCfG,SAASC,IACtB,OACI1L,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACTH,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOqL,KAAK,OAAOpL,UAAU,eAAeqI,KAAK,QAAQC,MAAO,MAGlEzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOqL,KAAK,OAAOpL,UAAU,eAAeqI,KAAK,UAAUC,MAAO,MAGpEzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOqL,KAAK,OAAOpL,UAAU,eAAeqI,KAAK,OAAOC,MAAO,MAGjEzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOqL,KAAK,QAAQpL,UAAU,eAAeqI,KAAK,QAAQC,MAAO,MAGnEzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBqI,KAAK,UAASxI,EAAAC,EAAAC,cAAA,mECrB/E,IACEyL,KAASC,KAAK/I,OAA0C8I,KAASE,MAA1CF,KAASG,cAXnB,CACdC,OAAQ,0CACPC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,wCAKR,MAAOzG,IACPiD,QAAQC,IAAI,mCAGb,IAAMwD,GAAOX,KAASW,OC6BXC,GAAuB,CACjCC,gBAAkB,IAClBhF,KAAO,GACPzE,MAAQ,GACR0J,QAAU,GACVC,SAAW,GACXC,QAAU,GAEVC,wBAAuB,EACvBC,uBAAsB,EACtBC,yBAAwB,EACxBC,yBAAwB,EACxBC,uBAAwB,EACxBC,sBAAuB,GACvBC,eAAc,EACdC,yBAAyB,EACzBC,wBAAyB,GACzBC,gBAAe,GA2CLC,GAAwB,CAClCC,iBAAmB,GACnBhG,MAAQ,GACRiG,QAAU,GACVC,SAAW,GACXC,QAAU,IAgBAC,GAAuB,CACjCC,IAAM,GACNC,YAAc,GACdC,SAAW,GACX/K,MAAQ,GACRE,SAAW,GACX8K,eAAgB,EAChBC,YAAc,GACdC,aAAc,EACdC,WAAa,WAEbC,YAAa,EACbC,gBAAiB,EACjBC,cAAe,EACfC,kBAAmB,EACnBnB,yBAA0B,EAC1BoB,kBAAkB,GChIRC,GAAuB,CACjCC,QAAU,GACVC,eAAgB,GAChBC,UAAU,GACVC,YAAY,GACZC,eAAe,GACfC,aAAa,IAGHC,GAA8B,CACxCC,qBAAuB,GACvBC,gBAAkB,GAClBC,kBAAoB,GACpBC,qBAAuB,GACvBC,mBAAmB,IAGTC,GAAyB,CACnCC,UAAY,GACZC,aAAe,IAOLC,GAA0B,CACpCC,WAAa,GACbC,eAAiB,GACjBC,eAAiB,IC5CLC,GAAiB,SAAAC,GAE7BhH,QAAQC,IAAI,kCAAkC+G,ICMlCC,GAAgC,eAAAC,EAAAhP,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAAC,EAAQjH,EAAUF,GAAlB,IAAA+M,EAAAnP,EAAAoP,EAAA,OAAA/F,EAAAjK,EAAAyK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE/C,IACKhK,EAAOyL,GAAK4D,+BAA+B/M,EAAUF,GACrDgN,EAFFlP,OAAAkK,EAAA,EAAAlK,CAAA,GAEqB4M,KACvBsC,EAAYlP,OAAAkK,EAAA,EAAAlK,CAAA,GAAOF,IACNuN,gBAAiB,EAC9B4B,EAAS,CAACxG,QAAQ,EAAMD,SAASxI,OAAAkK,EAAA,EAAAlK,CAAA,GAAKkP,IACtC,MAAOrK,IACPoK,EAAS,CAACxG,QAAO,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI6E,KATa,OAAA+E,EAAAG,OAAA,SAYxCkF,GAZwC,wBAAArF,EAAAI,SAAAX,MAAH,gBAAAgG,EAAAC,GAAA,OAAAN,EAAAvJ,MAAAtE,KAAAkE,YAAA,GAiBhCkK,GAA4B,eAAAC,EAAAxP,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAAqG,EAAOrN,EAAUF,GAAjB,IAAA+M,EAAAS,EAAA5P,EAAAoP,EAAA,OAAA/F,EAAAjK,EAAAyK,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cAAA6F,EAAA9F,KAAA,EAAA8F,EAAA7F,KAAA,EAGvByB,GAAKqE,2BAA2BxN,EAAUF,GAHnB,OAAAwN,EAAAC,EAAAE,KAGrC/P,EAHqC4P,EAGrC5P,KACDoP,EAJsClP,OAAAkK,EAAA,EAAAlK,CAAA,GAInB4M,KACvBsC,EAAYlP,OAAAkK,EAAA,EAAAlK,CAAA,GAAOF,IACNuN,gBAAiB,EAC9B4B,EAAS,CAACxG,QAAQ,EAAMD,SAASxI,OAAAkK,EAAA,EAAAlK,CAAA,GAAKkP,IAPIS,EAAA7F,KAAA,iBAAA6F,EAAA9F,KAAA,GAAA8F,EAAAG,GAAAH,EAAA,SAS1CV,EAAS,CAACxG,QAAO,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAA2P,EAAAG,KATa,eAAAH,EAAA5F,OAAA,SAYpCkF,GAZoC,yBAAAU,EAAA3F,SAAAyF,EAAA,kBAAH,gBAAAM,EAAAC,GAAA,OAAAR,EAAA/J,MAAAtE,KAAAkE,YAAA,GAiB5B4K,GAAS,eAAAC,EAAAlQ,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAA+G,IAAA,IAAAlB,EAAA,OAAA9F,EAAAjK,EAAAyK,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cACpBmF,EAAS,GADWmB,EAAAtG,KAAA,EAElBc,KAASW,OAAO8E,UAAU9H,KAAM,WACrC0G,EAAS,CAACxG,QAAO,EAAK2G,MAAM,MAC1BzG,MAAO,SAACC,GACVqG,EAAS,CAACxG,QAAO,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4I,MALV,cAAAwH,EAAArG,OAAA,SAOjBkF,GAPiB,wBAAAmB,EAAApG,SAAAmG,MAAH,yBAAAD,EAAAzK,MAAAtE,KAAAkE,YAAA,GAWTiL,GAAe,eAAAC,EAAAvQ,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAAoH,EAAOC,GAAP,IAAAxB,EAAA,OAAA9F,EAAAjK,EAAAyK,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cAE1BmF,EAAS,GAFiByB,EAAA5G,KAAA,EAIxBc,KAASW,OAAOoF,uBAAuBF,GAC3ClI,KAAK,WAAQ0G,EAAS,CAACxG,QAAO,EAAK2G,MAAM,MACvCzG,MAAM,SAACC,GAASqG,EAAS,CAACxG,QAAO,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4I,MANvB,cAAA8H,EAAA3G,OAAA,SASvBkF,GATuB,wBAAAyB,EAAA1G,SAAAwG,MAAH,gBAAAI,GAAA,OAAAL,EAAA9K,MAAAtE,KAAAkE,YAAA,GAYfwL,GAAgB,eAAAC,EAAA9Q,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAA2H,EAAO7O,GAAP,IAAA+M,EAAA,OAAA9F,EAAAjK,EAAAyK,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAE3BmF,EAAS,GAFkB+B,EAAAlH,KAAA,EAIzBc,KAASW,OAAO0F,YAAYC,eAAehP,GAC/CqG,KAAM,WAAO0G,EAAS,CAACxG,QAAS,EAAK2G,MAAO,MAE5CzG,MAAO,SAACC,GAASqG,EAAS,CAACxG,QAAQ,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4I,MAPtB,cAAAoI,EAAAjH,OAAA,SASxBkF,GATwB,wBAAA+B,EAAAhH,SAAA+G,MAAH,gBAAAI,GAAA,OAAAL,EAAArL,MAAAtE,KAAAkE,YAAA,GAchB+L,GAAY,eAAAC,EAAArR,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAAkI,EAAOxR,GAAP,IAAAmP,EAAA,OAAA9F,EAAAjK,EAAAyK,KAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,cACvBmF,EAAS,GADcsC,EAAAzH,KAAA,EAGrBhK,EAAK0R,SAASjJ,KAAM,WACzB0G,EAAS,CAACxG,QAAS,EAAK2G,MAAM,MAC5BzG,MAAO,SAACC,GACVqG,EAAS,CAACxG,QAAQ,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4I,MANR,cAAA2I,EAAAxH,OAAA,SAQpBkF,GARoB,wBAAAsC,EAAAvH,SAAAsH,MAAH,gBAAAG,GAAA,OAAAJ,EAAA5L,MAAAtE,KAAAkE,YAAA,GAWZqM,GAAuB,eAAAC,EAAA3R,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAAwI,EAAO9R,GAAP,IAAAmP,EAAA,OAAA9F,EAAAjK,EAAAyK,KAAA,SAAAkI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,cAClCmF,EAAS,GACbnH,QAAQC,IAAIjI,GAF0B+R,EAAA/H,KAAA,EAGhCc,KAASW,OAAO0F,YAAYa,wBAAwBvJ,KAAK,WAC9D0G,EAAS,CAACxG,QAAO,EAAK2G,MAAM,MAC1BzG,MAAM,SAACC,GAETqG,EAAS,CAACxG,QAAO,EAAM2G,MAAMpP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4I,MAPI,cAAAiJ,EAAA9H,OAAA,SAS/BkF,GAT+B,wBAAA4C,EAAA7H,SAAA4H,MAAH,gBAAAG,GAAA,OAAAJ,EAAAlM,MAAAtE,KAAAkE,YAAA,GAYvB2M,GAAgB,eAAAC,EAAAjS,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAAG,SAAA8I,EAAOpD,GAAP,IAAAG,EAAA,OAAA9F,EAAAjK,EAAAyK,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAC3BmF,EAAS,CAACxG,QAAO,EAAK2G,MAAM,IADD+C,EAAArI,KAAA,EAEzB+E,GAAeC,GAFU,cAAAqD,EAAApI,OAAA,SAGxBkF,GAHwB,wBAAAkD,EAAAnI,SAAAkI,MAAH,gBAAAE,GAAA,OAAAH,EAAAxM,MAAAtE,KAAAkE,YAAA,GChFvBgN,GAAgB,CAClBjQ,SAAU,GACVJ,MAAO,GACPsQ,YAAa,GACbC,YAAa,GACbnD,MAAO,MAILoD,GAAY,SAACC,EAAc/K,GAAf,OAAyB,kBAAA1H,OAAA0S,EAAA,EAAA1S,CAAA,GACtCyS,EAAe/K,KAKdiL,eACF,SAAAA,EAAYhT,GAAO,IAAAuB,EAAA,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAwR,IACfzR,EAAAlB,OAAAgG,EAAA,EAAAhG,CAAAmB,KAAAnB,OAAAiG,EAAA,EAAAjG,CAAA2S,GAAAzM,KAAA/E,KAAMxB,KAIViT,SAAW,SAACC,GAAU,IAAAC,EAMd5R,EAAKiF,MAFLnE,GAJc8Q,EAGd1Q,SAHc0Q,EAId9Q,OACAsQ,EALcQ,EAKdR,YAKApR,EAAKvB,MADLoT,QAGJxH,EAAKwD,iCAAiC/M,EAAOsQ,GACxC/J,KAAK,SAAAyK,GACF9R,EAAKyG,SAAL3H,OAAAkK,EAAA,EAAAlK,CAAA,GAAmBqS,OAGtB1J,MAAM,SAAAyG,GACHlO,EAAKyG,SAAS6K,GAAU,QAASpD,MAGzCyD,EAAMhL,kBAxBN3G,EAAKiF,MAALnG,OAAAkK,EAAA,EAAAlK,CAAA,GAAkBqS,IAFHnR,wEA8BV,IAAAkJ,EAAAjJ,KAAA8R,EAOD9R,KAAKgF,MALL/D,EAFC6Q,EAED7Q,SACAJ,EAHCiR,EAGDjR,MACAsQ,EAJCW,EAIDX,YACAC,EALCU,EAKDV,YACAnD,EANC6D,EAMD7D,MAGE8D,EACFZ,IAAgBC,GACA,KAAhBD,GACU,KAAVtQ,GACa,KAAbI,EAEJ,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,6BAI9BF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBwT,SAAUzR,KAAKyR,UAE7C3T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbsI,MAAOtF,EACPkI,SAAU,SAAAuI,GAAK,OAAIzI,EAAKzC,SAAS6K,GAAU,WAAYK,EAAMrL,OAAOE,SACpE8C,KAAK,OACLH,YAAY,eAIpBpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbsI,MAAO1F,EACPsI,SAAU,SAAAuI,GAAK,OAAIzI,EAAKzC,SAAS6K,GAAU,QAASK,EAAMrL,OAAOE,SACjE8C,KAAK,OACLH,YAAY,mBAIpBpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbsI,MAAO4K,EACPhI,SAAU,SAAAuI,GAAK,OAAIzI,EAAKzC,SAAS6K,GAAU,cAAeK,EAAMrL,OAAOE,SACvE8C,KAAK,WACLH,YAAY,cAGpBpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbsI,MAAO6K,EACPjI,SAAU,SAAAuI,GAAK,OAAIzI,EAAKzC,SAAS6K,GAAU,cAAeK,EAAMrL,OAAOE,SACvE8C,KAAK,WACLH,YAAY,sBAGpBpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAAA,UAAQgU,SAAUD,EAAW1I,KAAK,SAASpL,UAAU,0CACjDH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,KAAT,eAGPgQ,GAASnQ,EAAAC,EAAAC,cAAA,SAAIiQ,EAAMhJ,kBAhGfC,aA4GV+M,GAxII,WACf,OACInU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,YAGJH,EAAAC,EAAAC,cAACkU,GAAD,QCbCC,GACK,sBADLA,GAEK,uBAFLA,GAGE,mBAHFA,GAIC,kBAJDA,GAKE,mBALFA,GAME,mBANFA,GAOM,uBAPNA,GAQc,+BARdA,GASO,kCCsBLC,eA9Bd,SAAAA,EAAY5T,GAAM,IAAAuB,EAAA,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAoS,IACjBrS,EAAAlB,OAAAgG,EAAA,EAAAhG,CAAAmB,KAAAnB,OAAAiG,EAAA,EAAAjG,CAAAuT,GAAArN,KAAA/E,KAAMxB,KACDwG,MAAQ,CAACC,QAAUlF,EAAKvB,MAAMyG,QAClCoN,aAAetS,EAAKvB,MAAM6T,cAHVtS,wEAMjB,OACCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACfH,EAAAC,EAAAC,cAAA,UACCqL,KAAM,SACNpL,UAAW,qCACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAb,KAAJ,IAA4CH,EAAAC,EAAAC,cAAA,iBAASgC,KAAKgF,MAAMC,QAApB,iBAfvBC,aCatBoN,eACF,SAAAA,EAAY9T,GAAO,IAAAuB,EAAA,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAsS,IACfvS,EAAAlB,OAAAgG,EAAA,EAAAhG,CAAAmB,KAAAnB,OAAAiG,EAAA,EAAAjG,CAAAyT,GAAAvN,KAAA/E,KAAMxB,KAYV+T,WAAa,SAAC7O,GAEV,IAAI8O,EAAYzS,EAAKiF,MAAMyN,WAC3B,OAAQD,GACJ,KAAK,EAAMzS,EAAKyG,SAAS,CACrBiM,YAAaD,EACbE,WAAY,UACZ,MACJ,KAAK,EAAO3S,EAAKyG,SAAS,CACtBiM,YAAaD,EACbE,WAAY,cArBpB3S,EAAKiF,MAAQ,CACTyN,YAAY,EACZC,WAAY,SACZC,gBAAgB,GAIpB5S,EAAKwS,WAAaxS,EAAKwS,WAAWvJ,KAAhBnK,OAAAoI,EAAA,EAAApI,CAAAkB,IATHA,wEA6BV,IAAAkJ,EAAAjJ,KACL,OAEIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,IAA2BH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,KAAT,aAE/BH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdsB,QAAS,SAAAmE,GAAC,OAAIuF,EAAKsJ,WAAW7O,KAC9B5F,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,KAAT,IAAiD+B,KAAKgF,MAAM0N,cAGpE5U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEN+B,KAAKgF,MAAMyN,WACR3U,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4U,GAAD,CACIjU,KAAMqB,KAAKxB,MAAMG,KACjBkU,YAAa7S,KAAKxB,MAAMqU,YACxBnL,cAAe1H,KAAKxB,MAAMkJ,cAC1BoL,cAAe9S,KAAKxB,MAAMsU,cAC1BC,QAAS/S,KAAKxB,MAAMuU,WAG1BjV,EAAAC,EAAAC,cAACgV,GAAD,gBAxDd9N,aAmEdgM,GAAgB,CAClBrQ,MAAO,GACPE,SAAU,IAGRkS,eACF,SAAAA,EAAYzU,GAAO,IAAA0U,EAAA,OAAArU,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAiT,IACfC,EAAArU,OAAAgG,EAAA,EAAAhG,CAAAmB,KAAAnB,OAAAiG,EAAA,EAAAjG,CAAAoU,GAAAlO,KAAA/E,KAAMxB,KAKV2U,gBAAkB,SAACzP,GACfwP,EAAK1M,SAAL3H,OAAA0S,EAAA,EAAA1S,CAAA,GACK6E,EAAE2C,OAAOC,KAAO5C,EAAE2C,OAAOE,SARf2M,EAYnBzB,SAAW,SAACC,GACRA,EAAMhL,iBADY,IAAA0M,EAKdF,EAAKlO,MAFLnE,EAHcuS,EAGdvS,MACAE,EAJcqS,EAIdrS,SAMJmS,EAAK1U,MAAMuU,QAAQlS,EAAOE,IApB1BmS,EAAKlO,MAALnG,OAAAkK,EAAA,EAAAlK,CAAA,GAAkBqS,IAClBgC,EAAKC,gBAAkBD,EAAKC,gBAAgBnK,KAArBnK,OAAAoI,EAAA,EAAApI,CAAAqU,IAHRA,wEAyBV,IAAAG,EAAArT,KAAAsT,EAMDtT,KAAKxB,MAJLG,EAFC2U,EAED3U,KACAkU,EAHCS,EAGDT,YACAnL,EAJC4L,EAID5L,cAJC4L,EAKDR,cAGJ,OACIhV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,KAAT,aAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBwT,SAAUzR,KAAKyR,UAC7C3T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbqI,KAAM,QACNC,MAAO5H,EAAKkC,MACZsI,SAAU,SAAAzF,GAAC,OAAI2P,EAAKF,gBAAgBzP,IACpC2F,KAAK,OACLH,YAAY,kBAEd2J,EAAYhN,YAAe/H,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAAS4N,EAAYhN,cAAkB,IAGrF/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbqI,KAAM,WACNC,MAAO5H,EAAKoC,SACZoI,SAAU,SAAAzF,GAAC,OAAI2P,EAAKF,gBAAgBzP,IACpC2F,KAAK,WACLH,YAAY,aAEd2J,EAAYU,eAAkBzV,EAAAC,EAAAC,cAACoL,EAAD,CAAanE,QAAS4N,EAAYU,iBAAqB,IAE3FzV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAEIqL,KAAK,SACLpL,UAAU,0BAEVH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,KAAT,aAEJH,EAAAC,EAAAC,cAAA,UAEIqL,KAAK,SACLpL,UAAU,0BAEVH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,KAAT,cAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACVyJ,EAAiB5J,EAAAC,EAAAC,cAACwV,GAAD,CAAevO,QAASyC,IAAoB,cAnFlExC,aAkKVuO,gBAjCS,SAACzO,GACrB,MAAO,CACHrG,KAAMqG,EAAM0O,QAAQC,gBAAgB5F,aACpCrG,cAAe1C,EAAM0O,QAAQC,gBAAgBjM,cAC7CoL,cAAe9N,EAAM0O,QAAQC,gBAAgBb,cAC7CD,YAAa7N,EAAM0O,QAAQC,gBAAgBC,sBAKxB,SAACC,GACxB,MAAO,CACHC,eAAgB,SAACnV,GACb,OAAOkV,EFvNmB,SAAClV,GACtC,IAAIoP,EAAYlP,OAAAkK,EAAA,EAAAlK,CAAA,GAAO4M,IAGvB,OAFAsC,EAAYlP,OAAAkK,EAAA,EAAAlK,CAAA,GAAOF,IACNuN,gBAAiB,EACvB,SAAA2H,GACNA,EAAS,CACRxK,KAAK8I,GACLpE,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAIkP,MEgNQgG,CAAuBpV,KAE3CqV,gBAAiB,SAACrV,GACd,OAAOkV,EF9MoB,SAAClV,GACvC,OAAO,SAAAkV,GACNA,EAAS,CACRxK,KAAK8I,GACLpE,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAIF,ME0MQsV,CAAwBtV,KAE5CoU,QAAS,SAAC9R,EAAUF,GAChB,OAAO8S,EFjLiB,SAAC5S,EAASF,GAC7C,OAAO,SAAA8S,GACNzJ,EAAKgE,6BAA6BnN,EAAUF,GAAUqG,KAAK,SAAA0G,GAC1D+F,EAAS/F,EAAOxG,OAAS,CACxB+B,KAAM8I,GACN+B,QAAS,CACRnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAKiP,EAAOzG,UACzBpC,QAAQ,iBACRkP,KAAK,MAEH,CACH9K,KAAK8I,GACL+B,QAAQ,CACPnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4M,IACjBxG,QAAS6I,EAAOG,MAAMhJ,QACtBkP,KAAOrG,EAAOG,MAAMkG,WEkKGC,CAAoBnT,EAAUF,KAElDsT,SAAU,SAAC1V,GACP,OAAOkV,EF9JiB,SAAClV,GACpC,OAAO,SAAAkV,GACNzJ,EAAK0E,UAAUnQ,GAAMyI,KAAK,SAAA0G,GACzB+F,GAA4B,IAAlB/F,EAAOxG,OAAmB,CACnC+B,KAAM8I,GACN+B,QAAS,CACRnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4M,IACjBxG,QAAQ,kBACRkP,KAAK,MAEJ,CACF9K,KAAM8I,GACN+B,QAAS,CACRnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAIF,GACjBsG,QAAS6I,EAAOG,MAAMhJ,QACtBkP,KAAOrG,EAAOG,MAAMkG,WE+IGG,CAAqB3V,KAEzC4V,SAAU,SAACtT,EAAUF,GACjB,OAAO8S,EF9MkB,SAAC5S,EAASF,GAC9C,OAAO,SAAA8S,GACNzJ,EAAKwD,iCAAiC3M,EAAUF,GAAUqG,KAAK,SAAA0G,GAC9D+F,EAAS/F,EAAOxG,OAAS,CACxB+B,KAAM8I,GACN+B,QAAS,CACRnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAKiP,EAAOzG,UACzBpC,QAAQ,iBACRkP,KAAK,MAEH,CACH9K,KAAK8I,GACL+B,QAAQ,CACPnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAI4M,IACjBxG,QAAS6I,EAAOG,MAAMhJ,QACtBkP,KAAOrG,EAAOG,MAAMkG,WE+LGK,CAAqBvT,EAAUF,KAEnD0T,iBAAkB,SAAC9V,GACf,OAAOkV,EFxHqB,SAAClV,GACxC,OAAO,SAAAkV,GACNzJ,EAAKsF,iBAAiB/Q,EAAKoC,UAAUqG,KAAM,SAAA0G,GAC1C+F,GAA4B,IAAlB/F,EAAOxG,OAAkB,CAClC+B,KAAM8I,GACN+B,QAAS,CACRnG,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAIF,GACjBsG,QAAQ,gCACRkP,KAAK,MAEH,CACH9K,KAAM8I,GACN+B,QAAS,CACRjP,QAAS6I,EAAOG,MAAMhJ,QACtBkP,KAAMrG,EAAOG,MAAMkG,WE0GIO,CAAyB/V,OAKtC8U,CAA6CnB,ICtP7C,SAASqC,KAQtB,OACE7W,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAK4W,IAAI,4BAA4BC,GAAG,qBAAqB5W,UAAU,aAAa6W,IAAI,iBAE1FhX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAG6W,GAAG,qBAAoB/W,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,EAAOjB,YAAjB,mBAI9BW,EAAAC,EAAAC,cAAA,QAAMyT,SAAU,SAAA/N,GAAC,OApBd,SAAAA,GACXA,EAAEgD,iBACFC,QAAQC,IAAI,qBAkBiBmO,CAASrR,IAAIsR,OAAO,MAAM/W,UAAU,gBACvDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOqL,KAAK,OAAO/C,KAAK,IAAIrI,UAAU,eAAeiL,YAAY,cAC/DpL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,UAAQqL,KAAK,SAAS/C,KAAK,SAASuO,GAAG,aAAa5W,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAKlGH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACNH,EAAAC,EAAAC,cAACO,EAAD,UCnCP,SAAS0W,KACpB,OACInX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,iBADJ,IACgBF,EAAAC,EAAAC,cAAA,KAAGkX,KAAK,KAAR,aAEhBpX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,qCAA8BF,EAAAC,EAAAC,cAAA,KAAGkX,KAAK,KAAR,cAA9B,MALJ,yBCFG,SAASC,KAGtB,SAASC,EAAoB1R,GACzBA,EAAEgD,iBACFC,QAAQC,IAAI,0BAKhB,OACE9I,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,IAA2BH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,KAAT,oBAA3B,MAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBwT,SAAU,SAAA/N,GAAC,OAAI0R,EAAkB1R,KAC/D5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,wFAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOqL,KAAK,QAAQpL,UAAU,eAAeqI,KAAK,cAEtDxI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQqL,KAAK,SAASpL,UAAU,yBAAyBsB,QAAS,SAAAmE,GAAC,OAAI0R,EAAkB1R,KAAI5F,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,KAAT,yBAC7FH,EAAAC,EAAAC,cAAA,UAAQqL,KAAK,QAAQpL,UAAU,0BAAyBH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,KAAT,sBC7BrDoX,oLAEnB,OACCvX,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,KAAT,kBAA1B,eAN8BiH,oBCQhBoQ,QACU,cAA7BC,OAAOC,SAASC,UAEgB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,+GCRDC,GANkB,WAClB,IAAItR,EAAM,IAAIxC,KAEd,OADAwC,EAAMA,EAAIuR,UACHC,KAAKC,MAAM,WAAaD,KAAKE,UAAUC,SAAS,IAAMH,KAAKI,IAAIJ,KAAKC,MAAM,WAAaD,KAAKE,UAAY1R,GAAK2R,SAAS,IAG/GE,GACdC,GAAS,IAAIC,KAAaT,IAEnBU,GAAU,SAAUC,EAAMC,GAEjCJ,GAAOK,UAAUD,GACjB,IACI,OAAOJ,GAAOE,QAAQC,GACxB,MAAO5S,IACL,OAAO4S,IAIJG,GAAU,SAAUH,EAAMC,GAEjCJ,GAAOK,UAAUD,GACjB,IACI,OAAOJ,GAAOM,QAAQH,GACxB,MAAO5S,IACL,OAAO4S,ICbFI,ICyIQ,IAlJjB,SAAAC,IAAc,IAAA5W,EAAAC,KAAAnB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAA2W,GAAA3W,KAgBd4W,eAhBc/X,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAgBG,SAAA+G,IAAA,IAAApH,EAAAiP,EAAAC,EAAA,OAAA9O,EAAAjK,EAAAyK,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cACLf,GAAU,EACViP,EAFK,eAAAxI,EAAAxP,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAEa,SAAAC,IAAA,OAAAF,EAAAjK,EAAAyK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEU7B,KAAKiQ,MAAMC,aAAaC,QAAQlX,EAAKmX,mBAF/C,OAEdnX,EAAKoX,WAFS1O,EAAAiG,KAAAjG,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAkG,GAAAlG,EAAA,SAKdb,GAAU,EALI,cAAAa,EAAAG,OAAA,UAQVhB,GARU,yBAAAa,EAAAI,SAAAX,EAAA,iBAFb,yBAAAmG,EAAA/J,MAAAtE,KAAAkE,YAAA,GAaL4S,EAbK,eAAAvI,EAAA1P,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAaO,SAAAqG,IAAA,IAAA1G,EAAA,OAAAI,EAAAjK,EAAAyK,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cACRf,GAAU,EACd7H,EAAKoX,WAAWC,QAAQ,SAAAC,GACpB,IACItX,EAAKuX,gBAAgBtS,MAAQ8B,KAAKiQ,MAAMC,aAAaC,QAAQI,IAC7DtX,EAAKuX,gBAAgBD,UAAYA,EACjCtX,EAAKwX,UAAUC,KAAKzX,EAAKuX,iBAC5B,MAAO5T,IACJiD,QAAQC,IAAI,wBACZgB,GAAU,KATN4G,EAAA5F,OAAA,UAYJhB,GAZI,wBAAA4G,EAAA3F,SAAAyF,MAbP,yBAAAC,EAAAjK,MAAAtE,KAAAkE,YAAA,GAAA+K,EAAArG,OAAA,SA4BFiO,IAAkBzP,KAAK,SAAUb,GACpCuQ,IAAY1P,KAAM,SAACb,GAEf,OADAI,QAAQC,IAAI,wCAAwCL,GAC7CA,OA/BN,wBAAA0I,EAAApG,SAAAmG,MAhBHhP,KAoDdyX,aApDc5Y,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAoDC,SAAA2H,IAAA,IAAA8H,EAAA,OAAA1P,EAAAjK,EAAAyK,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAEP+O,EAFO,eAAAtI,EAAAvQ,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAEI,SAAAoH,IAAA,IAAAsI,EAAA,OAAA3P,EAAAjK,EAAAyK,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cACX5I,EAAKoX,WAAa,GACdQ,GAAU,EACd5X,EAAKwX,UAAUH,QAAQ,SAAAE,GACnB,IACIvX,EAAKoX,WAAWK,KAAKF,EAAgBD,WACrCtX,EAAKyG,SAAS8Q,EAAgBD,UAAUvQ,KAAKC,UAAUuQ,EAAgBtS,QAAQoC,KAC3E,SAAUpC,GACN2B,QAAQC,IAAI,kCAAkC5B,GAC9CgS,aAAaY,QAAQN,EAAgBD,UAAY,aAAcrX,KAAK6X,KAAKjC,aAC9EpO,MAAO,SAACC,GACPd,QAAQC,IAAI,kCAAkCa,EAAIxC,WAGzD,MAAOvB,IACJiD,QAAQC,IAAI,iEACZ+Q,GAAU,KAhBPpI,EAAA3G,OAAA,SAoBJ+O,GApBI,wBAAApI,EAAA1G,SAAAwG,MAFJ,yBAAAD,EAAA9K,MAAAtE,KAAAkE,YAAA,GAAA2L,EAAAjH,OAAA,SAyBJ8O,IAAWtQ,KAAK,SAAUb,GAE7B,OADAI,QAAQC,IAAI,iDAAiDL,GACtDA,KA3BA,wBAAAsJ,EAAAhH,SAAA+G,MApDD5P,KAmFd8X,SAnFc,eAAAnI,EAAA9Q,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAmFH,SAAAkI,EAAO4H,EAAKC,GAAZ,IAAAC,EAAA,OAAAjQ,EAAAjK,EAAAyK,KAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,eAOOrI,IAATyX,GAAiC,OAATA,GAA4B,KAATA,EAPzC,CAAA3H,EAAAzH,KAAA,eAAAyH,EAAAzH,KAAA,EAQ2B8N,GAAQO,aAAaC,QAAQe,GAAWD,GARnE,cAQGE,EARH7H,EAAA1B,KAAA0B,EAAAxH,OAAA,SASwB,OAApBqP,OAA2B3X,EAAYwG,KAAKiQ,MAAMkB,IATtD,cAAA7H,EAAAxH,OAAA,cAWItI,GAXJ,wBAAA8P,EAAAvH,SAAAsH,MAnFG,gBAAAjC,EAAAC,GAAA,OAAAwB,EAAArL,MAAAtE,KAAAkE,YAAA,GAAAlE,KAkGdwG,SAlGc,eAAA0J,EAAArR,OAAAkJ,EAAA,EAAAlJ,CAAAmJ,EAAAjK,EAAAkK,KAkGH,SAAAwI,EAAOsH,EAAKC,EAAShT,GAArB,IAAAiT,EAAA,OAAAjQ,EAAAjK,EAAAyK,KAAA,SAAAkI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,UAAA+H,EAAAhI,KAAA,OAIWpI,IAATyX,GAAiC,OAATA,GAA4B,KAATA,EAJ7C,CAAArH,EAAA/H,KAAA,gBAAA+H,EAAA/H,KAAA,EAK+B0N,GAAQvP,KAAKC,UAAU/B,GAAQ+S,GAL9D,cAKOE,EALPvH,EAAAhC,KAAAgC,EAAA/H,KAAA,EAMOqO,aAAaY,QAAQI,EAAUC,GANtC,cAAAvH,EAAA/H,KAAA,EAOOqO,aAAaY,QAAQI,EAAW,aAAc3B,GAAQtW,EAAK8X,KAAKjC,UAAWmC,IAPlF,cAAArH,EAAA9H,OAAA,SAQQqP,GARR,cAUO,IAAIC,MAAM,sBAVjB,QAAAxH,EAAA/H,KAAA,wBAAA+H,EAAAhI,KAAA,GAAAgI,EAAA/B,GAAA+B,EAAA,SAAAA,EAAA9H,OAAA,cAsBItI,GAtBJ,yBAAAoQ,EAAA7H,SAAA4H,EAAA,kBAlGG,gBAAA7B,EAAAC,EAAAY,GAAA,OAAAS,EAAA5L,MAAAtE,KAAAkE,YAAA,GACVlE,KAAK6X,KAAO,IAAIhW,KAChB7B,KAAKkX,iBAAmB,WACxBlX,KAAKmX,WAAa,GAClBnX,KAAKmY,eAAgB,EACrBnY,KAAKoY,aAAe,KACpBpY,KAAKsX,gBAAkB,CACnBD,UAAY,GACZrS,MAAQ,IAGZhF,KAAKuW,YAAY,GACjBvW,KAAKuX,UAAY,IDFD,qCADXb,GAEW,oCAFXA,GAGa,sCAHbA,GAIa,sCAJbA,GAKY,qCALZA,GAMA,2BANAA,GAOc,uCAPdA,GAQG,4BEjBZ2B,GAA0B,CAC7BC,cAAazZ,OAAAkK,EAAA,EAAAlK,CAAA,GAAOwL,IACpBkO,uBAAsB1Z,OAAAkK,EAAA,EAAAlK,CAAA,GhB2DkB,CACxCiH,WAAa,GACbD,YAAc,GACd2S,cAAgB,GAChBC,eAAiB,GACjBC,cAAgB,KgB/DhBhR,cAAgB,GAChBoL,cAAe,IAuED6F,GAnEiB,WAAgD,IAA/C3T,EAA+Cd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAArCwZ,IAAyBO,EAAY1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EAK/E,OAHAqG,QAAQC,IAAI,gCAAgCgS,GAGpCA,EAAQvP,MAChB,KAAKqN,GAML,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GAOL,KAAKA,GACJ,OAAO7X,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,EAAX,CACC0C,cAAckR,EAAQ1E,QAAQjP,QAC9B6N,cAAc8F,EAAQ1E,QAAQC,KAC9BmE,cAAczZ,OAAAkK,EAAA,EAAAlK,CAAA,GAAI+Z,EAAQ1E,QAAQ7M,YAGpC,QAAS,OAAOxI,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,KChER6T,GACY,8CADZA,GAEY,8CAFZA,GAGc,gDAHdA,GAIa,gDCbbC,GACa,yBADbA,GAEW,wBC4BXC,GAEQ,oBAFRA,GAGQ,oBAHRA,GAIU,sBAJVA,GAKU,sBALVA,GAMU,sBANVA,GAQO,oBARPA,GASM,kBAGNC,GACU,sBADVA,GAEU,sBAFVA,GAGY,wBAHZA,GAIY,wBAJZA,GAKY,wBAGZC,GACW,uBADXA,GAEW,uBAFXA,GAGa,yBAHbA,GAIa,yBAJbA,GAKa,yBCrDtBC,GAAuB,CAC1BnL,aAAYlP,OAAAkK,EAAA,EAAAlK,CAAA,GAAO4M,IACnBmI,oBAAmB/U,OAAAkK,EAAA,EAAAlK,CAAA,GpB+IoB,CACvCsa,kBAAoB,GACpBC,eAAiB,GACjBvT,YAAc,GACd0N,eAAiB,GACjB8F,kBAAoB,KoBnJpB3R,cAAe,GACfoL,cAAe,IAqEDwG,GAhEY,WAA4C,IAA3CtU,EAA2Cd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAAjCqa,IAAsBN,EAAW1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EAGtE,OADAqG,QAAQC,IAAI,+BAA+BgS,GACnCA,EAAQvP,MAEhB,KAAK8I,GAQL,KAAKA,GAQL,KAAKA,GAOL,KAAKA,GAQL,KAAKA,GAQL,KAAKA,GACJ,OAAAtT,OAAAkK,EAAA,EAAAlK,CAAA,GAAUmG,EAAV,CACC+I,aAAalP,OAAAkK,EAAA,EAAAlK,CAAA,GAAK+Z,EAAQ1E,QAAQnG,cAClCrG,cAAekR,EAAQ1E,QAAQjP,QAC/B6N,cAAe8F,EAAQ1E,QAAQC,OAGjC,KAAKhC,GACJ,OAAAtT,OAAAkK,EAAA,EAAAlK,CAAA,GAAUmG,EAAV,CACCqH,iBAAiBuM,EAAQ1E,QAAQ7H,iBACjC3E,cAAekR,EAAQ1E,QAAQjP,QAC/B6N,cAAc8F,EAAQ1E,QAAQC,OAIhC,QAAQ,OAAOnP,ICnEZuU,GAA0B,CAC7BC,mBAAkB3a,OAAAkK,EAAA,EAAAlK,CAAA,GAAOuM,IACzBqO,wBAAuB5a,OAAAkK,EAAA,EAAAlK,CAAA,GrB6GiB,CACxC+G,YAAc,GACd8T,cAAgB,GAChBC,eAAiB,GACjBC,cAAgB,KqBhHhBlS,cAAgB,GAChBoL,cAAe,KAiCD+G,GA/BoB,WAAiD,IAAhD7U,EAAgDd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAAtC0a,IAA0BX,EAAY1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EACnF,OAAQsY,EAAQvP,MAChB,KAAKwP,GAML,KAAKA,GAML,KAAKA,GAML,KAAKA,GACJ,OAAOha,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,EAAX,CACC0C,cAAckR,EAAQ1E,QAAQjP,QAC9B6N,cAAc8F,EAAQ1E,QAAQC,KAC9BqF,mBAAmB3a,OAAAkK,EAAA,EAAAlK,CAAA,GAAI+Z,EAAQ1E,QAAQ7M,YAEzC,QAAS,OAAOxI,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,KCrBN8U,GANOC,aAAgB,CACrCpG,gBAAkB2F,GAClBU,gBAAkBrB,GAClBsB,iBAAmBJ,KCMhBK,GAAuB,CAC1BC,0BAA0Btb,OAAAkK,EAAA,EAAAlK,CAAA,GAAIyN,IAC9B8N,oBAAoBvb,OAAAkK,EAAA,EAAAlK,CAAA,GAAKgO,IACzBnF,cAAgB,GAChBoL,cAAgB,KAGbuH,GAAyB,CAC5BC,4BAA2Bzb,OAAAkK,EAAA,EAAAlK,CAAA,GAAOsO,IAClCoN,cAAa1b,OAAAkK,EAAA,EAAAlK,CAAA,GtBWqB,CAClC2b,mBAAqB,KsBXrB9S,cAAgB,GAChBoL,cAAe,KAGZ2H,GAA0B,CAC7BC,6BAA4B7b,OAAAkK,EAAA,EAAAlK,CAAA,GAAOyO,IACnCqN,eAAc9b,OAAAkK,EAAA,EAAAlK,CAAA,GtBcqB,CACnC+b,qBAAuB,KsBdvBlT,cAAgB,GAChBoL,cAAc,KC5BX+H,GAAgCd,aAAgB,CACnDe,kBD6BwC,WAA6C,IAA5C9V,EAA4Cd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAAlCqb,IAAsBtB,EAAY1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EAErF,OADAqG,QAAQC,IAAI,+CAAgDgS,GACnDA,EAAQvP,MACjB,KAAK0P,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GACJ,OAAOla,OAAAkK,EAAA,EAAAlK,CAAA,GACHmG,EADJ,CAECmV,0BAA0Btb,OAAAkK,EAAA,EAAAlK,CAAA,GAAK+Z,EAAQ1E,QAAQ7M,UAC/CK,cAAekR,EAAQ1E,QAAQjP,QAC/B6N,cAAe8F,EAAQ1E,QAAQC,OAIjC,KAAK4E,GACJ,OAAOla,OAAAkK,EAAA,EAAAlK,CAAA,GACHmG,EADJ,CAECoV,oBAAoBvb,OAAAkK,EAAA,EAAAlK,CAAA,GAAI+Z,EAAQ1E,QAAQ7M,UACxCK,cAAckR,EAAQ1E,QAAQjP,QAC9B6N,cAAc8F,EAAQ1E,QAAQC,OAIhC,QACC,OAAOtV,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,KC/FZ+V,oBDqG0C,WAAkD,IAAjD/V,EAAiDd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAArCwb,IAAyBzB,EAAY1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EAE5F,OADAqG,QAAQC,IAAI,iDAAkDgS,GACrDA,EAAQvP,MACjB,KAAK2P,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GACJ,OAAOna,OAAAkK,EAAA,EAAAlK,CAAA,GACHmG,EADJ,CAECsV,4BAA4Bzb,OAAAkK,EAAA,EAAAlK,CAAA,GAAK+Z,EAAQ1E,QAAQ7M,UACjDK,cAAekR,EAAQ1E,QAAQjP,QAC/B6N,cAAe8F,EAAQ1E,QAAQC,OAIjC,QACC,OAAOtV,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,KCrJZgW,qBD0J2C,WAAmD,IAAlDhW,EAAkDd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAAtC4b,IAA0B7B,EAAY1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EAC9F,OAASsY,EAAQvP,MACjB,KAAK4P,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GASL,KAAKA,GACJ,OAAOpa,OAAAkK,EAAA,EAAAlK,CAAA,GACHmG,EADJ,CAEC0V,6BAA6B7b,OAAAkK,EAAA,EAAAlK,CAAA,GAAK+Z,EAAQ1E,QAAQ7M,UAClDK,cAAekR,EAAQ1E,QAAQjP,QAC/B6N,cAAe8F,EAAQ1E,QAAQC,OAGjC,QACC,OAAOtV,OAAAkK,EAAA,EAAAlK,CAAA,GAAImG,OCxLFiW,IAdiBlB,aAAgB,IAIlBA,aAAgB,IAInBA,aAAgB,IAMZA,aAAgB,CAC1CzN,qBAAsBuO,MC1BnBK,GAAyB,CAC5BC,gBAAgB,GAChBC,qBAAqB,ICAXC,GAActB,aAAgB,CACxCrG,QAAUoG,GACVwB,OAAQL,GACRM,eDCmC,WAA+C,IAA9CvW,EAA8Cd,UAAAvD,OAAA,QAAAL,IAAA4D,UAAA,GAAAA,UAAA,GAAArF,OAAAkK,EAAA,EAAAlK,CAAA,GAApCqc,IAAwBtC,EAAY1U,UAAAvD,OAAA,EAAAuD,UAAA,QAAA5D,EAElF,OADAqG,QAAQC,IAAI,0CAA2CgS,GAC9CA,EAAQvP,MACjB,KAAKyP,GAOL,KAAKA,GACJ,OAAAja,OAAAkK,EAAA,EAAAlK,CAAA,GACImG,EADJ,CAECmW,gBAAgBvC,EAAQ1E,QAAQ7M,SAAS8T,gBACzCC,qBAAqBxC,EAAQ1E,QAAQ7M,SAAS+T,uBAGhD,QAAS,OAAAvc,OAAAkK,EAAA,EAAAlK,CAAA,GAAUmG,OEFdwW,GAAaC,aAAgBC,aAClCC,OAWcC,GARHC,aACXR,GARsB,GAUtBG,ICrBDM,IAASC,OACRje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CAAUJ,MAAOA,IAChB9d,EAAAC,EAAAC,cCMa,WACd,OACCF,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACCrB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAECJ,EAAAC,EAAAC,cAACie,EAAD,MAEAne,EAAAC,EAAAC,cAAC2W,GAAD,MAEA7W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBAClBH,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAClBH,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMhe,EAAOpB,UAAWqf,UAAW5c,IAChD3B,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMhe,EAAOlB,WAAYmf,UAAW3c,IACjD5B,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMhe,EAAOnB,aAAcof,UAAW/S,IACnDxL,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOE,KAAMhe,EAAOZ,aAAc6e,UAAW7S,IAC7C1L,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOE,KAAOhe,EAAOjB,WAAYkf,UAAW/J,KAC5CxU,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOE,KAAMhe,EAAOf,YAAagf,UAAWrJ,KAC5ClV,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOE,KAAMhe,EAAOd,qBAAsB+e,UAAWlH,KACrDrX,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAOE,KAAMhe,EAAOV,YAAa2e,UAAWhH,QAM/CvX,EAAAC,EAAAC,cAACiX,GAAD,SD/BF,OAKDvQ,SAAS4X,eAAe,ShBwGpB,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMrV,KAAK,SAAAsV,GAClCA,EAAaC","file":"static/js/main.d165d011.chunk.js","sourcesContent":["\r\n\r\nexport const home_page = '/';\r\nexport const contact_page = '/contact';\r\nexport const about_page = '/about';\r\nexport const login_page = '/login';\r\nexport const logout_page = '/logout';\r\nexport const signup_page = '/signup';\r\nexport const forget_password_page ='/forget';\r\nexport const download_page = '/download';\r\nexport const profile_page = '/profile';\r\n\r\nexport const blog_page = '/blog';\r\nexport const market_page = '/market';\r\n\r\nexport const admin_page = '/admin/user/'; // + userid\r\nexport const dashboard_page = '/dashboard'; // site owner and administrator only\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {routes} from '../../../constants';\r\n\r\nconst SideBarMenuAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> <strong>Home</strong></Link></li>\r\n\t\t\t<li><Link to={routes.about_page} title=\"About\"><i className=\"fa fa-info\"></i> <strong>About</strong></Link></li>\r\n\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> <strong>Contact</strong></Link></li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<Link to=\"#\">\r\n\t\t\t\t\t<i className=\"fa fa-user-md\"></i> <span>Client Area</span>\r\n\t\t\t\t\t<span className=\"pull-right-container\">\r\n\t\t\t\t\t\t<i className=\"fa fa-angle-left pull-right\"></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.admin_page} title=\"manage your Account\"><i className=\"fa fa-sign-in\"> </i> <strong> Account</strong> </Link> </li>                    \r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t\t<li><Link to={routes.blog_page} title=\"Bulk Messaging &amp; Contact Management Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t<li><Link to={routes.dashboard_page} title=\"Dashboard\"><i className=\"fa fa-dashboard\"> </i> <strong>Dashboard</strong></Link></li>\r\n\t\t</ul>        \r\n\t)\r\n}\r\n\r\nconst SideBarMenuNonAuth = () => {\r\n\treturn (\r\n\t\t<ul className=\"sidebar-menu\">\r\n\t\t\t<li className=\"header\">W-Trading</li>\r\n\t\t\t<li className=\"active treeview\">\r\n\t\t\t\t<ul className=\"treeview-menu\">\r\n\t\t\t\t\t<li><Link to={routes.home_page} title=\"weqtrading online store\"><i className=\"fa fa-home\"></i> Home</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.about_page} title=\"Contact Us\"><i className=\"fa fa-info\"></i> About</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.contact_page} title=\"Contact Us\"><i className=\"fa fa-envelope\"></i> Contact</Link></li>\r\n                    <li><Link to={routes.market_page} title=\"Market\"><i className=\"fa fa-shopping-basket\"></i> Market Place</Link></li>\r\n\t\t\t\t\t<li><Link to={routes.blog_page} title=\"Blog\"><i className=\"fa fa-book\"> </i> <strong>Blog</strong></Link></li>\r\n\t\t\t\t\t<li><Link to={routes.login_page} title=\"Login\"><i className=\"fa fa-sign-in\"> </i> Login </Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>   \r\n\t) \r\n}\r\n\r\nexport default function MenuItems (props) {\r\n\tconst [user, setLoggedIn] = useState({user:''})\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tuser.isLoggedIn ? <SideBarMenuAuth /> : <SideBarMenuNonAuth />\r\n\t\t\t}\r\n        \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nMenuItems.propTypes = {\r\n\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nfunction Header(props) {\r\n\r\n\tlet SidebarCollapse = () => {\r\n\r\n\t}\r\n\r\n\treturn (\r\n        \r\n\t\t<Fragment>\r\n\t\t\t<header className=\"main-header\">                    \r\n\t\t\t\t<Link to={routes.home_page} className=\"logo\">                    \r\n\t\t\t\t\t<span className=\"logo-mini\"><b>W</b>-T</span>                    \r\n\t\t\t\t\t<span className=\"logo-lg\"><b>Weq</b> Trading</span>\r\n\t\t\t\t</Link>                    \r\n\t\t\t\t<nav className=\"navbar navbar-static-top\">                    \r\n\t\t\t\t\t<a to=\"#\" className=\"sidebar-toggle\" data-toggle=\"offcanvas\" data-target=\"sidebar-menu\" role=\"button\" onClick={SidebarCollapse()}>\r\n\t\t\t\t\t\t<span className=\"sr-only\">W-Trading</span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>                \r\n\t\t</Fragment>\r\n        \r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { routes } from '../../constants';\r\n\r\n\r\nexport default function Home (){\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='box box-body'>\r\n\t\t\t\t<div className='box-header'>\r\n\t\t\t\t\t<h3 className='box-title'><strong> <i className='fa fa-home'> </i> Weq Trading </strong> </h3>\r\n\r\n\t\t\t\t\t<div className='box-tools'>\r\n\r\n            <button className='btn btn-box-tool'><Link to={routes.market_page}><strong> <i className='fa fa-shopping-bag'> </i> Market Place </strong> </Link></button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n            \r\n\t\t\t</div>  \r\n\t\t</Fragment>    \r\n\t)\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './About.css';\r\n\r\nexport default function About () {\r\n\r\n    return (\r\n    <Fragment>\r\n        <div className='box box-body'>\r\n            <div className='box-header'>\r\n                <h3 className='box-title'>About</h3>\r\n            </div>            \r\n                                \r\n        </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import moment from 'moment';\r\nclass Utilities {\r\n\r\n    constructor(today, url) {\r\n        this.today = today;\r\n        this.url = url;\r\n    }\r\n\r\n    isUrl = (url) => {\r\n        let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name and extension\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?' + // port\r\n            '(\\\\/[-a-z\\\\d%@_.~+&:]*)*' + // path\r\n            '(\\\\?[;&a-z\\\\d%@_.,~+&:=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return pattern.test(url);\r\n    };\r\n\r\n    isEmpty = (a) => {\r\n        return a !== undefined ? a === null || a === '' : true;\r\n    };\r\n\r\n    isProvince = (province) => {\r\n        let province_list = ['limpopo', 'mpumalanga', 'north west', 'gauteng', 'kwazulu natal', 'eastern cape', 'western cape', 'northern cape', 'orange free state'];\r\n        for (let i = 0; i < province_list.length; i++) {\r\n            if (province === province_list[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    validateEmail = (email) => {\r\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    validatePassword = (password) => {\r\n        let re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n        return re.test(password);\r\n    };\r\n\r\n    validateUsername = (username) => {\r\n        let re = /^\\w+$/;\r\n        return re.test(username);\r\n    };\r\n\r\n    isNumber = (n) => {\r\n        return n !== undefined ? typeof (n) !== \"boolean\" && !isNaN(n) : false;\r\n    };\r\n\r\n    isCell = (n) => {\r\n        return this.isNumber(n) ? ((n.length === 10) || (n.length === 11) || (n.length === 12) || (n.length === 13)) : false;\r\n    };\r\n\r\n    isTel = (n) => {\r\n        return n !== undefined ? this.isCell(n) : false;\r\n    };\r\n\r\n    isFax = (n) => {\r\n        return n !== undefined ? this.isCell(n) : false;\r\n    };\r\n\r\n    getAge = (dateString) => {\r\n        let dates = dateString.split(\"-\");\r\n        let d = new Date();\r\n\r\n        let userday = dates[2];\r\n        let usermonth = dates[1];\r\n        let useryear = dates[0];\r\n\r\n        let curday = d.getDate();\r\n        let curmonth = d.getMonth() + 1;\r\n        let curyear = d.getFullYear();\r\n\r\n        let age = curyear - useryear;\r\n\r\n        if ((curmonth < usermonth) || ((curmonth === usermonth) && curday < userday)) {\r\n            age--;\r\n        }\r\n        return age;\r\n    };\r\n    isIDNumber = (n) => {\r\n        return n !== undefined ? (this.isNumber(n)) && (n.length === 13) : true;\r\n    };\r\n    numDaysBetweenDates = (firstDate, secondDate) => {\r\n\r\n        let f_dates = firstDate.split(\"-\");\r\n        let s_dates = secondDate.split(\"-\");\r\n\r\n        // let d = new Date();\r\n\r\n        let f_day = parseInt(f_dates[2]);\r\n        let f_month = parseInt(f_dates[1]);\r\n        let f_year = parseInt(f_dates[0]);\r\n\r\n        let s_day = parseInt(s_dates[2]);\r\n        let s_month = parseInt(s_dates[1]);\r\n        let s_year = parseInt(s_dates[0]);\r\n\r\n        // TODO- Please revise the number of days algorithm\r\n        // let years = f_year - s_year;\r\n        // let months = f_month - s_month;\r\n        // let days = f_day - s_day;\r\n\r\n        let a = moment([f_year, f_month, f_day]);\r\n        let b = moment([s_year, s_month, s_day]);\r\n\r\n        return a.diff(b, 'days') + 1;\r\n\r\n        //\r\n        // if ((years === 0) && (months === 0) && ((days === 0) || (days > 0))){\r\n        //     return days\r\n        // }else if ((years === 0) && (months > 0)){\r\n        //     return (days + (months * 30))\r\n        // }else{\r\n        //     return 365\r\n        // }\r\n    };\r\n\r\n    countTimeBetweenTwoTimeStamps = (stamp_1, stamp_2) => {\r\n        try {\r\n            return (stamp_1 - stamp_2)\r\n        } catch (e) {\r\n            return (parseInt(stamp_1) - parseInt(stamp_2))\r\n        }\r\n    };\r\n\r\n    throttle = (func, limit) => {\r\n        let lastFunc;\r\n        let lastRan;\r\n        return function () {\r\n            const context = this;\r\n            const args = arguments;\r\n            if (!lastRan) {\r\n                func.apply(context, args);\r\n                lastRan = Date.now();\r\n            } else {\r\n                clearTimeout(lastFunc);\r\n                lastFunc = setTimeout(function () {\r\n                    if (Date.now() - lastRan >= limit) {\r\n                        func.apply(context, args);\r\n                        lastRan = Date.now();\r\n                    }\r\n                }, limit - (Date.now() - lastRan))\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    debounce = (func, delay) => {\r\n        let inDebounce;\r\n        return function () {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(inDebounce);\r\n            inDebounce = setTimeout(() => func.apply(context, args), delay)\r\n        }\r\n    };\r\n}\r\n\r\n// (today,url)\r\nlet today = new Date();\r\nlet url = document.documentURI;\r\n\r\nexport let Utils = new Utilities(today, url);\r\n","\r\nimport React, { Component } from 'react'\r\n\r\nexport default class InlineError extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {message : this.props.message}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box box-danger'}>\r\n\t\t\t\t<div className={'box box-header pull-right'}>\r\n\t\t\t\t\t<h3 className={'box-title'}><em><small>{this.state.message}</small></em></h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {Utils} from '../../utilities';\r\nimport InlineError from \"../Forms/InlineError\";\r\nexport let contact_form_details  = {\r\n            messageid:\"\",\r\n            names : \"\",\r\n            email : \"\",\r\n            cell: \"\",\r\n            subject: \"\",\r\n            message: \"\",\r\n\r\n            message_read : false,\r\n            date_read : \"\",\r\n            date_sent : \"\"\r\n};\r\n\r\nexport let contact_response_message_detail = {\r\n        messageid:\"\",\r\n        response:\"\",\r\n        date_sent:\"\",\r\n};\r\n\r\nlet contact_form_errors = {\r\n            names_error : '',\r\n            email_error : '',\r\n            cell_error : '',\r\n            subject_error : '',\r\n            message_error : '',\r\n\r\n};\r\n\r\nclass ThisContactForm extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            contact_form : {...contact_form_details},\r\n            form_errors: {...contact_form_errors},\r\n            form_messages : '',\r\n        };\r\n        this.change = this.change.bind(this);\r\n        this.onSubmitContactForm = this.onSubmitContactForm.bind(this);\r\n        this.onCheckErrors = this.onCheckErrors.bind(this);\r\n    };\r\n\r\n\r\n    change =(e) =>{\r\n\r\n        let contact_form = Object.assign({},this.state.contact_form);\r\n        contact_form[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            contact_form:contact_form\r\n        });\r\n    };\r\n\r\n    onSubmitContactForm =(e) =>{\r\n        e.preventDefault();        \r\n        console.log(this.state.contact_form);\r\n        let data = JSON.stringify(this.state.contact_form);\r\n        console.log(data);\r\n        let self = this;\r\n\r\n        axios.post(\"/api/contact/submit-contact-form\",\"data=\" + data).then( function(response){\r\n            if (response.status === 200){\r\n                return response.data;\r\n            }\r\n        }).then(function(data){\r\n            let message = data.message;\r\n            self.setState({\r\n                form_messages: message\r\n            });\r\n\r\n        }).catch(function(err){\r\n            let message = err.message;\r\n            self.setState({\r\n                form_response : message\r\n            });\r\n        })\r\n    };\r\n\r\n    onCheckErrors = () => {\r\n        this.isError = false;\r\n        this.form_errors  = Object.assign({},this.state.form_errors);\r\n        let self = this;\r\n\r\n        this.do_check_errors = async() => {\r\n            let check_names_errors = () =>{\r\n                if (Utils.isEmpty(this.state.contact_form.names) === true){\r\n                    self.form_errors.names_error = 'names field cannot be empty';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_email_errors = () => {\r\n              if (Utils.validateEmail(this.state.contact_form.email) === false){\r\n                  self.form_errors.email_error = 'email field is invalid';\r\n                  self.isError = true;\r\n              }\r\n              return this;\r\n            };\r\n\r\n            let check_cell_errors = () => {\r\n                if (Utils.isCell(this.state.contact_form.cell) === false){\r\n                    self.form_errors.cell_error = 'cell field is invalid';\r\n                    self.isError = true\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_subject_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.subject) === true){\r\n                    self.form_errors.subject_error = 'subject field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            let check_message_errors = () => {\r\n                if (Utils.isEmpty(this.state.contact_form.message) === true){\r\n                    self.form_errors.message_error = 'message field is invalid';\r\n                    self.isError = true;\r\n                }\r\n                return this;\r\n            };\r\n\r\n            await check_names_errors();\r\n            await check_email_errors();\r\n            await check_cell_errors();\r\n            await check_subject_errors();\r\n            await check_message_errors();\r\n\r\n\r\n\r\n            return self.isError\r\n        };\r\n\r\n        let results = this.do_check_errors();\r\n\r\n        this.setState({\r\n            form_errors : this.form_errors\r\n        });\r\n        return results;\r\n    };\r\n\r\n    render (){\r\n        \r\n        return (\r\n        <div className=\"col-md-6\">\r\n        <div className=\"box box-header\">\r\n            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-envelope\"> </i> Contact Form</strong></h3>\r\n        </div>\r\n        <form className=\"form-horizontal\">\r\n            <div className=\"form-group\">            \r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"names\"\r\n                    placeholder=\"Names\"\r\n                    value={this.state.contact_form.names}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.names_error) ? <InlineError message={this.state.form_errors.names_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.contact_form.email} onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.email_error) ? <InlineError message={this.state.form_errors.email_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"cell\"\r\n                    placeholder=\"Cell\"\r\n                    value={this.state.contact_form.cell}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.cell_error) ? <InlineError message={this.state.form_errors.cell_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    value={this.state.contact_form.subject}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.subject_error) ? <InlineError message={this.state.form_errors.subject_error}/> : ''}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    value={this.state.contact_form.message}\r\n                    onChange={e => this.change(e)}\r\n                />\r\n                {(this.state.form_errors.message_error) ? <InlineError message={this.state.form_errors.message_error}/>: '' }\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg\"\r\n                    onClick={e => {\r\n                        let self = this;\r\n                        this.onCheckErrors().then(function(results){\r\n                            if (!results){\r\n                                self.onSubmitContactForm(e)\r\n                            }else{\r\n\r\n                                self.setState({\r\n                                    form_response: 'there where errors aboves'\r\n                                });\r\n\r\n                                console.log('there where errors on form fields')\r\n                            }\r\n                        }).catch(function(err){\r\n                            self.setState({\r\n                                form_response: err.message\r\n                            });\r\n                            console.log('There was an error checking for errors');\r\n                        })\r\n                        }\r\n                    }>\r\n                    <strong> <i className=\"fa fa-send\"> </i> Submit Message</strong>\r\n                </button>\r\n                <button\r\n                    type={'button'}\r\n                    className={'btn btn-warning btn-lg'}\r\n                    name={'reset'}\r\n                    onClick={e => {\r\n                        this.setState({\r\n                            contact_form : {...contact_form_details},\r\n                            form_errors: {...contact_form_errors},\r\n                            form_messages : '',\r\n                        });\r\n                    }}\r\n                >\r\n                    <strong><i className={'fa fa-eraser'}> </i> Reset </strong>\r\n\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                        <p>{this.state.form_messages}</p>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default ThisContactForm","import React, { Fragment } from 'react';\r\nimport ThisContactForm from './ThisContactForm';\r\n\r\nexport default function Contact() {\r\n\r\n\r\n\tlet ResetDefault = e => {\r\n\t\tif (e.target.value === 'Message...') {\r\n\t\t\te.target.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\tlet SubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('Submitting Contact Form')\r\n\t}\r\n\treturn (\r\n\t\t<Fragment>            \r\n            <ThisContactForm></ThisContactForm>\r\n\t\t</Fragment>\r\n\r\n\t)\r\n}","import React, { Fragment } from 'react'\r\nimport './Profile.css';\r\n\r\nexport default function Profile (){\r\n  return (\r\n      <Fragment>\r\n          <div className='Profile'>\r\n                <h3>Profile</h3>\r\n\r\n                <div className='box-footer'>\r\n\r\n                  <form className='form-horizontal'>\r\n                    <div className='form-group'>\r\n                      <label>Names </label>\r\n                      <input type='text' className='form-control' name='names' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Surname </label>\r\n                      <input type='text' className='form-control' name='surname' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Cell </label>\r\n                      <input type='text' className='form-control' name='cell' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <label>Email </label>\r\n                      <input type='email' className='form-control' name='email' value={''} />\r\n                    </div>\r\n\r\n                    <div className='form-group'>\r\n                      <button className='btn btn-success btn-lg' name='update'><strong>Update</strong></button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n          </div>\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nconst config = {\r\n apiKey: \"AIzaSyBRJIk9O1Y8CAh9pQ9tKy9hPkDHnI4hjEc\",\r\n \tauthDomain: \"weqtrading.firebaseapp.com\",\r\n \tdatabaseURL: \"https://weqtrading.firebaseio.com\",\r\n \tprojectId: \"weqtrading\",\r\n \tstorageBucket: \"weqtrading.appspot.com\",\r\n \tmessagingSenderId: \"308547563709\",\r\n \tappId: \"1:308547563709:web:def203ccd0d35c07\"\r\n};\r\n\r\ntry{\r\n\t!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n}catch (e) {\r\n\tconsole.log('firebase app already configured');\r\n}\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport {auth,\r\n\tfirebase\r\n};","\r\n\r\n////***************phasing this out\r\n\r\nexport let profile_details_type = {\r\n\r\n\tprofile_name: '',\r\n\tnames: '',\r\n\tsurname: '',\r\n\tnickname: '',\r\n\temail: '',\r\n\tcell: '',\r\n\twebsite: '',\r\n\tpaypal_email: '',\r\n\tintroduction: '',\r\n\tmystory: '',\r\n\tphotourl: '',\r\n\tuserid: '',\r\n\tid_number: '',\r\n\r\n\tprofile_active:false,\r\n\tprofile_public:true,\r\n\r\n\tlikes: 0,\r\n\tpublic_url: '',\r\n//    note add shares\r\n};\r\n\r\nexport let profile_details_errors  = {\r\n\tprofile_name_error : '',\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\temail_error : '',\r\n\tcell_error : '',\r\n\twebsite_error: '',\r\n\tpaypal_email_error: '',\r\n\tintroduction_error: '',\r\n\tmystory_error: '',\r\n\tphotourl_error: '',\r\n\tuserid_error: '',\r\n\tid_number_error: '',\r\n};\r\n\r\n\r\n//******* a user contact details type\r\n\r\nexport let contact_details_type = {\r\n\tuser_contact_id : ' ',\r\n\tcell : '',\r\n\temail : '',\r\n\twebsite : '',\r\n\tfacebook : '',\r\n\ttwitter : '',\r\n\r\n\tcontact_details_loaded:false,\r\n\tcontact_details_saved:false,\r\n\tcontact_details_updated:false,\r\n\tcontact_details_deleted:false,\r\n\tverification_sms_sent : false,\r\n\tsms_verification_code: '',\r\n\tcell_verified:false,\r\n\temail_verification_sent: false,\r\n\temail_verification_link: '',\r\n\temail_verified:false\r\n};\r\nexport let contact_details_type_errors = {\r\n\tcell_error : '',\r\n\temail_error : '',\r\n\twebsite_error : '',\r\n\tfacebook_error : '',\r\n\ttwitter_error : ''\r\n};\r\n\r\n\r\n\r\n//*********a type for user contact details sub => sending email messages\r\n\r\nexport let user_email_details_type = {\r\n\tuser_email_id : '',\r\n\temail_id:'',\r\n\tto_email_address : '',\r\n\temail_subject:'',\r\n\temail_body:'',\r\n\tis_email_text : false,\r\n\tdate_email_sent : '',\r\n\ttime_email_sent : '',\r\n\tis_email_delivered : false,\r\n\tis_email_read : false,\r\n};\r\n\r\n\r\n//*************a type for contact details sub => sending sms's\r\nexport let user_cell_details_type = {\r\n\tuser_cell_id : '',\r\n\tcell_id : '',\r\n\tto_cell_number : '',\r\n\tsms_body : '',\r\n\tdate_sms_sent : '',\r\n\ttime_sms_sent : '',\r\n\tis_sms_delivered : false,\r\n};\r\n\r\n\r\n\r\n\r\n//***************a type for user personal details\r\nexport let personal_details_type = {\r\n\tuser_personal_id : '',\r\n\tnames : '',\r\n\tsurname : '',\r\n\tnickname : '',\r\n\ttagline : '',\r\n\r\n};\r\nexport let personal_details_type_errors ={\r\n\tnames_error : '',\r\n\tsurname_error : '',\r\n\tnickname_error : '',\r\n\ttagline_error : ''\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//****************** this is a type for account details\r\n\r\nexport let account_details_type = {\r\n\tuid : '',\r\n\tdisplayName : '',\r\n\tphotoURL : '',\r\n\temail : '',\r\n\tpassword : '',\r\n\temailVerified : false,\r\n\tphoneNumber : '',\r\n\tisAnonymous : false,\r\n\tproviderId : 'password',\r\n\r\n\tsigning_in : false,\r\n\tuser_signed_in : false,\r\n\tuser_deleted : false,\r\n\tpassword_changed : false,\r\n\temail_verification_sent : false,\r\n\tonetime_pin_sent: false,\r\n\r\n};\r\n\r\nexport let account_details_type_error = {\r\n\tdisplayName_error : '',\r\n\tphotoURL_error : '',\r\n\temail_error : '',\r\n\tpassword_error : '',\r\n\tphoneNumber_error : ''\r\n};\r\n","export let paypal_init = {\r\n\tdeposit_id : '',\r\n\tenv : 'sandbox', // you can set here to 'production' for production\r\n\tcurrency : 'ZAR', // or you can set this value from your props or state\r\n\tdeposit : 0,\r\n\tsuccess: false,\r\n\tcancelled: false,\r\n\r\n};\r\n\r\nexport let paypal_keys_init = {\r\n\tsandbox: 'ATRxpThjtp-e8_DjFQPVfsa3r8rpHATJvyLMm2P6PiTPOQfoxUs-MNP6yu8uzpRnRy8sj3NKbmLRlqj6',\r\n\tclient_secret: 'EHKygL0qZqFetuFev52k0MSYi6dUE-0HnJcKCd3YrzUjGMK-wm_ocFzUaAGoj1s20Y9IotNk7dtn5gxW',\r\n\tproduction: 'ATIerHv_l-vNEibCenGsyrtIAzLowgD7_JtiQvm2fAc_CVuPzpcTGVhuLUVXxL5voT_0kvP1QBQvgmjN',\r\n};\r\n\r\nexport let bank_account_details = {\r\n\tbank_id : '',\r\n\taccount_holder: '',\r\n\tbank_name:'',\r\n\tbranch_code:'',\r\n\taccount_number:'',\r\n\taccount_type:'',\r\n};\r\n\r\nexport let bank_account_errors_details = {\r\n\taccount_holder_error : '',\r\n\tbank_name_error : '',\r\n\tbranch_code_error : '',\r\n\taccount_number_error : '',\r\n\taccount_type_error:''\r\n};\r\n\r\nexport let paypal_account_details = {\r\n\tpaypal_id : '',\r\n\tpaypal_email : ''\r\n};\r\n\r\nexport let paypal_account_errors = {\r\n\tpaypal_email_error : ''\r\n};\r\n\r\nexport let ewallet_account_details = {\r\n\tewallet_id : '',\r\n\tewallet_number : '',\r\n\tewallet_system : '',\r\n};\r\n\r\nexport let ewallet_account_errors = {\r\n\tewallet_number_error : ''\r\n};\r\n\r\n//bank details will be replaced by relevant account details\r\nexport let bank_details = {\r\n\tbank_id: '',\r\n\taccount_holder : '',\r\n\tbank_name : '',\r\n\tbranch_code : '',\r\n\taccount_number : '',\r\n\taccount_type : '',\r\n\tpaypal_email : '',\r\n\te_wallet : '' // cell phone number for e-wallet transactions\r\n};\r\n\r\nexport let wallet_details = {\r\n\twallet_id : '',\r\n\twallet_balance : 0,\r\n\ttotal_funds_received : 0,\r\n\ttotal_funds_sent : 0,\r\n\ttotal_deposits: 0,\r\n\ttotal_withdrawals: 0,\r\n\twithdrawal_limit: 0\r\n};\r\n\r\nexport let withdrawal_methods = {\r\n\twithdrawal_methods : ['bank-deposit', 'paypal', 'e-wallet']\r\n};\r\n\r\nexport let withdrawals_details = {\r\n\twithdrawal_id : '', //same as user id\r\n\ttransaction_id : '', //id for this particular transaction unique in every way\r\n\twallet_balance : 0,\r\n\twithdrawal_amount : 0,\r\n\twithdrawal_method : '',\r\n\tdate_scheduled : '',\r\n\ttime_transaction : '',\r\n\ttransaction_status: 'waiting_approval',\r\n\twithdrawal_type: 'normal' // express , express withdrawals are processed a\r\n\r\n\t// withdrawal methods // paypal or ewallet and bank account\r\n\r\n\t// waiting_approval : true, // transaction is awaiting approval by our moderators\r\n\t// approved: true, // transaction is approved\r\n\t// pending: true, // transaction is pending\r\n\t// completed:true, // transaction is completed\r\n\t// failed : true, // transaction has failed\r\n\t// fundsheld : true, // transaction not completed because your funds where held\r\n};\r\n\r\nexport let withdrawal_details_errors = {\r\n\twallet_balance_errors : '',\r\n\twithdrawal_amount_errors : '',\r\n\twithdrawal_method_errors : '',\r\n};\r\n\r\nexport let deposits_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id : '',\r\n\tdeposited_amount : '',\r\n\tdate_deposited : '',\r\n\tmethod_of_deposit : '', // direct deposit/ paypal / e-wallet\r\n\tdeposit_approved : false,\r\n};\r\n\r\nexport let ewallet_number_details = {\r\n\tewallet_number : '',\r\n\tused_count : 0,\r\n\tnumber_id : '',\r\n\tred_flagged: false,\r\n};\r\n\r\nexport let ewallet_numbers_details_error = {\r\n\tewallet_number_error : '',\r\n\r\n};\r\n\r\nexport let ewallet_deposit_details = {\r\n\tdeposits_id : '',\r\n\ttransaction_id:'',\r\n\tdeposited_amount:0,\r\n\tdate_deposited: '',\r\n\ttime_deposited: '',\r\n\tdeposit_approved: false,\r\n\tdate_approved : '',\r\n\ttime_approved : '',\r\n\tewallet_pin:'',\r\n\tvoucher_number : '',\r\n\tnumber_id:'',\r\n};\r\n\r\nexport let ewallet_deposit_details_errors = {\r\n\tdeposited_amount_error : '',\r\n};\r\n\r\n\r\n","\r\nexport const sendOneTimePin = cell_number =>{\r\n    // eslint-disable-next-line no-console\r\n\tconsole.log('Actually send one time pin here',cell_number);\r\n};\r\n","import {\r\n\tauth,firebase\r\n} from './firebase';\r\n\r\nimport {account_details_type} from '../types';\r\n\r\nimport {sendOneTimePin} from '../sms';\r\n\r\n//singup\r\nexport const doCreateUserWithEmailAndPassword = async  (username, password) => {\r\n\tlet result;\r\n\ttry{\r\n\t\tlet user = auth.createUserWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = async (username, password) => {\r\n\tlet result;\r\n\ttry {\r\n\t\tlet {user} = await auth.signInWithEmailAndPassword(username, password);\r\n\t\tlet user_account = {...account_details_type};\r\n\t\tuser_account = {...user};\r\n\t\tuser_account.user_signed_in = true;\r\n\t\tresult = {status: true, response: {...user_account}};\r\n\t}catch (e) {\r\n\t\tresult = {status:false,error:{...e}};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// Sign out\r\nexport const doSignOut = async () =>{\r\n\tlet result = {};\r\n\tawait firebase.auth().signOut().then( () => {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\n// Password Reset\r\nexport const doPasswordReset = async (email_address) => {\r\n\t// auth.sendPasswordResetEmail(email);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().sendPasswordResetEmail(email_address)\r\n\t\t.then(() => { result = {status:true,error:{}};\r\n\t\t}).catch((err) => {result = {status:false,error:{...err}};\r\n\t\t});\r\n\r\n\treturn result;\r\n};\r\n// Password Change\r\nexport const doPasswordUpdate = async (password) =>{\r\n//\tauth.currentUser.updatePassword(password);\r\n\tlet result = {};\r\n\r\n\tawait firebase.auth().currentUser.updatePassword(password)\r\n\t\t.then( () => {result = {status : true,error: {}};\r\n\t\t})\r\n\t\t.catch( (err) => {result = {status: false,error:{...err}};\r\n\t\t});\r\n\treturn result;\r\n};\r\n\r\n//Delete User\r\n\r\nexport const doDeleteUser = async (user) => {\r\n\tlet result = {};\r\n\r\n\tawait user.delete().then( () => {\r\n\t\tresult = {status : true,error:{}};\r\n\t}).catch( (err) => {\r\n\t\tresult = {status: false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendEmailVerification = async (user) => {\r\n\tlet result = {};\r\n\tconsole.log(user);\r\n\tawait firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n\t\tresult = {status:true,error:{}};\r\n\t}).catch((err) => {\r\n\t\t// An error happened.\r\n\t\tresult = {status:false,error:{...err}};\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport const doSendOneTimePin = async (cell_number) => {\r\n\tlet result = {status:true,error:{}};\r\n\tawait sendOneTimePin(cell_number);\r\n\treturn result;\r\n\r\n\r\n\r\n};\r\n\r\n//Re-Authenticate\r\n\r\n//\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as routes from '../../../constants/routes';\r\n\r\nimport { auth } from '../../../firebase';\r\n\r\n\r\n\r\nconst SignUpPage = () => {\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <div className=\"box box-header\">\r\n                <h3 className=\"box-title\">Sign Up</h3>\r\n            </div>\r\n\r\n            <SignUpForm  />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst Initial_State = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...Initial_State };\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n        } = this.state;\r\n\r\n        const {\r\n            history,\r\n        } = this.props;\r\n\r\n        auth.doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                this.setState({ ...Initial_State });\r\n                //history.push(routes.home_page);\r\n            })\r\n            .catch(error => {\r\n                this.setState(byPropKey('error', error));\r\n            });\r\n\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <div className=\"box box-header\">\r\n                    <h3 className=\"box-title\"><strong> Register</strong></h3>\r\n                </div>\r\n\r\n\r\n                <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={username}\r\n                            onChange={event => this.setState(byPropKey('username', event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={email}\r\n                            onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            value={passwordOne}\r\n                            onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n\r\n                        <input className=\"form-control\"\r\n                            value={passwordTwo}\r\n                            onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n\r\n                        <button disabled={isInvalid} type=\"submit\" className=\"btn btn-app btn-outline-dark btn-block\">\r\n                            <strong> <i className=\"fa fa-sign-in\"> </i> Sign Up </strong>\r\n                        </button>\r\n                    </div>\r\n                    {error && <p>{error.message}</p>}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport default SignUpPage;\r\nexport {\r\n    SignUpForm\r\n};","\r\nimport {auth} from '../../firebase';\r\nimport {account_details_type} from '../../types';\r\n\r\nexport const USER_ACCOUNT_ACTIONS = {\r\n\tUSER_LOGGED_IN : 'USER:USER_LOGGED_IN',\r\n\tUSER_SIGNED_OUT: 'USER:USER_SIGNED_OUT',\r\n\tCREATE_USER : 'USER:CREATE_USER',\r\n\tLOGIN_USER : 'USER:LOGIN_USER',\r\n\tLOGOUT_USER : 'USER:LOGOUT_USER',\r\n\tDELETE_USER : 'USER:DELETE_USER',\r\n\tCHANGE_PASSWORD : 'USER:CHANGE_PASSWORD',\r\n\tSEND_VERIFICATION_EMAIL : 'USER:SEND_VERIFICATION_EMAIL',\r\n\tSEND_ONETIME_PIN : 'USER:SEND_ONETIME_PIN'\r\n};\r\n\r\nexport const doDispatchUserSignedIn = (user) => {\r\n\tlet user_account = {...account_details_type};\r\n\tuser_account = {...user};\r\n\tuser_account.user_signed_in = true;\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_LOGGED_IN,\r\n\t\t\tuser_account:{...user_account},\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUserSignedOut = (user) => {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype:USER_ACCOUNT_ACTIONS.USER_SIGNED_OUT,\r\n\t\t\tuser_account:{...user}\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchCreateUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doCreateUserWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.CREATE_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchLoginUser =  (username,password) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignInWithEmailAndPassword(username, password).then(result =>{\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account: {...result.response},\r\n\t\t\t\t\tmessage:'user logged in',\r\n\t\t\t\t\tcode:200\r\n\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype:USER_ACCOUNT_ACTIONS.LOGIN_USER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchLogOutUser = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doSignOut(user).then(result => {\r\n\t\t\tdispatch((result.status === true) ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage:'user logged out',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} :{\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.LOGOUT_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode : result.error.code\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUser = (user) => {\r\n\t//User should be a record of currentUser\r\n\treturn dispatch => {\r\n\t\tauth.doDeleteUser(user).then(result => {\r\n\t\t\tdispatch( result.status === true ? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...account_details_type},\r\n\t\t\t\t\tmessage: 'user successfully deleted',\r\n\t\t\t\t\tcode: 200}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.DELETE_USER,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchChangePassword = (user) => {\r\n\treturn dispatch => {\r\n\t\tauth.doPasswordUpdate(user.password).then( result =>{\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...user},\r\n\t\t\t\t\tmessage:'password successfully updated',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendVerificationEmail = (user) => {\r\n\treturn  dispatch => {\r\n\t\tauth.doSendEmailVerification(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'email verification successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode:result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doSendOneTimePin = (user) => {\r\n\treturn dispatch  => {\r\n\t\tauth.doSendOneTimePin(user).then(result => {\r\n\t\t\tdispatch((result.status === true)? {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser_account:{...result.response},\r\n\t\t\t\t\tmessage:'One Time Pin successfully sent',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t},\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tmessage: result.error.message,\r\n\t\t\t\t\tcode: result.error.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InlineMessage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {message : this.props.message,\r\n\t\t\tmessage_type : this.props.message_type};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'box-info'}>\r\n\t\t\t\t<div className={'box box-header'}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={'box-tools'}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'button'}\r\n\t\t\t\t\t\t\tclassName={'box-title btn-outline-info btn-lg'}\r\n\t\t\t\t\t\t><em><i className='fa fa-check-circle'> </i> <small> {this.state.message} </small></em>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nInlineMessage.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tmessage_type : PropTypes.string\r\n};\r\n\r\nexport default InlineMessage;","import React, { Component } from 'react';\r\n\r\n\r\nimport Signup  from '../Signup/Signup';\r\nimport * as routes from '../../../constants/routes';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    doDispatchChangePassword,\r\n    doDispatchCreateUser,\r\n    doDispatchLoginUser, doDispatchLogOutUser,\r\n    doDispatchUserSignedIn,\r\n    doDispatchUserSignedOut\r\n} from \"../../../actions/userAccountActions\";\r\nimport { connect } from \"react-redux\";\r\nimport InlineError from \"../../Forms/InlineError\";\r\nimport InlineMessage from \"../../Forms/InlineMessage\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showsignIn: true,\r\n            signupText: 'SignUp',\r\n            showsideScreen: false,\r\n\r\n        };\r\n\r\n        this.showSignUp = this.showSignUp.bind(this);\r\n\r\n    };\r\n\r\n    showSignUp = (e) => {\r\n\r\n        let prevState = this.state.showsignIn;\r\n        switch (prevState) {\r\n            case true: this.setState({\r\n                showsignIn: !prevState,\r\n                signupText: 'Login',\r\n            }); break;\r\n            case false: this.setState({\r\n                showsignIn: !prevState,\r\n                signupText: 'Sign-Up',\r\n            }); break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"sign-in\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"box box-header\">\r\n                            <h3 className=\"box-title\"> <strong> <i className=\"fa fa-sign-in\"> </i> Login </strong></h3>\r\n                        </div>\r\n                        <button className=\"btn btn-success btn-lg\"\r\n                            onClick={e => this.showSignUp(e)}>\r\n                            <strong> <i className=\"fa fa-arrow-right\"> </i> {this.state.signupText}</strong>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        {\r\n                            (this.state.showsignIn) ?\r\n                                <div>\r\n                                    <SignInForm\r\n                                        user={this.props.user}\r\n                                        user_errors={this.props.user_errors}\r\n                                        form_response={this.props.form_response}\r\n                                        response_code={this.props.response_code}\r\n                                        onLogin={this.props.onLogin}\r\n                                    />\r\n                                </div>\r\n                                : <Signup />\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst Initial_State = {\r\n    email: '',\r\n    password: ''\r\n};\r\n\r\nclass SignInForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...Initial_State };\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            email,\r\n            password,\r\n        } = this.state;\r\n\r\n\r\n        // TODO- dispatch signin action here\r\n        //doDispatchLoginUser(email, password);\r\n        this.props.onLogin(email, password);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            user,\r\n            user_errors,\r\n            form_response,\r\n            response_code\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"box box-primary col-lg-6\">\r\n\r\n                <div className=\"box box-header\">\r\n                    <h3 className=\"box-title\">\r\n                        <strong> <i className=\"fa fa-sign-in\"> </i> SignIn</strong>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className={'box-body'}>\r\n                    <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\"\r\n                                name={'email'}\r\n                                value={user.email}\r\n                                onChange={e => this.onChangeHandler(e)}\r\n                                type=\"text\"\r\n                                placeholder=\"Email Address\"\r\n                            />\r\n                            {(user_errors.email_error) ? <InlineError message={user_errors.email_error} /> : ''}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\"\r\n                                name={'password'}\r\n                                value={user.password}\r\n                                onChange={e => this.onChangeHandler(e)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                            {(user_errors.password_error) ? <InlineError message={user_errors.password_error} /> : ''}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                // disabled={isInvalid}\r\n                                type=\"submit\"\r\n                                className=\"btn btn-success btn-lg\"\r\n                            >\r\n                                <strong> <i className=\"fa fa-sign-in\"> </i> Sign In</strong>\r\n                            </button>\r\n                            <button\r\n                                //disabled={isInvalid}\r\n                                type=\"signup\"\r\n                                className=\"btn btn-primary btn-lg\"\r\n                            >\r\n                                <strong> <i className=\"fa fa-sign-out\"> </i> Sign Up</strong>\r\n                            </button>\r\n                        </div>\r\n                        <div className={'form-group'}>\r\n                            {(form_response) ? <InlineMessage message={form_response} /> : ''}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    SignInForm,\r\n};\r\n\r\nLogin.propTypes = {\r\n    user: PropTypes.shape({\r\n        uid: PropTypes.string.isRequired,\r\n        displayName: PropTypes.string,\r\n        photoURL: PropTypes.string,\r\n        email: PropTypes.string,\r\n        password: PropTypes.string,\r\n        emailVerified: PropTypes.bool,\r\n        phoneNumber: PropTypes.string,\r\n        isAnonymous: PropTypes.bool,\r\n        providerId: PropTypes.string,\r\n\r\n        signing_in: PropTypes.bool.isRequired,\r\n        user_signed_in: PropTypes.bool.isRequired,\r\n        user_deleted: PropTypes.bool.isRequired,\r\n        password_changed: PropTypes.bool.isRequired,\r\n        email_verification_sent: PropTypes.bool.isRequired,\r\n        onetime_pin_sent: PropTypes.bool.isRequired,\r\n\r\n    }),\r\n    user_errors: PropTypes.shape({\r\n        displayName_error: PropTypes.string,\r\n        photoURL_error: PropTypes.string,\r\n        email_error: PropTypes.string,\r\n        password_error: PropTypes.string,\r\n        phoneNumber_error: PropTypes.string\r\n    }),\r\n    form_response: PropTypes.string,\r\n    response_code: PropTypes.number\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.profile.account_details.user_account,\r\n        form_response: state.profile.account_details.form_response,\r\n        response_code: state.profile.account_details.response_code,\r\n        user_errors: state.profile.account_details.user_account_errors,\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onUserSignedIN: (user) => {\r\n            return dispatch(doDispatchUserSignedIn(user))\r\n        },\r\n        onUserSignedOut: (user) => {\r\n            return dispatch(doDispatchUserSignedOut(user))\r\n        },\r\n        onLogin: (username, password) => {\r\n            return dispatch(doDispatchLoginUser(username, password))\r\n        },\r\n        onLogout: (user) => {\r\n            return dispatch(doDispatchLogOutUser(user))\r\n        },\r\n        onSignUp: (username, password) => {\r\n            return dispatch(doDispatchCreateUser(username, password))\r\n        },\r\n        onChangePassword: (user) => {\r\n            return dispatch(doDispatchChangePassword(user))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItems from '../MenuItems/MenuItems';\r\nimport { routes } from '../../../constants';\r\n\r\nexport default function SideBar (){\r\n\r\n  let onSearch = e => {\r\n      e.preventDefault();\r\n      console.log('Searching site...');\r\n      // Remember to clear search field      \r\n  }\r\n\r\n  return (\r\n    <Fragment>    \r\n      <aside className=\"main-sidebar\">      \r\n        <section className=\"sidebar\"> \r\n                 \r\n          <div className=\"user-panel\">\r\n              <div className=\"pull-left image\">\r\n                  <img src=\"/static/dist/img/sms.jpeg\" id=\"strSideUserImageID\" className=\"img-circle\" alt=\"Weq-Trading\" />\r\n              </div>\r\n                <div className=\"pull-left info\">\r\n                  <p id=\"strSideUserNameID\"><Link to={routes.login_page}>Please Login</Link></p>\r\n                </div>\r\n              </div>\r\n\r\n              <form onSubmit={e => onSearch(e)} method=\"get\" className=\"sidebar-form\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"text\" name=\"q\" className=\"form-control\" placeholder=\"Search...\" />\r\n                    <span className=\"input-group-btn\">\r\n                      <button type=\"submit\" name=\"search\" id=\"search-btn\" className=\"btn btn-flat\"><i className=\"fa fa-search\"></i></button>\r\n                    </span>\r\n                  </div>\r\n              </form>\r\n\r\n              <ul className=\"sidebar-menu\">\r\n                      <MenuItems />\r\n              </ul>\r\n        </section>      \r\n      </aside>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"box box-footer with-border\">\r\n            <footer className=\"main-footer\">\r\n                <div className=\"pull-right hidden-xs\">\r\n                    <b>Weq </b> <a href=\"#\"> Trading</a>\r\n                </div>\r\n                <div className=\"pull-left hidden-xs\">\r\n                <strong>Copyright &copy; 2019 <a href=\"#\">Weqtrading</a>.</strong></div> All rights reserved  \r\n                </footer>\r\n        </div>    \r\n        )\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\n\r\nexport default function Forget(){\r\n\r\n\r\n  function sendRecoveryEmail  (e) {\r\n      e.preventDefault();\r\n      console.log('Sending Recovery Email');\r\n      \r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='box box-body'>\r\n        <div className='box-header'>\r\n          <h3 className='box-title'> <strong> <i className='fa fa-key'> </i> Forget Password</strong> </h3>        \r\n        </div>\r\n\r\n        <div className='box box-footer'>\r\n\r\n          <form className='form-horizontal' onSubmit={e => sendRecoveryEmail(e)}>\r\n              <div className='form-group'>\r\n                <span>Enter your username so what we can send you a password recovery message</span>\r\n              </div>\r\n              <div className='form-group'>                                    \r\n                  <input type='email' className='form-control' name='username'/>\r\n              </div>\r\n              <div className='form-group'>\r\n                  <button type='submit' className='btn btn-success btn-lg' onClick={e => sendRecoveryEmail(e)}><strong> <i className='fa fa-unlock-alt'> </i> Send Recovery Email</strong></button>\r\n                  <button type='reset' className='btn btn-warning btn-lg'><strong> <i className='fa fa-eraser'> </i> Cancel </strong></button>\r\n              </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {Fragment, Component } from 'react'\r\n\r\nexport default class Market extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className='box box-body'>\r\n\t\t\t\t\t<div className='box box-header'>\r\n\t\t\t\t\t\t<h3 className='box-title'><strong> <i className='fa fa-shopping-basket'> </i> Market Place </strong> </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Fragment>\r\n                \r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import SimpleCrypto from 'simple-crypto-js';\r\n\r\nlet getRandomString = () => {\r\n    let now = new Date();\r\n    now = now.getTime();\r\n    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ now).toString(36);\r\n};\r\n\r\nlet random_seed = getRandomString();\r\nlet crypto = new SimpleCrypto(random_seed);\r\n\r\nexport let encrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.encrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n\r\nexport let decrypt = function (text, cipher_seed) {\r\n\r\n    crypto.setSecret(cipher_seed);\r\n    try {\r\n        return crypto.decrypt(text);\r\n    } catch (e) {\r\n        return text;\r\n    }\r\n};\r\n","\r\nimport {\r\n\tdoDeleteUserContactDetails,\r\n\tdoLoadUserContactInfo,\r\n\tdoSaveUserContactInfoServer,\r\n\tdoUpdateUserContactDetails,\r\n\tdoSendCellVerificationSMS,\r\n\tdoVerifyUserContactDetailsCell,\r\n\tdoSendEmailVerificationLink,\r\n\tdoVerifyEmailLink\r\n} from './contactDetailsBackEndRequests';\r\n\r\nimport {contact_details_type} from '../../types';\r\n\r\nexport const CONTACT_DETAILS_ACTIONS = {\r\n\tLOAD_CONTACT_DETAILS : 'USER_CONTACT:LOAD_CONTACT_DETAILS',\r\n\tSAVE_CONTACT_DETAILS : 'USER_CONTACT:SAVE_CONTACT_DETAILS',\r\n\tUPDATE_CONTACT_DETAILS : 'USER_CONTACT:UPDATE_CONTACT_DETAILS',\r\n\tDELETE_CONTACT_DETAILS : 'USER_CONTACT:DELETE_CONTACT_DETAILS',\r\n\tSEND_VERIFICATION_SMS : 'USER_CONTACT:SEND_VERIFICATION_SMS',\r\n\tVERIFY_CELL:'USER_CONTACT:VERIFY_CELL',\r\n\tSEND_VERIFICATION_EMAIL : 'USER_CONTACT:SEND_VERIFICATION_EMAIL',\r\n\tVERIFY_EMAIL : 'USER_CONTACT:VERIFY_EMAIL',\r\n\r\n\tSEND_EMAIL : 'USER_CONTACT:SEND_EMAIL',\r\n\tEMAIL_SENT : 'USER_CONTACT:EMAIL_SENT',\r\n\tSEND_SMS : 'USER_CONTACT:SEND_SMS',\r\n\tSMS_SENT : 'USER_CONTACT:SMS_SENT'\r\n\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserContactDetails = (user_contact_id) => {\r\n\r\n\treturn(dispatch,getState) => {\r\n\t\tdoLoadUserContactInfo(user_contact_id).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: 'Succesfully loaded User Contact Details',\r\n\t\t\t\t\tcode : 200\r\n\t\t\t\t}}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse:{...contact_details_type},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserContactDetails = (user_contact_details) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserContactInfoServer(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}}: {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully updated user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDeleteUserContactDetails = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserContactDetails(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload: {\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully deleted user contact details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSendCellVerificationSMS = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendCellVerificationSMS(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Succesfully sent user contact details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchVerifyUserContactDetailsCell = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyUserContactDetailsCell(user_contact_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully verified user contact details cell',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_CELL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const doDispatchSendEmailVerificationLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSendEmailVerificationLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL,\r\n\t\t\t\tpayload:{\r\n\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchVerifyEmailLink = user_contact_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoVerifyEmailLink(user_contact_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully sent email verification link',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n","import {encrypt,decrypt} from '../encryption';\r\n\r\n\r\nclass myLocalStore {\r\n\r\n    constructor() {\r\n        this.date = new Date();\r\n        this.memStoreStateKey = 'p2ploans';\r\n        this.state_keys = [];\r\n        this.use_mem_store = false;\r\n        this.stale_period = 1200000; // equals 5 minutes\r\n        this.mem_store_value = {\r\n            state_key : '',\r\n            state : {}\r\n        };\r\n\r\n        this.cipher_seed='';\r\n        this.mem_store = [];\r\n    };\r\n\r\n    //functions\r\n    loadTomemStore = async () => {\r\n            let isError = false;\r\n            let doLoadStateKeys = async () => {\r\n                try{\r\n                    this.state_keys = await JSON.parse(localStorage.getItem(this.memStoreStateKey));\r\n\r\n                }catch (e) {\r\n                    isError = true\r\n                };\r\n\r\n                return !isError;\r\n            };\r\n\r\n            let onLoading = async () => {\r\n                let isError = false;\r\n                this.state_keys.forEach(state_key => {\r\n                    try{\r\n                        this.mem_store_value.state = JSON.parse(localStorage.getItem(state_key));\r\n                        this.mem_store_value.state_key = state_key;\r\n                        this.mem_store.push(this.mem_store_value);\r\n                    }catch (e) {\r\n                        console.log('failed to load state');\r\n                        isError = true;\r\n                    }\r\n                });\r\n                return !isError;\r\n            };\r\n            \r\n            return doLoadStateKeys().then(function (value) {\r\n                onLoading().then( (value) => {\r\n                    console.log('state store fully loaded to mem store',value);\r\n                    return value;\r\n                });\r\n            })\r\n    };\r\n\r\n    saveMemStore = async () => {\r\n\r\n        let onSaving = async () => {\r\n            this.state_keys = [];\r\n            let noError = true;\r\n            this.mem_store.forEach(mem_store_value => {\r\n                try{\r\n                    this.state_keys.push(mem_store_value.state_key);\r\n                    this.setState(mem_store_value.state_key,JSON.stringify(mem_store_value.state)).then(\r\n                        function (state) {\r\n                            console.log('state was saved to localstorage',state);\r\n                            localStorage.setItem(mem_store_value.state_key + '_timestamp', this.date.getTime());\r\n                    }).catch( (err) => {\r\n                        console.log('there where errors saving state',err.message);\r\n                    })\r\n\r\n                }catch (e) {\r\n                    console.log('there is an error saving states from mem store to locaStorage');\r\n                    noError = false;\r\n                }\r\n            });\r\n\r\n            return noError;\r\n        };\r\n\r\n        return onSaving().then(function (value) {\r\n            console.log('done saving to mem store and did we succeed : ',value);\r\n            return value;\r\n        })\r\n    };\r\n\r\n    getState = async (seed,stateKey) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        //let key = encrypt(stateKey,seed);\r\n\r\n        // if (this.state_keys.findIndex(stateKey) === -1){\r\n        //     this.state_keys.push(stateKey);\r\n        // }\r\n        if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n            const serializedState = await decrypt(localStorage.getItem(stateKey), seed);\r\n            return serializedState === null ? undefined : JSON.parse(serializedState);\r\n        }else{\r\n            return undefined\r\n        }\r\n    };\r\n\r\n    setState = async (seed,stateKey,state) => {\r\n        // should insert hooks here to switch to mem store or localStorage\r\n        try {\r\n            //let key = encrypt(stateKey,seed);\r\n            if ((seed !== undefined) && (seed !== null) && (seed !== '')){\r\n                const serializedState = await encrypt(JSON.stringify(state), seed);\r\n                await localStorage.setItem(stateKey, serializedState);\r\n                await localStorage.setItem(stateKey + '_timestamp', encrypt(this.date.getTime(), seed));\r\n                return serializedState;\r\n            }else{\r\n                throw new Error('Invalid seed value');\r\n            }\r\n\r\n            // if (this.state_keys.findIndex(stateKey) === -1){\r\n            //     this.state_keys.push(stateKey);\r\n            //     this.mem_store_value.state_key = stateKey;\r\n            //     this.mem_store_value.state = state;\r\n            //     this.mem_store.push(this.mem_store_value);\r\n            //     await localStorage.setItem(this.memStoreStateKey,this.state_keys);\r\n            // }\r\n\r\n        }catch (e) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n\r\n    // staleItemFound = async (seed,stateKey) => {\r\n    //         let stamp_2 = new Date();\r\n    //         stamp_2 = stamp_2.getTime();\r\n    //\r\n    //\r\n    //         const stamp_1 = await decrypt(localStorage.getItem(stateKey+'_timestamp'),seed);\r\n    //         let diff = parseInt(parseFloat(stamp_2) - parseFloat(stamp_1));\r\n    //\r\n    //         console.log('Here is the diff', diff);\r\n    //         if (diff > this.stale_period){\r\n    //             console.log('Item found',stateKey);\r\n    //             await localStorage.removeItem(stateKey);\r\n    //             await localStorage.removeItem(stateKey+'_timestamp');\r\n    //         }\r\n    //         return true;\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\nexport let myStore = new myLocalStore();\r\n\r\n","\r\nimport {CONTACT_DETAILS_ACTIONS} from '../../actions/contactDetailsActions';\r\n\r\nimport {contact_details_type, contact_details_type_errors} from '../../types';\r\n\r\nlet ContactDetailsInitState = {\r\n\tuser_contacts : {...contact_details_type},\r\n\tcontact_details_errors : {...contact_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: ''\r\n};\r\n\r\n\r\nlet userContactDetailsReducer = (state={...ContactDetailsInitState},actions) => {\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('Contact Details User Actions ',actions);\r\n\r\n\r\n\tswitch (actions.type) {\r\n\tcase CONTACT_DETAILS_ACTIONS.LOAD_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\tcase CONTACT_DETAILS_ACTIONS.SAVE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.UPDATE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.DELETE_CONTACT_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_SMS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_CELL :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.SEND_VERIFICATION_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tcase CONTACT_DETAILS_ACTIONS.VERIFY_EMAIL:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_contacts:{...actions.payload.response}\r\n\t\t};\r\n\r\n\tdefault: return {...state};\r\n\r\n\t}\r\n};\r\n\r\n\r\nexport default userContactDetailsReducer;","\r\n\r\nimport {\r\n\tdoLoadUserPersonalDetails,\r\n\tdoSaveUserPersonalDetails,\r\n\tdoUpdateUserPersonalDetails,\r\n\tdoDeleteUserPersonalDetails\r\n} from './personalDetailsBackEndRequests';\r\n\r\n\r\nexport const PERSONAL_DETAILS_ACTIONS = {\r\n\tLOAD_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:LOAD_PERSONAL_DETAILS',\r\n\tSAVE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:SAVE_PERSONAL_DETAILS',\r\n\tUPDATE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:UPDATE_PERSONAL_DETAILS',\r\n\tDELETE_PERSONAL_DETAILS: 'USER_PERSONAL_DETAILS:DELETE_PERSONAL_DETAILS',\r\n\tHIDE_PERSONAL_DETAILS : 'USER_PERSONAL_DETAILS:HIDE_PERSONAL_DETAILS',\r\n};\r\n\r\n\r\nexport const doDispatchLoadUserPersonalDetails = user_personal_id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdoLoadUserPersonalDetails(user_personal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:'successfully loaded personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchSaveUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoSaveUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully saved user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoUpdateUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully updated user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchDeleteUserPersonalDetails = user_personal_details => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDeleteUserPersonalDetails(user_personal_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: 'successfully deleted user personal details',\r\n\t\t\t\t\tcode:200,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode:result.code,\r\n\t\t\t\t\tresponse:{...result.response}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n","\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tDISPLAY_INLINE_MESSAGE : 'DISPLAY_INLINE_MESSAGE',\r\n\tRESET_INLINE_MESSAGES: 'RESET_INLINE_MESSAGES',\r\n};\r\n\r\n\r\n\r\nconst doResetInlineMessages = async () => {\r\n\treturn await {\r\n\t\tstatus:true,\r\n\t\tresponse:{display_message:'',display_message_type:''}};\r\n};\r\n\r\nconst doDisplayInlineMessage = async ({display_message,display_message_type}) => {\r\n\treturn await {status:true,response:{\r\n\t\tdisplay_message:display_message,\r\n\t\tdisplay_message_type:display_message_type\r\n\t}};\r\n};\r\n\r\nexport const doDispatchResetInlineMessages = () => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoResetInlineMessages().then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchDisplayInlineMessage = (display_message,display_message_type) => {\r\n\treturn(dispatch,getState) => {\r\n\t\tdoDisplayInlineMessage(display_message,display_message_type).then(result => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype:INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","\r\nimport {\r\n\tdoLoadUserBankAccountDetails,\r\n\tdoBankAccountDetailsChangeHandler} from './bankDetails/accountDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserPayPalAccountDetails,\r\n\tdoSavePayPalAccountDetails\r\n} from './paypalDetails/paypalDetailsBackEnd';\r\n\r\nimport {\r\n\tdoLoadUserEWalletAccountDetails,\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveUserEwalletAccountDetails\r\n} from './ewalletDetails/ewalletDetailsBackEnd';\r\n\r\nimport {\r\n\tdoSaveBankAccountDetails,\r\n\tdoUpdateBankAccountDetails,\r\n\tdoDeleteBankAccountDetails,\r\n\tdoCheckBankAccountErrors\r\n} from './bankDetails/bankDetailsBackEnd';\r\n\r\n\r\n\r\nexport const INLINE_MESSAGES_ACTIONS = {\r\n\tRESET_INLINE_MESSAGES:'RESET_INLINE_MESSAGES'\r\n};\r\n\r\nexport const USER_BANKING_ACTIONS = {\r\n\r\n\tLOAD_BANK_ACCOUNT : 'LOAD_BANK_ACCOUNT',\r\n\tSAVE_BANK_ACCOUNT : 'SAVE_BANK_ACCOUNT',\r\n\tUPDATE_BANK_ACCOUNT : 'UPDATE_BANK_ACCOUNT',\r\n\tDELETE_BANK_ACCOUNT : 'DELETE_BANK_ACCOUNT',\r\n\tVERIFY_BANK_ACCOUNT : 'VERIFY_BANK_ACCOUNT',\r\n\r\n\tON_CHANGE_HANDLER: 'ON_CHANGE_HANDLER',\r\n\tON_CHECK_ERRORS : 'ON_CHECK_ERRORS'\r\n};\r\n\r\nexport const USER_PAYPAL_ACTIONS = {\r\n\tLOAD_PAYPAL_ACCOUNT : 'LOAD_PAYPAL_ACCOUNT',\r\n\tSAVE_PAYPAL_ACCOUNT : 'SAVE_PAYPAL_ACCOUNT',\r\n\tUPDATE_PAYPAL_ACCOUNT : 'UPDATE_PAYPAL_ACCOUNT',\r\n\tDELETE_PAYPAL_ACCOUNT : 'DELETE_PAYPAL_ACCOUNT',\r\n\tVERIFY_PAYPAL_ACCOUNT : 'VERIFY_PAYPAL_ACCOUNT'\r\n};\r\n\r\nexport const USER_EWALLET_ACTIONS = {\r\n\tLOAD_EWALLET_ACCOUNT : 'LOAD_EWALLET_ACCOUNT',\r\n\tSAVE_EWALLET_ACCOUNT : 'SAVE_EWALLET_ACCOUNT',\r\n\tUPDATE_EWALLET_ACCOUNT : 'UPDATE_EWALLET_ACCOUNT',\r\n\tDELETE_EWALLET_ACCOUNT : 'DELETE_EWALLET_ACCOUNT',\r\n\tVERIFY_EWALLET_ACCOUNT : 'VERIFY_EWALLET_ACCOUNT'\r\n};\r\n\r\nexport const doDispatchOnResetHandler = () => {\r\n\r\n};\r\n\r\n\r\n//note that here we can handle store errors if we want\r\n\r\nexport const doDispatchOnChangeHandler = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoBankAccountDetailsChangeHandler(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.ON_CHANGE_HANDLER,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse : {...result.response},\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const doDispatchLoadUserBankAccountDetails = bank_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserBankAccountDetails(bank_id).then( result => {\r\n\t\t\tconsole.log('why am i getting an error message : ',result);\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserEWalletAccountDetails = ewallet_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserEWalletAccountDetails(ewallet_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded E-Wallet Account Details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchLoadUserPayPalAccountDetails = paypal_id => {\r\n\treturn dispatch => {\r\n\t\tdoLoadUserPayPalAccountDetails(paypal_id).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully loaded paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSaveBankAccountDetails = user_bank_account_details => {\r\n\tconsole.log('Save bank account dispatched',user_bank_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSaveBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchSavePayPalAccountDetails = user_paypal_account_details => {\r\n\tconsole.log('Save PayPal Account Dispatched', user_paypal_account_details);\r\n\treturn dispatch => {\r\n\t\tdoSavePayPalAccountDetails(user_paypal_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: 'Successfully saved paypal account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t} : {\r\n\t\t\t\ttype: USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t\tcode: result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchSaveEwalletAccountDetails = user_ewallet_account_details => {\r\n\tconsole.log();\r\n\treturn dispatch => {\r\n\t\tdoSaveUserEwalletAccountDetails(user_ewallet_account_details).then(result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:'Successfully saved ewallet account details',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const doDispatchUpdateBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoUpdateBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully updated bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\nexport const doDispatchDeleteBankAccountDetails = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoDeleteBankAccountDetails(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse: {...result.response},\r\n\t\t\t\t\tmessage:'Successfully deleted bank account details',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.response},\r\n\t\t\t\t\tmessage:result.message,\r\n\t\t\t\t\tcode:result.code\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const doDispatchCheckBankAccountErrors = user_bank_account_details => {\r\n\treturn dispatch => {\r\n\t\tdoCheckBankAccountErrors(user_bank_account_details).then( result => {\r\n\t\t\tdispatch(result.status ? {\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'There where no errors continuing to save your bank account details...',\r\n\t\t\t\t\tcode:200\r\n\t\t\t\t}\r\n\t\t\t}:{\r\n\t\t\t\ttype:USER_BANKING_ACTIONS.ON_CHECK_ERRORS,\r\n\t\t\t\tpayload:{\r\n\t\t\t\t\tresponse:{...result.bank_account_errors},\r\n\t\t\t\t\tmessage:'Please correct the errors above before saving your bank account information',\r\n\t\t\t\t\tcode:500\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n};","import {USER_ACCOUNT_ACTIONS} from '../../actions';\r\nimport {account_details_type, account_details_type_error} from '../../types';\r\n\r\nlet UserAccountInitState = {\r\n\tuser_account : {...account_details_type},\r\n\tuser_account_errors : {...account_details_type_error},\r\n\tform_response: '',\r\n\tresponse_code: '',\r\n\r\n};\r\n\r\n\r\nconst userAccountReducer = (state={...UserAccountInitState},actions) =>{\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.log('User Account Actions payload',actions);\r\n\tswitch (actions.type) {\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CREATE_USER:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGIN_USER:{\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.LOGOUT_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.DELETE_USER :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.CHANGE_PASSWORD :{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_VERIFICATION_EMAIL:{\r\n\t\treturn{...state,\r\n\t\t\tuser_account: {...actions.payload.user_account},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tcase USER_ACCOUNT_ACTIONS.SEND_ONETIME_PIN:{\r\n\t\treturn{...state,\r\n\t\t\tonetime_pin_sent:actions.payload.onetime_pin_sent,\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:return state;\r\n\t}\r\n};\r\n\r\n\r\nexport default userAccountReducer;","import {PERSONAL_DETAILS_ACTIONS} from '../../actions/personalDetailsActions';\r\nimport {personal_details_type, personal_details_type_errors} from '../../types';\r\n\r\n\r\nlet PersonalDetailsInitState ={\r\n\tuser_personal_info : {...personal_details_type},\r\n\tpersonal_details_errors : {...personal_details_type_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\nconst userPersonalDetailsReducer = (state={...PersonalDetailsInitState},actions) => {\r\n\tswitch (actions.type) {\r\n\tcase PERSONAL_DETAILS_ACTIONS.LOAD_PERSONAL_DETAILS :\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.SAVE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.UPDATE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tcase PERSONAL_DETAILS_ACTIONS.DELETE_PERSONAL_DETAILS:\r\n\t\treturn {...state,\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code,\r\n\t\t\tuser_personal_info:{...actions.payload.response}\r\n\t\t};\r\n\tdefault: return {...state};\r\n\t}\r\n};\r\n\r\n\r\nexport default userPersonalDetailsReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userContactDetailsReducer from './userContactDetailsReducer';\r\nimport userAccountReducer from './accountDetailsReducer';\r\nimport userPersonalDetailsReducer from './personalDetailsReducer';\r\n\r\n\r\n\r\n\r\nlet profileReducers = combineReducers({\r\n\taccount_details : userAccountReducer,\r\n\tcontact_details : userContactDetailsReducer,\r\n\tpersonal_details : userPersonalDetailsReducer\r\n});\r\n\r\nexport default profileReducers;","\r\n\r\nimport {\r\n\tUSER_BANKING_ACTIONS,\r\n\tUSER_PAYPAL_ACTIONS,\r\n\tUSER_EWALLET_ACTIONS\r\n} from '../../actions';\r\n\r\nimport {\r\n\tbank_account_details,\r\n\tbank_account_errors_details,\r\n\tpaypal_account_details,\r\n\tpaypal_account_errors,\r\n\tewallet_account_details,\r\n\tewallet_account_errors,\r\n\r\n} from '../../types';\r\n\r\nlet bankAccountInitState = {\r\n\tuser_bank_account_details:{...bank_account_details},\r\n\tbank_account_errors: {...bank_account_errors_details},\r\n\tform_response : '',\r\n\tresponse_code : 200,\r\n};\r\n\r\nlet paypalAccountInitState = {\r\n\tuser_paypal_account_details : {...paypal_account_details},\r\n\tpaypal_errors : {...paypal_account_errors},\r\n\tform_response : '',\r\n\tresponse_code: 200\r\n};\r\n\r\nlet ewalletAccountInitState = {\r\n\tuser_ewallet_account_details : {...ewallet_account_details},\r\n\tewallet_errors : {...ewallet_account_errors},\r\n\tform_response : '',\r\n\tresponse_code:200\r\n};\r\nexport const bankAccountDetailsReducer = (state={...bankAccountInitState},actions) => {\r\n\tconsole.log('Actions Type in bank account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_BANKING_ACTIONS.LOAD_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.SAVE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.UPDATE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.DELETE_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.VERIFY_BANK_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHANGE_HANDLER: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_bank_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_BANKING_ACTIONS.ON_CHECK_ERRORS: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tbank_account_errors:{...actions.payload.response},\r\n\t\t\tform_response:actions.payload.message,\r\n\t\t\tresponse_code:actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault: {\r\n\t\treturn {...state};\r\n\t}\r\n\r\n\t}\r\n};\r\n\r\nexport const paypalAccountDetailsReducer = (state = {...paypalAccountInitState}, actions) => {\r\n\tconsole.log('Actions type on paypal account details reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase USER_PAYPAL_ACTIONS.LOAD_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.SAVE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.UPDATE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.DELETE_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_PAYPAL_ACTIONS.VERIFY_PAYPAL_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_paypal_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}\r\n\t}\r\n};\r\n\r\nexport const ewalletAccountDetailsReducer = (state = {...ewalletAccountInitState}, actions) => {\r\n\tswitch ( actions.type ) {\r\n\tcase USER_EWALLET_ACTIONS.LOAD_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.SAVE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.UPDATE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.DELETE_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\r\n\tcase USER_EWALLET_ACTIONS.VERIFY_EWALLET_ACCOUNT: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser_ewallet_account_details: {...actions.payload.response},\r\n\t\t\tform_response: actions.payload.message,\r\n\t\t\tresponse_code: actions.payload.code\r\n\t\t};\r\n\t}\r\n\tdefault:{\r\n\t\treturn {...state};\r\n\t}}\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {\r\n\tbankAccountDetailsReducer,\r\n\tpaypalAccountDetailsReducer,\r\n\tewalletAccountDetailsReducer\r\n} from './accountDetailsReducer';\r\n\r\nlet walletAccountsDetailsReducers = combineReducers({\r\n\tbank_account_info: bankAccountDetailsReducer,\r\n\tpaypal_account_info: paypalAccountDetailsReducer,\r\n\tewallet_account_info: ewalletAccountDetailsReducer\r\n});\r\n\r\nlet walletDetailsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet withdrawalsReducers = combineReducers({\r\n\r\n});\r\n\r\nlet depositsReducers = combineReducers({\r\n\r\n});\r\n\r\n\r\n\r\nexport let walletReducer = combineReducers({\r\n\tbank_account_details: walletAccountsDetailsReducers,\r\n\t// wallet_details : walletDetailsReducers,\r\n\t// withdrawal_details : withdrawalsReducers,\r\n\t// deposits_details : depositsReducers\r\n\r\n});\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {INLINE_MESSAGES_ACTIONS} from '../../actions';\r\n\r\nlet InlineMessageInitState = {\r\n\tdisplay_message:'',\r\n\tdisplay_message_type:'',\r\n};\r\n\r\n\r\nexport const InlineMessageReducer = (state={...InlineMessageInitState},actions) => {\r\n\tconsole.log('Actions Type in Inline Messages Reducer', actions);\r\n\tswitch ( actions.type ) {\r\n\tcase INLINE_MESSAGES_ACTIONS.RESET_INLINE_MESSAGES:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tcase INLINE_MESSAGES_ACTIONS.DISPLAY_INLINE_MESSAGE:{\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tdisplay_message:actions.payload.response.display_message,\r\n\t\t\tdisplay_message_type:actions.payload.response.display_message_type,\r\n\t\t};\r\n\t}\r\n\tdefault:{return{...state};}\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\nimport profileReducers from './profileReducers';\r\nimport {walletReducer} from './walletReducers';\r\nimport {InlineMessageReducer} from './inlineMessagesReducer';\r\n\r\nexport let rootReducer = combineReducers({\r\n\tprofile : profileReducers,\r\n\twallet :walletReducer,\r\n\tinline_message:InlineMessageReducer\r\n});\r\n//export {profileReducers};\r\n\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n//import promise from 'redux-promise-middleware';\r\nimport {rootReducer} from '../reducers';\r\n\r\n// import {myStore} from '../localStorage';\r\n\r\n// import {v4} from 'node-uuid'; // this is used together with persist state to create very unique ids\r\n// import throttle from 'lodash/throttle';\r\n//\r\n// const myLogger = (store) => (next) => (action) => {\r\n// \tconsole.log('Redux Logger : ', action);\r\n// \tconsole.log('Redux State : ', store.state);\r\n// \treturn next(action);\r\n// };\r\n\r\n\r\n//this needs a huge rewrite\r\n\r\n\r\nconst persistedState = {};\r\n\r\n//const middleware = applyMiddleware(compose(promise,logger,thunk));\r\nconst middleware = applyMiddleware(compose(\r\n\tthunk\r\n));\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tmiddleware\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/MyApp';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t// <App />\r\n\t,\r\n    \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Fragment } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport {routes} from '../../constants';\n\n\nimport Header from '../Layout/Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Contact from '../Contact/Contact';\nimport Profile from '../Profile/Profile';\nimport Login from '../Auth/Login/Login';\nimport Signup from '../Auth/Signup/Signup';\nimport SideBar from '../Layout/SideBar/SideBar';\nimport Footer from '../Layout/Footer/Footer';\nimport Forget from '../Auth/Forget/Forget';\nimport Market from '../Market/Market';\n\nexport default function App () {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Router>\n\t\t\t\t{/* Header  Component*/}\n\t\t\t\t<Header/>\n\t\t\t\t{/* Sidebar Component */}\n\t\t\t\t<SideBar />\n\t\t\t\t{/* Body and Main Page Routes */}\n\t\t\t\t<div className=\"content-wrapper\">            \n\t\t\t\t\t<section className=\"content-header\">              \n\t\t\t\t\t\t<section className=\"content\">\n\t\t\t\t\t\t\t<Route exact path={routes.home_page} component={Home} />\n\t\t\t\t\t\t\t<Route exact path={routes.about_page} component={About} />\n\t\t\t\t\t\t\t<Route exact path={routes.contact_page} component={Contact} />\n\t\t\t\t\t\t\t<Route path={routes.profile_page} component={Profile} />\n\t\t\t\t\t\t\t<Route path ={routes.login_page} component={Login} />\n\t\t\t\t\t\t\t<Route path={routes.signup_page} component={Signup} />\n\t\t\t\t\t\t\t<Route path={routes.forget_password_page} component={Forget} />\n\t\t\t\t\t\t\t<Route path={routes.market_page} component={Market} />\n\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t{/* Footer Component  */}\n\t\t\t\t<Footer/>  \n\t\t\t</Router>       \n\t\t</Fragment>\n\t)\n};\n"],"sourceRoot":""}